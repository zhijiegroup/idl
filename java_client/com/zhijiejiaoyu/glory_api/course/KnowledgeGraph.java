// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: course/graph.proto

package com.zhijiejiaoyu.glory_api.course;

/**
 * Protobuf type {@code glory_api.KnowledgeGraph}
 */
public final class KnowledgeGraph extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:glory_api.KnowledgeGraph)
    KnowledgeGraphOrBuilder {
private static final long serialVersionUID = 0L;
  // Use KnowledgeGraph.newBuilder() to construct.
  private KnowledgeGraph(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private KnowledgeGraph() {
    node = java.util.Collections.emptyList();
    edge = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new KnowledgeGraph();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private KnowledgeGraph(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0 = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0 & 0x00000001) != 0)) {
              node = new java.util.ArrayList<com.zhijiejiaoyu.glory_api.course.Node>();
              mutable_bitField0_ |= 0x00000001;
            }
            node .add(
                input.readMessage(com.zhijiejiaoyu.glory_api.course.Node.parser(), extensionRegistry));
            break;
          }
          case 18: {
            if (!((mutable_bitField0 & 0x00000002) != 0)) {
              edge = new java.util.ArrayList<com.zhijiejiaoyu.glory_api.course.Edge>();
              mutable_bitField0_ |= 0x00000002;
            }
            edge .add(
                input.readMessage(com.zhijiejiaoyu.glory_api.course.Edge.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0 & 0x00000001) != 0)) {
        node = java.util.Collections.unmodifiableList(node );
      }
      if (((mutable_bitField0 & 0x00000002) != 0)) {
        edge = java.util.Collections.unmodifiableList(edge );
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.zhijiejiaoyu.glory_api.course.Graph.internal_static_glory_api_KnowledgeGraph_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.zhijiejiaoyu.glory_api.course.Graph.internal_static_glory_api_KnowledgeGraph_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.zhijiejiaoyu.glory_api.course.KnowledgeGraph.class, com.zhijiejiaoyu.glory_api.course.KnowledgeGraph.Builder.class);
  }

  public static final int NODE_FIELD_NUMBER = 1;
  private java.util.List<com.zhijiejiaoyu.glory_api.course.Node> node ;
  /**
   * <pre>
   * 节点
   * </pre>
   *
   * <code>repeated .glory_api.Node node = 1;</code>
   */
  @java.lang.Override
  public java.util.List<com.zhijiejiaoyu.glory_api.course.Node> getNodeList() {
    return node ;
  }
  /**
   * <pre>
   * 节点
   * </pre>
   *
   * <code>repeated .glory_api.Node node = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.zhijiejiaoyu.glory_api.course.NodeOrBuilder> 
      getNodeOrBuilderList() {
    return node ;
  }
  /**
   * <pre>
   * 节点
   * </pre>
   *
   * <code>repeated .glory_api.Node node = 1;</code>
   */
  @java.lang.Override
  public int getNodeCount() {
    return node .size();
  }
  /**
   * <pre>
   * 节点
   * </pre>
   *
   * <code>repeated .glory_api.Node node = 1;</code>
   */
  @java.lang.Override
  public com.zhijiejiaoyu.glory_api.course.Node getNode(int index) {
    return node .get(index);
  }
  /**
   * <pre>
   * 节点
   * </pre>
   *
   * <code>repeated .glory_api.Node node = 1;</code>
   */
  @java.lang.Override
  public com.zhijiejiaoyu.glory_api.course.NodeOrBuilder getNodeOrBuilder(
      int index) {
    return node .get(index);
  }

  public static final int EDGE_FIELD_NUMBER = 2;
  private java.util.List<com.zhijiejiaoyu.glory_api.course.Edge> edge ;
  /**
   * <pre>
   * 边
   * </pre>
   *
   * <code>repeated .glory_api.Edge edge = 2;</code>
   */
  @java.lang.Override
  public java.util.List<com.zhijiejiaoyu.glory_api.course.Edge> getEdgeList() {
    return edge ;
  }
  /**
   * <pre>
   * 边
   * </pre>
   *
   * <code>repeated .glory_api.Edge edge = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.zhijiejiaoyu.glory_api.course.EdgeOrBuilder> 
      getEdgeOrBuilderList() {
    return edge ;
  }
  /**
   * <pre>
   * 边
   * </pre>
   *
   * <code>repeated .glory_api.Edge edge = 2;</code>
   */
  @java.lang.Override
  public int getEdgeCount() {
    return edge .size();
  }
  /**
   * <pre>
   * 边
   * </pre>
   *
   * <code>repeated .glory_api.Edge edge = 2;</code>
   */
  @java.lang.Override
  public com.zhijiejiaoyu.glory_api.course.Edge getEdge(int index) {
    return edge .get(index);
  }
  /**
   * <pre>
   * 边
   * </pre>
   *
   * <code>repeated .glory_api.Edge edge = 2;</code>
   */
  @java.lang.Override
  public com.zhijiejiaoyu.glory_api.course.EdgeOrBuilder getEdgeOrBuilder(
      int index) {
    return edge .get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < node .size(); i++) {
      output.writeMessage(1, node .get(i));
    }
    for (int i = 0; i < edge .size(); i++) {
      output.writeMessage(2, edge .get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < node .size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, node .get(i));
    }
    for (int i = 0; i < edge .size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, edge .get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.zhijiejiaoyu.glory_api.course.KnowledgeGraph)) {
      return super.equals(obj);
    }
    com.zhijiejiaoyu.glory_api.course.KnowledgeGraph other = (com.zhijiejiaoyu.glory_api.course.KnowledgeGraph) obj;

    if (!getNodeList()
        .equals(other.getNodeList())) return false;
    if (!getEdgeList()
        .equals(other.getEdgeList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getNodeCount() > 0) {
      hash = (37 * hash) + NODE_FIELD_NUMBER;
      hash = (53 * hash) + getNodeList().hashCode();
    }
    if (getEdgeCount() > 0) {
      hash = (37 * hash) + EDGE_FIELD_NUMBER;
      hash = (53 * hash) + getEdgeList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.zhijiejiaoyu.glory_api.course.KnowledgeGraph parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.zhijiejiaoyu.glory_api.course.KnowledgeGraph parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.zhijiejiaoyu.glory_api.course.KnowledgeGraph parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.zhijiejiaoyu.glory_api.course.KnowledgeGraph parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.zhijiejiaoyu.glory_api.course.KnowledgeGraph parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.zhijiejiaoyu.glory_api.course.KnowledgeGraph parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.zhijiejiaoyu.glory_api.course.KnowledgeGraph parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.zhijiejiaoyu.glory_api.course.KnowledgeGraph parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.zhijiejiaoyu.glory_api.course.KnowledgeGraph parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.zhijiejiaoyu.glory_api.course.KnowledgeGraph parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.zhijiejiaoyu.glory_api.course.KnowledgeGraph parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.zhijiejiaoyu.glory_api.course.KnowledgeGraph parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.zhijiejiaoyu.glory_api.course.KnowledgeGraph prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code glory_api.KnowledgeGraph}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:glory_api.KnowledgeGraph)
      com.zhijiejiaoyu.glory_api.course.KnowledgeGraphOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.zhijiejiaoyu.glory_api.course.Graph.internal_static_glory_api_KnowledgeGraph_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.zhijiejiaoyu.glory_api.course.Graph.internal_static_glory_api_KnowledgeGraph_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.zhijiejiaoyu.glory_api.course.KnowledgeGraph.class, com.zhijiejiaoyu.glory_api.course.KnowledgeGraph.Builder.class);
    }

    // Construct using com.zhijiejiaoyu.glory_api.course.KnowledgeGraph.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getNodeFieldBuilder();
        getEdgeFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (nodeBuilder == null) {
        node = java.util.Collections.emptyList();
        bitField0 = (bitField0 & ~0x00000001);
      } else {
        nodeBuilder .clear();
      }
      if (edgeBuilder == null) {
        edge = java.util.Collections.emptyList();
        bitField0 = (bitField0 & ~0x00000002);
      } else {
        edgeBuilder .clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.zhijiejiaoyu.glory_api.course.Graph.internal_static_glory_api_KnowledgeGraph_descriptor;
    }

    @java.lang.Override
    public com.zhijiejiaoyu.glory_api.course.KnowledgeGraph getDefaultInstanceForType() {
      return com.zhijiejiaoyu.glory_api.course.KnowledgeGraph.getDefaultInstance();
    }

    @java.lang.Override
    public com.zhijiejiaoyu.glory_api.course.KnowledgeGraph build() {
      com.zhijiejiaoyu.glory_api.course.KnowledgeGraph result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.zhijiejiaoyu.glory_api.course.KnowledgeGraph buildPartial() {
      com.zhijiejiaoyu.glory_api.course.KnowledgeGraph result = new com.zhijiejiaoyu.glory_api.course.KnowledgeGraph(this);
      int from_bitField0 = bitField0 ;
      if (nodeBuilder == null) {
        if (((bitField0 & 0x00000001) != 0)) {
          node = java.util.Collections.unmodifiableList(node );
          bitField0 = (bitField0 & ~0x00000001);
        }
        result.node = node ;
      } else {
        result.node = nodeBuilder .build();
      }
      if (edgeBuilder == null) {
        if (((bitField0 & 0x00000002) != 0)) {
          edge = java.util.Collections.unmodifiableList(edge );
          bitField0 = (bitField0 & ~0x00000002);
        }
        result.edge = edge ;
      } else {
        result.edge = edgeBuilder .build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.zhijiejiaoyu.glory_api.course.KnowledgeGraph) {
        return mergeFrom((com.zhijiejiaoyu.glory_api.course.KnowledgeGraph)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.zhijiejiaoyu.glory_api.course.KnowledgeGraph other) {
      if (other == com.zhijiejiaoyu.glory_api.course.KnowledgeGraph.getDefaultInstance()) return this;
      if (nodeBuilder == null) {
        if (!other.node .isEmpty()) {
          if (node .isEmpty()) {
            node = other.node ;
            bitField0 = (bitField0 & ~0x00000001);
          } else {
            ensureNodeIsMutable();
            node .addAll(other.node );
          }
          onChanged();
        }
      } else {
        if (!other.node .isEmpty()) {
          if (nodeBuilder .isEmpty()) {
            nodeBuilder .dispose();
            nodeBuilder = null;
            node = other.node ;
            bitField0 = (bitField0 & ~0x00000001);
            nodeBuilder = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getNodeFieldBuilder() : null;
          } else {
            nodeBuilder .addAllMessages(other.node );
          }
        }
      }
      if (edgeBuilder == null) {
        if (!other.edge .isEmpty()) {
          if (edge .isEmpty()) {
            edge = other.edge ;
            bitField0 = (bitField0 & ~0x00000002);
          } else {
            ensureEdgeIsMutable();
            edge .addAll(other.edge );
          }
          onChanged();
        }
      } else {
        if (!other.edge .isEmpty()) {
          if (edgeBuilder .isEmpty()) {
            edgeBuilder .dispose();
            edgeBuilder = null;
            edge = other.edge ;
            bitField0 = (bitField0 & ~0x00000002);
            edgeBuilder = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getEdgeFieldBuilder() : null;
          } else {
            edgeBuilder .addAllMessages(other.edge );
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.zhijiejiaoyu.glory_api.course.KnowledgeGraph parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.zhijiejiaoyu.glory_api.course.KnowledgeGraph) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0 ;

    private java.util.List<com.zhijiejiaoyu.glory_api.course.Node> node =
      java.util.Collections.emptyList();
    private void ensureNodeIsMutable() {
      if (!((bitField0 & 0x00000001) != 0)) {
        node = new java.util.ArrayList<com.zhijiejiaoyu.glory_api.course.Node>(node );
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.zhijiejiaoyu.glory_api.course.Node, com.zhijiejiaoyu.glory_api.course.Node.Builder, com.zhijiejiaoyu.glory_api.course.NodeOrBuilder> nodeBuilder ;

    /**
     * <pre>
     * 节点
     * </pre>
     *
     * <code>repeated .glory_api.Node node = 1;</code>
     */
    public java.util.List<com.zhijiejiaoyu.glory_api.course.Node> getNodeList() {
      if (nodeBuilder == null) {
        return java.util.Collections.unmodifiableList(node );
      } else {
        return nodeBuilder .getMessageList();
      }
    }
    /**
     * <pre>
     * 节点
     * </pre>
     *
     * <code>repeated .glory_api.Node node = 1;</code>
     */
    public int getNodeCount() {
      if (nodeBuilder == null) {
        return node .size();
      } else {
        return nodeBuilder .getCount();
      }
    }
    /**
     * <pre>
     * 节点
     * </pre>
     *
     * <code>repeated .glory_api.Node node = 1;</code>
     */
    public com.zhijiejiaoyu.glory_api.course.Node getNode(int index) {
      if (nodeBuilder == null) {
        return node .get(index);
      } else {
        return nodeBuilder .getMessage(index);
      }
    }
    /**
     * <pre>
     * 节点
     * </pre>
     *
     * <code>repeated .glory_api.Node node = 1;</code>
     */
    public Builder setNode(
        int index, com.zhijiejiaoyu.glory_api.course.Node value) {
      if (nodeBuilder == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeIsMutable();
        node .set(index, value);
        onChanged();
      } else {
        nodeBuilder .setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 节点
     * </pre>
     *
     * <code>repeated .glory_api.Node node = 1;</code>
     */
    public Builder setNode(
        int index, com.zhijiejiaoyu.glory_api.course.Node.Builder builderForValue) {
      if (nodeBuilder == null) {
        ensureNodeIsMutable();
        node .set(index, builderForValue.build());
        onChanged();
      } else {
        nodeBuilder .setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 节点
     * </pre>
     *
     * <code>repeated .glory_api.Node node = 1;</code>
     */
    public Builder addNode(com.zhijiejiaoyu.glory_api.course.Node value) {
      if (nodeBuilder == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeIsMutable();
        node .add(value);
        onChanged();
      } else {
        nodeBuilder .addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 节点
     * </pre>
     *
     * <code>repeated .glory_api.Node node = 1;</code>
     */
    public Builder addNode(
        int index, com.zhijiejiaoyu.glory_api.course.Node value) {
      if (nodeBuilder == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeIsMutable();
        node .add(index, value);
        onChanged();
      } else {
        nodeBuilder .addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 节点
     * </pre>
     *
     * <code>repeated .glory_api.Node node = 1;</code>
     */
    public Builder addNode(
        com.zhijiejiaoyu.glory_api.course.Node.Builder builderForValue) {
      if (nodeBuilder == null) {
        ensureNodeIsMutable();
        node .add(builderForValue.build());
        onChanged();
      } else {
        nodeBuilder .addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 节点
     * </pre>
     *
     * <code>repeated .glory_api.Node node = 1;</code>
     */
    public Builder addNode(
        int index, com.zhijiejiaoyu.glory_api.course.Node.Builder builderForValue) {
      if (nodeBuilder == null) {
        ensureNodeIsMutable();
        node .add(index, builderForValue.build());
        onChanged();
      } else {
        nodeBuilder .addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 节点
     * </pre>
     *
     * <code>repeated .glory_api.Node node = 1;</code>
     */
    public Builder addAllNode(
        java.lang.Iterable<? extends com.zhijiejiaoyu.glory_api.course.Node> values) {
      if (nodeBuilder == null) {
        ensureNodeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, node );
        onChanged();
      } else {
        nodeBuilder .addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 节点
     * </pre>
     *
     * <code>repeated .glory_api.Node node = 1;</code>
     */
    public Builder clearNode() {
      if (nodeBuilder == null) {
        node = java.util.Collections.emptyList();
        bitField0 = (bitField0 & ~0x00000001);
        onChanged();
      } else {
        nodeBuilder .clear();
      }
      return this;
    }
    /**
     * <pre>
     * 节点
     * </pre>
     *
     * <code>repeated .glory_api.Node node = 1;</code>
     */
    public Builder removeNode(int index) {
      if (nodeBuilder == null) {
        ensureNodeIsMutable();
        node .remove(index);
        onChanged();
      } else {
        nodeBuilder .remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 节点
     * </pre>
     *
     * <code>repeated .glory_api.Node node = 1;</code>
     */
    public com.zhijiejiaoyu.glory_api.course.Node.Builder getNodeBuilder(
        int index) {
      return getNodeFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 节点
     * </pre>
     *
     * <code>repeated .glory_api.Node node = 1;</code>
     */
    public com.zhijiejiaoyu.glory_api.course.NodeOrBuilder getNodeOrBuilder(
        int index) {
      if (nodeBuilder == null) {
        return node .get(index);  } else {
        return nodeBuilder .getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 节点
     * </pre>
     *
     * <code>repeated .glory_api.Node node = 1;</code>
     */
    public java.util.List<? extends com.zhijiejiaoyu.glory_api.course.NodeOrBuilder> 
         getNodeOrBuilderList() {
      if (nodeBuilder != null) {
        return nodeBuilder .getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(node );
      }
    }
    /**
     * <pre>
     * 节点
     * </pre>
     *
     * <code>repeated .glory_api.Node node = 1;</code>
     */
    public com.zhijiejiaoyu.glory_api.course.Node.Builder addNodeBuilder() {
      return getNodeFieldBuilder().addBuilder(
          com.zhijiejiaoyu.glory_api.course.Node.getDefaultInstance());
    }
    /**
     * <pre>
     * 节点
     * </pre>
     *
     * <code>repeated .glory_api.Node node = 1;</code>
     */
    public com.zhijiejiaoyu.glory_api.course.Node.Builder addNodeBuilder(
        int index) {
      return getNodeFieldBuilder().addBuilder(
          index, com.zhijiejiaoyu.glory_api.course.Node.getDefaultInstance());
    }
    /**
     * <pre>
     * 节点
     * </pre>
     *
     * <code>repeated .glory_api.Node node = 1;</code>
     */
    public java.util.List<com.zhijiejiaoyu.glory_api.course.Node.Builder> 
         getNodeBuilderList() {
      return getNodeFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.zhijiejiaoyu.glory_api.course.Node, com.zhijiejiaoyu.glory_api.course.Node.Builder, com.zhijiejiaoyu.glory_api.course.NodeOrBuilder> 
        getNodeFieldBuilder() {
      if (nodeBuilder == null) {
        nodeBuilder = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.zhijiejiaoyu.glory_api.course.Node, com.zhijiejiaoyu.glory_api.course.Node.Builder, com.zhijiejiaoyu.glory_api.course.NodeOrBuilder>(
                node ,
                ((bitField0 & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        node = null;
      }
      return nodeBuilder ;
    }

    private java.util.List<com.zhijiejiaoyu.glory_api.course.Edge> edge =
      java.util.Collections.emptyList();
    private void ensureEdgeIsMutable() {
      if (!((bitField0 & 0x00000002) != 0)) {
        edge = new java.util.ArrayList<com.zhijiejiaoyu.glory_api.course.Edge>(edge );
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.zhijiejiaoyu.glory_api.course.Edge, com.zhijiejiaoyu.glory_api.course.Edge.Builder, com.zhijiejiaoyu.glory_api.course.EdgeOrBuilder> edgeBuilder ;

    /**
     * <pre>
     * 边
     * </pre>
     *
     * <code>repeated .glory_api.Edge edge = 2;</code>
     */
    public java.util.List<com.zhijiejiaoyu.glory_api.course.Edge> getEdgeList() {
      if (edgeBuilder == null) {
        return java.util.Collections.unmodifiableList(edge );
      } else {
        return edgeBuilder .getMessageList();
      }
    }
    /**
     * <pre>
     * 边
     * </pre>
     *
     * <code>repeated .glory_api.Edge edge = 2;</code>
     */
    public int getEdgeCount() {
      if (edgeBuilder == null) {
        return edge .size();
      } else {
        return edgeBuilder .getCount();
      }
    }
    /**
     * <pre>
     * 边
     * </pre>
     *
     * <code>repeated .glory_api.Edge edge = 2;</code>
     */
    public com.zhijiejiaoyu.glory_api.course.Edge getEdge(int index) {
      if (edgeBuilder == null) {
        return edge .get(index);
      } else {
        return edgeBuilder .getMessage(index);
      }
    }
    /**
     * <pre>
     * 边
     * </pre>
     *
     * <code>repeated .glory_api.Edge edge = 2;</code>
     */
    public Builder setEdge(
        int index, com.zhijiejiaoyu.glory_api.course.Edge value) {
      if (edgeBuilder == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEdgeIsMutable();
        edge .set(index, value);
        onChanged();
      } else {
        edgeBuilder .setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 边
     * </pre>
     *
     * <code>repeated .glory_api.Edge edge = 2;</code>
     */
    public Builder setEdge(
        int index, com.zhijiejiaoyu.glory_api.course.Edge.Builder builderForValue) {
      if (edgeBuilder == null) {
        ensureEdgeIsMutable();
        edge .set(index, builderForValue.build());
        onChanged();
      } else {
        edgeBuilder .setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 边
     * </pre>
     *
     * <code>repeated .glory_api.Edge edge = 2;</code>
     */
    public Builder addEdge(com.zhijiejiaoyu.glory_api.course.Edge value) {
      if (edgeBuilder == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEdgeIsMutable();
        edge .add(value);
        onChanged();
      } else {
        edgeBuilder .addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 边
     * </pre>
     *
     * <code>repeated .glory_api.Edge edge = 2;</code>
     */
    public Builder addEdge(
        int index, com.zhijiejiaoyu.glory_api.course.Edge value) {
      if (edgeBuilder == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEdgeIsMutable();
        edge .add(index, value);
        onChanged();
      } else {
        edgeBuilder .addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 边
     * </pre>
     *
     * <code>repeated .glory_api.Edge edge = 2;</code>
     */
    public Builder addEdge(
        com.zhijiejiaoyu.glory_api.course.Edge.Builder builderForValue) {
      if (edgeBuilder == null) {
        ensureEdgeIsMutable();
        edge .add(builderForValue.build());
        onChanged();
      } else {
        edgeBuilder .addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 边
     * </pre>
     *
     * <code>repeated .glory_api.Edge edge = 2;</code>
     */
    public Builder addEdge(
        int index, com.zhijiejiaoyu.glory_api.course.Edge.Builder builderForValue) {
      if (edgeBuilder == null) {
        ensureEdgeIsMutable();
        edge .add(index, builderForValue.build());
        onChanged();
      } else {
        edgeBuilder .addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 边
     * </pre>
     *
     * <code>repeated .glory_api.Edge edge = 2;</code>
     */
    public Builder addAllEdge(
        java.lang.Iterable<? extends com.zhijiejiaoyu.glory_api.course.Edge> values) {
      if (edgeBuilder == null) {
        ensureEdgeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, edge );
        onChanged();
      } else {
        edgeBuilder .addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 边
     * </pre>
     *
     * <code>repeated .glory_api.Edge edge = 2;</code>
     */
    public Builder clearEdge() {
      if (edgeBuilder == null) {
        edge = java.util.Collections.emptyList();
        bitField0 = (bitField0 & ~0x00000002);
        onChanged();
      } else {
        edgeBuilder .clear();
      }
      return this;
    }
    /**
     * <pre>
     * 边
     * </pre>
     *
     * <code>repeated .glory_api.Edge edge = 2;</code>
     */
    public Builder removeEdge(int index) {
      if (edgeBuilder == null) {
        ensureEdgeIsMutable();
        edge .remove(index);
        onChanged();
      } else {
        edgeBuilder .remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 边
     * </pre>
     *
     * <code>repeated .glory_api.Edge edge = 2;</code>
     */
    public com.zhijiejiaoyu.glory_api.course.Edge.Builder getEdgeBuilder(
        int index) {
      return getEdgeFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 边
     * </pre>
     *
     * <code>repeated .glory_api.Edge edge = 2;</code>
     */
    public com.zhijiejiaoyu.glory_api.course.EdgeOrBuilder getEdgeOrBuilder(
        int index) {
      if (edgeBuilder == null) {
        return edge .get(index);  } else {
        return edgeBuilder .getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 边
     * </pre>
     *
     * <code>repeated .glory_api.Edge edge = 2;</code>
     */
    public java.util.List<? extends com.zhijiejiaoyu.glory_api.course.EdgeOrBuilder> 
         getEdgeOrBuilderList() {
      if (edgeBuilder != null) {
        return edgeBuilder .getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(edge );
      }
    }
    /**
     * <pre>
     * 边
     * </pre>
     *
     * <code>repeated .glory_api.Edge edge = 2;</code>
     */
    public com.zhijiejiaoyu.glory_api.course.Edge.Builder addEdgeBuilder() {
      return getEdgeFieldBuilder().addBuilder(
          com.zhijiejiaoyu.glory_api.course.Edge.getDefaultInstance());
    }
    /**
     * <pre>
     * 边
     * </pre>
     *
     * <code>repeated .glory_api.Edge edge = 2;</code>
     */
    public com.zhijiejiaoyu.glory_api.course.Edge.Builder addEdgeBuilder(
        int index) {
      return getEdgeFieldBuilder().addBuilder(
          index, com.zhijiejiaoyu.glory_api.course.Edge.getDefaultInstance());
    }
    /**
     * <pre>
     * 边
     * </pre>
     *
     * <code>repeated .glory_api.Edge edge = 2;</code>
     */
    public java.util.List<com.zhijiejiaoyu.glory_api.course.Edge.Builder> 
         getEdgeBuilderList() {
      return getEdgeFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.zhijiejiaoyu.glory_api.course.Edge, com.zhijiejiaoyu.glory_api.course.Edge.Builder, com.zhijiejiaoyu.glory_api.course.EdgeOrBuilder> 
        getEdgeFieldBuilder() {
      if (edgeBuilder == null) {
        edgeBuilder = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.zhijiejiaoyu.glory_api.course.Edge, com.zhijiejiaoyu.glory_api.course.Edge.Builder, com.zhijiejiaoyu.glory_api.course.EdgeOrBuilder>(
                edge ,
                ((bitField0 & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        edge = null;
      }
      return edgeBuilder ;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:glory_api.KnowledgeGraph)
  }

  // @@protoc_insertion_point(class_scope:glory_api.KnowledgeGraph)
  private static final com.zhijiejiaoyu.glory_api.course.KnowledgeGraph DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.zhijiejiaoyu.glory_api.course.KnowledgeGraph();
  }

  public static com.zhijiejiaoyu.glory_api.course.KnowledgeGraph getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<KnowledgeGraph>
      PARSER = new com.google.protobuf.AbstractParser<KnowledgeGraph>() {
    @java.lang.Override
    public KnowledgeGraph parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new KnowledgeGraph(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<KnowledgeGraph> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<KnowledgeGraph> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.zhijiejiaoyu.glory_api.course.KnowledgeGraph getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

