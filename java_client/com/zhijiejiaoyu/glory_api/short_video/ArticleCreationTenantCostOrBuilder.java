// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: smart_article/article.proto

package com.zhijiejiaoyu.glory_api.short_video;

public interface ArticleCreationTenantCostOrBuilder extends
    // @@protoc_insertion_point(interface_extends:glory_api.ArticleCreationTenantCost)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string name = 1;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <code>double total_cost_percent = 2;</code>
   * @return The totalCostPercent.
   */
  double getTotalCostPercent();

  /**
   * <pre>
   * 总成本
   * </pre>
   *
   * <code>double total_cost = 3;</code>
   * @return The totalCost.
   */
  double getTotalCost();

  /**
   * <pre>
   * 总花费
   * </pre>
   *
   * <code>double total_spend = 4;</code>
   * @return The totalSpend.
   */
  double getTotalSpend();

  /**
   * <code>int64 complex_count = 5;</code>
   * @return The complexCount.
   */
  long getComplexCount();

  /**
   * <code>int64 complex_usage_count = 6;</code>
   * @return The complexUsageCount.
   */
  long getComplexUsageCount();

  /**
   * <code>int64 simple_count = 7;</code>
   * @return The simpleCount.
   */
  long getSimpleCount();

  /**
   * <code>int64 simple_usage_count = 8;</code>
   * @return The simpleUsageCount.
   */
  long getSimpleUsageCount();

  /**
   * <code>int64 assistant_count = 9;</code>
   * @return The assistantCount.
   */
  long getAssistantCount();

  /**
   * <code>int64 assistant_usage_count = 10;</code>
   * @return The assistantUsageCount.
   */
  long getAssistantUsageCount();

  /**
   * <pre>
   * 复杂评价花费百分比
   * </pre>
   *
   * <code>double complex_cost_percent = 11;</code>
   * @return The complexCostPercent.
   */
  double getComplexCostPercent();

  /**
   * <pre>
   * 复杂评价总成本
   * </pre>
   *
   * <code>double complex_cost = 12;</code>
   * @return The complexCost.
   */
  double getComplexCost();

  /**
   * <pre>
   * 复杂评价总花费
   * </pre>
   *
   * <code>double complex_spend = 13;</code>
   * @return The complexSpend.
   */
  double getComplexSpend();

  /**
   * <pre>
   * 简单评价花费百分比
   * </pre>
   *
   * <code>double simple_cost_percent = 14;</code>
   * @return The simpleCostPercent.
   */
  double getSimpleCostPercent();

  /**
   * <pre>
   * 简单评价总成本
   * </pre>
   *
   * <code>double simple_cost = 15;</code>
   * @return The simpleCost.
   */
  double getSimpleCost();

  /**
   * <pre>
   * 简单评价总花费
   * </pre>
   *
   * <code>double simple_spend = 16;</code>
   * @return The simpleSpend.
   */
  double getSimpleSpend();

  /**
   * <pre>
   * ai助手花费百分比
   * </pre>
   *
   * <code>double assistant_cost_percent = 17;</code>
   * @return The assistantCostPercent.
   */
  double getAssistantCostPercent();

  /**
   * <pre>
   * ai助手总成本
   * </pre>
   *
   * <code>double assistant_cost = 18;</code>
   * @return The assistantCost.
   */
  double getAssistantCost();

  /**
   * <pre>
   * ai助手总花费
   * </pre>
   *
   * <code>double assistant_spend = 19;</code>
   * @return The assistantSpend.
   */
  double getAssistantSpend();
}
