package com.zhijiejiaoyu.glory_api;

import static io.grpc.MethodDescriptor.generateFullMethodName;

/**
 */
@javax.annotation.Generated(
    value = "by gRPC proto compiler (version 1.56.1)",
    comments = "Source: glory_api_service.proto")
@io.grpc.stub.annotations.GrpcGenerated
public final class glory_apiGrpc {

  private glory_apiGrpc() {}

  public static final String SERVICE_NAME = "glory_api.glory_api";

  // Static method descriptors that strictly reflect the proto.
  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.example.CreateExampleRequest,
      com.zhijiejiaoyu.glory_api.example.CreateExampleResponse> getCreateExampleMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateExample",
      requestType = com.zhijiejiaoyu.glory_api.example.CreateExampleRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.example.CreateExampleResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.example.CreateExampleRequest,
      com.zhijiejiaoyu.glory_api.example.CreateExampleResponse> getCreateExampleMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.example.CreateExampleRequest, com.zhijiejiaoyu.glory_api.example.CreateExampleResponse> getCreateExampleMethod;
    if ((getCreateExampleMethod = glory_apiGrpc.getCreateExampleMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateExampleMethod = glory_apiGrpc.getCreateExampleMethod) == null) {
          glory_apiGrpc.getCreateExampleMethod = getCreateExampleMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.example.CreateExampleRequest, com.zhijiejiaoyu.glory_api.example.CreateExampleResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateExample"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.example.CreateExampleRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.example.CreateExampleResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateExample"))
              .build();
        }
      }
    }
    return getCreateExampleMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.example.GetExampleRequest,
      com.zhijiejiaoyu.glory_api.example.GetExampleResponse> getGetExampleMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetExample",
      requestType = com.zhijiejiaoyu.glory_api.example.GetExampleRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.example.GetExampleResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.example.GetExampleRequest,
      com.zhijiejiaoyu.glory_api.example.GetExampleResponse> getGetExampleMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.example.GetExampleRequest, com.zhijiejiaoyu.glory_api.example.GetExampleResponse> getGetExampleMethod;
    if ((getGetExampleMethod = glory_apiGrpc.getGetExampleMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetExampleMethod = glory_apiGrpc.getGetExampleMethod) == null) {
          glory_apiGrpc.getGetExampleMethod = getGetExampleMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.example.GetExampleRequest, com.zhijiejiaoyu.glory_api.example.GetExampleResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetExample"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.example.GetExampleRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.example.GetExampleResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetExample"))
              .build();
        }
      }
    }
    return getGetExampleMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.example.UpdateExampleRequest,
      com.zhijiejiaoyu.glory_api.example.UpdateExampleResponse> getUpdateExampleMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateExample",
      requestType = com.zhijiejiaoyu.glory_api.example.UpdateExampleRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.example.UpdateExampleResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.example.UpdateExampleRequest,
      com.zhijiejiaoyu.glory_api.example.UpdateExampleResponse> getUpdateExampleMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.example.UpdateExampleRequest, com.zhijiejiaoyu.glory_api.example.UpdateExampleResponse> getUpdateExampleMethod;
    if ((getUpdateExampleMethod = glory_apiGrpc.getUpdateExampleMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateExampleMethod = glory_apiGrpc.getUpdateExampleMethod) == null) {
          glory_apiGrpc.getUpdateExampleMethod = getUpdateExampleMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.example.UpdateExampleRequest, com.zhijiejiaoyu.glory_api.example.UpdateExampleResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateExample"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.example.UpdateExampleRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.example.UpdateExampleResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateExample"))
              .build();
        }
      }
    }
    return getUpdateExampleMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.example.ListExampleRequest,
      com.zhijiejiaoyu.glory_api.example.ListExampleResponse> getListExampleMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListExample",
      requestType = com.zhijiejiaoyu.glory_api.example.ListExampleRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.example.ListExampleResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.example.ListExampleRequest,
      com.zhijiejiaoyu.glory_api.example.ListExampleResponse> getListExampleMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.example.ListExampleRequest, com.zhijiejiaoyu.glory_api.example.ListExampleResponse> getListExampleMethod;
    if ((getListExampleMethod = glory_apiGrpc.getListExampleMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListExampleMethod = glory_apiGrpc.getListExampleMethod) == null) {
          glory_apiGrpc.getListExampleMethod = getListExampleMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.example.ListExampleRequest, com.zhijiejiaoyu.glory_api.example.ListExampleResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListExample"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.example.ListExampleRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.example.ListExampleResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListExample"))
              .build();
        }
      }
    }
    return getListExampleMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.example.DeleteExampleRequest,
      com.zhijiejiaoyu.glory_api.example.DeleteExampleResponse> getDeleteExampleMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteExample",
      requestType = com.zhijiejiaoyu.glory_api.example.DeleteExampleRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.example.DeleteExampleResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.example.DeleteExampleRequest,
      com.zhijiejiaoyu.glory_api.example.DeleteExampleResponse> getDeleteExampleMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.example.DeleteExampleRequest, com.zhijiejiaoyu.glory_api.example.DeleteExampleResponse> getDeleteExampleMethod;
    if ((getDeleteExampleMethod = glory_apiGrpc.getDeleteExampleMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteExampleMethod = glory_apiGrpc.getDeleteExampleMethod) == null) {
          glory_apiGrpc.getDeleteExampleMethod = getDeleteExampleMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.example.DeleteExampleRequest, com.zhijiejiaoyu.glory_api.example.DeleteExampleResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteExample"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.example.DeleteExampleRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.example.DeleteExampleResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteExample"))
              .build();
        }
      }
    }
    return getDeleteExampleMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.LoginRequest,
      com.zhijiejiaoyu.glory_api.user.LoginResponse> getLoginMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "Login",
      requestType = com.zhijiejiaoyu.glory_api.user.LoginRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.LoginResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.LoginRequest,
      com.zhijiejiaoyu.glory_api.user.LoginResponse> getLoginMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.LoginRequest, com.zhijiejiaoyu.glory_api.user.LoginResponse> getLoginMethod;
    if ((getLoginMethod = glory_apiGrpc.getLoginMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getLoginMethod = glory_apiGrpc.getLoginMethod) == null) {
          glory_apiGrpc.getLoginMethod = getLoginMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.LoginRequest, com.zhijiejiaoyu.glory_api.user.LoginResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "Login"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.LoginRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.LoginResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("Login"))
              .build();
        }
      }
    }
    return getLoginMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.LogoutRequest,
      com.zhijiejiaoyu.glory_api.user.LogoutResponse> getLogoutMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "Logout",
      requestType = com.zhijiejiaoyu.glory_api.user.LogoutRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.LogoutResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.LogoutRequest,
      com.zhijiejiaoyu.glory_api.user.LogoutResponse> getLogoutMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.LogoutRequest, com.zhijiejiaoyu.glory_api.user.LogoutResponse> getLogoutMethod;
    if ((getLogoutMethod = glory_apiGrpc.getLogoutMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getLogoutMethod = glory_apiGrpc.getLogoutMethod) == null) {
          glory_apiGrpc.getLogoutMethod = getLogoutMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.LogoutRequest, com.zhijiejiaoyu.glory_api.user.LogoutResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "Logout"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.LogoutRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.LogoutResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("Logout"))
              .build();
        }
      }
    }
    return getLogoutMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.DeleteUserRequest,
      com.zhijiejiaoyu.glory_api.user.DeleteUserResponse> getDeleteUserMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteUser",
      requestType = com.zhijiejiaoyu.glory_api.user.DeleteUserRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.DeleteUserResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.DeleteUserRequest,
      com.zhijiejiaoyu.glory_api.user.DeleteUserResponse> getDeleteUserMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.DeleteUserRequest, com.zhijiejiaoyu.glory_api.user.DeleteUserResponse> getDeleteUserMethod;
    if ((getDeleteUserMethod = glory_apiGrpc.getDeleteUserMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteUserMethod = glory_apiGrpc.getDeleteUserMethod) == null) {
          glory_apiGrpc.getDeleteUserMethod = getDeleteUserMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.DeleteUserRequest, com.zhijiejiaoyu.glory_api.user.DeleteUserResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteUser"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.DeleteUserRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.DeleteUserResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteUser"))
              .build();
        }
      }
    }
    return getDeleteUserMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListOwnAccessRequest,
      com.zhijiejiaoyu.glory_api.user.ListOwnAccessResponse> getListOwnAccessMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListOwnAccess",
      requestType = com.zhijiejiaoyu.glory_api.user.ListOwnAccessRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.ListOwnAccessResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListOwnAccessRequest,
      com.zhijiejiaoyu.glory_api.user.ListOwnAccessResponse> getListOwnAccessMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListOwnAccessRequest, com.zhijiejiaoyu.glory_api.user.ListOwnAccessResponse> getListOwnAccessMethod;
    if ((getListOwnAccessMethod = glory_apiGrpc.getListOwnAccessMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListOwnAccessMethod = glory_apiGrpc.getListOwnAccessMethod) == null) {
          glory_apiGrpc.getListOwnAccessMethod = getListOwnAccessMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.ListOwnAccessRequest, com.zhijiejiaoyu.glory_api.user.ListOwnAccessResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListOwnAccess"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.ListOwnAccessRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.ListOwnAccessResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListOwnAccess"))
              .build();
        }
      }
    }
    return getListOwnAccessMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GetVerifyCodeRequest,
      com.zhijiejiaoyu.glory_api.user.GetVerifyCodeResponse> getGetVerifyCodeMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetVerifyCode",
      requestType = com.zhijiejiaoyu.glory_api.user.GetVerifyCodeRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.GetVerifyCodeResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GetVerifyCodeRequest,
      com.zhijiejiaoyu.glory_api.user.GetVerifyCodeResponse> getGetVerifyCodeMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GetVerifyCodeRequest, com.zhijiejiaoyu.glory_api.user.GetVerifyCodeResponse> getGetVerifyCodeMethod;
    if ((getGetVerifyCodeMethod = glory_apiGrpc.getGetVerifyCodeMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetVerifyCodeMethod = glory_apiGrpc.getGetVerifyCodeMethod) == null) {
          glory_apiGrpc.getGetVerifyCodeMethod = getGetVerifyCodeMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.GetVerifyCodeRequest, com.zhijiejiaoyu.glory_api.user.GetVerifyCodeResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetVerifyCode"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.GetVerifyCodeRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.GetVerifyCodeResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetVerifyCode"))
              .build();
        }
      }
    }
    return getGetVerifyCodeMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.CheckVerifyCodeRequest,
      com.zhijiejiaoyu.glory_api.user.CheckVerifyCodeResponse> getCheckVerifyCodeMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CheckVerifyCode",
      requestType = com.zhijiejiaoyu.glory_api.user.CheckVerifyCodeRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.CheckVerifyCodeResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.CheckVerifyCodeRequest,
      com.zhijiejiaoyu.glory_api.user.CheckVerifyCodeResponse> getCheckVerifyCodeMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.CheckVerifyCodeRequest, com.zhijiejiaoyu.glory_api.user.CheckVerifyCodeResponse> getCheckVerifyCodeMethod;
    if ((getCheckVerifyCodeMethod = glory_apiGrpc.getCheckVerifyCodeMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCheckVerifyCodeMethod = glory_apiGrpc.getCheckVerifyCodeMethod) == null) {
          glory_apiGrpc.getCheckVerifyCodeMethod = getCheckVerifyCodeMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.CheckVerifyCodeRequest, com.zhijiejiaoyu.glory_api.user.CheckVerifyCodeResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CheckVerifyCode"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.CheckVerifyCodeRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.CheckVerifyCodeResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CheckVerifyCode"))
              .build();
        }
      }
    }
    return getCheckVerifyCodeMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GetUserRequest,
      com.zhijiejiaoyu.glory_api.user.GetUserResponse> getGetUserMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetUser",
      requestType = com.zhijiejiaoyu.glory_api.user.GetUserRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.GetUserResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GetUserRequest,
      com.zhijiejiaoyu.glory_api.user.GetUserResponse> getGetUserMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GetUserRequest, com.zhijiejiaoyu.glory_api.user.GetUserResponse> getGetUserMethod;
    if ((getGetUserMethod = glory_apiGrpc.getGetUserMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetUserMethod = glory_apiGrpc.getGetUserMethod) == null) {
          glory_apiGrpc.getGetUserMethod = getGetUserMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.GetUserRequest, com.zhijiejiaoyu.glory_api.user.GetUserResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetUser"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.GetUserRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.GetUserResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetUser"))
              .build();
        }
      }
    }
    return getGetUserMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GetUserByPhoneRequest,
      com.zhijiejiaoyu.glory_api.user.GetUserByPhoneResponse> getGetUserByPhoneMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetUserByPhone",
      requestType = com.zhijiejiaoyu.glory_api.user.GetUserByPhoneRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.GetUserByPhoneResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GetUserByPhoneRequest,
      com.zhijiejiaoyu.glory_api.user.GetUserByPhoneResponse> getGetUserByPhoneMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GetUserByPhoneRequest, com.zhijiejiaoyu.glory_api.user.GetUserByPhoneResponse> getGetUserByPhoneMethod;
    if ((getGetUserByPhoneMethod = glory_apiGrpc.getGetUserByPhoneMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetUserByPhoneMethod = glory_apiGrpc.getGetUserByPhoneMethod) == null) {
          glory_apiGrpc.getGetUserByPhoneMethod = getGetUserByPhoneMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.GetUserByPhoneRequest, com.zhijiejiaoyu.glory_api.user.GetUserByPhoneResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetUserByPhone"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.GetUserByPhoneRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.GetUserByPhoneResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetUserByPhone"))
              .build();
        }
      }
    }
    return getGetUserByPhoneMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.LoginWithPasswordRequest,
      com.zhijiejiaoyu.glory_api.user.LoginWithPasswordResponse> getLoginWithPasswordMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "LoginWithPassword",
      requestType = com.zhijiejiaoyu.glory_api.user.LoginWithPasswordRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.LoginWithPasswordResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.LoginWithPasswordRequest,
      com.zhijiejiaoyu.glory_api.user.LoginWithPasswordResponse> getLoginWithPasswordMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.LoginWithPasswordRequest, com.zhijiejiaoyu.glory_api.user.LoginWithPasswordResponse> getLoginWithPasswordMethod;
    if ((getLoginWithPasswordMethod = glory_apiGrpc.getLoginWithPasswordMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getLoginWithPasswordMethod = glory_apiGrpc.getLoginWithPasswordMethod) == null) {
          glory_apiGrpc.getLoginWithPasswordMethod = getLoginWithPasswordMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.LoginWithPasswordRequest, com.zhijiejiaoyu.glory_api.user.LoginWithPasswordResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "LoginWithPassword"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.LoginWithPasswordRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.LoginWithPasswordResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("LoginWithPassword"))
              .build();
        }
      }
    }
    return getLoginWithPasswordMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.UpdatePasswordRequest,
      com.zhijiejiaoyu.glory_api.user.UpdatePasswordResponse> getUpdatePasswordMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdatePassword",
      requestType = com.zhijiejiaoyu.glory_api.user.UpdatePasswordRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.UpdatePasswordResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.UpdatePasswordRequest,
      com.zhijiejiaoyu.glory_api.user.UpdatePasswordResponse> getUpdatePasswordMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.UpdatePasswordRequest, com.zhijiejiaoyu.glory_api.user.UpdatePasswordResponse> getUpdatePasswordMethod;
    if ((getUpdatePasswordMethod = glory_apiGrpc.getUpdatePasswordMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdatePasswordMethod = glory_apiGrpc.getUpdatePasswordMethod) == null) {
          glory_apiGrpc.getUpdatePasswordMethod = getUpdatePasswordMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.UpdatePasswordRequest, com.zhijiejiaoyu.glory_api.user.UpdatePasswordResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdatePassword"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.UpdatePasswordRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.UpdatePasswordResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdatePassword"))
              .build();
        }
      }
    }
    return getUpdatePasswordMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.UpdateUserRequest,
      com.zhijiejiaoyu.glory_api.user.UpdateUserResponse> getUpdateUserMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateUser",
      requestType = com.zhijiejiaoyu.glory_api.user.UpdateUserRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.UpdateUserResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.UpdateUserRequest,
      com.zhijiejiaoyu.glory_api.user.UpdateUserResponse> getUpdateUserMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.UpdateUserRequest, com.zhijiejiaoyu.glory_api.user.UpdateUserResponse> getUpdateUserMethod;
    if ((getUpdateUserMethod = glory_apiGrpc.getUpdateUserMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateUserMethod = glory_apiGrpc.getUpdateUserMethod) == null) {
          glory_apiGrpc.getUpdateUserMethod = getUpdateUserMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.UpdateUserRequest, com.zhijiejiaoyu.glory_api.user.UpdateUserResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateUser"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.UpdateUserRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.UpdateUserResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateUser"))
              .build();
        }
      }
    }
    return getUpdateUserMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.UpdatePhoneRequest,
      com.zhijiejiaoyu.glory_api.user.UpdatePhoneResponse> getUpdatePhoneMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdatePhone",
      requestType = com.zhijiejiaoyu.glory_api.user.UpdatePhoneRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.UpdatePhoneResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.UpdatePhoneRequest,
      com.zhijiejiaoyu.glory_api.user.UpdatePhoneResponse> getUpdatePhoneMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.UpdatePhoneRequest, com.zhijiejiaoyu.glory_api.user.UpdatePhoneResponse> getUpdatePhoneMethod;
    if ((getUpdatePhoneMethod = glory_apiGrpc.getUpdatePhoneMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdatePhoneMethod = glory_apiGrpc.getUpdatePhoneMethod) == null) {
          glory_apiGrpc.getUpdatePhoneMethod = getUpdatePhoneMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.UpdatePhoneRequest, com.zhijiejiaoyu.glory_api.user.UpdatePhoneResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdatePhone"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.UpdatePhoneRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.UpdatePhoneResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdatePhone"))
              .build();
        }
      }
    }
    return getUpdatePhoneMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GetUserMajorRequest,
      com.zhijiejiaoyu.glory_api.user.GetUserMajorResponse> getGetUserMajorMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetUserMajor",
      requestType = com.zhijiejiaoyu.glory_api.user.GetUserMajorRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.GetUserMajorResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GetUserMajorRequest,
      com.zhijiejiaoyu.glory_api.user.GetUserMajorResponse> getGetUserMajorMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GetUserMajorRequest, com.zhijiejiaoyu.glory_api.user.GetUserMajorResponse> getGetUserMajorMethod;
    if ((getGetUserMajorMethod = glory_apiGrpc.getGetUserMajorMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetUserMajorMethod = glory_apiGrpc.getGetUserMajorMethod) == null) {
          glory_apiGrpc.getGetUserMajorMethod = getGetUserMajorMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.GetUserMajorRequest, com.zhijiejiaoyu.glory_api.user.GetUserMajorResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetUserMajor"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.GetUserMajorRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.GetUserMajorResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetUserMajor"))
              .build();
        }
      }
    }
    return getGetUserMajorMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.UpdateUserTenantRequest,
      com.zhijiejiaoyu.glory_api.user.UpdateUserTenantResponse> getUpdateUserTenantMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateUserTenant",
      requestType = com.zhijiejiaoyu.glory_api.user.UpdateUserTenantRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.UpdateUserTenantResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.UpdateUserTenantRequest,
      com.zhijiejiaoyu.glory_api.user.UpdateUserTenantResponse> getUpdateUserTenantMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.UpdateUserTenantRequest, com.zhijiejiaoyu.glory_api.user.UpdateUserTenantResponse> getUpdateUserTenantMethod;
    if ((getUpdateUserTenantMethod = glory_apiGrpc.getUpdateUserTenantMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateUserTenantMethod = glory_apiGrpc.getUpdateUserTenantMethod) == null) {
          glory_apiGrpc.getUpdateUserTenantMethod = getUpdateUserTenantMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.UpdateUserTenantRequest, com.zhijiejiaoyu.glory_api.user.UpdateUserTenantResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateUserTenant"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.UpdateUserTenantRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.UpdateUserTenantResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateUserTenant"))
              .build();
        }
      }
    }
    return getUpdateUserTenantMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListUserRequest,
      com.zhijiejiaoyu.glory_api.user.ListUserResponse> getListUserMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListUser",
      requestType = com.zhijiejiaoyu.glory_api.user.ListUserRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.ListUserResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListUserRequest,
      com.zhijiejiaoyu.glory_api.user.ListUserResponse> getListUserMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListUserRequest, com.zhijiejiaoyu.glory_api.user.ListUserResponse> getListUserMethod;
    if ((getListUserMethod = glory_apiGrpc.getListUserMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListUserMethod = glory_apiGrpc.getListUserMethod) == null) {
          glory_apiGrpc.getListUserMethod = getListUserMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.ListUserRequest, com.zhijiejiaoyu.glory_api.user.ListUserResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListUser"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.ListUserRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.ListUserResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListUser"))
              .build();
        }
      }
    }
    return getListUserMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.UserBindWechatRequest,
      com.zhijiejiaoyu.glory_api.user.UserBindWechatResponse> getUserBindWechatMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UserBindWechat",
      requestType = com.zhijiejiaoyu.glory_api.user.UserBindWechatRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.UserBindWechatResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.UserBindWechatRequest,
      com.zhijiejiaoyu.glory_api.user.UserBindWechatResponse> getUserBindWechatMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.UserBindWechatRequest, com.zhijiejiaoyu.glory_api.user.UserBindWechatResponse> getUserBindWechatMethod;
    if ((getUserBindWechatMethod = glory_apiGrpc.getUserBindWechatMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUserBindWechatMethod = glory_apiGrpc.getUserBindWechatMethod) == null) {
          glory_apiGrpc.getUserBindWechatMethod = getUserBindWechatMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.UserBindWechatRequest, com.zhijiejiaoyu.glory_api.user.UserBindWechatResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UserBindWechat"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.UserBindWechatRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.UserBindWechatResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UserBindWechat"))
              .build();
        }
      }
    }
    return getUserBindWechatMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.UserUnbindWechatRequest,
      com.zhijiejiaoyu.glory_api.user.UserUnbindWechatResponse> getUserUnbindWechatMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UserUnbindWechat",
      requestType = com.zhijiejiaoyu.glory_api.user.UserUnbindWechatRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.UserUnbindWechatResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.UserUnbindWechatRequest,
      com.zhijiejiaoyu.glory_api.user.UserUnbindWechatResponse> getUserUnbindWechatMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.UserUnbindWechatRequest, com.zhijiejiaoyu.glory_api.user.UserUnbindWechatResponse> getUserUnbindWechatMethod;
    if ((getUserUnbindWechatMethod = glory_apiGrpc.getUserUnbindWechatMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUserUnbindWechatMethod = glory_apiGrpc.getUserUnbindWechatMethod) == null) {
          glory_apiGrpc.getUserUnbindWechatMethod = getUserUnbindWechatMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.UserUnbindWechatRequest, com.zhijiejiaoyu.glory_api.user.UserUnbindWechatResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UserUnbindWechat"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.UserUnbindWechatRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.UserUnbindWechatResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UserUnbindWechat"))
              .build();
        }
      }
    }
    return getUserUnbindWechatMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.FollowUserRequest,
      com.zhijiejiaoyu.glory_api.user.FollowUserResponse> getFollowUserMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "FollowUser",
      requestType = com.zhijiejiaoyu.glory_api.user.FollowUserRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.FollowUserResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.FollowUserRequest,
      com.zhijiejiaoyu.glory_api.user.FollowUserResponse> getFollowUserMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.FollowUserRequest, com.zhijiejiaoyu.glory_api.user.FollowUserResponse> getFollowUserMethod;
    if ((getFollowUserMethod = glory_apiGrpc.getFollowUserMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getFollowUserMethod = glory_apiGrpc.getFollowUserMethod) == null) {
          glory_apiGrpc.getFollowUserMethod = getFollowUserMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.FollowUserRequest, com.zhijiejiaoyu.glory_api.user.FollowUserResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "FollowUser"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.FollowUserRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.FollowUserResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("FollowUser"))
              .build();
        }
      }
    }
    return getFollowUserMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListMyFollowingRequest,
      com.zhijiejiaoyu.glory_api.user.ListMyFollowingResponse> getListMyFollowingMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListMyFollowing",
      requestType = com.zhijiejiaoyu.glory_api.user.ListMyFollowingRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.ListMyFollowingResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListMyFollowingRequest,
      com.zhijiejiaoyu.glory_api.user.ListMyFollowingResponse> getListMyFollowingMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListMyFollowingRequest, com.zhijiejiaoyu.glory_api.user.ListMyFollowingResponse> getListMyFollowingMethod;
    if ((getListMyFollowingMethod = glory_apiGrpc.getListMyFollowingMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListMyFollowingMethod = glory_apiGrpc.getListMyFollowingMethod) == null) {
          glory_apiGrpc.getListMyFollowingMethod = getListMyFollowingMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.ListMyFollowingRequest, com.zhijiejiaoyu.glory_api.user.ListMyFollowingResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListMyFollowing"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.ListMyFollowingRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.ListMyFollowingResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListMyFollowing"))
              .build();
        }
      }
    }
    return getListMyFollowingMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListMyFollowerRequest,
      com.zhijiejiaoyu.glory_api.user.ListMyFollowerResponse> getListMyFollowerMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListMyFollower",
      requestType = com.zhijiejiaoyu.glory_api.user.ListMyFollowerRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.ListMyFollowerResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListMyFollowerRequest,
      com.zhijiejiaoyu.glory_api.user.ListMyFollowerResponse> getListMyFollowerMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListMyFollowerRequest, com.zhijiejiaoyu.glory_api.user.ListMyFollowerResponse> getListMyFollowerMethod;
    if ((getListMyFollowerMethod = glory_apiGrpc.getListMyFollowerMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListMyFollowerMethod = glory_apiGrpc.getListMyFollowerMethod) == null) {
          glory_apiGrpc.getListMyFollowerMethod = getListMyFollowerMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.ListMyFollowerRequest, com.zhijiejiaoyu.glory_api.user.ListMyFollowerResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListMyFollower"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.ListMyFollowerRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.ListMyFollowerResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListMyFollower"))
              .build();
        }
      }
    }
    return getListMyFollowerMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListMyFriendRequest,
      com.zhijiejiaoyu.glory_api.user.ListMyFriendResponse> getListMyFriendMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListMyFriend",
      requestType = com.zhijiejiaoyu.glory_api.user.ListMyFriendRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.ListMyFriendResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListMyFriendRequest,
      com.zhijiejiaoyu.glory_api.user.ListMyFriendResponse> getListMyFriendMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListMyFriendRequest, com.zhijiejiaoyu.glory_api.user.ListMyFriendResponse> getListMyFriendMethod;
    if ((getListMyFriendMethod = glory_apiGrpc.getListMyFriendMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListMyFriendMethod = glory_apiGrpc.getListMyFriendMethod) == null) {
          glory_apiGrpc.getListMyFriendMethod = getListMyFriendMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.ListMyFriendRequest, com.zhijiejiaoyu.glory_api.user.ListMyFriendResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListMyFriend"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.ListMyFriendRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.ListMyFriendResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListMyFriend"))
              .build();
        }
      }
    }
    return getListMyFriendMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GetMySocialSummaryRequest,
      com.zhijiejiaoyu.glory_api.user.GetMySocialSummaryResponse> getGetMySocialSummaryMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetMySocialSummary",
      requestType = com.zhijiejiaoyu.glory_api.user.GetMySocialSummaryRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.GetMySocialSummaryResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GetMySocialSummaryRequest,
      com.zhijiejiaoyu.glory_api.user.GetMySocialSummaryResponse> getGetMySocialSummaryMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GetMySocialSummaryRequest, com.zhijiejiaoyu.glory_api.user.GetMySocialSummaryResponse> getGetMySocialSummaryMethod;
    if ((getGetMySocialSummaryMethod = glory_apiGrpc.getGetMySocialSummaryMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetMySocialSummaryMethod = glory_apiGrpc.getGetMySocialSummaryMethod) == null) {
          glory_apiGrpc.getGetMySocialSummaryMethod = getGetMySocialSummaryMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.GetMySocialSummaryRequest, com.zhijiejiaoyu.glory_api.user.GetMySocialSummaryResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetMySocialSummary"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.GetMySocialSummaryRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.GetMySocialSummaryResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetMySocialSummary"))
              .build();
        }
      }
    }
    return getGetMySocialSummaryMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GetUserPagePermissionRequest,
      com.zhijiejiaoyu.glory_api.user.GetUserPagePermissionResponse> getGetUserPagePermissionMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetUserPagePermission",
      requestType = com.zhijiejiaoyu.glory_api.user.GetUserPagePermissionRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.GetUserPagePermissionResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GetUserPagePermissionRequest,
      com.zhijiejiaoyu.glory_api.user.GetUserPagePermissionResponse> getGetUserPagePermissionMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GetUserPagePermissionRequest, com.zhijiejiaoyu.glory_api.user.GetUserPagePermissionResponse> getGetUserPagePermissionMethod;
    if ((getGetUserPagePermissionMethod = glory_apiGrpc.getGetUserPagePermissionMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetUserPagePermissionMethod = glory_apiGrpc.getGetUserPagePermissionMethod) == null) {
          glory_apiGrpc.getGetUserPagePermissionMethod = getGetUserPagePermissionMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.GetUserPagePermissionRequest, com.zhijiejiaoyu.glory_api.user.GetUserPagePermissionResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetUserPagePermission"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.GetUserPagePermissionRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.GetUserPagePermissionResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetUserPagePermission"))
              .build();
        }
      }
    }
    return getGetUserPagePermissionMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.CreateRolePagePermissionRequest,
      com.zhijiejiaoyu.glory_api.user.CreateRolePagePermissionResponse> getCreateRolePagePermissionMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateRolePagePermission",
      requestType = com.zhijiejiaoyu.glory_api.user.CreateRolePagePermissionRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.CreateRolePagePermissionResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.CreateRolePagePermissionRequest,
      com.zhijiejiaoyu.glory_api.user.CreateRolePagePermissionResponse> getCreateRolePagePermissionMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.CreateRolePagePermissionRequest, com.zhijiejiaoyu.glory_api.user.CreateRolePagePermissionResponse> getCreateRolePagePermissionMethod;
    if ((getCreateRolePagePermissionMethod = glory_apiGrpc.getCreateRolePagePermissionMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateRolePagePermissionMethod = glory_apiGrpc.getCreateRolePagePermissionMethod) == null) {
          glory_apiGrpc.getCreateRolePagePermissionMethod = getCreateRolePagePermissionMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.CreateRolePagePermissionRequest, com.zhijiejiaoyu.glory_api.user.CreateRolePagePermissionResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateRolePagePermission"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.CreateRolePagePermissionRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.CreateRolePagePermissionResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateRolePagePermission"))
              .build();
        }
      }
    }
    return getCreateRolePagePermissionMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.UpdateRolePagePermissionRequest,
      com.zhijiejiaoyu.glory_api.user.UpdateRolePagePermissionResponse> getUpdateRolePagePermissionMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateRolePagePermission",
      requestType = com.zhijiejiaoyu.glory_api.user.UpdateRolePagePermissionRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.UpdateRolePagePermissionResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.UpdateRolePagePermissionRequest,
      com.zhijiejiaoyu.glory_api.user.UpdateRolePagePermissionResponse> getUpdateRolePagePermissionMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.UpdateRolePagePermissionRequest, com.zhijiejiaoyu.glory_api.user.UpdateRolePagePermissionResponse> getUpdateRolePagePermissionMethod;
    if ((getUpdateRolePagePermissionMethod = glory_apiGrpc.getUpdateRolePagePermissionMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateRolePagePermissionMethod = glory_apiGrpc.getUpdateRolePagePermissionMethod) == null) {
          glory_apiGrpc.getUpdateRolePagePermissionMethod = getUpdateRolePagePermissionMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.UpdateRolePagePermissionRequest, com.zhijiejiaoyu.glory_api.user.UpdateRolePagePermissionResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateRolePagePermission"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.UpdateRolePagePermissionRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.UpdateRolePagePermissionResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateRolePagePermission"))
              .build();
        }
      }
    }
    return getUpdateRolePagePermissionMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GetRolePagePermissionRequest,
      com.zhijiejiaoyu.glory_api.user.GetRolePagePermissionResponse> getGetRolePagePermissionMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetRolePagePermission",
      requestType = com.zhijiejiaoyu.glory_api.user.GetRolePagePermissionRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.GetRolePagePermissionResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GetRolePagePermissionRequest,
      com.zhijiejiaoyu.glory_api.user.GetRolePagePermissionResponse> getGetRolePagePermissionMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GetRolePagePermissionRequest, com.zhijiejiaoyu.glory_api.user.GetRolePagePermissionResponse> getGetRolePagePermissionMethod;
    if ((getGetRolePagePermissionMethod = glory_apiGrpc.getGetRolePagePermissionMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetRolePagePermissionMethod = glory_apiGrpc.getGetRolePagePermissionMethod) == null) {
          glory_apiGrpc.getGetRolePagePermissionMethod = getGetRolePagePermissionMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.GetRolePagePermissionRequest, com.zhijiejiaoyu.glory_api.user.GetRolePagePermissionResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetRolePagePermission"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.GetRolePagePermissionRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.GetRolePagePermissionResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetRolePagePermission"))
              .build();
        }
      }
    }
    return getGetRolePagePermissionMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.AddAddressRequest,
      com.zhijiejiaoyu.glory_api.user.AddAddressResponse> getAddAddressMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "AddAddress",
      requestType = com.zhijiejiaoyu.glory_api.user.AddAddressRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.AddAddressResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.AddAddressRequest,
      com.zhijiejiaoyu.glory_api.user.AddAddressResponse> getAddAddressMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.AddAddressRequest, com.zhijiejiaoyu.glory_api.user.AddAddressResponse> getAddAddressMethod;
    if ((getAddAddressMethod = glory_apiGrpc.getAddAddressMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getAddAddressMethod = glory_apiGrpc.getAddAddressMethod) == null) {
          glory_apiGrpc.getAddAddressMethod = getAddAddressMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.AddAddressRequest, com.zhijiejiaoyu.glory_api.user.AddAddressResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "AddAddress"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.AddAddressRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.AddAddressResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("AddAddress"))
              .build();
        }
      }
    }
    return getAddAddressMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.DeleteAddressRequest,
      com.zhijiejiaoyu.glory_api.user.DeleteAddressResponse> getDeleteAddressMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteAddress",
      requestType = com.zhijiejiaoyu.glory_api.user.DeleteAddressRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.DeleteAddressResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.DeleteAddressRequest,
      com.zhijiejiaoyu.glory_api.user.DeleteAddressResponse> getDeleteAddressMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.DeleteAddressRequest, com.zhijiejiaoyu.glory_api.user.DeleteAddressResponse> getDeleteAddressMethod;
    if ((getDeleteAddressMethod = glory_apiGrpc.getDeleteAddressMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteAddressMethod = glory_apiGrpc.getDeleteAddressMethod) == null) {
          glory_apiGrpc.getDeleteAddressMethod = getDeleteAddressMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.DeleteAddressRequest, com.zhijiejiaoyu.glory_api.user.DeleteAddressResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteAddress"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.DeleteAddressRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.DeleteAddressResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteAddress"))
              .build();
        }
      }
    }
    return getDeleteAddressMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.UpdateAddressRequest,
      com.zhijiejiaoyu.glory_api.user.UpdateAddressResponse> getUpdateAddressMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateAddress",
      requestType = com.zhijiejiaoyu.glory_api.user.UpdateAddressRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.UpdateAddressResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.UpdateAddressRequest,
      com.zhijiejiaoyu.glory_api.user.UpdateAddressResponse> getUpdateAddressMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.UpdateAddressRequest, com.zhijiejiaoyu.glory_api.user.UpdateAddressResponse> getUpdateAddressMethod;
    if ((getUpdateAddressMethod = glory_apiGrpc.getUpdateAddressMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateAddressMethod = glory_apiGrpc.getUpdateAddressMethod) == null) {
          glory_apiGrpc.getUpdateAddressMethod = getUpdateAddressMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.UpdateAddressRequest, com.zhijiejiaoyu.glory_api.user.UpdateAddressResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateAddress"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.UpdateAddressRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.UpdateAddressResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateAddress"))
              .build();
        }
      }
    }
    return getUpdateAddressMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GetAddressRequest,
      com.zhijiejiaoyu.glory_api.user.GetAddressResponse> getGetAddressMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetAddress",
      requestType = com.zhijiejiaoyu.glory_api.user.GetAddressRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.GetAddressResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GetAddressRequest,
      com.zhijiejiaoyu.glory_api.user.GetAddressResponse> getGetAddressMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GetAddressRequest, com.zhijiejiaoyu.glory_api.user.GetAddressResponse> getGetAddressMethod;
    if ((getGetAddressMethod = glory_apiGrpc.getGetAddressMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetAddressMethod = glory_apiGrpc.getGetAddressMethod) == null) {
          glory_apiGrpc.getGetAddressMethod = getGetAddressMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.GetAddressRequest, com.zhijiejiaoyu.glory_api.user.GetAddressResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetAddress"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.GetAddressRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.GetAddressResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetAddress"))
              .build();
        }
      }
    }
    return getGetAddressMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListAddressRequest,
      com.zhijiejiaoyu.glory_api.user.ListAddressResponse> getListAddressMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListAddress",
      requestType = com.zhijiejiaoyu.glory_api.user.ListAddressRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.ListAddressResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListAddressRequest,
      com.zhijiejiaoyu.glory_api.user.ListAddressResponse> getListAddressMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListAddressRequest, com.zhijiejiaoyu.glory_api.user.ListAddressResponse> getListAddressMethod;
    if ((getListAddressMethod = glory_apiGrpc.getListAddressMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListAddressMethod = glory_apiGrpc.getListAddressMethod) == null) {
          glory_apiGrpc.getListAddressMethod = getListAddressMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.ListAddressRequest, com.zhijiejiaoyu.glory_api.user.ListAddressResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListAddress"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.ListAddressRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.ListAddressResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListAddress"))
              .build();
        }
      }
    }
    return getListAddressMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListUserByRoleRequest,
      com.zhijiejiaoyu.glory_api.user.ListUserByRoleResponse> getListUserByRoleMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListUserByRole",
      requestType = com.zhijiejiaoyu.glory_api.user.ListUserByRoleRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.ListUserByRoleResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListUserByRoleRequest,
      com.zhijiejiaoyu.glory_api.user.ListUserByRoleResponse> getListUserByRoleMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListUserByRoleRequest, com.zhijiejiaoyu.glory_api.user.ListUserByRoleResponse> getListUserByRoleMethod;
    if ((getListUserByRoleMethod = glory_apiGrpc.getListUserByRoleMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListUserByRoleMethod = glory_apiGrpc.getListUserByRoleMethod) == null) {
          glory_apiGrpc.getListUserByRoleMethod = getListUserByRoleMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.ListUserByRoleRequest, com.zhijiejiaoyu.glory_api.user.ListUserByRoleResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListUserByRole"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.ListUserByRoleRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.ListUserByRoleResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListUserByRole"))
              .build();
        }
      }
    }
    return getListUserByRoleMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListPermissionRequest,
      com.zhijiejiaoyu.glory_api.user.ListPermissionResponse> getListPermissionMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListPermission",
      requestType = com.zhijiejiaoyu.glory_api.user.ListPermissionRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.ListPermissionResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListPermissionRequest,
      com.zhijiejiaoyu.glory_api.user.ListPermissionResponse> getListPermissionMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListPermissionRequest, com.zhijiejiaoyu.glory_api.user.ListPermissionResponse> getListPermissionMethod;
    if ((getListPermissionMethod = glory_apiGrpc.getListPermissionMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListPermissionMethod = glory_apiGrpc.getListPermissionMethod) == null) {
          glory_apiGrpc.getListPermissionMethod = getListPermissionMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.ListPermissionRequest, com.zhijiejiaoyu.glory_api.user.ListPermissionResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListPermission"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.ListPermissionRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.ListPermissionResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListPermission"))
              .build();
        }
      }
    }
    return getListPermissionMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListRoleRequest,
      com.zhijiejiaoyu.glory_api.user.ListRoleResponse> getListRoleMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListRole",
      requestType = com.zhijiejiaoyu.glory_api.user.ListRoleRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.ListRoleResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListRoleRequest,
      com.zhijiejiaoyu.glory_api.user.ListRoleResponse> getListRoleMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListRoleRequest, com.zhijiejiaoyu.glory_api.user.ListRoleResponse> getListRoleMethod;
    if ((getListRoleMethod = glory_apiGrpc.getListRoleMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListRoleMethod = glory_apiGrpc.getListRoleMethod) == null) {
          glory_apiGrpc.getListRoleMethod = getListRoleMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.ListRoleRequest, com.zhijiejiaoyu.glory_api.user.ListRoleResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListRole"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.ListRoleRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.ListRoleResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListRole"))
              .build();
        }
      }
    }
    return getListRoleMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GiveRolePermissionRequest,
      com.zhijiejiaoyu.glory_api.user.GiveRolePermissionResponse> getGiveRolePermissionMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GiveRolePermission",
      requestType = com.zhijiejiaoyu.glory_api.user.GiveRolePermissionRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.GiveRolePermissionResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GiveRolePermissionRequest,
      com.zhijiejiaoyu.glory_api.user.GiveRolePermissionResponse> getGiveRolePermissionMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GiveRolePermissionRequest, com.zhijiejiaoyu.glory_api.user.GiveRolePermissionResponse> getGiveRolePermissionMethod;
    if ((getGiveRolePermissionMethod = glory_apiGrpc.getGiveRolePermissionMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGiveRolePermissionMethod = glory_apiGrpc.getGiveRolePermissionMethod) == null) {
          glory_apiGrpc.getGiveRolePermissionMethod = getGiveRolePermissionMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.GiveRolePermissionRequest, com.zhijiejiaoyu.glory_api.user.GiveRolePermissionResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GiveRolePermission"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.GiveRolePermissionRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.GiveRolePermissionResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GiveRolePermission"))
              .build();
        }
      }
    }
    return getGiveRolePermissionMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.RemoveRolePermissionRequest,
      com.zhijiejiaoyu.glory_api.user.RemoveRolePermissionResponse> getRemoveRolePermissionMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "RemoveRolePermission",
      requestType = com.zhijiejiaoyu.glory_api.user.RemoveRolePermissionRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.RemoveRolePermissionResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.RemoveRolePermissionRequest,
      com.zhijiejiaoyu.glory_api.user.RemoveRolePermissionResponse> getRemoveRolePermissionMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.RemoveRolePermissionRequest, com.zhijiejiaoyu.glory_api.user.RemoveRolePermissionResponse> getRemoveRolePermissionMethod;
    if ((getRemoveRolePermissionMethod = glory_apiGrpc.getRemoveRolePermissionMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getRemoveRolePermissionMethod = glory_apiGrpc.getRemoveRolePermissionMethod) == null) {
          glory_apiGrpc.getRemoveRolePermissionMethod = getRemoveRolePermissionMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.RemoveRolePermissionRequest, com.zhijiejiaoyu.glory_api.user.RemoveRolePermissionResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "RemoveRolePermission"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.RemoveRolePermissionRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.RemoveRolePermissionResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("RemoveRolePermission"))
              .build();
        }
      }
    }
    return getRemoveRolePermissionMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.CreateRoleRequest,
      com.zhijiejiaoyu.glory_api.user.CreateRoleResponse> getCreateRoleMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateRole",
      requestType = com.zhijiejiaoyu.glory_api.user.CreateRoleRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.CreateRoleResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.CreateRoleRequest,
      com.zhijiejiaoyu.glory_api.user.CreateRoleResponse> getCreateRoleMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.CreateRoleRequest, com.zhijiejiaoyu.glory_api.user.CreateRoleResponse> getCreateRoleMethod;
    if ((getCreateRoleMethod = glory_apiGrpc.getCreateRoleMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateRoleMethod = glory_apiGrpc.getCreateRoleMethod) == null) {
          glory_apiGrpc.getCreateRoleMethod = getCreateRoleMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.CreateRoleRequest, com.zhijiejiaoyu.glory_api.user.CreateRoleResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateRole"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.CreateRoleRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.CreateRoleResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateRole"))
              .build();
        }
      }
    }
    return getCreateRoleMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.DeleteRoleRequest,
      com.zhijiejiaoyu.glory_api.user.DeleteRoleResponse> getDeleteRoleMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteRole",
      requestType = com.zhijiejiaoyu.glory_api.user.DeleteRoleRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.DeleteRoleResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.DeleteRoleRequest,
      com.zhijiejiaoyu.glory_api.user.DeleteRoleResponse> getDeleteRoleMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.DeleteRoleRequest, com.zhijiejiaoyu.glory_api.user.DeleteRoleResponse> getDeleteRoleMethod;
    if ((getDeleteRoleMethod = glory_apiGrpc.getDeleteRoleMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteRoleMethod = glory_apiGrpc.getDeleteRoleMethod) == null) {
          glory_apiGrpc.getDeleteRoleMethod = getDeleteRoleMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.DeleteRoleRequest, com.zhijiejiaoyu.glory_api.user.DeleteRoleResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteRole"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.DeleteRoleRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.DeleteRoleResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteRole"))
              .build();
        }
      }
    }
    return getDeleteRoleMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListResourceRequest,
      com.zhijiejiaoyu.glory_api.user.ListResourceResponse> getListResourceMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListResource",
      requestType = com.zhijiejiaoyu.glory_api.user.ListResourceRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.ListResourceResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListResourceRequest,
      com.zhijiejiaoyu.glory_api.user.ListResourceResponse> getListResourceMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.ListResourceRequest, com.zhijiejiaoyu.glory_api.user.ListResourceResponse> getListResourceMethod;
    if ((getListResourceMethod = glory_apiGrpc.getListResourceMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListResourceMethod = glory_apiGrpc.getListResourceMethod) == null) {
          glory_apiGrpc.getListResourceMethod = getListResourceMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.ListResourceRequest, com.zhijiejiaoyu.glory_api.user.ListResourceResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListResource"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.ListResourceRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.ListResourceResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListResource"))
              .build();
        }
      }
    }
    return getListResourceMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GetRoleTypeRequest,
      com.zhijiejiaoyu.glory_api.user.GetRoleTypeResponse> getGetRoleTypeMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetRoleType",
      requestType = com.zhijiejiaoyu.glory_api.user.GetRoleTypeRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.user.GetRoleTypeResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GetRoleTypeRequest,
      com.zhijiejiaoyu.glory_api.user.GetRoleTypeResponse> getGetRoleTypeMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.user.GetRoleTypeRequest, com.zhijiejiaoyu.glory_api.user.GetRoleTypeResponse> getGetRoleTypeMethod;
    if ((getGetRoleTypeMethod = glory_apiGrpc.getGetRoleTypeMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetRoleTypeMethod = glory_apiGrpc.getGetRoleTypeMethod) == null) {
          glory_apiGrpc.getGetRoleTypeMethod = getGetRoleTypeMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.user.GetRoleTypeRequest, com.zhijiejiaoyu.glory_api.user.GetRoleTypeResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetRoleType"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.GetRoleTypeRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.user.GetRoleTypeResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetRoleType"))
              .build();
        }
      }
    }
    return getGetRoleTypeMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.role.GetRoleTemplateRequest,
      com.zhijiejiaoyu.glory_api.role.GetRoleTemplateResponse> getGetRoleTemplateMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetRoleTemplate",
      requestType = com.zhijiejiaoyu.glory_api.role.GetRoleTemplateRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.role.GetRoleTemplateResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.role.GetRoleTemplateRequest,
      com.zhijiejiaoyu.glory_api.role.GetRoleTemplateResponse> getGetRoleTemplateMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.role.GetRoleTemplateRequest, com.zhijiejiaoyu.glory_api.role.GetRoleTemplateResponse> getGetRoleTemplateMethod;
    if ((getGetRoleTemplateMethod = glory_apiGrpc.getGetRoleTemplateMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetRoleTemplateMethod = glory_apiGrpc.getGetRoleTemplateMethod) == null) {
          glory_apiGrpc.getGetRoleTemplateMethod = getGetRoleTemplateMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.role.GetRoleTemplateRequest, com.zhijiejiaoyu.glory_api.role.GetRoleTemplateResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetRoleTemplate"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.role.GetRoleTemplateRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.role.GetRoleTemplateResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetRoleTemplate"))
              .build();
        }
      }
    }
    return getGetRoleTemplateMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.role.UpdateRoleTemplateRequest,
      com.zhijiejiaoyu.glory_api.role.UpdateRoleTemplateResponse> getUpdateRoleTemplateMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateRoleTemplate",
      requestType = com.zhijiejiaoyu.glory_api.role.UpdateRoleTemplateRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.role.UpdateRoleTemplateResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.role.UpdateRoleTemplateRequest,
      com.zhijiejiaoyu.glory_api.role.UpdateRoleTemplateResponse> getUpdateRoleTemplateMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.role.UpdateRoleTemplateRequest, com.zhijiejiaoyu.glory_api.role.UpdateRoleTemplateResponse> getUpdateRoleTemplateMethod;
    if ((getUpdateRoleTemplateMethod = glory_apiGrpc.getUpdateRoleTemplateMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateRoleTemplateMethod = glory_apiGrpc.getUpdateRoleTemplateMethod) == null) {
          glory_apiGrpc.getUpdateRoleTemplateMethod = getUpdateRoleTemplateMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.role.UpdateRoleTemplateRequest, com.zhijiejiaoyu.glory_api.role.UpdateRoleTemplateResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateRoleTemplate"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.role.UpdateRoleTemplateRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.role.UpdateRoleTemplateResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateRoleTemplate"))
              .build();
        }
      }
    }
    return getUpdateRoleTemplateMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CreateShopRequest,
      com.zhijiejiaoyu.glory_api.shop.CreateShopResponse> getCreateShopMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateShop",
      requestType = com.zhijiejiaoyu.glory_api.shop.CreateShopRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.CreateShopResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CreateShopRequest,
      com.zhijiejiaoyu.glory_api.shop.CreateShopResponse> getCreateShopMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CreateShopRequest, com.zhijiejiaoyu.glory_api.shop.CreateShopResponse> getCreateShopMethod;
    if ((getCreateShopMethod = glory_apiGrpc.getCreateShopMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateShopMethod = glory_apiGrpc.getCreateShopMethod) == null) {
          glory_apiGrpc.getCreateShopMethod = getCreateShopMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.CreateShopRequest, com.zhijiejiaoyu.glory_api.shop.CreateShopResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateShop"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.CreateShopRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.CreateShopResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateShop"))
              .build();
        }
      }
    }
    return getCreateShopMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetShopRequest,
      com.zhijiejiaoyu.glory_api.shop.GetShopResponse> getGetShopMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetShop",
      requestType = com.zhijiejiaoyu.glory_api.shop.GetShopRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.GetShopResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetShopRequest,
      com.zhijiejiaoyu.glory_api.shop.GetShopResponse> getGetShopMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetShopRequest, com.zhijiejiaoyu.glory_api.shop.GetShopResponse> getGetShopMethod;
    if ((getGetShopMethod = glory_apiGrpc.getGetShopMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetShopMethod = glory_apiGrpc.getGetShopMethod) == null) {
          glory_apiGrpc.getGetShopMethod = getGetShopMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.GetShopRequest, com.zhijiejiaoyu.glory_api.shop.GetShopResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetShop"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetShopRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetShopResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetShop"))
              .build();
        }
      }
    }
    return getGetShopMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateShopRequest,
      com.zhijiejiaoyu.glory_api.shop.UpdateShopResponse> getUpdateShopMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateShop",
      requestType = com.zhijiejiaoyu.glory_api.shop.UpdateShopRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.UpdateShopResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateShopRequest,
      com.zhijiejiaoyu.glory_api.shop.UpdateShopResponse> getUpdateShopMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateShopRequest, com.zhijiejiaoyu.glory_api.shop.UpdateShopResponse> getUpdateShopMethod;
    if ((getUpdateShopMethod = glory_apiGrpc.getUpdateShopMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateShopMethod = glory_apiGrpc.getUpdateShopMethod) == null) {
          glory_apiGrpc.getUpdateShopMethod = getUpdateShopMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.UpdateShopRequest, com.zhijiejiaoyu.glory_api.shop.UpdateShopResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateShop"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.UpdateShopRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.UpdateShopResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateShop"))
              .build();
        }
      }
    }
    return getUpdateShopMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListShopRequest,
      com.zhijiejiaoyu.glory_api.shop.ListShopResponse> getListShopMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListShop",
      requestType = com.zhijiejiaoyu.glory_api.shop.ListShopRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.ListShopResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListShopRequest,
      com.zhijiejiaoyu.glory_api.shop.ListShopResponse> getListShopMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListShopRequest, com.zhijiejiaoyu.glory_api.shop.ListShopResponse> getListShopMethod;
    if ((getListShopMethod = glory_apiGrpc.getListShopMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListShopMethod = glory_apiGrpc.getListShopMethod) == null) {
          glory_apiGrpc.getListShopMethod = getListShopMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.ListShopRequest, com.zhijiejiaoyu.glory_api.shop.ListShopResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListShop"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListShopRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListShopResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListShop"))
              .build();
        }
      }
    }
    return getListShopMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteShopRequest,
      com.zhijiejiaoyu.glory_api.shop.DeleteShopResponse> getDeleteShopMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteShop",
      requestType = com.zhijiejiaoyu.glory_api.shop.DeleteShopRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.DeleteShopResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteShopRequest,
      com.zhijiejiaoyu.glory_api.shop.DeleteShopResponse> getDeleteShopMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteShopRequest, com.zhijiejiaoyu.glory_api.shop.DeleteShopResponse> getDeleteShopMethod;
    if ((getDeleteShopMethod = glory_apiGrpc.getDeleteShopMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteShopMethod = glory_apiGrpc.getDeleteShopMethod) == null) {
          glory_apiGrpc.getDeleteShopMethod = getDeleteShopMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.DeleteShopRequest, com.zhijiejiaoyu.glory_api.shop.DeleteShopResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteShop"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DeleteShopRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DeleteShopResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteShop"))
              .build();
        }
      }
    }
    return getDeleteShopMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListOperationMetricsRequest,
      com.zhijiejiaoyu.glory_api.shop.ListOperationMetricsResponse> getListOperationMetricsMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListOperationMetrics",
      requestType = com.zhijiejiaoyu.glory_api.shop.ListOperationMetricsRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.ListOperationMetricsResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListOperationMetricsRequest,
      com.zhijiejiaoyu.glory_api.shop.ListOperationMetricsResponse> getListOperationMetricsMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListOperationMetricsRequest, com.zhijiejiaoyu.glory_api.shop.ListOperationMetricsResponse> getListOperationMetricsMethod;
    if ((getListOperationMetricsMethod = glory_apiGrpc.getListOperationMetricsMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListOperationMetricsMethod = glory_apiGrpc.getListOperationMetricsMethod) == null) {
          glory_apiGrpc.getListOperationMetricsMethod = getListOperationMetricsMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.ListOperationMetricsRequest, com.zhijiejiaoyu.glory_api.shop.ListOperationMetricsResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListOperationMetrics"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListOperationMetricsRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListOperationMetricsResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListOperationMetrics"))
              .build();
        }
      }
    }
    return getListOperationMetricsMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetShopQrcodeRequest,
      com.zhijiejiaoyu.glory_api.shop.GetShopQrcodeResponse> getGetShopQrcodeMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetShopQrcode",
      requestType = com.zhijiejiaoyu.glory_api.shop.GetShopQrcodeRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.GetShopQrcodeResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetShopQrcodeRequest,
      com.zhijiejiaoyu.glory_api.shop.GetShopQrcodeResponse> getGetShopQrcodeMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetShopQrcodeRequest, com.zhijiejiaoyu.glory_api.shop.GetShopQrcodeResponse> getGetShopQrcodeMethod;
    if ((getGetShopQrcodeMethod = glory_apiGrpc.getGetShopQrcodeMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetShopQrcodeMethod = glory_apiGrpc.getGetShopQrcodeMethod) == null) {
          glory_apiGrpc.getGetShopQrcodeMethod = getGetShopQrcodeMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.GetShopQrcodeRequest, com.zhijiejiaoyu.glory_api.shop.GetShopQrcodeResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetShopQrcode"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetShopQrcodeRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetShopQrcodeResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetShopQrcode"))
              .build();
        }
      }
    }
    return getGetShopQrcodeMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateShopManagerRequest,
      com.zhijiejiaoyu.glory_api.shop.UpdateShopManagerResponse> getUpdateShopManagerMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateShopManager",
      requestType = com.zhijiejiaoyu.glory_api.shop.UpdateShopManagerRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.UpdateShopManagerResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateShopManagerRequest,
      com.zhijiejiaoyu.glory_api.shop.UpdateShopManagerResponse> getUpdateShopManagerMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateShopManagerRequest, com.zhijiejiaoyu.glory_api.shop.UpdateShopManagerResponse> getUpdateShopManagerMethod;
    if ((getUpdateShopManagerMethod = glory_apiGrpc.getUpdateShopManagerMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateShopManagerMethod = glory_apiGrpc.getUpdateShopManagerMethod) == null) {
          glory_apiGrpc.getUpdateShopManagerMethod = getUpdateShopManagerMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.UpdateShopManagerRequest, com.zhijiejiaoyu.glory_api.shop.UpdateShopManagerResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateShopManager"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.UpdateShopManagerRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.UpdateShopManagerResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateShopManager"))
              .build();
        }
      }
    }
    return getUpdateShopManagerMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetShopBusinessDataRequest,
      com.zhijiejiaoyu.glory_api.shop.GetShopBusinessDataResponse> getGetShopBusinessDataMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetShopBusinessData",
      requestType = com.zhijiejiaoyu.glory_api.shop.GetShopBusinessDataRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.GetShopBusinessDataResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetShopBusinessDataRequest,
      com.zhijiejiaoyu.glory_api.shop.GetShopBusinessDataResponse> getGetShopBusinessDataMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetShopBusinessDataRequest, com.zhijiejiaoyu.glory_api.shop.GetShopBusinessDataResponse> getGetShopBusinessDataMethod;
    if ((getGetShopBusinessDataMethod = glory_apiGrpc.getGetShopBusinessDataMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetShopBusinessDataMethod = glory_apiGrpc.getGetShopBusinessDataMethod) == null) {
          glory_apiGrpc.getGetShopBusinessDataMethod = getGetShopBusinessDataMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.GetShopBusinessDataRequest, com.zhijiejiaoyu.glory_api.shop.GetShopBusinessDataResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetShopBusinessData"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetShopBusinessDataRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetShopBusinessDataResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetShopBusinessData"))
              .build();
        }
      }
    }
    return getGetShopBusinessDataMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.AddShopAccessRequest,
      com.zhijiejiaoyu.glory_api.shop.AddShopAccessResponse> getAddShopAccessMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "AddShopAccess",
      requestType = com.zhijiejiaoyu.glory_api.shop.AddShopAccessRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.AddShopAccessResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.AddShopAccessRequest,
      com.zhijiejiaoyu.glory_api.shop.AddShopAccessResponse> getAddShopAccessMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.AddShopAccessRequest, com.zhijiejiaoyu.glory_api.shop.AddShopAccessResponse> getAddShopAccessMethod;
    if ((getAddShopAccessMethod = glory_apiGrpc.getAddShopAccessMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getAddShopAccessMethod = glory_apiGrpc.getAddShopAccessMethod) == null) {
          glory_apiGrpc.getAddShopAccessMethod = getAddShopAccessMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.AddShopAccessRequest, com.zhijiejiaoyu.glory_api.shop.AddShopAccessResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "AddShopAccess"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.AddShopAccessRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.AddShopAccessResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("AddShopAccess"))
              .build();
        }
      }
    }
    return getAddShopAccessMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.RemoveShopAccessRequest,
      com.zhijiejiaoyu.glory_api.shop.RemoveShopAccessResponse> getRemoveShopAccessMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "RemoveShopAccess",
      requestType = com.zhijiejiaoyu.glory_api.shop.RemoveShopAccessRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.RemoveShopAccessResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.RemoveShopAccessRequest,
      com.zhijiejiaoyu.glory_api.shop.RemoveShopAccessResponse> getRemoveShopAccessMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.RemoveShopAccessRequest, com.zhijiejiaoyu.glory_api.shop.RemoveShopAccessResponse> getRemoveShopAccessMethod;
    if ((getRemoveShopAccessMethod = glory_apiGrpc.getRemoveShopAccessMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getRemoveShopAccessMethod = glory_apiGrpc.getRemoveShopAccessMethod) == null) {
          glory_apiGrpc.getRemoveShopAccessMethod = getRemoveShopAccessMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.RemoveShopAccessRequest, com.zhijiejiaoyu.glory_api.shop.RemoveShopAccessResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "RemoveShopAccess"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.RemoveShopAccessRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.RemoveShopAccessResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("RemoveShopAccess"))
              .build();
        }
      }
    }
    return getRemoveShopAccessMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.VerifyFieldRequest,
      com.zhijiejiaoyu.glory_api.shop.VerifyFieldResponse> getVerifyFieldMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "VerifyField",
      requestType = com.zhijiejiaoyu.glory_api.shop.VerifyFieldRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.VerifyFieldResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.VerifyFieldRequest,
      com.zhijiejiaoyu.glory_api.shop.VerifyFieldResponse> getVerifyFieldMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.VerifyFieldRequest, com.zhijiejiaoyu.glory_api.shop.VerifyFieldResponse> getVerifyFieldMethod;
    if ((getVerifyFieldMethod = glory_apiGrpc.getVerifyFieldMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getVerifyFieldMethod = glory_apiGrpc.getVerifyFieldMethod) == null) {
          glory_apiGrpc.getVerifyFieldMethod = getVerifyFieldMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.VerifyFieldRequest, com.zhijiejiaoyu.glory_api.shop.VerifyFieldResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "VerifyField"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.VerifyFieldRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.VerifyFieldResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("VerifyField"))
              .build();
        }
      }
    }
    return getVerifyFieldMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListShopAccessRequest,
      com.zhijiejiaoyu.glory_api.shop.ListShopAccessResponse> getListShopAccessMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListShopAccess",
      requestType = com.zhijiejiaoyu.glory_api.shop.ListShopAccessRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.ListShopAccessResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListShopAccessRequest,
      com.zhijiejiaoyu.glory_api.shop.ListShopAccessResponse> getListShopAccessMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListShopAccessRequest, com.zhijiejiaoyu.glory_api.shop.ListShopAccessResponse> getListShopAccessMethod;
    if ((getListShopAccessMethod = glory_apiGrpc.getListShopAccessMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListShopAccessMethod = glory_apiGrpc.getListShopAccessMethod) == null) {
          glory_apiGrpc.getListShopAccessMethod = getListShopAccessMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.ListShopAccessRequest, com.zhijiejiaoyu.glory_api.shop.ListShopAccessResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListShopAccess"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListShopAccessRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListShopAccessResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListShopAccess"))
              .build();
        }
      }
    }
    return getListShopAccessMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.AddShopCategoryRequest,
      com.zhijiejiaoyu.glory_api.shop.AddShopCategoryResponse> getAddShopCategoryMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "AddShopCategory",
      requestType = com.zhijiejiaoyu.glory_api.shop.AddShopCategoryRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.AddShopCategoryResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.AddShopCategoryRequest,
      com.zhijiejiaoyu.glory_api.shop.AddShopCategoryResponse> getAddShopCategoryMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.AddShopCategoryRequest, com.zhijiejiaoyu.glory_api.shop.AddShopCategoryResponse> getAddShopCategoryMethod;
    if ((getAddShopCategoryMethod = glory_apiGrpc.getAddShopCategoryMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getAddShopCategoryMethod = glory_apiGrpc.getAddShopCategoryMethod) == null) {
          glory_apiGrpc.getAddShopCategoryMethod = getAddShopCategoryMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.AddShopCategoryRequest, com.zhijiejiaoyu.glory_api.shop.AddShopCategoryResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "AddShopCategory"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.AddShopCategoryRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.AddShopCategoryResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("AddShopCategory"))
              .build();
        }
      }
    }
    return getAddShopCategoryMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetShopCategoryRequest,
      com.zhijiejiaoyu.glory_api.shop.GetShopCategoryResponse> getGetShopCategoryMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetShopCategory",
      requestType = com.zhijiejiaoyu.glory_api.shop.GetShopCategoryRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.GetShopCategoryResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetShopCategoryRequest,
      com.zhijiejiaoyu.glory_api.shop.GetShopCategoryResponse> getGetShopCategoryMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetShopCategoryRequest, com.zhijiejiaoyu.glory_api.shop.GetShopCategoryResponse> getGetShopCategoryMethod;
    if ((getGetShopCategoryMethod = glory_apiGrpc.getGetShopCategoryMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetShopCategoryMethod = glory_apiGrpc.getGetShopCategoryMethod) == null) {
          glory_apiGrpc.getGetShopCategoryMethod = getGetShopCategoryMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.GetShopCategoryRequest, com.zhijiejiaoyu.glory_api.shop.GetShopCategoryResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetShopCategory"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetShopCategoryRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetShopCategoryResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetShopCategory"))
              .build();
        }
      }
    }
    return getGetShopCategoryMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.RemoveShopCategoryRequest,
      com.zhijiejiaoyu.glory_api.shop.RemoveShopCategoryResponse> getRemoveShopCategoryMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "RemoveShopCategory",
      requestType = com.zhijiejiaoyu.glory_api.shop.RemoveShopCategoryRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.RemoveShopCategoryResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.RemoveShopCategoryRequest,
      com.zhijiejiaoyu.glory_api.shop.RemoveShopCategoryResponse> getRemoveShopCategoryMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.RemoveShopCategoryRequest, com.zhijiejiaoyu.glory_api.shop.RemoveShopCategoryResponse> getRemoveShopCategoryMethod;
    if ((getRemoveShopCategoryMethod = glory_apiGrpc.getRemoveShopCategoryMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getRemoveShopCategoryMethod = glory_apiGrpc.getRemoveShopCategoryMethod) == null) {
          glory_apiGrpc.getRemoveShopCategoryMethod = getRemoveShopCategoryMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.RemoveShopCategoryRequest, com.zhijiejiaoyu.glory_api.shop.RemoveShopCategoryResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "RemoveShopCategory"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.RemoveShopCategoryRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.RemoveShopCategoryResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("RemoveShopCategory"))
              .build();
        }
      }
    }
    return getRemoveShopCategoryMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CreateTemplateRequest,
      com.zhijiejiaoyu.glory_api.shop.CreateTemplateResponse> getAddFreightTemplateMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "AddFreightTemplate",
      requestType = com.zhijiejiaoyu.glory_api.shop.CreateTemplateRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.CreateTemplateResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CreateTemplateRequest,
      com.zhijiejiaoyu.glory_api.shop.CreateTemplateResponse> getAddFreightTemplateMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CreateTemplateRequest, com.zhijiejiaoyu.glory_api.shop.CreateTemplateResponse> getAddFreightTemplateMethod;
    if ((getAddFreightTemplateMethod = glory_apiGrpc.getAddFreightTemplateMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getAddFreightTemplateMethod = glory_apiGrpc.getAddFreightTemplateMethod) == null) {
          glory_apiGrpc.getAddFreightTemplateMethod = getAddFreightTemplateMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.CreateTemplateRequest, com.zhijiejiaoyu.glory_api.shop.CreateTemplateResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "AddFreightTemplate"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.CreateTemplateRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.CreateTemplateResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("AddFreightTemplate"))
              .build();
        }
      }
    }
    return getAddFreightTemplateMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetTemplateRequest,
      com.zhijiejiaoyu.glory_api.shop.GetTemplateResponse> getGetFreightTemplateMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetFreightTemplate",
      requestType = com.zhijiejiaoyu.glory_api.shop.GetTemplateRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.GetTemplateResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetTemplateRequest,
      com.zhijiejiaoyu.glory_api.shop.GetTemplateResponse> getGetFreightTemplateMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetTemplateRequest, com.zhijiejiaoyu.glory_api.shop.GetTemplateResponse> getGetFreightTemplateMethod;
    if ((getGetFreightTemplateMethod = glory_apiGrpc.getGetFreightTemplateMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetFreightTemplateMethod = glory_apiGrpc.getGetFreightTemplateMethod) == null) {
          glory_apiGrpc.getGetFreightTemplateMethod = getGetFreightTemplateMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.GetTemplateRequest, com.zhijiejiaoyu.glory_api.shop.GetTemplateResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetFreightTemplate"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetTemplateRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetTemplateResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetFreightTemplate"))
              .build();
        }
      }
    }
    return getGetFreightTemplateMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateTemplateRequest,
      com.zhijiejiaoyu.glory_api.shop.UpdateTemplateResponse> getUpdateFreightTemplateMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateFreightTemplate",
      requestType = com.zhijiejiaoyu.glory_api.shop.UpdateTemplateRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.UpdateTemplateResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateTemplateRequest,
      com.zhijiejiaoyu.glory_api.shop.UpdateTemplateResponse> getUpdateFreightTemplateMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateTemplateRequest, com.zhijiejiaoyu.glory_api.shop.UpdateTemplateResponse> getUpdateFreightTemplateMethod;
    if ((getUpdateFreightTemplateMethod = glory_apiGrpc.getUpdateFreightTemplateMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateFreightTemplateMethod = glory_apiGrpc.getUpdateFreightTemplateMethod) == null) {
          glory_apiGrpc.getUpdateFreightTemplateMethod = getUpdateFreightTemplateMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.UpdateTemplateRequest, com.zhijiejiaoyu.glory_api.shop.UpdateTemplateResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateFreightTemplate"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.UpdateTemplateRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.UpdateTemplateResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateFreightTemplate"))
              .build();
        }
      }
    }
    return getUpdateFreightTemplateMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteTemplateRequest,
      com.zhijiejiaoyu.glory_api.shop.DeleteTemplateResponse> getDeleteFreightTemplateMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteFreightTemplate",
      requestType = com.zhijiejiaoyu.glory_api.shop.DeleteTemplateRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.DeleteTemplateResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteTemplateRequest,
      com.zhijiejiaoyu.glory_api.shop.DeleteTemplateResponse> getDeleteFreightTemplateMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteTemplateRequest, com.zhijiejiaoyu.glory_api.shop.DeleteTemplateResponse> getDeleteFreightTemplateMethod;
    if ((getDeleteFreightTemplateMethod = glory_apiGrpc.getDeleteFreightTemplateMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteFreightTemplateMethod = glory_apiGrpc.getDeleteFreightTemplateMethod) == null) {
          glory_apiGrpc.getDeleteFreightTemplateMethod = getDeleteFreightTemplateMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.DeleteTemplateRequest, com.zhijiejiaoyu.glory_api.shop.DeleteTemplateResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteFreightTemplate"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DeleteTemplateRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DeleteTemplateResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteFreightTemplate"))
              .build();
        }
      }
    }
    return getDeleteFreightTemplateMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListTemplateRequest,
      com.zhijiejiaoyu.glory_api.shop.ListTemplateResponse> getListFreightTemplateMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListFreightTemplate",
      requestType = com.zhijiejiaoyu.glory_api.shop.ListTemplateRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.ListTemplateResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListTemplateRequest,
      com.zhijiejiaoyu.glory_api.shop.ListTemplateResponse> getListFreightTemplateMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListTemplateRequest, com.zhijiejiaoyu.glory_api.shop.ListTemplateResponse> getListFreightTemplateMethod;
    if ((getListFreightTemplateMethod = glory_apiGrpc.getListFreightTemplateMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListFreightTemplateMethod = glory_apiGrpc.getListFreightTemplateMethod) == null) {
          glory_apiGrpc.getListFreightTemplateMethod = getListFreightTemplateMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.ListTemplateRequest, com.zhijiejiaoyu.glory_api.shop.ListTemplateResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListFreightTemplate"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListTemplateRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListTemplateResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListFreightTemplate"))
              .build();
        }
      }
    }
    return getListFreightTemplateMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListShopQualificationRequest,
      com.zhijiejiaoyu.glory_api.shop.ListShopQualificationResponse> getListQualificationMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListQualification",
      requestType = com.zhijiejiaoyu.glory_api.shop.ListShopQualificationRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.ListShopQualificationResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListShopQualificationRequest,
      com.zhijiejiaoyu.glory_api.shop.ListShopQualificationResponse> getListQualificationMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListShopQualificationRequest, com.zhijiejiaoyu.glory_api.shop.ListShopQualificationResponse> getListQualificationMethod;
    if ((getListQualificationMethod = glory_apiGrpc.getListQualificationMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListQualificationMethod = glory_apiGrpc.getListQualificationMethod) == null) {
          glory_apiGrpc.getListQualificationMethod = getListQualificationMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.ListShopQualificationRequest, com.zhijiejiaoyu.glory_api.shop.ListShopQualificationResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListQualification"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListShopQualificationRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListShopQualificationResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListQualification"))
              .build();
        }
      }
    }
    return getListQualificationMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.mall.MallIndexRequest,
      com.zhijiejiaoyu.glory_api.mall.MallIndexResponse> getGetMallIndexMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetMallIndex",
      requestType = com.zhijiejiaoyu.glory_api.mall.MallIndexRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.mall.MallIndexResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.mall.MallIndexRequest,
      com.zhijiejiaoyu.glory_api.mall.MallIndexResponse> getGetMallIndexMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.mall.MallIndexRequest, com.zhijiejiaoyu.glory_api.mall.MallIndexResponse> getGetMallIndexMethod;
    if ((getGetMallIndexMethod = glory_apiGrpc.getGetMallIndexMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetMallIndexMethod = glory_apiGrpc.getGetMallIndexMethod) == null) {
          glory_apiGrpc.getGetMallIndexMethod = getGetMallIndexMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.mall.MallIndexRequest, com.zhijiejiaoyu.glory_api.mall.MallIndexResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetMallIndex"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.mall.MallIndexRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.mall.MallIndexResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetMallIndex"))
              .build();
        }
      }
    }
    return getGetMallIndexMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CreateCategoryRequest,
      com.zhijiejiaoyu.glory_api.shop.CreateCategoryResponse> getCreateCategoryMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateCategory",
      requestType = com.zhijiejiaoyu.glory_api.shop.CreateCategoryRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.CreateCategoryResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CreateCategoryRequest,
      com.zhijiejiaoyu.glory_api.shop.CreateCategoryResponse> getCreateCategoryMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CreateCategoryRequest, com.zhijiejiaoyu.glory_api.shop.CreateCategoryResponse> getCreateCategoryMethod;
    if ((getCreateCategoryMethod = glory_apiGrpc.getCreateCategoryMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateCategoryMethod = glory_apiGrpc.getCreateCategoryMethod) == null) {
          glory_apiGrpc.getCreateCategoryMethod = getCreateCategoryMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.CreateCategoryRequest, com.zhijiejiaoyu.glory_api.shop.CreateCategoryResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateCategory"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.CreateCategoryRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.CreateCategoryResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateCategory"))
              .build();
        }
      }
    }
    return getCreateCategoryMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetCategoryRequest,
      com.zhijiejiaoyu.glory_api.shop.GetCategoryResponse> getGetCategoryMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetCategory",
      requestType = com.zhijiejiaoyu.glory_api.shop.GetCategoryRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.GetCategoryResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetCategoryRequest,
      com.zhijiejiaoyu.glory_api.shop.GetCategoryResponse> getGetCategoryMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetCategoryRequest, com.zhijiejiaoyu.glory_api.shop.GetCategoryResponse> getGetCategoryMethod;
    if ((getGetCategoryMethod = glory_apiGrpc.getGetCategoryMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetCategoryMethod = glory_apiGrpc.getGetCategoryMethod) == null) {
          glory_apiGrpc.getGetCategoryMethod = getGetCategoryMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.GetCategoryRequest, com.zhijiejiaoyu.glory_api.shop.GetCategoryResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetCategory"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetCategoryRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetCategoryResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetCategory"))
              .build();
        }
      }
    }
    return getGetCategoryMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateCategoryRequest,
      com.zhijiejiaoyu.glory_api.shop.UpdateCategoryResponse> getUpdateCategoryMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateCategory",
      requestType = com.zhijiejiaoyu.glory_api.shop.UpdateCategoryRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.UpdateCategoryResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateCategoryRequest,
      com.zhijiejiaoyu.glory_api.shop.UpdateCategoryResponse> getUpdateCategoryMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateCategoryRequest, com.zhijiejiaoyu.glory_api.shop.UpdateCategoryResponse> getUpdateCategoryMethod;
    if ((getUpdateCategoryMethod = glory_apiGrpc.getUpdateCategoryMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateCategoryMethod = glory_apiGrpc.getUpdateCategoryMethod) == null) {
          glory_apiGrpc.getUpdateCategoryMethod = getUpdateCategoryMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.UpdateCategoryRequest, com.zhijiejiaoyu.glory_api.shop.UpdateCategoryResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateCategory"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.UpdateCategoryRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.UpdateCategoryResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateCategory"))
              .build();
        }
      }
    }
    return getUpdateCategoryMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListCategoryRequest,
      com.zhijiejiaoyu.glory_api.shop.ListCategoryResponse> getListCategoryMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListCategory",
      requestType = com.zhijiejiaoyu.glory_api.shop.ListCategoryRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.ListCategoryResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListCategoryRequest,
      com.zhijiejiaoyu.glory_api.shop.ListCategoryResponse> getListCategoryMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListCategoryRequest, com.zhijiejiaoyu.glory_api.shop.ListCategoryResponse> getListCategoryMethod;
    if ((getListCategoryMethod = glory_apiGrpc.getListCategoryMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListCategoryMethod = glory_apiGrpc.getListCategoryMethod) == null) {
          glory_apiGrpc.getListCategoryMethod = getListCategoryMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.ListCategoryRequest, com.zhijiejiaoyu.glory_api.shop.ListCategoryResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListCategory"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListCategoryRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListCategoryResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListCategory"))
              .build();
        }
      }
    }
    return getListCategoryMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteCategoryRequest,
      com.zhijiejiaoyu.glory_api.shop.DeleteCategoryResponse> getDeleteCategoryMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteCategory",
      requestType = com.zhijiejiaoyu.glory_api.shop.DeleteCategoryRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.DeleteCategoryResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteCategoryRequest,
      com.zhijiejiaoyu.glory_api.shop.DeleteCategoryResponse> getDeleteCategoryMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteCategoryRequest, com.zhijiejiaoyu.glory_api.shop.DeleteCategoryResponse> getDeleteCategoryMethod;
    if ((getDeleteCategoryMethod = glory_apiGrpc.getDeleteCategoryMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteCategoryMethod = glory_apiGrpc.getDeleteCategoryMethod) == null) {
          glory_apiGrpc.getDeleteCategoryMethod = getDeleteCategoryMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.DeleteCategoryRequest, com.zhijiejiaoyu.glory_api.shop.DeleteCategoryResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteCategory"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DeleteCategoryRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DeleteCategoryResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteCategory"))
              .build();
        }
      }
    }
    return getDeleteCategoryMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListCategoryQualificationRequest,
      com.zhijiejiaoyu.glory_api.shop.ListCategoryQualificationResponse> getListCategoryQualificationMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListCategoryQualification",
      requestType = com.zhijiejiaoyu.glory_api.shop.ListCategoryQualificationRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.ListCategoryQualificationResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListCategoryQualificationRequest,
      com.zhijiejiaoyu.glory_api.shop.ListCategoryQualificationResponse> getListCategoryQualificationMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListCategoryQualificationRequest, com.zhijiejiaoyu.glory_api.shop.ListCategoryQualificationResponse> getListCategoryQualificationMethod;
    if ((getListCategoryQualificationMethod = glory_apiGrpc.getListCategoryQualificationMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListCategoryQualificationMethod = glory_apiGrpc.getListCategoryQualificationMethod) == null) {
          glory_apiGrpc.getListCategoryQualificationMethod = getListCategoryQualificationMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.ListCategoryQualificationRequest, com.zhijiejiaoyu.glory_api.shop.ListCategoryQualificationResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListCategoryQualification"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListCategoryQualificationRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListCategoryQualificationResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListCategoryQualification"))
              .build();
        }
      }
    }
    return getListCategoryQualificationMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CreateProductRequest,
      com.zhijiejiaoyu.glory_api.shop.CreateProductResponse> getCreateProductMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateProduct",
      requestType = com.zhijiejiaoyu.glory_api.shop.CreateProductRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.CreateProductResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CreateProductRequest,
      com.zhijiejiaoyu.glory_api.shop.CreateProductResponse> getCreateProductMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CreateProductRequest, com.zhijiejiaoyu.glory_api.shop.CreateProductResponse> getCreateProductMethod;
    if ((getCreateProductMethod = glory_apiGrpc.getCreateProductMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateProductMethod = glory_apiGrpc.getCreateProductMethod) == null) {
          glory_apiGrpc.getCreateProductMethod = getCreateProductMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.CreateProductRequest, com.zhijiejiaoyu.glory_api.shop.CreateProductResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateProduct"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.CreateProductRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.CreateProductResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateProduct"))
              .build();
        }
      }
    }
    return getCreateProductMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetProductRequest,
      com.zhijiejiaoyu.glory_api.shop.GetProductResponse> getGetProductMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetProduct",
      requestType = com.zhijiejiaoyu.glory_api.shop.GetProductRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.GetProductResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetProductRequest,
      com.zhijiejiaoyu.glory_api.shop.GetProductResponse> getGetProductMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetProductRequest, com.zhijiejiaoyu.glory_api.shop.GetProductResponse> getGetProductMethod;
    if ((getGetProductMethod = glory_apiGrpc.getGetProductMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetProductMethod = glory_apiGrpc.getGetProductMethod) == null) {
          glory_apiGrpc.getGetProductMethod = getGetProductMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.GetProductRequest, com.zhijiejiaoyu.glory_api.shop.GetProductResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetProduct"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetProductRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetProductResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetProduct"))
              .build();
        }
      }
    }
    return getGetProductMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateProductRequest,
      com.zhijiejiaoyu.glory_api.shop.UpdateProductResponse> getUpdateProductMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateProduct",
      requestType = com.zhijiejiaoyu.glory_api.shop.UpdateProductRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.UpdateProductResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateProductRequest,
      com.zhijiejiaoyu.glory_api.shop.UpdateProductResponse> getUpdateProductMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateProductRequest, com.zhijiejiaoyu.glory_api.shop.UpdateProductResponse> getUpdateProductMethod;
    if ((getUpdateProductMethod = glory_apiGrpc.getUpdateProductMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateProductMethod = glory_apiGrpc.getUpdateProductMethod) == null) {
          glory_apiGrpc.getUpdateProductMethod = getUpdateProductMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.UpdateProductRequest, com.zhijiejiaoyu.glory_api.shop.UpdateProductResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateProduct"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.UpdateProductRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.UpdateProductResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateProduct"))
              .build();
        }
      }
    }
    return getUpdateProductMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListProductRequest,
      com.zhijiejiaoyu.glory_api.shop.ListProductResponse> getListProductMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListProduct",
      requestType = com.zhijiejiaoyu.glory_api.shop.ListProductRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.ListProductResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListProductRequest,
      com.zhijiejiaoyu.glory_api.shop.ListProductResponse> getListProductMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListProductRequest, com.zhijiejiaoyu.glory_api.shop.ListProductResponse> getListProductMethod;
    if ((getListProductMethod = glory_apiGrpc.getListProductMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListProductMethod = glory_apiGrpc.getListProductMethod) == null) {
          glory_apiGrpc.getListProductMethod = getListProductMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.ListProductRequest, com.zhijiejiaoyu.glory_api.shop.ListProductResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListProduct"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListProductRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListProductResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListProduct"))
              .build();
        }
      }
    }
    return getListProductMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListProductByProductIDsRequest,
      com.zhijiejiaoyu.glory_api.shop.ListProductByProductIDsResponse> getListProductByIDsMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListProductByIDs",
      requestType = com.zhijiejiaoyu.glory_api.shop.ListProductByProductIDsRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.ListProductByProductIDsResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListProductByProductIDsRequest,
      com.zhijiejiaoyu.glory_api.shop.ListProductByProductIDsResponse> getListProductByIDsMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListProductByProductIDsRequest, com.zhijiejiaoyu.glory_api.shop.ListProductByProductIDsResponse> getListProductByIDsMethod;
    if ((getListProductByIDsMethod = glory_apiGrpc.getListProductByIDsMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListProductByIDsMethod = glory_apiGrpc.getListProductByIDsMethod) == null) {
          glory_apiGrpc.getListProductByIDsMethod = getListProductByIDsMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.ListProductByProductIDsRequest, com.zhijiejiaoyu.glory_api.shop.ListProductByProductIDsResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListProductByIDs"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListProductByProductIDsRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListProductByProductIDsResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListProductByIDs"))
              .build();
        }
      }
    }
    return getListProductByIDsMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteProductRequest,
      com.zhijiejiaoyu.glory_api.shop.DeleteProductResponse> getDeleteProductMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteProduct",
      requestType = com.zhijiejiaoyu.glory_api.shop.DeleteProductRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.DeleteProductResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteProductRequest,
      com.zhijiejiaoyu.glory_api.shop.DeleteProductResponse> getDeleteProductMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteProductRequest, com.zhijiejiaoyu.glory_api.shop.DeleteProductResponse> getDeleteProductMethod;
    if ((getDeleteProductMethod = glory_apiGrpc.getDeleteProductMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteProductMethod = glory_apiGrpc.getDeleteProductMethod) == null) {
          glory_apiGrpc.getDeleteProductMethod = getDeleteProductMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.DeleteProductRequest, com.zhijiejiaoyu.glory_api.shop.DeleteProductResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteProduct"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DeleteProductRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DeleteProductResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteProduct"))
              .build();
        }
      }
    }
    return getDeleteProductMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UploadMultiImageRequest,
      com.zhijiejiaoyu.glory_api.shop.UploadMultiImageResponse> getUploadMultiImageMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UploadMultiImage",
      requestType = com.zhijiejiaoyu.glory_api.shop.UploadMultiImageRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.UploadMultiImageResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UploadMultiImageRequest,
      com.zhijiejiaoyu.glory_api.shop.UploadMultiImageResponse> getUploadMultiImageMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UploadMultiImageRequest, com.zhijiejiaoyu.glory_api.shop.UploadMultiImageResponse> getUploadMultiImageMethod;
    if ((getUploadMultiImageMethod = glory_apiGrpc.getUploadMultiImageMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUploadMultiImageMethod = glory_apiGrpc.getUploadMultiImageMethod) == null) {
          glory_apiGrpc.getUploadMultiImageMethod = getUploadMultiImageMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.UploadMultiImageRequest, com.zhijiejiaoyu.glory_api.shop.UploadMultiImageResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UploadMultiImage"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.UploadMultiImageRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.UploadMultiImageResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UploadMultiImage"))
              .build();
        }
      }
    }
    return getUploadMultiImageMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteImageRequest,
      com.zhijiejiaoyu.glory_api.shop.DeleteImageResponse> getDeleteImageByIdMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteImageById",
      requestType = com.zhijiejiaoyu.glory_api.shop.DeleteImageRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.DeleteImageResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteImageRequest,
      com.zhijiejiaoyu.glory_api.shop.DeleteImageResponse> getDeleteImageByIdMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteImageRequest, com.zhijiejiaoyu.glory_api.shop.DeleteImageResponse> getDeleteImageByIdMethod;
    if ((getDeleteImageByIdMethod = glory_apiGrpc.getDeleteImageByIdMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteImageByIdMethod = glory_apiGrpc.getDeleteImageByIdMethod) == null) {
          glory_apiGrpc.getDeleteImageByIdMethod = getDeleteImageByIdMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.DeleteImageRequest, com.zhijiejiaoyu.glory_api.shop.DeleteImageResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteImageById"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DeleteImageRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DeleteImageResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteImageById"))
              .build();
        }
      }
    }
    return getDeleteImageByIdMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.BindAttributeRequest,
      com.zhijiejiaoyu.glory_api.shop.BindAttributeResponse> getBindAttributeMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "BindAttribute",
      requestType = com.zhijiejiaoyu.glory_api.shop.BindAttributeRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.BindAttributeResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.BindAttributeRequest,
      com.zhijiejiaoyu.glory_api.shop.BindAttributeResponse> getBindAttributeMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.BindAttributeRequest, com.zhijiejiaoyu.glory_api.shop.BindAttributeResponse> getBindAttributeMethod;
    if ((getBindAttributeMethod = glory_apiGrpc.getBindAttributeMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getBindAttributeMethod = glory_apiGrpc.getBindAttributeMethod) == null) {
          glory_apiGrpc.getBindAttributeMethod = getBindAttributeMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.BindAttributeRequest, com.zhijiejiaoyu.glory_api.shop.BindAttributeResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "BindAttribute"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.BindAttributeRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.BindAttributeResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("BindAttribute"))
              .build();
        }
      }
    }
    return getBindAttributeMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.PublishProductRequest,
      com.zhijiejiaoyu.glory_api.shop.PublishProductResponse> getPublishProductMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "PublishProduct",
      requestType = com.zhijiejiaoyu.glory_api.shop.PublishProductRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.PublishProductResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.PublishProductRequest,
      com.zhijiejiaoyu.glory_api.shop.PublishProductResponse> getPublishProductMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.PublishProductRequest, com.zhijiejiaoyu.glory_api.shop.PublishProductResponse> getPublishProductMethod;
    if ((getPublishProductMethod = glory_apiGrpc.getPublishProductMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getPublishProductMethod = glory_apiGrpc.getPublishProductMethod) == null) {
          glory_apiGrpc.getPublishProductMethod = getPublishProductMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.PublishProductRequest, com.zhijiejiaoyu.glory_api.shop.PublishProductResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "PublishProduct"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.PublishProductRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.PublishProductResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("PublishProduct"))
              .build();
        }
      }
    }
    return getPublishProductMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.OffSelfProductsRequest,
      com.zhijiejiaoyu.glory_api.shop.OffSelfProductsResponse> getOffShelfProductInBatchesMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "OffShelfProductInBatches",
      requestType = com.zhijiejiaoyu.glory_api.shop.OffSelfProductsRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.OffSelfProductsResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.OffSelfProductsRequest,
      com.zhijiejiaoyu.glory_api.shop.OffSelfProductsResponse> getOffShelfProductInBatchesMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.OffSelfProductsRequest, com.zhijiejiaoyu.glory_api.shop.OffSelfProductsResponse> getOffShelfProductInBatchesMethod;
    if ((getOffShelfProductInBatchesMethod = glory_apiGrpc.getOffShelfProductInBatchesMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getOffShelfProductInBatchesMethod = glory_apiGrpc.getOffShelfProductInBatchesMethod) == null) {
          glory_apiGrpc.getOffShelfProductInBatchesMethod = getOffShelfProductInBatchesMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.OffSelfProductsRequest, com.zhijiejiaoyu.glory_api.shop.OffSelfProductsResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "OffShelfProductInBatches"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.OffSelfProductsRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.OffSelfProductsResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("OffShelfProductInBatches"))
              .build();
        }
      }
    }
    return getOffShelfProductInBatchesMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteProductsRequest,
      com.zhijiejiaoyu.glory_api.shop.DeleteProductsResponse> getDeleteProductInBatchesMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteProductInBatches",
      requestType = com.zhijiejiaoyu.glory_api.shop.DeleteProductsRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.DeleteProductsResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteProductsRequest,
      com.zhijiejiaoyu.glory_api.shop.DeleteProductsResponse> getDeleteProductInBatchesMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteProductsRequest, com.zhijiejiaoyu.glory_api.shop.DeleteProductsResponse> getDeleteProductInBatchesMethod;
    if ((getDeleteProductInBatchesMethod = glory_apiGrpc.getDeleteProductInBatchesMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteProductInBatchesMethod = glory_apiGrpc.getDeleteProductInBatchesMethod) == null) {
          glory_apiGrpc.getDeleteProductInBatchesMethod = getDeleteProductInBatchesMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.DeleteProductsRequest, com.zhijiejiaoyu.glory_api.shop.DeleteProductsResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteProductInBatches"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DeleteProductsRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DeleteProductsResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteProductInBatches"))
              .build();
        }
      }
    }
    return getDeleteProductInBatchesMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ChangeProductStateRequest,
      com.zhijiejiaoyu.glory_api.shop.ChangeProductStateResponse> getChangeProductsStateMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ChangeProductsState",
      requestType = com.zhijiejiaoyu.glory_api.shop.ChangeProductStateRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.ChangeProductStateResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ChangeProductStateRequest,
      com.zhijiejiaoyu.glory_api.shop.ChangeProductStateResponse> getChangeProductsStateMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ChangeProductStateRequest, com.zhijiejiaoyu.glory_api.shop.ChangeProductStateResponse> getChangeProductsStateMethod;
    if ((getChangeProductsStateMethod = glory_apiGrpc.getChangeProductsStateMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getChangeProductsStateMethod = glory_apiGrpc.getChangeProductsStateMethod) == null) {
          glory_apiGrpc.getChangeProductsStateMethod = getChangeProductsStateMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.ChangeProductStateRequest, com.zhijiejiaoyu.glory_api.shop.ChangeProductStateResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ChangeProductsState"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ChangeProductStateRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ChangeProductStateResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ChangeProductsState"))
              .build();
        }
      }
    }
    return getChangeProductsStateMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.SaveImageInfoRequest,
      com.zhijiejiaoyu.glory_api.shop.SaveImageInfoResponse> getSaveProductImageInfoMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "SaveProductImageInfo",
      requestType = com.zhijiejiaoyu.glory_api.shop.SaveImageInfoRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.SaveImageInfoResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.SaveImageInfoRequest,
      com.zhijiejiaoyu.glory_api.shop.SaveImageInfoResponse> getSaveProductImageInfoMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.SaveImageInfoRequest, com.zhijiejiaoyu.glory_api.shop.SaveImageInfoResponse> getSaveProductImageInfoMethod;
    if ((getSaveProductImageInfoMethod = glory_apiGrpc.getSaveProductImageInfoMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getSaveProductImageInfoMethod = glory_apiGrpc.getSaveProductImageInfoMethod) == null) {
          glory_apiGrpc.getSaveProductImageInfoMethod = getSaveProductImageInfoMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.SaveImageInfoRequest, com.zhijiejiaoyu.glory_api.shop.SaveImageInfoResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "SaveProductImageInfo"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.SaveImageInfoRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.SaveImageInfoResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("SaveProductImageInfo"))
              .build();
        }
      }
    }
    return getSaveProductImageInfoMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CreateSkuRequest,
      com.zhijiejiaoyu.glory_api.shop.CreateSkuResponse> getCreateSkuMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateSku",
      requestType = com.zhijiejiaoyu.glory_api.shop.CreateSkuRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.CreateSkuResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CreateSkuRequest,
      com.zhijiejiaoyu.glory_api.shop.CreateSkuResponse> getCreateSkuMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CreateSkuRequest, com.zhijiejiaoyu.glory_api.shop.CreateSkuResponse> getCreateSkuMethod;
    if ((getCreateSkuMethod = glory_apiGrpc.getCreateSkuMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateSkuMethod = glory_apiGrpc.getCreateSkuMethod) == null) {
          glory_apiGrpc.getCreateSkuMethod = getCreateSkuMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.CreateSkuRequest, com.zhijiejiaoyu.glory_api.shop.CreateSkuResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateSku"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.CreateSkuRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.CreateSkuResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateSku"))
              .build();
        }
      }
    }
    return getCreateSkuMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetSkuRequest,
      com.zhijiejiaoyu.glory_api.shop.GetSkuResponse> getGetSkuMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetSku",
      requestType = com.zhijiejiaoyu.glory_api.shop.GetSkuRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.GetSkuResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetSkuRequest,
      com.zhijiejiaoyu.glory_api.shop.GetSkuResponse> getGetSkuMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetSkuRequest, com.zhijiejiaoyu.glory_api.shop.GetSkuResponse> getGetSkuMethod;
    if ((getGetSkuMethod = glory_apiGrpc.getGetSkuMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetSkuMethod = glory_apiGrpc.getGetSkuMethod) == null) {
          glory_apiGrpc.getGetSkuMethod = getGetSkuMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.GetSkuRequest, com.zhijiejiaoyu.glory_api.shop.GetSkuResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetSku"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetSkuRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetSkuResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetSku"))
              .build();
        }
      }
    }
    return getGetSkuMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateSkuRequest,
      com.zhijiejiaoyu.glory_api.shop.UpdateSkuResponse> getUpdateSkuMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateSku",
      requestType = com.zhijiejiaoyu.glory_api.shop.UpdateSkuRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.UpdateSkuResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateSkuRequest,
      com.zhijiejiaoyu.glory_api.shop.UpdateSkuResponse> getUpdateSkuMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateSkuRequest, com.zhijiejiaoyu.glory_api.shop.UpdateSkuResponse> getUpdateSkuMethod;
    if ((getUpdateSkuMethod = glory_apiGrpc.getUpdateSkuMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateSkuMethod = glory_apiGrpc.getUpdateSkuMethod) == null) {
          glory_apiGrpc.getUpdateSkuMethod = getUpdateSkuMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.UpdateSkuRequest, com.zhijiejiaoyu.glory_api.shop.UpdateSkuResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateSku"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.UpdateSkuRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.UpdateSkuResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateSku"))
              .build();
        }
      }
    }
    return getUpdateSkuMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListSkuRequest,
      com.zhijiejiaoyu.glory_api.shop.ListSkuResponse> getListSkuMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListSku",
      requestType = com.zhijiejiaoyu.glory_api.shop.ListSkuRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.ListSkuResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListSkuRequest,
      com.zhijiejiaoyu.glory_api.shop.ListSkuResponse> getListSkuMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListSkuRequest, com.zhijiejiaoyu.glory_api.shop.ListSkuResponse> getListSkuMethod;
    if ((getListSkuMethod = glory_apiGrpc.getListSkuMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListSkuMethod = glory_apiGrpc.getListSkuMethod) == null) {
          glory_apiGrpc.getListSkuMethod = getListSkuMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.ListSkuRequest, com.zhijiejiaoyu.glory_api.shop.ListSkuResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListSku"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListSkuRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListSkuResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListSku"))
              .build();
        }
      }
    }
    return getListSkuMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteSkuRequest,
      com.zhijiejiaoyu.glory_api.shop.DeleteSkuResponse> getDeleteSkuMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteSku",
      requestType = com.zhijiejiaoyu.glory_api.shop.DeleteSkuRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.DeleteSkuResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteSkuRequest,
      com.zhijiejiaoyu.glory_api.shop.DeleteSkuResponse> getDeleteSkuMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteSkuRequest, com.zhijiejiaoyu.glory_api.shop.DeleteSkuResponse> getDeleteSkuMethod;
    if ((getDeleteSkuMethod = glory_apiGrpc.getDeleteSkuMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteSkuMethod = glory_apiGrpc.getDeleteSkuMethod) == null) {
          glory_apiGrpc.getDeleteSkuMethod = getDeleteSkuMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.DeleteSkuRequest, com.zhijiejiaoyu.glory_api.shop.DeleteSkuResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteSku"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DeleteSkuRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DeleteSkuResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteSku"))
              .build();
        }
      }
    }
    return getDeleteSkuMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CreateAttributeRequest,
      com.zhijiejiaoyu.glory_api.shop.CreateAttributeResponse> getCreateAttributeMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateAttribute",
      requestType = com.zhijiejiaoyu.glory_api.shop.CreateAttributeRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.CreateAttributeResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CreateAttributeRequest,
      com.zhijiejiaoyu.glory_api.shop.CreateAttributeResponse> getCreateAttributeMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CreateAttributeRequest, com.zhijiejiaoyu.glory_api.shop.CreateAttributeResponse> getCreateAttributeMethod;
    if ((getCreateAttributeMethod = glory_apiGrpc.getCreateAttributeMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateAttributeMethod = glory_apiGrpc.getCreateAttributeMethod) == null) {
          glory_apiGrpc.getCreateAttributeMethod = getCreateAttributeMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.CreateAttributeRequest, com.zhijiejiaoyu.glory_api.shop.CreateAttributeResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateAttribute"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.CreateAttributeRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.CreateAttributeResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateAttribute"))
              .build();
        }
      }
    }
    return getCreateAttributeMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetAttributeRequest,
      com.zhijiejiaoyu.glory_api.shop.GetAttributeResponse> getGetAttributeMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetAttribute",
      requestType = com.zhijiejiaoyu.glory_api.shop.GetAttributeRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.GetAttributeResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetAttributeRequest,
      com.zhijiejiaoyu.glory_api.shop.GetAttributeResponse> getGetAttributeMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetAttributeRequest, com.zhijiejiaoyu.glory_api.shop.GetAttributeResponse> getGetAttributeMethod;
    if ((getGetAttributeMethod = glory_apiGrpc.getGetAttributeMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetAttributeMethod = glory_apiGrpc.getGetAttributeMethod) == null) {
          glory_apiGrpc.getGetAttributeMethod = getGetAttributeMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.GetAttributeRequest, com.zhijiejiaoyu.glory_api.shop.GetAttributeResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetAttribute"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetAttributeRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetAttributeResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetAttribute"))
              .build();
        }
      }
    }
    return getGetAttributeMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListAttributeRequest,
      com.zhijiejiaoyu.glory_api.shop.ListAttributeResponse> getListAttributeMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListAttribute",
      requestType = com.zhijiejiaoyu.glory_api.shop.ListAttributeRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.ListAttributeResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListAttributeRequest,
      com.zhijiejiaoyu.glory_api.shop.ListAttributeResponse> getListAttributeMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListAttributeRequest, com.zhijiejiaoyu.glory_api.shop.ListAttributeResponse> getListAttributeMethod;
    if ((getListAttributeMethod = glory_apiGrpc.getListAttributeMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListAttributeMethod = glory_apiGrpc.getListAttributeMethod) == null) {
          glory_apiGrpc.getListAttributeMethod = getListAttributeMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.ListAttributeRequest, com.zhijiejiaoyu.glory_api.shop.ListAttributeResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListAttribute"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListAttributeRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListAttributeResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListAttribute"))
              .build();
        }
      }
    }
    return getListAttributeMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteAttributeRequest,
      com.zhijiejiaoyu.glory_api.shop.DeleteAttributeResponse> getDeleteAttributeMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteAttribute",
      requestType = com.zhijiejiaoyu.glory_api.shop.DeleteAttributeRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.DeleteAttributeResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteAttributeRequest,
      com.zhijiejiaoyu.glory_api.shop.DeleteAttributeResponse> getDeleteAttributeMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteAttributeRequest, com.zhijiejiaoyu.glory_api.shop.DeleteAttributeResponse> getDeleteAttributeMethod;
    if ((getDeleteAttributeMethod = glory_apiGrpc.getDeleteAttributeMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteAttributeMethod = glory_apiGrpc.getDeleteAttributeMethod) == null) {
          glory_apiGrpc.getDeleteAttributeMethod = getDeleteAttributeMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.DeleteAttributeRequest, com.zhijiejiaoyu.glory_api.shop.DeleteAttributeResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteAttribute"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DeleteAttributeRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DeleteAttributeResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteAttribute"))
              .build();
        }
      }
    }
    return getDeleteAttributeMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.AddAttributeValueRequest,
      com.zhijiejiaoyu.glory_api.shop.AddAttributeValueResponse> getAddAttributeValueMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "AddAttributeValue",
      requestType = com.zhijiejiaoyu.glory_api.shop.AddAttributeValueRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.AddAttributeValueResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.AddAttributeValueRequest,
      com.zhijiejiaoyu.glory_api.shop.AddAttributeValueResponse> getAddAttributeValueMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.AddAttributeValueRequest, com.zhijiejiaoyu.glory_api.shop.AddAttributeValueResponse> getAddAttributeValueMethod;
    if ((getAddAttributeValueMethod = glory_apiGrpc.getAddAttributeValueMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getAddAttributeValueMethod = glory_apiGrpc.getAddAttributeValueMethod) == null) {
          glory_apiGrpc.getAddAttributeValueMethod = getAddAttributeValueMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.AddAttributeValueRequest, com.zhijiejiaoyu.glory_api.shop.AddAttributeValueResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "AddAttributeValue"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.AddAttributeValueRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.AddAttributeValueResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("AddAttributeValue"))
              .build();
        }
      }
    }
    return getAddAttributeValueMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteAttributeValueRequest,
      com.zhijiejiaoyu.glory_api.shop.DeleteAttributeValueResponse> getDeleteAttributeValueMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteAttributeValue",
      requestType = com.zhijiejiaoyu.glory_api.shop.DeleteAttributeValueRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.DeleteAttributeValueResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteAttributeValueRequest,
      com.zhijiejiaoyu.glory_api.shop.DeleteAttributeValueResponse> getDeleteAttributeValueMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteAttributeValueRequest, com.zhijiejiaoyu.glory_api.shop.DeleteAttributeValueResponse> getDeleteAttributeValueMethod;
    if ((getDeleteAttributeValueMethod = glory_apiGrpc.getDeleteAttributeValueMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteAttributeValueMethod = glory_apiGrpc.getDeleteAttributeValueMethod) == null) {
          glory_apiGrpc.getDeleteAttributeValueMethod = getDeleteAttributeValueMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.DeleteAttributeValueRequest, com.zhijiejiaoyu.glory_api.shop.DeleteAttributeValueResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteAttributeValue"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DeleteAttributeValueRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DeleteAttributeValueResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteAttributeValue"))
              .build();
        }
      }
    }
    return getDeleteAttributeValueMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CreateOrderRequest,
      com.zhijiejiaoyu.glory_api.shop.CreateOrderResponse> getCreateOrderMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateOrder",
      requestType = com.zhijiejiaoyu.glory_api.shop.CreateOrderRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.CreateOrderResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CreateOrderRequest,
      com.zhijiejiaoyu.glory_api.shop.CreateOrderResponse> getCreateOrderMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CreateOrderRequest, com.zhijiejiaoyu.glory_api.shop.CreateOrderResponse> getCreateOrderMethod;
    if ((getCreateOrderMethod = glory_apiGrpc.getCreateOrderMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateOrderMethod = glory_apiGrpc.getCreateOrderMethod) == null) {
          glory_apiGrpc.getCreateOrderMethod = getCreateOrderMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.CreateOrderRequest, com.zhijiejiaoyu.glory_api.shop.CreateOrderResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateOrder"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.CreateOrderRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.CreateOrderResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateOrder"))
              .build();
        }
      }
    }
    return getCreateOrderMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetOrderRequest,
      com.zhijiejiaoyu.glory_api.shop.GetOrderResponse> getGetOrderMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetOrder",
      requestType = com.zhijiejiaoyu.glory_api.shop.GetOrderRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.GetOrderResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetOrderRequest,
      com.zhijiejiaoyu.glory_api.shop.GetOrderResponse> getGetOrderMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetOrderRequest, com.zhijiejiaoyu.glory_api.shop.GetOrderResponse> getGetOrderMethod;
    if ((getGetOrderMethod = glory_apiGrpc.getGetOrderMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetOrderMethod = glory_apiGrpc.getGetOrderMethod) == null) {
          glory_apiGrpc.getGetOrderMethod = getGetOrderMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.GetOrderRequest, com.zhijiejiaoyu.glory_api.shop.GetOrderResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetOrder"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetOrderRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetOrderResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetOrder"))
              .build();
        }
      }
    }
    return getGetOrderMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateOrderRequest,
      com.zhijiejiaoyu.glory_api.shop.UpdateOrderResponse> getUpdateOrderMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateOrder",
      requestType = com.zhijiejiaoyu.glory_api.shop.UpdateOrderRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.UpdateOrderResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateOrderRequest,
      com.zhijiejiaoyu.glory_api.shop.UpdateOrderResponse> getUpdateOrderMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateOrderRequest, com.zhijiejiaoyu.glory_api.shop.UpdateOrderResponse> getUpdateOrderMethod;
    if ((getUpdateOrderMethod = glory_apiGrpc.getUpdateOrderMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateOrderMethod = glory_apiGrpc.getUpdateOrderMethod) == null) {
          glory_apiGrpc.getUpdateOrderMethod = getUpdateOrderMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.UpdateOrderRequest, com.zhijiejiaoyu.glory_api.shop.UpdateOrderResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateOrder"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.UpdateOrderRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.UpdateOrderResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateOrder"))
              .build();
        }
      }
    }
    return getUpdateOrderMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListOrderRequest,
      com.zhijiejiaoyu.glory_api.shop.ListOrderResponse> getListOrderMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListOrder",
      requestType = com.zhijiejiaoyu.glory_api.shop.ListOrderRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.ListOrderResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListOrderRequest,
      com.zhijiejiaoyu.glory_api.shop.ListOrderResponse> getListOrderMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListOrderRequest, com.zhijiejiaoyu.glory_api.shop.ListOrderResponse> getListOrderMethod;
    if ((getListOrderMethod = glory_apiGrpc.getListOrderMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListOrderMethod = glory_apiGrpc.getListOrderMethod) == null) {
          glory_apiGrpc.getListOrderMethod = getListOrderMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.ListOrderRequest, com.zhijiejiaoyu.glory_api.shop.ListOrderResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListOrder"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListOrderRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListOrderResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListOrder"))
              .build();
        }
      }
    }
    return getListOrderMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteOrderRequest,
      com.zhijiejiaoyu.glory_api.shop.DeleteOrderResponse> getDeleteOrderMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteOrder",
      requestType = com.zhijiejiaoyu.glory_api.shop.DeleteOrderRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.DeleteOrderResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteOrderRequest,
      com.zhijiejiaoyu.glory_api.shop.DeleteOrderResponse> getDeleteOrderMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteOrderRequest, com.zhijiejiaoyu.glory_api.shop.DeleteOrderResponse> getDeleteOrderMethod;
    if ((getDeleteOrderMethod = glory_apiGrpc.getDeleteOrderMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteOrderMethod = glory_apiGrpc.getDeleteOrderMethod) == null) {
          glory_apiGrpc.getDeleteOrderMethod = getDeleteOrderMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.DeleteOrderRequest, com.zhijiejiaoyu.glory_api.shop.DeleteOrderResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteOrder"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DeleteOrderRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DeleteOrderResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteOrder"))
              .build();
        }
      }
    }
    return getDeleteOrderMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ShipGoodsRequest,
      com.zhijiejiaoyu.glory_api.shop.ShipGoodsResponse> getShipGoodsMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ShipGoods",
      requestType = com.zhijiejiaoyu.glory_api.shop.ShipGoodsRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.ShipGoodsResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ShipGoodsRequest,
      com.zhijiejiaoyu.glory_api.shop.ShipGoodsResponse> getShipGoodsMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ShipGoodsRequest, com.zhijiejiaoyu.glory_api.shop.ShipGoodsResponse> getShipGoodsMethod;
    if ((getShipGoodsMethod = glory_apiGrpc.getShipGoodsMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getShipGoodsMethod = glory_apiGrpc.getShipGoodsMethod) == null) {
          glory_apiGrpc.getShipGoodsMethod = getShipGoodsMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.ShipGoodsRequest, com.zhijiejiaoyu.glory_api.shop.ShipGoodsResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ShipGoods"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ShipGoodsRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ShipGoodsResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ShipGoods"))
              .build();
        }
      }
    }
    return getShipGoodsMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ConfirmReceiptGoodsRequest,
      com.zhijiejiaoyu.glory_api.shop.ConfirmReceiptGoodsResponse> getConfirmReceiptGoodsMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ConfirmReceiptGoods",
      requestType = com.zhijiejiaoyu.glory_api.shop.ConfirmReceiptGoodsRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.ConfirmReceiptGoodsResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ConfirmReceiptGoodsRequest,
      com.zhijiejiaoyu.glory_api.shop.ConfirmReceiptGoodsResponse> getConfirmReceiptGoodsMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ConfirmReceiptGoodsRequest, com.zhijiejiaoyu.glory_api.shop.ConfirmReceiptGoodsResponse> getConfirmReceiptGoodsMethod;
    if ((getConfirmReceiptGoodsMethod = glory_apiGrpc.getConfirmReceiptGoodsMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getConfirmReceiptGoodsMethod = glory_apiGrpc.getConfirmReceiptGoodsMethod) == null) {
          glory_apiGrpc.getConfirmReceiptGoodsMethod = getConfirmReceiptGoodsMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.ConfirmReceiptGoodsRequest, com.zhijiejiaoyu.glory_api.shop.ConfirmReceiptGoodsResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ConfirmReceiptGoods"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ConfirmReceiptGoodsRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ConfirmReceiptGoodsResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ConfirmReceiptGoods"))
              .build();
        }
      }
    }
    return getConfirmReceiptGoodsMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetOrderStatusRequest,
      com.zhijiejiaoyu.glory_api.shop.GetOrderStatusResponse> getGetOrderStatusMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetOrderStatus",
      requestType = com.zhijiejiaoyu.glory_api.shop.GetOrderStatusRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.GetOrderStatusResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetOrderStatusRequest,
      com.zhijiejiaoyu.glory_api.shop.GetOrderStatusResponse> getGetOrderStatusMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetOrderStatusRequest, com.zhijiejiaoyu.glory_api.shop.GetOrderStatusResponse> getGetOrderStatusMethod;
    if ((getGetOrderStatusMethod = glory_apiGrpc.getGetOrderStatusMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetOrderStatusMethod = glory_apiGrpc.getGetOrderStatusMethod) == null) {
          glory_apiGrpc.getGetOrderStatusMethod = getGetOrderStatusMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.GetOrderStatusRequest, com.zhijiejiaoyu.glory_api.shop.GetOrderStatusResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetOrderStatus"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetOrderStatusRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetOrderStatusResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetOrderStatus"))
              .build();
        }
      }
    }
    return getGetOrderStatusMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CancelOrderRequest,
      com.zhijiejiaoyu.glory_api.shop.CancelOrderResponse> getCancelOrderMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CancelOrder",
      requestType = com.zhijiejiaoyu.glory_api.shop.CancelOrderRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.CancelOrderResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CancelOrderRequest,
      com.zhijiejiaoyu.glory_api.shop.CancelOrderResponse> getCancelOrderMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CancelOrderRequest, com.zhijiejiaoyu.glory_api.shop.CancelOrderResponse> getCancelOrderMethod;
    if ((getCancelOrderMethod = glory_apiGrpc.getCancelOrderMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCancelOrderMethod = glory_apiGrpc.getCancelOrderMethod) == null) {
          glory_apiGrpc.getCancelOrderMethod = getCancelOrderMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.CancelOrderRequest, com.zhijiejiaoyu.glory_api.shop.CancelOrderResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CancelOrder"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.CancelOrderRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.CancelOrderResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CancelOrder"))
              .build();
        }
      }
    }
    return getCancelOrderMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ShipGoodsInBatchesRequest,
      com.zhijiejiaoyu.glory_api.shop.ShipGoodsInBatchesResponse> getShipGoodsInBatchesMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ShipGoodsInBatches",
      requestType = com.zhijiejiaoyu.glory_api.shop.ShipGoodsInBatchesRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.ShipGoodsInBatchesResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ShipGoodsInBatchesRequest,
      com.zhijiejiaoyu.glory_api.shop.ShipGoodsInBatchesResponse> getShipGoodsInBatchesMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ShipGoodsInBatchesRequest, com.zhijiejiaoyu.glory_api.shop.ShipGoodsInBatchesResponse> getShipGoodsInBatchesMethod;
    if ((getShipGoodsInBatchesMethod = glory_apiGrpc.getShipGoodsInBatchesMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getShipGoodsInBatchesMethod = glory_apiGrpc.getShipGoodsInBatchesMethod) == null) {
          glory_apiGrpc.getShipGoodsInBatchesMethod = getShipGoodsInBatchesMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.ShipGoodsInBatchesRequest, com.zhijiejiaoyu.glory_api.shop.ShipGoodsInBatchesResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ShipGoodsInBatches"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ShipGoodsInBatchesRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ShipGoodsInBatchesResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ShipGoodsInBatches"))
              .build();
        }
      }
    }
    return getShipGoodsInBatchesMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.FreeShippingInBatchesRequest,
      com.zhijiejiaoyu.glory_api.shop.FreeShippingInBatchesResponse> getFreeShippingInBatchesMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "FreeShippingInBatches",
      requestType = com.zhijiejiaoyu.glory_api.shop.FreeShippingInBatchesRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.FreeShippingInBatchesResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.FreeShippingInBatchesRequest,
      com.zhijiejiaoyu.glory_api.shop.FreeShippingInBatchesResponse> getFreeShippingInBatchesMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.FreeShippingInBatchesRequest, com.zhijiejiaoyu.glory_api.shop.FreeShippingInBatchesResponse> getFreeShippingInBatchesMethod;
    if ((getFreeShippingInBatchesMethod = glory_apiGrpc.getFreeShippingInBatchesMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getFreeShippingInBatchesMethod = glory_apiGrpc.getFreeShippingInBatchesMethod) == null) {
          glory_apiGrpc.getFreeShippingInBatchesMethod = getFreeShippingInBatchesMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.FreeShippingInBatchesRequest, com.zhijiejiaoyu.glory_api.shop.FreeShippingInBatchesResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "FreeShippingInBatches"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.FreeShippingInBatchesRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.FreeShippingInBatchesResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("FreeShippingInBatches"))
              .build();
        }
      }
    }
    return getFreeShippingInBatchesMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListShopSummaryRequest,
      com.zhijiejiaoyu.glory_api.shop.ListShopSummaryResponse> getListShopSummaryMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListShopSummary",
      requestType = com.zhijiejiaoyu.glory_api.shop.ListShopSummaryRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.ListShopSummaryResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListShopSummaryRequest,
      com.zhijiejiaoyu.glory_api.shop.ListShopSummaryResponse> getListShopSummaryMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListShopSummaryRequest, com.zhijiejiaoyu.glory_api.shop.ListShopSummaryResponse> getListShopSummaryMethod;
    if ((getListShopSummaryMethod = glory_apiGrpc.getListShopSummaryMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListShopSummaryMethod = glory_apiGrpc.getListShopSummaryMethod) == null) {
          glory_apiGrpc.getListShopSummaryMethod = getListShopSummaryMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.ListShopSummaryRequest, com.zhijiejiaoyu.glory_api.shop.ListShopSummaryResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListShopSummary"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListShopSummaryRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListShopSummaryResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListShopSummary"))
              .build();
        }
      }
    }
    return getListShopSummaryMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListShopBySellerIDRequest,
      com.zhijiejiaoyu.glory_api.shop.ListShopBySellerIDResponse> getListShopBySellerIDMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListShopBySellerID",
      requestType = com.zhijiejiaoyu.glory_api.shop.ListShopBySellerIDRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.ListShopBySellerIDResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListShopBySellerIDRequest,
      com.zhijiejiaoyu.glory_api.shop.ListShopBySellerIDResponse> getListShopBySellerIDMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListShopBySellerIDRequest, com.zhijiejiaoyu.glory_api.shop.ListShopBySellerIDResponse> getListShopBySellerIDMethod;
    if ((getListShopBySellerIDMethod = glory_apiGrpc.getListShopBySellerIDMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListShopBySellerIDMethod = glory_apiGrpc.getListShopBySellerIDMethod) == null) {
          glory_apiGrpc.getListShopBySellerIDMethod = getListShopBySellerIDMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.ListShopBySellerIDRequest, com.zhijiejiaoyu.glory_api.shop.ListShopBySellerIDResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListShopBySellerID"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListShopBySellerIDRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListShopBySellerIDResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListShopBySellerID"))
              .build();
        }
      }
    }
    return getListShopBySellerIDMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.AddCartRequest,
      com.zhijiejiaoyu.glory_api.shop.AddCartResponse> getCreateCartMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateCart",
      requestType = com.zhijiejiaoyu.glory_api.shop.AddCartRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.AddCartResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.AddCartRequest,
      com.zhijiejiaoyu.glory_api.shop.AddCartResponse> getCreateCartMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.AddCartRequest, com.zhijiejiaoyu.glory_api.shop.AddCartResponse> getCreateCartMethod;
    if ((getCreateCartMethod = glory_apiGrpc.getCreateCartMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateCartMethod = glory_apiGrpc.getCreateCartMethod) == null) {
          glory_apiGrpc.getCreateCartMethod = getCreateCartMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.AddCartRequest, com.zhijiejiaoyu.glory_api.shop.AddCartResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateCart"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.AddCartRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.AddCartResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateCart"))
              .build();
        }
      }
    }
    return getCreateCartMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetCartRequest,
      com.zhijiejiaoyu.glory_api.shop.GetCartResponse> getGetCartMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetCart",
      requestType = com.zhijiejiaoyu.glory_api.shop.GetCartRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.GetCartResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetCartRequest,
      com.zhijiejiaoyu.glory_api.shop.GetCartResponse> getGetCartMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetCartRequest, com.zhijiejiaoyu.glory_api.shop.GetCartResponse> getGetCartMethod;
    if ((getGetCartMethod = glory_apiGrpc.getGetCartMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetCartMethod = glory_apiGrpc.getGetCartMethod) == null) {
          glory_apiGrpc.getGetCartMethod = getGetCartMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.GetCartRequest, com.zhijiejiaoyu.glory_api.shop.GetCartResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetCart"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetCartRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetCartResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetCart"))
              .build();
        }
      }
    }
    return getGetCartMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateCartRequest,
      com.zhijiejiaoyu.glory_api.shop.UpdateCartResponse> getUpdateCartMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateCart",
      requestType = com.zhijiejiaoyu.glory_api.shop.UpdateCartRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.UpdateCartResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateCartRequest,
      com.zhijiejiaoyu.glory_api.shop.UpdateCartResponse> getUpdateCartMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateCartRequest, com.zhijiejiaoyu.glory_api.shop.UpdateCartResponse> getUpdateCartMethod;
    if ((getUpdateCartMethod = glory_apiGrpc.getUpdateCartMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateCartMethod = glory_apiGrpc.getUpdateCartMethod) == null) {
          glory_apiGrpc.getUpdateCartMethod = getUpdateCartMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.UpdateCartRequest, com.zhijiejiaoyu.glory_api.shop.UpdateCartResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateCart"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.UpdateCartRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.UpdateCartResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateCart"))
              .build();
        }
      }
    }
    return getUpdateCartMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteCartRequest,
      com.zhijiejiaoyu.glory_api.shop.DeleteCartResponse> getDeleteCartMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteCart",
      requestType = com.zhijiejiaoyu.glory_api.shop.DeleteCartRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.DeleteCartResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteCartRequest,
      com.zhijiejiaoyu.glory_api.shop.DeleteCartResponse> getDeleteCartMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteCartRequest, com.zhijiejiaoyu.glory_api.shop.DeleteCartResponse> getDeleteCartMethod;
    if ((getDeleteCartMethod = glory_apiGrpc.getDeleteCartMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteCartMethod = glory_apiGrpc.getDeleteCartMethod) == null) {
          glory_apiGrpc.getDeleteCartMethod = getDeleteCartMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.DeleteCartRequest, com.zhijiejiaoyu.glory_api.shop.DeleteCartResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteCart"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DeleteCartRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DeleteCartResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteCart"))
              .build();
        }
      }
    }
    return getDeleteCartMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.seller.UploadAttachmentRequest,
      com.zhijiejiaoyu.glory_api.seller.UploadAttachmentResponse> getUploadAttachmentMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UploadAttachment",
      requestType = com.zhijiejiaoyu.glory_api.seller.UploadAttachmentRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.seller.UploadAttachmentResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.seller.UploadAttachmentRequest,
      com.zhijiejiaoyu.glory_api.seller.UploadAttachmentResponse> getUploadAttachmentMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.seller.UploadAttachmentRequest, com.zhijiejiaoyu.glory_api.seller.UploadAttachmentResponse> getUploadAttachmentMethod;
    if ((getUploadAttachmentMethod = glory_apiGrpc.getUploadAttachmentMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUploadAttachmentMethod = glory_apiGrpc.getUploadAttachmentMethod) == null) {
          glory_apiGrpc.getUploadAttachmentMethod = getUploadAttachmentMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.seller.UploadAttachmentRequest, com.zhijiejiaoyu.glory_api.seller.UploadAttachmentResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UploadAttachment"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.seller.UploadAttachmentRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.seller.UploadAttachmentResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UploadAttachment"))
              .build();
        }
      }
    }
    return getUploadAttachmentMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.seller.SaveAttachmentRequest,
      com.zhijiejiaoyu.glory_api.seller.SaveAttachmentResponse> getSaveAttachmentMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "SaveAttachment",
      requestType = com.zhijiejiaoyu.glory_api.seller.SaveAttachmentRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.seller.SaveAttachmentResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.seller.SaveAttachmentRequest,
      com.zhijiejiaoyu.glory_api.seller.SaveAttachmentResponse> getSaveAttachmentMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.seller.SaveAttachmentRequest, com.zhijiejiaoyu.glory_api.seller.SaveAttachmentResponse> getSaveAttachmentMethod;
    if ((getSaveAttachmentMethod = glory_apiGrpc.getSaveAttachmentMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getSaveAttachmentMethod = glory_apiGrpc.getSaveAttachmentMethod) == null) {
          glory_apiGrpc.getSaveAttachmentMethod = getSaveAttachmentMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.seller.SaveAttachmentRequest, com.zhijiejiaoyu.glory_api.seller.SaveAttachmentResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "SaveAttachment"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.seller.SaveAttachmentRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.seller.SaveAttachmentResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("SaveAttachment"))
              .build();
        }
      }
    }
    return getSaveAttachmentMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.seller.ListAttachmentRequest,
      com.zhijiejiaoyu.glory_api.seller.ListAttachmentResponse> getListAttachmentMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListAttachment",
      requestType = com.zhijiejiaoyu.glory_api.seller.ListAttachmentRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.seller.ListAttachmentResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.seller.ListAttachmentRequest,
      com.zhijiejiaoyu.glory_api.seller.ListAttachmentResponse> getListAttachmentMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.seller.ListAttachmentRequest, com.zhijiejiaoyu.glory_api.seller.ListAttachmentResponse> getListAttachmentMethod;
    if ((getListAttachmentMethod = glory_apiGrpc.getListAttachmentMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListAttachmentMethod = glory_apiGrpc.getListAttachmentMethod) == null) {
          glory_apiGrpc.getListAttachmentMethod = getListAttachmentMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.seller.ListAttachmentRequest, com.zhijiejiaoyu.glory_api.seller.ListAttachmentResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListAttachment"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.seller.ListAttachmentRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.seller.ListAttachmentResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListAttachment"))
              .build();
        }
      }
    }
    return getListAttachmentMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.seller.DeleteAttachmentRequest,
      com.zhijiejiaoyu.glory_api.seller.DeleteAttachmentResponse> getDeleteAttachmentMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteAttachment",
      requestType = com.zhijiejiaoyu.glory_api.seller.DeleteAttachmentRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.seller.DeleteAttachmentResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.seller.DeleteAttachmentRequest,
      com.zhijiejiaoyu.glory_api.seller.DeleteAttachmentResponse> getDeleteAttachmentMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.seller.DeleteAttachmentRequest, com.zhijiejiaoyu.glory_api.seller.DeleteAttachmentResponse> getDeleteAttachmentMethod;
    if ((getDeleteAttachmentMethod = glory_apiGrpc.getDeleteAttachmentMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteAttachmentMethod = glory_apiGrpc.getDeleteAttachmentMethod) == null) {
          glory_apiGrpc.getDeleteAttachmentMethod = getDeleteAttachmentMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.seller.DeleteAttachmentRequest, com.zhijiejiaoyu.glory_api.seller.DeleteAttachmentResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteAttachment"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.seller.DeleteAttachmentRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.seller.DeleteAttachmentResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteAttachment"))
              .build();
        }
      }
    }
    return getDeleteAttachmentMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.seller.CreateSellerRequest,
      com.zhijiejiaoyu.glory_api.seller.CreateSellerResponse> getCreateSellerMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateSeller",
      requestType = com.zhijiejiaoyu.glory_api.seller.CreateSellerRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.seller.CreateSellerResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.seller.CreateSellerRequest,
      com.zhijiejiaoyu.glory_api.seller.CreateSellerResponse> getCreateSellerMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.seller.CreateSellerRequest, com.zhijiejiaoyu.glory_api.seller.CreateSellerResponse> getCreateSellerMethod;
    if ((getCreateSellerMethod = glory_apiGrpc.getCreateSellerMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateSellerMethod = glory_apiGrpc.getCreateSellerMethod) == null) {
          glory_apiGrpc.getCreateSellerMethod = getCreateSellerMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.seller.CreateSellerRequest, com.zhijiejiaoyu.glory_api.seller.CreateSellerResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateSeller"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.seller.CreateSellerRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.seller.CreateSellerResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateSeller"))
              .build();
        }
      }
    }
    return getCreateSellerMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.payment.CreatePaymentRequest,
      com.zhijiejiaoyu.glory_api.payment.CreatePaymentResponse> getCreatePaymentMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreatePayment",
      requestType = com.zhijiejiaoyu.glory_api.payment.CreatePaymentRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.payment.CreatePaymentResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.payment.CreatePaymentRequest,
      com.zhijiejiaoyu.glory_api.payment.CreatePaymentResponse> getCreatePaymentMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.payment.CreatePaymentRequest, com.zhijiejiaoyu.glory_api.payment.CreatePaymentResponse> getCreatePaymentMethod;
    if ((getCreatePaymentMethod = glory_apiGrpc.getCreatePaymentMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreatePaymentMethod = glory_apiGrpc.getCreatePaymentMethod) == null) {
          glory_apiGrpc.getCreatePaymentMethod = getCreatePaymentMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.payment.CreatePaymentRequest, com.zhijiejiaoyu.glory_api.payment.CreatePaymentResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreatePayment"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.payment.CreatePaymentRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.payment.CreatePaymentResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreatePayment"))
              .build();
        }
      }
    }
    return getCreatePaymentMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.payment.GetPaymentRequest,
      com.zhijiejiaoyu.glory_api.payment.GetPaymentResponse> getGetPaymentMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetPayment",
      requestType = com.zhijiejiaoyu.glory_api.payment.GetPaymentRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.payment.GetPaymentResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.payment.GetPaymentRequest,
      com.zhijiejiaoyu.glory_api.payment.GetPaymentResponse> getGetPaymentMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.payment.GetPaymentRequest, com.zhijiejiaoyu.glory_api.payment.GetPaymentResponse> getGetPaymentMethod;
    if ((getGetPaymentMethod = glory_apiGrpc.getGetPaymentMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetPaymentMethod = glory_apiGrpc.getGetPaymentMethod) == null) {
          glory_apiGrpc.getGetPaymentMethod = getGetPaymentMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.payment.GetPaymentRequest, com.zhijiejiaoyu.glory_api.payment.GetPaymentResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetPayment"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.payment.GetPaymentRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.payment.GetPaymentResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetPayment"))
              .build();
        }
      }
    }
    return getGetPaymentMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.payment.UpdatePaymentRequest,
      com.zhijiejiaoyu.glory_api.payment.UpdatePaymentResponse> getUpdatePaymentMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdatePayment",
      requestType = com.zhijiejiaoyu.glory_api.payment.UpdatePaymentRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.payment.UpdatePaymentResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.payment.UpdatePaymentRequest,
      com.zhijiejiaoyu.glory_api.payment.UpdatePaymentResponse> getUpdatePaymentMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.payment.UpdatePaymentRequest, com.zhijiejiaoyu.glory_api.payment.UpdatePaymentResponse> getUpdatePaymentMethod;
    if ((getUpdatePaymentMethod = glory_apiGrpc.getUpdatePaymentMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdatePaymentMethod = glory_apiGrpc.getUpdatePaymentMethod) == null) {
          glory_apiGrpc.getUpdatePaymentMethod = getUpdatePaymentMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.payment.UpdatePaymentRequest, com.zhijiejiaoyu.glory_api.payment.UpdatePaymentResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdatePayment"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.payment.UpdatePaymentRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.payment.UpdatePaymentResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdatePayment"))
              .build();
        }
      }
    }
    return getUpdatePaymentMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.payment.DeletePaymentRequest,
      com.zhijiejiaoyu.glory_api.payment.DeletePaymentResponse> getDeletePaymentMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeletePayment",
      requestType = com.zhijiejiaoyu.glory_api.payment.DeletePaymentRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.payment.DeletePaymentResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.payment.DeletePaymentRequest,
      com.zhijiejiaoyu.glory_api.payment.DeletePaymentResponse> getDeletePaymentMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.payment.DeletePaymentRequest, com.zhijiejiaoyu.glory_api.payment.DeletePaymentResponse> getDeletePaymentMethod;
    if ((getDeletePaymentMethod = glory_apiGrpc.getDeletePaymentMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeletePaymentMethod = glory_apiGrpc.getDeletePaymentMethod) == null) {
          glory_apiGrpc.getDeletePaymentMethod = getDeletePaymentMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.payment.DeletePaymentRequest, com.zhijiejiaoyu.glory_api.payment.DeletePaymentResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeletePayment"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.payment.DeletePaymentRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.payment.DeletePaymentResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeletePayment"))
              .build();
        }
      }
    }
    return getDeletePaymentMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.payment.WechatPaymentNotifyRequest,
      com.zhijiejiaoyu.glory_api.payment.WechatPaymentNotifyResponse> getWechatPaymentNotifyMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "WechatPaymentNotify",
      requestType = com.zhijiejiaoyu.glory_api.payment.WechatPaymentNotifyRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.payment.WechatPaymentNotifyResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.payment.WechatPaymentNotifyRequest,
      com.zhijiejiaoyu.glory_api.payment.WechatPaymentNotifyResponse> getWechatPaymentNotifyMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.payment.WechatPaymentNotifyRequest, com.zhijiejiaoyu.glory_api.payment.WechatPaymentNotifyResponse> getWechatPaymentNotifyMethod;
    if ((getWechatPaymentNotifyMethod = glory_apiGrpc.getWechatPaymentNotifyMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getWechatPaymentNotifyMethod = glory_apiGrpc.getWechatPaymentNotifyMethod) == null) {
          glory_apiGrpc.getWechatPaymentNotifyMethod = getWechatPaymentNotifyMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.payment.WechatPaymentNotifyRequest, com.zhijiejiaoyu.glory_api.payment.WechatPaymentNotifyResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "WechatPaymentNotify"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.payment.WechatPaymentNotifyRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.payment.WechatPaymentNotifyResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("WechatPaymentNotify"))
              .build();
        }
      }
    }
    return getWechatPaymentNotifyMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.CreateConfigRequest,
      com.zhijiejiaoyu.glory_api.admin.CreateConfigResponse> getCreateConfigMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateConfig",
      requestType = com.zhijiejiaoyu.glory_api.admin.CreateConfigRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.admin.CreateConfigResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.CreateConfigRequest,
      com.zhijiejiaoyu.glory_api.admin.CreateConfigResponse> getCreateConfigMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.CreateConfigRequest, com.zhijiejiaoyu.glory_api.admin.CreateConfigResponse> getCreateConfigMethod;
    if ((getCreateConfigMethod = glory_apiGrpc.getCreateConfigMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateConfigMethod = glory_apiGrpc.getCreateConfigMethod) == null) {
          glory_apiGrpc.getCreateConfigMethod = getCreateConfigMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.admin.CreateConfigRequest, com.zhijiejiaoyu.glory_api.admin.CreateConfigResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateConfig"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.admin.CreateConfigRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.admin.CreateConfigResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateConfig"))
              .build();
        }
      }
    }
    return getCreateConfigMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.UpdateConfigRequest,
      com.zhijiejiaoyu.glory_api.admin.UpdateConfigResponse> getUpdateConfigMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateConfig",
      requestType = com.zhijiejiaoyu.glory_api.admin.UpdateConfigRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.admin.UpdateConfigResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.UpdateConfigRequest,
      com.zhijiejiaoyu.glory_api.admin.UpdateConfigResponse> getUpdateConfigMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.UpdateConfigRequest, com.zhijiejiaoyu.glory_api.admin.UpdateConfigResponse> getUpdateConfigMethod;
    if ((getUpdateConfigMethod = glory_apiGrpc.getUpdateConfigMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateConfigMethod = glory_apiGrpc.getUpdateConfigMethod) == null) {
          glory_apiGrpc.getUpdateConfigMethod = getUpdateConfigMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.admin.UpdateConfigRequest, com.zhijiejiaoyu.glory_api.admin.UpdateConfigResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateConfig"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.admin.UpdateConfigRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.admin.UpdateConfigResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateConfig"))
              .build();
        }
      }
    }
    return getUpdateConfigMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.DeleteConfigRequest,
      com.zhijiejiaoyu.glory_api.admin.DeleteConfigResponse> getDeleteConfigMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteConfig",
      requestType = com.zhijiejiaoyu.glory_api.admin.DeleteConfigRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.admin.DeleteConfigResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.DeleteConfigRequest,
      com.zhijiejiaoyu.glory_api.admin.DeleteConfigResponse> getDeleteConfigMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.DeleteConfigRequest, com.zhijiejiaoyu.glory_api.admin.DeleteConfigResponse> getDeleteConfigMethod;
    if ((getDeleteConfigMethod = glory_apiGrpc.getDeleteConfigMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteConfigMethod = glory_apiGrpc.getDeleteConfigMethod) == null) {
          glory_apiGrpc.getDeleteConfigMethod = getDeleteConfigMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.admin.DeleteConfigRequest, com.zhijiejiaoyu.glory_api.admin.DeleteConfigResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteConfig"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.admin.DeleteConfigRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.admin.DeleteConfigResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteConfig"))
              .build();
        }
      }
    }
    return getDeleteConfigMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.GetConfigRequest,
      com.zhijiejiaoyu.glory_api.admin.GetConfigResponse> getGetConfigMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetConfig",
      requestType = com.zhijiejiaoyu.glory_api.admin.GetConfigRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.admin.GetConfigResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.GetConfigRequest,
      com.zhijiejiaoyu.glory_api.admin.GetConfigResponse> getGetConfigMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.GetConfigRequest, com.zhijiejiaoyu.glory_api.admin.GetConfigResponse> getGetConfigMethod;
    if ((getGetConfigMethod = glory_apiGrpc.getGetConfigMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetConfigMethod = glory_apiGrpc.getGetConfigMethod) == null) {
          glory_apiGrpc.getGetConfigMethod = getGetConfigMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.admin.GetConfigRequest, com.zhijiejiaoyu.glory_api.admin.GetConfigResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetConfig"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.admin.GetConfigRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.admin.GetConfigResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetConfig"))
              .build();
        }
      }
    }
    return getGetConfigMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.GetSTSRequest,
      com.zhijiejiaoyu.glory_api.admin.GetSTSResponse> getGetSTSMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetSTS",
      requestType = com.zhijiejiaoyu.glory_api.admin.GetSTSRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.admin.GetSTSResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.GetSTSRequest,
      com.zhijiejiaoyu.glory_api.admin.GetSTSResponse> getGetSTSMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.GetSTSRequest, com.zhijiejiaoyu.glory_api.admin.GetSTSResponse> getGetSTSMethod;
    if ((getGetSTSMethod = glory_apiGrpc.getGetSTSMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetSTSMethod = glory_apiGrpc.getGetSTSMethod) == null) {
          glory_apiGrpc.getGetSTSMethod = getGetSTSMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.admin.GetSTSRequest, com.zhijiejiaoyu.glory_api.admin.GetSTSResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetSTS"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.admin.GetSTSRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.admin.GetSTSResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetSTS"))
              .build();
        }
      }
    }
    return getGetSTSMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.GenerateWebofficeTokenRequest,
      com.zhijiejiaoyu.glory_api.admin.GenerateWebofficeTokenResponse> getGenerateWebofficeTokenMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GenerateWebofficeToken",
      requestType = com.zhijiejiaoyu.glory_api.admin.GenerateWebofficeTokenRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.admin.GenerateWebofficeTokenResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.GenerateWebofficeTokenRequest,
      com.zhijiejiaoyu.glory_api.admin.GenerateWebofficeTokenResponse> getGenerateWebofficeTokenMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.GenerateWebofficeTokenRequest, com.zhijiejiaoyu.glory_api.admin.GenerateWebofficeTokenResponse> getGenerateWebofficeTokenMethod;
    if ((getGenerateWebofficeTokenMethod = glory_apiGrpc.getGenerateWebofficeTokenMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGenerateWebofficeTokenMethod = glory_apiGrpc.getGenerateWebofficeTokenMethod) == null) {
          glory_apiGrpc.getGenerateWebofficeTokenMethod = getGenerateWebofficeTokenMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.admin.GenerateWebofficeTokenRequest, com.zhijiejiaoyu.glory_api.admin.GenerateWebofficeTokenResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GenerateWebofficeToken"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.admin.GenerateWebofficeTokenRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.admin.GenerateWebofficeTokenResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GenerateWebofficeToken"))
              .build();
        }
      }
    }
    return getGenerateWebofficeTokenMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.RefreshWebofficeTokenRequest,
      com.zhijiejiaoyu.glory_api.admin.RefreshWebofficeTokenResponse> getRefreshWebofficeTokenMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "RefreshWebofficeToken",
      requestType = com.zhijiejiaoyu.glory_api.admin.RefreshWebofficeTokenRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.admin.RefreshWebofficeTokenResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.RefreshWebofficeTokenRequest,
      com.zhijiejiaoyu.glory_api.admin.RefreshWebofficeTokenResponse> getRefreshWebofficeTokenMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.RefreshWebofficeTokenRequest, com.zhijiejiaoyu.glory_api.admin.RefreshWebofficeTokenResponse> getRefreshWebofficeTokenMethod;
    if ((getRefreshWebofficeTokenMethod = glory_apiGrpc.getRefreshWebofficeTokenMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getRefreshWebofficeTokenMethod = glory_apiGrpc.getRefreshWebofficeTokenMethod) == null) {
          glory_apiGrpc.getRefreshWebofficeTokenMethod = getRefreshWebofficeTokenMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.admin.RefreshWebofficeTokenRequest, com.zhijiejiaoyu.glory_api.admin.RefreshWebofficeTokenResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "RefreshWebofficeToken"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.admin.RefreshWebofficeTokenRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.admin.RefreshWebofficeTokenResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("RefreshWebofficeToken"))
              .build();
        }
      }
    }
    return getRefreshWebofficeTokenMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.ListTenantOrgRequest,
      com.zhijiejiaoyu.glory_api.admin.ListTenantOrgResponse> getListTenantOrgMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListTenantOrg",
      requestType = com.zhijiejiaoyu.glory_api.admin.ListTenantOrgRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.admin.ListTenantOrgResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.ListTenantOrgRequest,
      com.zhijiejiaoyu.glory_api.admin.ListTenantOrgResponse> getListTenantOrgMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.ListTenantOrgRequest, com.zhijiejiaoyu.glory_api.admin.ListTenantOrgResponse> getListTenantOrgMethod;
    if ((getListTenantOrgMethod = glory_apiGrpc.getListTenantOrgMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListTenantOrgMethod = glory_apiGrpc.getListTenantOrgMethod) == null) {
          glory_apiGrpc.getListTenantOrgMethod = getListTenantOrgMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.admin.ListTenantOrgRequest, com.zhijiejiaoyu.glory_api.admin.ListTenantOrgResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListTenantOrg"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.admin.ListTenantOrgRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.admin.ListTenantOrgResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListTenantOrg"))
              .build();
        }
      }
    }
    return getListTenantOrgMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.GetAdminTenantRequest,
      com.zhijiejiaoyu.glory_api.admin.GetAdminTenantResponse> getGetAdminTenantMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetAdminTenant",
      requestType = com.zhijiejiaoyu.glory_api.admin.GetAdminTenantRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.admin.GetAdminTenantResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.GetAdminTenantRequest,
      com.zhijiejiaoyu.glory_api.admin.GetAdminTenantResponse> getGetAdminTenantMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.GetAdminTenantRequest, com.zhijiejiaoyu.glory_api.admin.GetAdminTenantResponse> getGetAdminTenantMethod;
    if ((getGetAdminTenantMethod = glory_apiGrpc.getGetAdminTenantMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetAdminTenantMethod = glory_apiGrpc.getGetAdminTenantMethod) == null) {
          glory_apiGrpc.getGetAdminTenantMethod = getGetAdminTenantMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.admin.GetAdminTenantRequest, com.zhijiejiaoyu.glory_api.admin.GetAdminTenantResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetAdminTenant"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.admin.GetAdminTenantRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.admin.GetAdminTenantResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetAdminTenant"))
              .build();
        }
      }
    }
    return getGetAdminTenantMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.ListAdminUserRequest,
      com.zhijiejiaoyu.glory_api.admin.ListAdminUserResponse> getListAdminUserMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListAdminUser",
      requestType = com.zhijiejiaoyu.glory_api.admin.ListAdminUserRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.admin.ListAdminUserResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.ListAdminUserRequest,
      com.zhijiejiaoyu.glory_api.admin.ListAdminUserResponse> getListAdminUserMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.ListAdminUserRequest, com.zhijiejiaoyu.glory_api.admin.ListAdminUserResponse> getListAdminUserMethod;
    if ((getListAdminUserMethod = glory_apiGrpc.getListAdminUserMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListAdminUserMethod = glory_apiGrpc.getListAdminUserMethod) == null) {
          glory_apiGrpc.getListAdminUserMethod = getListAdminUserMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.admin.ListAdminUserRequest, com.zhijiejiaoyu.glory_api.admin.ListAdminUserResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListAdminUser"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.admin.ListAdminUserRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.admin.ListAdminUserResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListAdminUser"))
              .build();
        }
      }
    }
    return getListAdminUserMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.CreateAdminUserRequest,
      com.zhijiejiaoyu.glory_api.admin.CreateAdminUserResponse> getCreateAdminUserMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateAdminUser",
      requestType = com.zhijiejiaoyu.glory_api.admin.CreateAdminUserRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.admin.CreateAdminUserResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.CreateAdminUserRequest,
      com.zhijiejiaoyu.glory_api.admin.CreateAdminUserResponse> getCreateAdminUserMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.CreateAdminUserRequest, com.zhijiejiaoyu.glory_api.admin.CreateAdminUserResponse> getCreateAdminUserMethod;
    if ((getCreateAdminUserMethod = glory_apiGrpc.getCreateAdminUserMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateAdminUserMethod = glory_apiGrpc.getCreateAdminUserMethod) == null) {
          glory_apiGrpc.getCreateAdminUserMethod = getCreateAdminUserMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.admin.CreateAdminUserRequest, com.zhijiejiaoyu.glory_api.admin.CreateAdminUserResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateAdminUser"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.admin.CreateAdminUserRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.admin.CreateAdminUserResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateAdminUser"))
              .build();
        }
      }
    }
    return getCreateAdminUserMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.UpdateAdminUserRequest,
      com.zhijiejiaoyu.glory_api.admin.UpdateAdminUserResponse> getUpdateAdminUserMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateAdminUser",
      requestType = com.zhijiejiaoyu.glory_api.admin.UpdateAdminUserRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.admin.UpdateAdminUserResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.UpdateAdminUserRequest,
      com.zhijiejiaoyu.glory_api.admin.UpdateAdminUserResponse> getUpdateAdminUserMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.UpdateAdminUserRequest, com.zhijiejiaoyu.glory_api.admin.UpdateAdminUserResponse> getUpdateAdminUserMethod;
    if ((getUpdateAdminUserMethod = glory_apiGrpc.getUpdateAdminUserMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateAdminUserMethod = glory_apiGrpc.getUpdateAdminUserMethod) == null) {
          glory_apiGrpc.getUpdateAdminUserMethod = getUpdateAdminUserMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.admin.UpdateAdminUserRequest, com.zhijiejiaoyu.glory_api.admin.UpdateAdminUserResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateAdminUser"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.admin.UpdateAdminUserRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.admin.UpdateAdminUserResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateAdminUser"))
              .build();
        }
      }
    }
    return getUpdateAdminUserMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.DeleteAdminUserRequest,
      com.zhijiejiaoyu.glory_api.admin.DeleteAdminUserResponse> getDeleteAdminUserMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteAdminUser",
      requestType = com.zhijiejiaoyu.glory_api.admin.DeleteAdminUserRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.admin.DeleteAdminUserResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.DeleteAdminUserRequest,
      com.zhijiejiaoyu.glory_api.admin.DeleteAdminUserResponse> getDeleteAdminUserMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.admin.DeleteAdminUserRequest, com.zhijiejiaoyu.glory_api.admin.DeleteAdminUserResponse> getDeleteAdminUserMethod;
    if ((getDeleteAdminUserMethod = glory_apiGrpc.getDeleteAdminUserMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteAdminUserMethod = glory_apiGrpc.getDeleteAdminUserMethod) == null) {
          glory_apiGrpc.getDeleteAdminUserMethod = getDeleteAdminUserMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.admin.DeleteAdminUserRequest, com.zhijiejiaoyu.glory_api.admin.DeleteAdminUserResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteAdminUser"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.admin.DeleteAdminUserRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.admin.DeleteAdminUserResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteAdminUser"))
              .build();
        }
      }
    }
    return getDeleteAdminUserMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.wxpay.PrepayRequest,
      com.zhijiejiaoyu.glory_api.wxpay.PrepayResponse> getWxPrepayMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "WxPrepay",
      requestType = com.zhijiejiaoyu.glory_api.wxpay.PrepayRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.wxpay.PrepayResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.wxpay.PrepayRequest,
      com.zhijiejiaoyu.glory_api.wxpay.PrepayResponse> getWxPrepayMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.wxpay.PrepayRequest, com.zhijiejiaoyu.glory_api.wxpay.PrepayResponse> getWxPrepayMethod;
    if ((getWxPrepayMethod = glory_apiGrpc.getWxPrepayMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getWxPrepayMethod = glory_apiGrpc.getWxPrepayMethod) == null) {
          glory_apiGrpc.getWxPrepayMethod = getWxPrepayMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.wxpay.PrepayRequest, com.zhijiejiaoyu.glory_api.wxpay.PrepayResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "WxPrepay"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.wxpay.PrepayRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.wxpay.PrepayResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("WxPrepay"))
              .build();
        }
      }
    }
    return getWxPrepayMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.wxpay.CloseOrderRequest,
      com.zhijiejiaoyu.glory_api.wxpay.CloseOrderResponse> getCloseOrderMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CloseOrder",
      requestType = com.zhijiejiaoyu.glory_api.wxpay.CloseOrderRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.wxpay.CloseOrderResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.wxpay.CloseOrderRequest,
      com.zhijiejiaoyu.glory_api.wxpay.CloseOrderResponse> getCloseOrderMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.wxpay.CloseOrderRequest, com.zhijiejiaoyu.glory_api.wxpay.CloseOrderResponse> getCloseOrderMethod;
    if ((getCloseOrderMethod = glory_apiGrpc.getCloseOrderMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCloseOrderMethod = glory_apiGrpc.getCloseOrderMethod) == null) {
          glory_apiGrpc.getCloseOrderMethod = getCloseOrderMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.wxpay.CloseOrderRequest, com.zhijiejiaoyu.glory_api.wxpay.CloseOrderResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CloseOrder"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.wxpay.CloseOrderRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.wxpay.CloseOrderResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CloseOrder"))
              .build();
        }
      }
    }
    return getCloseOrderMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByIdRequest,
      com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByIdResponse> getQueryOrderByIdMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "QueryOrderById",
      requestType = com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByIdRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByIdResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByIdRequest,
      com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByIdResponse> getQueryOrderByIdMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByIdRequest, com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByIdResponse> getQueryOrderByIdMethod;
    if ((getQueryOrderByIdMethod = glory_apiGrpc.getQueryOrderByIdMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getQueryOrderByIdMethod = glory_apiGrpc.getQueryOrderByIdMethod) == null) {
          glory_apiGrpc.getQueryOrderByIdMethod = getQueryOrderByIdMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByIdRequest, com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByIdResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "QueryOrderById"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByIdRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByIdResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("QueryOrderById"))
              .build();
        }
      }
    }
    return getQueryOrderByIdMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByOutTradeNoRequest,
      com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByOutTradeNoResponse> getQueryOrderByOutTradeMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "QueryOrderByOutTrade",
      requestType = com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByOutTradeNoRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByOutTradeNoResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByOutTradeNoRequest,
      com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByOutTradeNoResponse> getQueryOrderByOutTradeMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByOutTradeNoRequest, com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByOutTradeNoResponse> getQueryOrderByOutTradeMethod;
    if ((getQueryOrderByOutTradeMethod = glory_apiGrpc.getQueryOrderByOutTradeMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getQueryOrderByOutTradeMethod = glory_apiGrpc.getQueryOrderByOutTradeMethod) == null) {
          glory_apiGrpc.getQueryOrderByOutTradeMethod = getQueryOrderByOutTradeMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByOutTradeNoRequest, com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByOutTradeNoResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "QueryOrderByOutTrade"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByOutTradeNoRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByOutTradeNoResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("QueryOrderByOutTrade"))
              .build();
        }
      }
    }
    return getQueryOrderByOutTradeMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.currency.AddVirtualCurrencyRequest,
      com.zhijiejiaoyu.glory_api.currency.AddVirtualCurrencyResponse> getAddVCurrencyMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "AddVCurrency",
      requestType = com.zhijiejiaoyu.glory_api.currency.AddVirtualCurrencyRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.currency.AddVirtualCurrencyResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.currency.AddVirtualCurrencyRequest,
      com.zhijiejiaoyu.glory_api.currency.AddVirtualCurrencyResponse> getAddVCurrencyMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.currency.AddVirtualCurrencyRequest, com.zhijiejiaoyu.glory_api.currency.AddVirtualCurrencyResponse> getAddVCurrencyMethod;
    if ((getAddVCurrencyMethod = glory_apiGrpc.getAddVCurrencyMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getAddVCurrencyMethod = glory_apiGrpc.getAddVCurrencyMethod) == null) {
          glory_apiGrpc.getAddVCurrencyMethod = getAddVCurrencyMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.currency.AddVirtualCurrencyRequest, com.zhijiejiaoyu.glory_api.currency.AddVirtualCurrencyResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "AddVCurrency"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.currency.AddVirtualCurrencyRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.currency.AddVirtualCurrencyResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("AddVCurrency"))
              .build();
        }
      }
    }
    return getAddVCurrencyMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyRequest,
      com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyResponse> getRechargeCurrencyMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "RechargeCurrency",
      requestType = com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyRequest,
      com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyResponse> getRechargeCurrencyMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyRequest, com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyResponse> getRechargeCurrencyMethod;
    if ((getRechargeCurrencyMethod = glory_apiGrpc.getRechargeCurrencyMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getRechargeCurrencyMethod = glory_apiGrpc.getRechargeCurrencyMethod) == null) {
          glory_apiGrpc.getRechargeCurrencyMethod = getRechargeCurrencyMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyRequest, com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "RechargeCurrency"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("RechargeCurrency"))
              .build();
        }
      }
    }
    return getRechargeCurrencyMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyInBatchesRequest,
      com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyInBatchesResponse> getRechargeCurrencyInBatchesMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "RechargeCurrencyInBatches",
      requestType = com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyInBatchesRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyInBatchesResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyInBatchesRequest,
      com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyInBatchesResponse> getRechargeCurrencyInBatchesMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyInBatchesRequest, com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyInBatchesResponse> getRechargeCurrencyInBatchesMethod;
    if ((getRechargeCurrencyInBatchesMethod = glory_apiGrpc.getRechargeCurrencyInBatchesMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getRechargeCurrencyInBatchesMethod = glory_apiGrpc.getRechargeCurrencyInBatchesMethod) == null) {
          glory_apiGrpc.getRechargeCurrencyInBatchesMethod = getRechargeCurrencyInBatchesMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyInBatchesRequest, com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyInBatchesResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "RechargeCurrencyInBatches"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyInBatchesRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyInBatchesResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("RechargeCurrencyInBatches"))
              .build();
        }
      }
    }
    return getRechargeCurrencyInBatchesMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.currency.GetVirtualCurrencyRequest,
      com.zhijiejiaoyu.glory_api.currency.GetVirtualCurrencyResponse> getGetVCurrencyMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetVCurrency",
      requestType = com.zhijiejiaoyu.glory_api.currency.GetVirtualCurrencyRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.currency.GetVirtualCurrencyResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.currency.GetVirtualCurrencyRequest,
      com.zhijiejiaoyu.glory_api.currency.GetVirtualCurrencyResponse> getGetVCurrencyMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.currency.GetVirtualCurrencyRequest, com.zhijiejiaoyu.glory_api.currency.GetVirtualCurrencyResponse> getGetVCurrencyMethod;
    if ((getGetVCurrencyMethod = glory_apiGrpc.getGetVCurrencyMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetVCurrencyMethod = glory_apiGrpc.getGetVCurrencyMethod) == null) {
          glory_apiGrpc.getGetVCurrencyMethod = getGetVCurrencyMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.currency.GetVirtualCurrencyRequest, com.zhijiejiaoyu.glory_api.currency.GetVirtualCurrencyResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetVCurrency"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.currency.GetVirtualCurrencyRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.currency.GetVirtualCurrencyResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetVCurrency"))
              .build();
        }
      }
    }
    return getGetVCurrencyMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.currency.ListVirtualCurrencyRequest,
      com.zhijiejiaoyu.glory_api.currency.ListVirtualCurrencyResponse> getListVCurrencyMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListVCurrency",
      requestType = com.zhijiejiaoyu.glory_api.currency.ListVirtualCurrencyRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.currency.ListVirtualCurrencyResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.currency.ListVirtualCurrencyRequest,
      com.zhijiejiaoyu.glory_api.currency.ListVirtualCurrencyResponse> getListVCurrencyMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.currency.ListVirtualCurrencyRequest, com.zhijiejiaoyu.glory_api.currency.ListVirtualCurrencyResponse> getListVCurrencyMethod;
    if ((getListVCurrencyMethod = glory_apiGrpc.getListVCurrencyMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListVCurrencyMethod = glory_apiGrpc.getListVCurrencyMethod) == null) {
          glory_apiGrpc.getListVCurrencyMethod = getListVCurrencyMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.currency.ListVirtualCurrencyRequest, com.zhijiejiaoyu.glory_api.currency.ListVirtualCurrencyResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListVCurrency"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.currency.ListVirtualCurrencyRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.currency.ListVirtualCurrencyResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListVCurrency"))
              .build();
        }
      }
    }
    return getListVCurrencyMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.account.ListAccountOperationRequest,
      com.zhijiejiaoyu.glory_api.account.ListAccountOperationResponse> getListAccountOperationMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListAccountOperation",
      requestType = com.zhijiejiaoyu.glory_api.account.ListAccountOperationRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.account.ListAccountOperationResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.account.ListAccountOperationRequest,
      com.zhijiejiaoyu.glory_api.account.ListAccountOperationResponse> getListAccountOperationMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.account.ListAccountOperationRequest, com.zhijiejiaoyu.glory_api.account.ListAccountOperationResponse> getListAccountOperationMethod;
    if ((getListAccountOperationMethod = glory_apiGrpc.getListAccountOperationMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListAccountOperationMethod = glory_apiGrpc.getListAccountOperationMethod) == null) {
          glory_apiGrpc.getListAccountOperationMethod = getListAccountOperationMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.account.ListAccountOperationRequest, com.zhijiejiaoyu.glory_api.account.ListAccountOperationResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListAccountOperation"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.account.ListAccountOperationRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.account.ListAccountOperationResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListAccountOperation"))
              .build();
        }
      }
    }
    return getListAccountOperationMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateRoomRequest,
      com.zhijiejiaoyu.glory_api.live.CreateRoomResponse> getCreateRoomMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateRoom",
      requestType = com.zhijiejiaoyu.glory_api.live.CreateRoomRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.CreateRoomResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateRoomRequest,
      com.zhijiejiaoyu.glory_api.live.CreateRoomResponse> getCreateRoomMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateRoomRequest, com.zhijiejiaoyu.glory_api.live.CreateRoomResponse> getCreateRoomMethod;
    if ((getCreateRoomMethod = glory_apiGrpc.getCreateRoomMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateRoomMethod = glory_apiGrpc.getCreateRoomMethod) == null) {
          glory_apiGrpc.getCreateRoomMethod = getCreateRoomMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.CreateRoomRequest, com.zhijiejiaoyu.glory_api.live.CreateRoomResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateRoom"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.CreateRoomRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.CreateRoomResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateRoom"))
              .build();
        }
      }
    }
    return getCreateRoomMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetRoomRequest,
      com.zhijiejiaoyu.glory_api.live.GetRoomResponse> getGetRoomMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetRoom",
      requestType = com.zhijiejiaoyu.glory_api.live.GetRoomRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.GetRoomResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetRoomRequest,
      com.zhijiejiaoyu.glory_api.live.GetRoomResponse> getGetRoomMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetRoomRequest, com.zhijiejiaoyu.glory_api.live.GetRoomResponse> getGetRoomMethod;
    if ((getGetRoomMethod = glory_apiGrpc.getGetRoomMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetRoomMethod = glory_apiGrpc.getGetRoomMethod) == null) {
          glory_apiGrpc.getGetRoomMethod = getGetRoomMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.GetRoomRequest, com.zhijiejiaoyu.glory_api.live.GetRoomResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetRoom"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetRoomRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetRoomResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetRoom"))
              .build();
        }
      }
    }
    return getGetRoomMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UpdateRoomRequest,
      com.zhijiejiaoyu.glory_api.live.UpdateRoomResponse> getUpdateRoomMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateRoom",
      requestType = com.zhijiejiaoyu.glory_api.live.UpdateRoomRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.UpdateRoomResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UpdateRoomRequest,
      com.zhijiejiaoyu.glory_api.live.UpdateRoomResponse> getUpdateRoomMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UpdateRoomRequest, com.zhijiejiaoyu.glory_api.live.UpdateRoomResponse> getUpdateRoomMethod;
    if ((getUpdateRoomMethod = glory_apiGrpc.getUpdateRoomMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateRoomMethod = glory_apiGrpc.getUpdateRoomMethod) == null) {
          glory_apiGrpc.getUpdateRoomMethod = getUpdateRoomMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.UpdateRoomRequest, com.zhijiejiaoyu.glory_api.live.UpdateRoomResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateRoom"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.UpdateRoomRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.UpdateRoomResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateRoom"))
              .build();
        }
      }
    }
    return getUpdateRoomMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListRoomRequest,
      com.zhijiejiaoyu.glory_api.live.ListRoomResponse> getListRoomMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListRoom",
      requestType = com.zhijiejiaoyu.glory_api.live.ListRoomRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.ListRoomResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListRoomRequest,
      com.zhijiejiaoyu.glory_api.live.ListRoomResponse> getListRoomMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListRoomRequest, com.zhijiejiaoyu.glory_api.live.ListRoomResponse> getListRoomMethod;
    if ((getListRoomMethod = glory_apiGrpc.getListRoomMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListRoomMethod = glory_apiGrpc.getListRoomMethod) == null) {
          glory_apiGrpc.getListRoomMethod = getListRoomMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.ListRoomRequest, com.zhijiejiaoyu.glory_api.live.ListRoomResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListRoom"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListRoomRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListRoomResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListRoom"))
              .build();
        }
      }
    }
    return getListRoomMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.DeleteRoomRequest,
      com.zhijiejiaoyu.glory_api.live.DeleteRoomResponse> getDeleteRoomMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteRoom",
      requestType = com.zhijiejiaoyu.glory_api.live.DeleteRoomRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.DeleteRoomResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.DeleteRoomRequest,
      com.zhijiejiaoyu.glory_api.live.DeleteRoomResponse> getDeleteRoomMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.DeleteRoomRequest, com.zhijiejiaoyu.glory_api.live.DeleteRoomResponse> getDeleteRoomMethod;
    if ((getDeleteRoomMethod = glory_apiGrpc.getDeleteRoomMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteRoomMethod = glory_apiGrpc.getDeleteRoomMethod) == null) {
          glory_apiGrpc.getDeleteRoomMethod = getDeleteRoomMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.DeleteRoomRequest, com.zhijiejiaoyu.glory_api.live.DeleteRoomResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteRoom"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.DeleteRoomRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.DeleteRoomResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteRoom"))
              .build();
        }
      }
    }
    return getDeleteRoomMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListFinishedRoomRequest,
      com.zhijiejiaoyu.glory_api.live.ListFinishedRoomResponse> getListFinishedRoomMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListFinishedRoom",
      requestType = com.zhijiejiaoyu.glory_api.live.ListFinishedRoomRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.ListFinishedRoomResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListFinishedRoomRequest,
      com.zhijiejiaoyu.glory_api.live.ListFinishedRoomResponse> getListFinishedRoomMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListFinishedRoomRequest, com.zhijiejiaoyu.glory_api.live.ListFinishedRoomResponse> getListFinishedRoomMethod;
    if ((getListFinishedRoomMethod = glory_apiGrpc.getListFinishedRoomMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListFinishedRoomMethod = glory_apiGrpc.getListFinishedRoomMethod) == null) {
          glory_apiGrpc.getListFinishedRoomMethod = getListFinishedRoomMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.ListFinishedRoomRequest, com.zhijiejiaoyu.glory_api.live.ListFinishedRoomResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListFinishedRoom"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListFinishedRoomRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListFinishedRoomResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListFinishedRoom"))
              .build();
        }
      }
    }
    return getListFinishedRoomMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetFinishedRoomRequest,
      com.zhijiejiaoyu.glory_api.live.GetFinishedRoomResponse> getGetFinishedRoomMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetFinishedRoom",
      requestType = com.zhijiejiaoyu.glory_api.live.GetFinishedRoomRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.GetFinishedRoomResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetFinishedRoomRequest,
      com.zhijiejiaoyu.glory_api.live.GetFinishedRoomResponse> getGetFinishedRoomMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetFinishedRoomRequest, com.zhijiejiaoyu.glory_api.live.GetFinishedRoomResponse> getGetFinishedRoomMethod;
    if ((getGetFinishedRoomMethod = glory_apiGrpc.getGetFinishedRoomMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetFinishedRoomMethod = glory_apiGrpc.getGetFinishedRoomMethod) == null) {
          glory_apiGrpc.getGetFinishedRoomMethod = getGetFinishedRoomMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.GetFinishedRoomRequest, com.zhijiejiaoyu.glory_api.live.GetFinishedRoomResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetFinishedRoom"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetFinishedRoomRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetFinishedRoomResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetFinishedRoom"))
              .build();
        }
      }
    }
    return getGetFinishedRoomMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.LiveRecordRequest,
      com.zhijiejiaoyu.glory_api.live.LiveRecordResponse> getRecordMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "Record",
      requestType = com.zhijiejiaoyu.glory_api.live.LiveRecordRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.LiveRecordResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.LiveRecordRequest,
      com.zhijiejiaoyu.glory_api.live.LiveRecordResponse> getRecordMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.LiveRecordRequest, com.zhijiejiaoyu.glory_api.live.LiveRecordResponse> getRecordMethod;
    if ((getRecordMethod = glory_apiGrpc.getRecordMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getRecordMethod = glory_apiGrpc.getRecordMethod) == null) {
          glory_apiGrpc.getRecordMethod = getRecordMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.LiveRecordRequest, com.zhijiejiaoyu.glory_api.live.LiveRecordResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "Record"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.LiveRecordRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.LiveRecordResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("Record"))
              .build();
        }
      }
    }
    return getRecordMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateLiveUserTokenRequest,
      com.zhijiejiaoyu.glory_api.live.CreateLiveUserTokenResponse> getCreateLiveUserTokenMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateLiveUserToken",
      requestType = com.zhijiejiaoyu.glory_api.live.CreateLiveUserTokenRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.CreateLiveUserTokenResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateLiveUserTokenRequest,
      com.zhijiejiaoyu.glory_api.live.CreateLiveUserTokenResponse> getCreateLiveUserTokenMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateLiveUserTokenRequest, com.zhijiejiaoyu.glory_api.live.CreateLiveUserTokenResponse> getCreateLiveUserTokenMethod;
    if ((getCreateLiveUserTokenMethod = glory_apiGrpc.getCreateLiveUserTokenMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateLiveUserTokenMethod = glory_apiGrpc.getCreateLiveUserTokenMethod) == null) {
          glory_apiGrpc.getCreateLiveUserTokenMethod = getCreateLiveUserTokenMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.CreateLiveUserTokenRequest, com.zhijiejiaoyu.glory_api.live.CreateLiveUserTokenResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateLiveUserToken"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.CreateLiveUserTokenRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.CreateLiveUserTokenResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateLiveUserToken"))
              .build();
        }
      }
    }
    return getCreateLiveUserTokenMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateNewMessageTokenRequest,
      com.zhijiejiaoyu.glory_api.live.CreateNewMessageTokenResponse> getCreateNewLiveUserTokenMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateNewLiveUserToken",
      requestType = com.zhijiejiaoyu.glory_api.live.CreateNewMessageTokenRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.CreateNewMessageTokenResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateNewMessageTokenRequest,
      com.zhijiejiaoyu.glory_api.live.CreateNewMessageTokenResponse> getCreateNewLiveUserTokenMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateNewMessageTokenRequest, com.zhijiejiaoyu.glory_api.live.CreateNewMessageTokenResponse> getCreateNewLiveUserTokenMethod;
    if ((getCreateNewLiveUserTokenMethod = glory_apiGrpc.getCreateNewLiveUserTokenMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateNewLiveUserTokenMethod = glory_apiGrpc.getCreateNewLiveUserTokenMethod) == null) {
          glory_apiGrpc.getCreateNewLiveUserTokenMethod = getCreateNewLiveUserTokenMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.CreateNewMessageTokenRequest, com.zhijiejiaoyu.glory_api.live.CreateNewMessageTokenResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateNewLiveUserToken"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.CreateNewMessageTokenRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.CreateNewMessageTokenResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateNewLiveUserToken"))
              .build();
        }
      }
    }
    return getCreateNewLiveUserTokenMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UserEnterRoomRequest,
      com.zhijiejiaoyu.glory_api.live.UserEnterRoomResponse> getUserEnterRoomMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UserEnterRoom",
      requestType = com.zhijiejiaoyu.glory_api.live.UserEnterRoomRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.UserEnterRoomResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UserEnterRoomRequest,
      com.zhijiejiaoyu.glory_api.live.UserEnterRoomResponse> getUserEnterRoomMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UserEnterRoomRequest, com.zhijiejiaoyu.glory_api.live.UserEnterRoomResponse> getUserEnterRoomMethod;
    if ((getUserEnterRoomMethod = glory_apiGrpc.getUserEnterRoomMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUserEnterRoomMethod = glory_apiGrpc.getUserEnterRoomMethod) == null) {
          glory_apiGrpc.getUserEnterRoomMethod = getUserEnterRoomMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.UserEnterRoomRequest, com.zhijiejiaoyu.glory_api.live.UserEnterRoomResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UserEnterRoom"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.UserEnterRoomRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.UserEnterRoomResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UserEnterRoom"))
              .build();
        }
      }
    }
    return getUserEnterRoomMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UserExitRoomRequest,
      com.zhijiejiaoyu.glory_api.live.UserExitRoomResponse> getUserExitRoomMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UserExitRoom",
      requestType = com.zhijiejiaoyu.glory_api.live.UserExitRoomRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.UserExitRoomResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UserExitRoomRequest,
      com.zhijiejiaoyu.glory_api.live.UserExitRoomResponse> getUserExitRoomMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UserExitRoomRequest, com.zhijiejiaoyu.glory_api.live.UserExitRoomResponse> getUserExitRoomMethod;
    if ((getUserExitRoomMethod = glory_apiGrpc.getUserExitRoomMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUserExitRoomMethod = glory_apiGrpc.getUserExitRoomMethod) == null) {
          glory_apiGrpc.getUserExitRoomMethod = getUserExitRoomMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.UserExitRoomRequest, com.zhijiejiaoyu.glory_api.live.UserExitRoomResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UserExitRoom"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.UserExitRoomRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.UserExitRoomResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UserExitRoom"))
              .build();
        }
      }
    }
    return getUserExitRoomMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListActiveRoomUserRequest,
      com.zhijiejiaoyu.glory_api.seller.ListAttachmentResponse> getListActiveRoomUserMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListActiveRoomUser",
      requestType = com.zhijiejiaoyu.glory_api.live.ListActiveRoomUserRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.seller.ListAttachmentResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListActiveRoomUserRequest,
      com.zhijiejiaoyu.glory_api.seller.ListAttachmentResponse> getListActiveRoomUserMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListActiveRoomUserRequest, com.zhijiejiaoyu.glory_api.seller.ListAttachmentResponse> getListActiveRoomUserMethod;
    if ((getListActiveRoomUserMethod = glory_apiGrpc.getListActiveRoomUserMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListActiveRoomUserMethod = glory_apiGrpc.getListActiveRoomUserMethod) == null) {
          glory_apiGrpc.getListActiveRoomUserMethod = getListActiveRoomUserMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.ListActiveRoomUserRequest, com.zhijiejiaoyu.glory_api.seller.ListAttachmentResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListActiveRoomUser"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListActiveRoomUserRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.seller.ListAttachmentResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListActiveRoomUser"))
              .build();
        }
      }
    }
    return getListActiveRoomUserMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.LiveSSERequest,
      com.zhijiejiaoyu.glory_api.live.LiveSSEResponse> getLiveSSEMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "LiveSSE",
      requestType = com.zhijiejiaoyu.glory_api.live.LiveSSERequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.LiveSSEResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.LiveSSERequest,
      com.zhijiejiaoyu.glory_api.live.LiveSSEResponse> getLiveSSEMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.LiveSSERequest, com.zhijiejiaoyu.glory_api.live.LiveSSEResponse> getLiveSSEMethod;
    if ((getLiveSSEMethod = glory_apiGrpc.getLiveSSEMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getLiveSSEMethod = glory_apiGrpc.getLiveSSEMethod) == null) {
          glory_apiGrpc.getLiveSSEMethod = getLiveSSEMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.LiveSSERequest, com.zhijiejiaoyu.glory_api.live.LiveSSEResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "LiveSSE"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.LiveSSERequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.LiveSSEResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("LiveSSE"))
              .build();
        }
      }
    }
    return getLiveSSEMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CloseShopAllLiveRequest,
      com.zhijiejiaoyu.glory_api.live.CloseShopAllLiveResponse> getCloseShopAllLiveMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CloseShopAllLive",
      requestType = com.zhijiejiaoyu.glory_api.live.CloseShopAllLiveRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.CloseShopAllLiveResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CloseShopAllLiveRequest,
      com.zhijiejiaoyu.glory_api.live.CloseShopAllLiveResponse> getCloseShopAllLiveMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CloseShopAllLiveRequest, com.zhijiejiaoyu.glory_api.live.CloseShopAllLiveResponse> getCloseShopAllLiveMethod;
    if ((getCloseShopAllLiveMethod = glory_apiGrpc.getCloseShopAllLiveMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCloseShopAllLiveMethod = glory_apiGrpc.getCloseShopAllLiveMethod) == null) {
          glory_apiGrpc.getCloseShopAllLiveMethod = getCloseShopAllLiveMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.CloseShopAllLiveRequest, com.zhijiejiaoyu.glory_api.live.CloseShopAllLiveResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CloseShopAllLive"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.CloseShopAllLiveRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.CloseShopAllLiveResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CloseShopAllLive"))
              .build();
        }
      }
    }
    return getCloseShopAllLiveMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UpdateLiveCommentCountRequest,
      com.zhijiejiaoyu.glory_api.live.UpdateLiveCommentCountResponse> getUpdateLiveCommentCountMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateLiveCommentCount",
      requestType = com.zhijiejiaoyu.glory_api.live.UpdateLiveCommentCountRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.UpdateLiveCommentCountResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UpdateLiveCommentCountRequest,
      com.zhijiejiaoyu.glory_api.live.UpdateLiveCommentCountResponse> getUpdateLiveCommentCountMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UpdateLiveCommentCountRequest, com.zhijiejiaoyu.glory_api.live.UpdateLiveCommentCountResponse> getUpdateLiveCommentCountMethod;
    if ((getUpdateLiveCommentCountMethod = glory_apiGrpc.getUpdateLiveCommentCountMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateLiveCommentCountMethod = glory_apiGrpc.getUpdateLiveCommentCountMethod) == null) {
          glory_apiGrpc.getUpdateLiveCommentCountMethod = getUpdateLiveCommentCountMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.UpdateLiveCommentCountRequest, com.zhijiejiaoyu.glory_api.live.UpdateLiveCommentCountResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateLiveCommentCount"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.UpdateLiveCommentCountRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.UpdateLiveCommentCountResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateLiveCommentCount"))
              .build();
        }
      }
    }
    return getUpdateLiveCommentCountMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateLivePlanRequest,
      com.zhijiejiaoyu.glory_api.live.CreateLivePlanResponse> getCreateLivePlanMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateLivePlan",
      requestType = com.zhijiejiaoyu.glory_api.live.CreateLivePlanRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.CreateLivePlanResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateLivePlanRequest,
      com.zhijiejiaoyu.glory_api.live.CreateLivePlanResponse> getCreateLivePlanMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateLivePlanRequest, com.zhijiejiaoyu.glory_api.live.CreateLivePlanResponse> getCreateLivePlanMethod;
    if ((getCreateLivePlanMethod = glory_apiGrpc.getCreateLivePlanMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateLivePlanMethod = glory_apiGrpc.getCreateLivePlanMethod) == null) {
          glory_apiGrpc.getCreateLivePlanMethod = getCreateLivePlanMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.CreateLivePlanRequest, com.zhijiejiaoyu.glory_api.live.CreateLivePlanResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateLivePlan"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.CreateLivePlanRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.CreateLivePlanResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateLivePlan"))
              .build();
        }
      }
    }
    return getCreateLivePlanMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetLivePlanRequest,
      com.zhijiejiaoyu.glory_api.live.GetLivePlanResponse> getGetLivePlanMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetLivePlan",
      requestType = com.zhijiejiaoyu.glory_api.live.GetLivePlanRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.GetLivePlanResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetLivePlanRequest,
      com.zhijiejiaoyu.glory_api.live.GetLivePlanResponse> getGetLivePlanMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetLivePlanRequest, com.zhijiejiaoyu.glory_api.live.GetLivePlanResponse> getGetLivePlanMethod;
    if ((getGetLivePlanMethod = glory_apiGrpc.getGetLivePlanMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetLivePlanMethod = glory_apiGrpc.getGetLivePlanMethod) == null) {
          glory_apiGrpc.getGetLivePlanMethod = getGetLivePlanMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.GetLivePlanRequest, com.zhijiejiaoyu.glory_api.live.GetLivePlanResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetLivePlan"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetLivePlanRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetLivePlanResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetLivePlan"))
              .build();
        }
      }
    }
    return getGetLivePlanMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UpdateLivePlanRequest,
      com.zhijiejiaoyu.glory_api.live.UpdateLivePlanResponse> getUpdateLivePlanMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateLivePlan",
      requestType = com.zhijiejiaoyu.glory_api.live.UpdateLivePlanRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.UpdateLivePlanResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UpdateLivePlanRequest,
      com.zhijiejiaoyu.glory_api.live.UpdateLivePlanResponse> getUpdateLivePlanMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UpdateLivePlanRequest, com.zhijiejiaoyu.glory_api.live.UpdateLivePlanResponse> getUpdateLivePlanMethod;
    if ((getUpdateLivePlanMethod = glory_apiGrpc.getUpdateLivePlanMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateLivePlanMethod = glory_apiGrpc.getUpdateLivePlanMethod) == null) {
          glory_apiGrpc.getUpdateLivePlanMethod = getUpdateLivePlanMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.UpdateLivePlanRequest, com.zhijiejiaoyu.glory_api.live.UpdateLivePlanResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateLivePlan"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.UpdateLivePlanRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.UpdateLivePlanResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateLivePlan"))
              .build();
        }
      }
    }
    return getUpdateLivePlanMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListLivePlanRequest,
      com.zhijiejiaoyu.glory_api.live.ListLivePlanResponse> getListLivePlanMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListLivePlan",
      requestType = com.zhijiejiaoyu.glory_api.live.ListLivePlanRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.ListLivePlanResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListLivePlanRequest,
      com.zhijiejiaoyu.glory_api.live.ListLivePlanResponse> getListLivePlanMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListLivePlanRequest, com.zhijiejiaoyu.glory_api.live.ListLivePlanResponse> getListLivePlanMethod;
    if ((getListLivePlanMethod = glory_apiGrpc.getListLivePlanMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListLivePlanMethod = glory_apiGrpc.getListLivePlanMethod) == null) {
          glory_apiGrpc.getListLivePlanMethod = getListLivePlanMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.ListLivePlanRequest, com.zhijiejiaoyu.glory_api.live.ListLivePlanResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListLivePlan"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListLivePlanRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListLivePlanResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListLivePlan"))
              .build();
        }
      }
    }
    return getListLivePlanMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.DeleteLivePlanRequest,
      com.zhijiejiaoyu.glory_api.live.DeleteLivePlanResponse> getDeleteLivePlanMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteLivePlan",
      requestType = com.zhijiejiaoyu.glory_api.live.DeleteLivePlanRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.DeleteLivePlanResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.DeleteLivePlanRequest,
      com.zhijiejiaoyu.glory_api.live.DeleteLivePlanResponse> getDeleteLivePlanMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.DeleteLivePlanRequest, com.zhijiejiaoyu.glory_api.live.DeleteLivePlanResponse> getDeleteLivePlanMethod;
    if ((getDeleteLivePlanMethod = glory_apiGrpc.getDeleteLivePlanMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteLivePlanMethod = glory_apiGrpc.getDeleteLivePlanMethod) == null) {
          glory_apiGrpc.getDeleteLivePlanMethod = getDeleteLivePlanMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.DeleteLivePlanRequest, com.zhijiejiaoyu.glory_api.live.DeleteLivePlanResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteLivePlan"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.DeleteLivePlanRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.DeleteLivePlanResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteLivePlan"))
              .build();
        }
      }
    }
    return getDeleteLivePlanMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateLivePlanProductRequest,
      com.zhijiejiaoyu.glory_api.live.CreateLivePlanProductResponse> getCreateLivePlanProductMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateLivePlanProduct",
      requestType = com.zhijiejiaoyu.glory_api.live.CreateLivePlanProductRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.CreateLivePlanProductResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateLivePlanProductRequest,
      com.zhijiejiaoyu.glory_api.live.CreateLivePlanProductResponse> getCreateLivePlanProductMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateLivePlanProductRequest, com.zhijiejiaoyu.glory_api.live.CreateLivePlanProductResponse> getCreateLivePlanProductMethod;
    if ((getCreateLivePlanProductMethod = glory_apiGrpc.getCreateLivePlanProductMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateLivePlanProductMethod = glory_apiGrpc.getCreateLivePlanProductMethod) == null) {
          glory_apiGrpc.getCreateLivePlanProductMethod = getCreateLivePlanProductMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.CreateLivePlanProductRequest, com.zhijiejiaoyu.glory_api.live.CreateLivePlanProductResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateLivePlanProduct"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.CreateLivePlanProductRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.CreateLivePlanProductResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateLivePlanProduct"))
              .build();
        }
      }
    }
    return getCreateLivePlanProductMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UpdateLivePlanProductRequest,
      com.zhijiejiaoyu.glory_api.live.UpdateLivePlanProductResponse> getUpdateLivePlanProductMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateLivePlanProduct",
      requestType = com.zhijiejiaoyu.glory_api.live.UpdateLivePlanProductRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.UpdateLivePlanProductResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UpdateLivePlanProductRequest,
      com.zhijiejiaoyu.glory_api.live.UpdateLivePlanProductResponse> getUpdateLivePlanProductMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UpdateLivePlanProductRequest, com.zhijiejiaoyu.glory_api.live.UpdateLivePlanProductResponse> getUpdateLivePlanProductMethod;
    if ((getUpdateLivePlanProductMethod = glory_apiGrpc.getUpdateLivePlanProductMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateLivePlanProductMethod = glory_apiGrpc.getUpdateLivePlanProductMethod) == null) {
          glory_apiGrpc.getUpdateLivePlanProductMethod = getUpdateLivePlanProductMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.UpdateLivePlanProductRequest, com.zhijiejiaoyu.glory_api.live.UpdateLivePlanProductResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateLivePlanProduct"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.UpdateLivePlanProductRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.UpdateLivePlanProductResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateLivePlanProduct"))
              .build();
        }
      }
    }
    return getUpdateLivePlanProductMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListLivePlanProductRequest,
      com.zhijiejiaoyu.glory_api.live.ListLivePlanProductResponse> getListLivePlanProductMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListLivePlanProduct",
      requestType = com.zhijiejiaoyu.glory_api.live.ListLivePlanProductRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.ListLivePlanProductResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListLivePlanProductRequest,
      com.zhijiejiaoyu.glory_api.live.ListLivePlanProductResponse> getListLivePlanProductMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListLivePlanProductRequest, com.zhijiejiaoyu.glory_api.live.ListLivePlanProductResponse> getListLivePlanProductMethod;
    if ((getListLivePlanProductMethod = glory_apiGrpc.getListLivePlanProductMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListLivePlanProductMethod = glory_apiGrpc.getListLivePlanProductMethod) == null) {
          glory_apiGrpc.getListLivePlanProductMethod = getListLivePlanProductMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.ListLivePlanProductRequest, com.zhijiejiaoyu.glory_api.live.ListLivePlanProductResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListLivePlanProduct"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListLivePlanProductRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListLivePlanProductResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListLivePlanProduct"))
              .build();
        }
      }
    }
    return getListLivePlanProductMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.DeleteLivePlanProductRequest,
      com.zhijiejiaoyu.glory_api.live.DeleteLivePlanProductResponse> getDeleteLivePlanProductMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteLivePlanProduct",
      requestType = com.zhijiejiaoyu.glory_api.live.DeleteLivePlanProductRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.DeleteLivePlanProductResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.DeleteLivePlanProductRequest,
      com.zhijiejiaoyu.glory_api.live.DeleteLivePlanProductResponse> getDeleteLivePlanProductMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.DeleteLivePlanProductRequest, com.zhijiejiaoyu.glory_api.live.DeleteLivePlanProductResponse> getDeleteLivePlanProductMethod;
    if ((getDeleteLivePlanProductMethod = glory_apiGrpc.getDeleteLivePlanProductMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteLivePlanProductMethod = glory_apiGrpc.getDeleteLivePlanProductMethod) == null) {
          glory_apiGrpc.getDeleteLivePlanProductMethod = getDeleteLivePlanProductMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.DeleteLivePlanProductRequest, com.zhijiejiaoyu.glory_api.live.DeleteLivePlanProductResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteLivePlanProduct"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.DeleteLivePlanProductRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.DeleteLivePlanProductResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteLivePlanProduct"))
              .build();
        }
      }
    }
    return getDeleteLivePlanProductMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.LoadLivePlanProductRequest,
      com.zhijiejiaoyu.glory_api.live.LoadLivePlanProductResponse> getLoadLivePlanProductMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "LoadLivePlanProduct",
      requestType = com.zhijiejiaoyu.glory_api.live.LoadLivePlanProductRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.LoadLivePlanProductResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.LoadLivePlanProductRequest,
      com.zhijiejiaoyu.glory_api.live.LoadLivePlanProductResponse> getLoadLivePlanProductMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.LoadLivePlanProductRequest, com.zhijiejiaoyu.glory_api.live.LoadLivePlanProductResponse> getLoadLivePlanProductMethod;
    if ((getLoadLivePlanProductMethod = glory_apiGrpc.getLoadLivePlanProductMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getLoadLivePlanProductMethod = glory_apiGrpc.getLoadLivePlanProductMethod) == null) {
          glory_apiGrpc.getLoadLivePlanProductMethod = getLoadLivePlanProductMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.LoadLivePlanProductRequest, com.zhijiejiaoyu.glory_api.live.LoadLivePlanProductResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "LoadLivePlanProduct"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.LoadLivePlanProductRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.LoadLivePlanProductResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("LoadLivePlanProduct"))
              .build();
        }
      }
    }
    return getLoadLivePlanProductMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UpdateLiveProductStatusRequest,
      com.zhijiejiaoyu.glory_api.live.UpdateLiveProductStatusResponse> getUpdateLiveProductStatusMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateLiveProductStatus",
      requestType = com.zhijiejiaoyu.glory_api.live.UpdateLiveProductStatusRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.UpdateLiveProductStatusResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UpdateLiveProductStatusRequest,
      com.zhijiejiaoyu.glory_api.live.UpdateLiveProductStatusResponse> getUpdateLiveProductStatusMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UpdateLiveProductStatusRequest, com.zhijiejiaoyu.glory_api.live.UpdateLiveProductStatusResponse> getUpdateLiveProductStatusMethod;
    if ((getUpdateLiveProductStatusMethod = glory_apiGrpc.getUpdateLiveProductStatusMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateLiveProductStatusMethod = glory_apiGrpc.getUpdateLiveProductStatusMethod) == null) {
          glory_apiGrpc.getUpdateLiveProductStatusMethod = getUpdateLiveProductStatusMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.UpdateLiveProductStatusRequest, com.zhijiejiaoyu.glory_api.live.UpdateLiveProductStatusResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateLiveProductStatus"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.UpdateLiveProductStatusRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.UpdateLiveProductStatusResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateLiveProductStatus"))
              .build();
        }
      }
    }
    return getUpdateLiveProductStatusMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListLiveProductStatusRequest,
      com.zhijiejiaoyu.glory_api.live.ListLiveProductStatusResponse> getListLiveProductStatusMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListLiveProductStatus",
      requestType = com.zhijiejiaoyu.glory_api.live.ListLiveProductStatusRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.ListLiveProductStatusResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListLiveProductStatusRequest,
      com.zhijiejiaoyu.glory_api.live.ListLiveProductStatusResponse> getListLiveProductStatusMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListLiveProductStatusRequest, com.zhijiejiaoyu.glory_api.live.ListLiveProductStatusResponse> getListLiveProductStatusMethod;
    if ((getListLiveProductStatusMethod = glory_apiGrpc.getListLiveProductStatusMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListLiveProductStatusMethod = glory_apiGrpc.getListLiveProductStatusMethod) == null) {
          glory_apiGrpc.getListLiveProductStatusMethod = getListLiveProductStatusMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.ListLiveProductStatusRequest, com.zhijiejiaoyu.glory_api.live.ListLiveProductStatusResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListLiveProductStatus"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListLiveProductStatusRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListLiveProductStatusResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListLiveProductStatus"))
              .build();
        }
      }
    }
    return getListLiveProductStatusMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.DeleteLiveProductStatusRequest,
      com.zhijiejiaoyu.glory_api.live.DeleteLiveProductStatusResponse> getDeleteLiveProductStatusMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteLiveProductStatus",
      requestType = com.zhijiejiaoyu.glory_api.live.DeleteLiveProductStatusRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.DeleteLiveProductStatusResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.DeleteLiveProductStatusRequest,
      com.zhijiejiaoyu.glory_api.live.DeleteLiveProductStatusResponse> getDeleteLiveProductStatusMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.DeleteLiveProductStatusRequest, com.zhijiejiaoyu.glory_api.live.DeleteLiveProductStatusResponse> getDeleteLiveProductStatusMethod;
    if ((getDeleteLiveProductStatusMethod = glory_apiGrpc.getDeleteLiveProductStatusMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteLiveProductStatusMethod = glory_apiGrpc.getDeleteLiveProductStatusMethod) == null) {
          glory_apiGrpc.getDeleteLiveProductStatusMethod = getDeleteLiveProductStatusMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.DeleteLiveProductStatusRequest, com.zhijiejiaoyu.glory_api.live.DeleteLiveProductStatusResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteLiveProductStatus"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.DeleteLiveProductStatusRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.DeleteLiveProductStatusResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteLiveProductStatus"))
              .build();
        }
      }
    }
    return getDeleteLiveProductStatusMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateLiveProductStatusRequest,
      com.zhijiejiaoyu.glory_api.live.CreateLiveProductStatusResponse> getCreateLiveProductStatusMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateLiveProductStatus",
      requestType = com.zhijiejiaoyu.glory_api.live.CreateLiveProductStatusRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.CreateLiveProductStatusResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateLiveProductStatusRequest,
      com.zhijiejiaoyu.glory_api.live.CreateLiveProductStatusResponse> getCreateLiveProductStatusMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateLiveProductStatusRequest, com.zhijiejiaoyu.glory_api.live.CreateLiveProductStatusResponse> getCreateLiveProductStatusMethod;
    if ((getCreateLiveProductStatusMethod = glory_apiGrpc.getCreateLiveProductStatusMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateLiveProductStatusMethod = glory_apiGrpc.getCreateLiveProductStatusMethod) == null) {
          glory_apiGrpc.getCreateLiveProductStatusMethod = getCreateLiveProductStatusMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.CreateLiveProductStatusRequest, com.zhijiejiaoyu.glory_api.live.CreateLiveProductStatusResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateLiveProductStatus"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.CreateLiveProductStatusRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.CreateLiveProductStatusResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateLiveProductStatus"))
              .build();
        }
      }
    }
    return getCreateLiveProductStatusMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetLivingProductStatusRequest,
      com.zhijiejiaoyu.glory_api.live.GetLivingProductStatusResponse> getGetLivingProductStatusMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetLivingProductStatus",
      requestType = com.zhijiejiaoyu.glory_api.live.GetLivingProductStatusRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.GetLivingProductStatusResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetLivingProductStatusRequest,
      com.zhijiejiaoyu.glory_api.live.GetLivingProductStatusResponse> getGetLivingProductStatusMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetLivingProductStatusRequest, com.zhijiejiaoyu.glory_api.live.GetLivingProductStatusResponse> getGetLivingProductStatusMethod;
    if ((getGetLivingProductStatusMethod = glory_apiGrpc.getGetLivingProductStatusMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetLivingProductStatusMethod = glory_apiGrpc.getGetLivingProductStatusMethod) == null) {
          glory_apiGrpc.getGetLivingProductStatusMethod = getGetLivingProductStatusMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.GetLivingProductStatusRequest, com.zhijiejiaoyu.glory_api.live.GetLivingProductStatusResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetLivingProductStatus"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetLivingProductStatusRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetLivingProductStatusResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetLivingProductStatus"))
              .build();
        }
      }
    }
    return getGetLivingProductStatusMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UpdateLiveProductIntroductStatusRequest,
      com.zhijiejiaoyu.glory_api.live.UpdateLiveProductIntroductStatusResponse> getUpdateLiveProductIntroductStatusMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateLiveProductIntroductStatus",
      requestType = com.zhijiejiaoyu.glory_api.live.UpdateLiveProductIntroductStatusRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.UpdateLiveProductIntroductStatusResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UpdateLiveProductIntroductStatusRequest,
      com.zhijiejiaoyu.glory_api.live.UpdateLiveProductIntroductStatusResponse> getUpdateLiveProductIntroductStatusMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UpdateLiveProductIntroductStatusRequest, com.zhijiejiaoyu.glory_api.live.UpdateLiveProductIntroductStatusResponse> getUpdateLiveProductIntroductStatusMethod;
    if ((getUpdateLiveProductIntroductStatusMethod = glory_apiGrpc.getUpdateLiveProductIntroductStatusMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateLiveProductIntroductStatusMethod = glory_apiGrpc.getUpdateLiveProductIntroductStatusMethod) == null) {
          glory_apiGrpc.getUpdateLiveProductIntroductStatusMethod = getUpdateLiveProductIntroductStatusMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.UpdateLiveProductIntroductStatusRequest, com.zhijiejiaoyu.glory_api.live.UpdateLiveProductIntroductStatusResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateLiveProductIntroductStatus"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.UpdateLiveProductIntroductStatusRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.UpdateLiveProductIntroductStatusResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateLiveProductIntroductStatus"))
              .build();
        }
      }
    }
    return getUpdateLiveProductIntroductStatusMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateLiveTextRequest,
      com.zhijiejiaoyu.glory_api.live.CreateLiveTextResponse> getCreateLiveTextMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateLiveText",
      requestType = com.zhijiejiaoyu.glory_api.live.CreateLiveTextRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.CreateLiveTextResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateLiveTextRequest,
      com.zhijiejiaoyu.glory_api.live.CreateLiveTextResponse> getCreateLiveTextMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateLiveTextRequest, com.zhijiejiaoyu.glory_api.live.CreateLiveTextResponse> getCreateLiveTextMethod;
    if ((getCreateLiveTextMethod = glory_apiGrpc.getCreateLiveTextMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateLiveTextMethod = glory_apiGrpc.getCreateLiveTextMethod) == null) {
          glory_apiGrpc.getCreateLiveTextMethod = getCreateLiveTextMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.CreateLiveTextRequest, com.zhijiejiaoyu.glory_api.live.CreateLiveTextResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateLiveText"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.CreateLiveTextRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.CreateLiveTextResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateLiveText"))
              .build();
        }
      }
    }
    return getCreateLiveTextMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UpdateLiveTextRequest,
      com.zhijiejiaoyu.glory_api.live.UpdateLiveTextResponse> getUpdateLiveTextMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateLiveText",
      requestType = com.zhijiejiaoyu.glory_api.live.UpdateLiveTextRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.UpdateLiveTextResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UpdateLiveTextRequest,
      com.zhijiejiaoyu.glory_api.live.UpdateLiveTextResponse> getUpdateLiveTextMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UpdateLiveTextRequest, com.zhijiejiaoyu.glory_api.live.UpdateLiveTextResponse> getUpdateLiveTextMethod;
    if ((getUpdateLiveTextMethod = glory_apiGrpc.getUpdateLiveTextMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateLiveTextMethod = glory_apiGrpc.getUpdateLiveTextMethod) == null) {
          glory_apiGrpc.getUpdateLiveTextMethod = getUpdateLiveTextMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.UpdateLiveTextRequest, com.zhijiejiaoyu.glory_api.live.UpdateLiveTextResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateLiveText"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.UpdateLiveTextRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.UpdateLiveTextResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateLiveText"))
              .build();
        }
      }
    }
    return getUpdateLiveTextMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListLiveTextRequest,
      com.zhijiejiaoyu.glory_api.live.ListLiveTextResponse> getListLiveTextMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListLiveText",
      requestType = com.zhijiejiaoyu.glory_api.live.ListLiveTextRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.ListLiveTextResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListLiveTextRequest,
      com.zhijiejiaoyu.glory_api.live.ListLiveTextResponse> getListLiveTextMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListLiveTextRequest, com.zhijiejiaoyu.glory_api.live.ListLiveTextResponse> getListLiveTextMethod;
    if ((getListLiveTextMethod = glory_apiGrpc.getListLiveTextMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListLiveTextMethod = glory_apiGrpc.getListLiveTextMethod) == null) {
          glory_apiGrpc.getListLiveTextMethod = getListLiveTextMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.ListLiveTextRequest, com.zhijiejiaoyu.glory_api.live.ListLiveTextResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListLiveText"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListLiveTextRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListLiveTextResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListLiveText"))
              .build();
        }
      }
    }
    return getListLiveTextMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetLiveTextRequest,
      com.zhijiejiaoyu.glory_api.live.GetLiveTextResponse> getGetLiveTextMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetLiveText",
      requestType = com.zhijiejiaoyu.glory_api.live.GetLiveTextRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.GetLiveTextResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetLiveTextRequest,
      com.zhijiejiaoyu.glory_api.live.GetLiveTextResponse> getGetLiveTextMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetLiveTextRequest, com.zhijiejiaoyu.glory_api.live.GetLiveTextResponse> getGetLiveTextMethod;
    if ((getGetLiveTextMethod = glory_apiGrpc.getGetLiveTextMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetLiveTextMethod = glory_apiGrpc.getGetLiveTextMethod) == null) {
          glory_apiGrpc.getGetLiveTextMethod = getGetLiveTextMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.GetLiveTextRequest, com.zhijiejiaoyu.glory_api.live.GetLiveTextResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetLiveText"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetLiveTextRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetLiveTextResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetLiveText"))
              .build();
        }
      }
    }
    return getGetLiveTextMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.DeleteLiveTextsRequest,
      com.zhijiejiaoyu.glory_api.live.DeleteLiveTextsResponse> getDeleteLiveTextsMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteLiveTexts",
      requestType = com.zhijiejiaoyu.glory_api.live.DeleteLiveTextsRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.DeleteLiveTextsResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.DeleteLiveTextsRequest,
      com.zhijiejiaoyu.glory_api.live.DeleteLiveTextsResponse> getDeleteLiveTextsMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.DeleteLiveTextsRequest, com.zhijiejiaoyu.glory_api.live.DeleteLiveTextsResponse> getDeleteLiveTextsMethod;
    if ((getDeleteLiveTextsMethod = glory_apiGrpc.getDeleteLiveTextsMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteLiveTextsMethod = glory_apiGrpc.getDeleteLiveTextsMethod) == null) {
          glory_apiGrpc.getDeleteLiveTextsMethod = getDeleteLiveTextsMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.DeleteLiveTextsRequest, com.zhijiejiaoyu.glory_api.live.DeleteLiveTextsResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteLiveTexts"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.DeleteLiveTextsRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.DeleteLiveTextsResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteLiveTexts"))
              .build();
        }
      }
    }
    return getDeleteLiveTextsMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.TeacherListStudentShortVideoTextRequest,
      com.zhijiejiaoyu.glory_api.live.TeacherListStudentShortVideoTextResponse> getTeacherListStudentShortVideoTextMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "TeacherListStudentShortVideoText",
      requestType = com.zhijiejiaoyu.glory_api.live.TeacherListStudentShortVideoTextRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.TeacherListStudentShortVideoTextResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.TeacherListStudentShortVideoTextRequest,
      com.zhijiejiaoyu.glory_api.live.TeacherListStudentShortVideoTextResponse> getTeacherListStudentShortVideoTextMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.TeacherListStudentShortVideoTextRequest, com.zhijiejiaoyu.glory_api.live.TeacherListStudentShortVideoTextResponse> getTeacherListStudentShortVideoTextMethod;
    if ((getTeacherListStudentShortVideoTextMethod = glory_apiGrpc.getTeacherListStudentShortVideoTextMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getTeacherListStudentShortVideoTextMethod = glory_apiGrpc.getTeacherListStudentShortVideoTextMethod) == null) {
          glory_apiGrpc.getTeacherListStudentShortVideoTextMethod = getTeacherListStudentShortVideoTextMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.TeacherListStudentShortVideoTextRequest, com.zhijiejiaoyu.glory_api.live.TeacherListStudentShortVideoTextResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "TeacherListStudentShortVideoText"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.TeacherListStudentShortVideoTextRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.TeacherListStudentShortVideoTextResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("TeacherListStudentShortVideoText"))
              .build();
        }
      }
    }
    return getTeacherListStudentShortVideoTextMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetLiveChartDataRequest,
      com.zhijiejiaoyu.glory_api.live.GetLiveChartDataResponse> getGetLiveChartDataMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetLiveChartData",
      requestType = com.zhijiejiaoyu.glory_api.live.GetLiveChartDataRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.GetLiveChartDataResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetLiveChartDataRequest,
      com.zhijiejiaoyu.glory_api.live.GetLiveChartDataResponse> getGetLiveChartDataMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetLiveChartDataRequest, com.zhijiejiaoyu.glory_api.live.GetLiveChartDataResponse> getGetLiveChartDataMethod;
    if ((getGetLiveChartDataMethod = glory_apiGrpc.getGetLiveChartDataMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetLiveChartDataMethod = glory_apiGrpc.getGetLiveChartDataMethod) == null) {
          glory_apiGrpc.getGetLiveChartDataMethod = getGetLiveChartDataMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.GetLiveChartDataRequest, com.zhijiejiaoyu.glory_api.live.GetLiveChartDataResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetLiveChartData"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetLiveChartDataRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetLiveChartDataResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetLiveChartData"))
              .build();
        }
      }
    }
    return getGetLiveChartDataMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetEvaluateSelectorRequest,
      com.zhijiejiaoyu.glory_api.live.GetEvaluateSelectorResponse> getGetEvaluateSelectorMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetEvaluateSelector",
      requestType = com.zhijiejiaoyu.glory_api.live.GetEvaluateSelectorRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.GetEvaluateSelectorResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetEvaluateSelectorRequest,
      com.zhijiejiaoyu.glory_api.live.GetEvaluateSelectorResponse> getGetEvaluateSelectorMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetEvaluateSelectorRequest, com.zhijiejiaoyu.glory_api.live.GetEvaluateSelectorResponse> getGetEvaluateSelectorMethod;
    if ((getGetEvaluateSelectorMethod = glory_apiGrpc.getGetEvaluateSelectorMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetEvaluateSelectorMethod = glory_apiGrpc.getGetEvaluateSelectorMethod) == null) {
          glory_apiGrpc.getGetEvaluateSelectorMethod = getGetEvaluateSelectorMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.GetEvaluateSelectorRequest, com.zhijiejiaoyu.glory_api.live.GetEvaluateSelectorResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetEvaluateSelector"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetEvaluateSelectorRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetEvaluateSelectorResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetEvaluateSelector"))
              .build();
        }
      }
    }
    return getGetEvaluateSelectorMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListPersonalEvaluateRequest,
      com.zhijiejiaoyu.glory_api.live.ListPersonalEvaluateResponse> getListPersonalEvaluateMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListPersonalEvaluate",
      requestType = com.zhijiejiaoyu.glory_api.live.ListPersonalEvaluateRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.ListPersonalEvaluateResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListPersonalEvaluateRequest,
      com.zhijiejiaoyu.glory_api.live.ListPersonalEvaluateResponse> getListPersonalEvaluateMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListPersonalEvaluateRequest, com.zhijiejiaoyu.glory_api.live.ListPersonalEvaluateResponse> getListPersonalEvaluateMethod;
    if ((getListPersonalEvaluateMethod = glory_apiGrpc.getListPersonalEvaluateMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListPersonalEvaluateMethod = glory_apiGrpc.getListPersonalEvaluateMethod) == null) {
          glory_apiGrpc.getListPersonalEvaluateMethod = getListPersonalEvaluateMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.ListPersonalEvaluateRequest, com.zhijiejiaoyu.glory_api.live.ListPersonalEvaluateResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListPersonalEvaluate"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListPersonalEvaluateRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListPersonalEvaluateResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListPersonalEvaluate"))
              .build();
        }
      }
    }
    return getListPersonalEvaluateMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetEvaluateDetailRequest,
      com.zhijiejiaoyu.glory_api.live.GetEvaluateDetailResponse> getGetEvaluateDetailMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetEvaluateDetail",
      requestType = com.zhijiejiaoyu.glory_api.live.GetEvaluateDetailRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.GetEvaluateDetailResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetEvaluateDetailRequest,
      com.zhijiejiaoyu.glory_api.live.GetEvaluateDetailResponse> getGetEvaluateDetailMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetEvaluateDetailRequest, com.zhijiejiaoyu.glory_api.live.GetEvaluateDetailResponse> getGetEvaluateDetailMethod;
    if ((getGetEvaluateDetailMethod = glory_apiGrpc.getGetEvaluateDetailMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetEvaluateDetailMethod = glory_apiGrpc.getGetEvaluateDetailMethod) == null) {
          glory_apiGrpc.getGetEvaluateDetailMethod = getGetEvaluateDetailMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.GetEvaluateDetailRequest, com.zhijiejiaoyu.glory_api.live.GetEvaluateDetailResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetEvaluateDetail"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetEvaluateDetailRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetEvaluateDetailResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetEvaluateDetail"))
              .build();
        }
      }
    }
    return getGetEvaluateDetailMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.SubmitEvaluateRequest,
      com.zhijiejiaoyu.glory_api.live.SubmitEvaluateResponse> getSubmitEvaluateMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "SubmitEvaluate",
      requestType = com.zhijiejiaoyu.glory_api.live.SubmitEvaluateRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.SubmitEvaluateResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.SubmitEvaluateRequest,
      com.zhijiejiaoyu.glory_api.live.SubmitEvaluateResponse> getSubmitEvaluateMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.SubmitEvaluateRequest, com.zhijiejiaoyu.glory_api.live.SubmitEvaluateResponse> getSubmitEvaluateMethod;
    if ((getSubmitEvaluateMethod = glory_apiGrpc.getSubmitEvaluateMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getSubmitEvaluateMethod = glory_apiGrpc.getSubmitEvaluateMethod) == null) {
          glory_apiGrpc.getSubmitEvaluateMethod = getSubmitEvaluateMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.SubmitEvaluateRequest, com.zhijiejiaoyu.glory_api.live.SubmitEvaluateResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "SubmitEvaluate"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.SubmitEvaluateRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.SubmitEvaluateResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("SubmitEvaluate"))
              .build();
        }
      }
    }
    return getSubmitEvaluateMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListUnevaluatedRoomRequest,
      com.zhijiejiaoyu.glory_api.live.ListUnevaluatedRoomResponse> getListUnevaluatedRoomMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListUnevaluatedRoom",
      requestType = com.zhijiejiaoyu.glory_api.live.ListUnevaluatedRoomRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.ListUnevaluatedRoomResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListUnevaluatedRoomRequest,
      com.zhijiejiaoyu.glory_api.live.ListUnevaluatedRoomResponse> getListUnevaluatedRoomMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListUnevaluatedRoomRequest, com.zhijiejiaoyu.glory_api.live.ListUnevaluatedRoomResponse> getListUnevaluatedRoomMethod;
    if ((getListUnevaluatedRoomMethod = glory_apiGrpc.getListUnevaluatedRoomMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListUnevaluatedRoomMethod = glory_apiGrpc.getListUnevaluatedRoomMethod) == null) {
          glory_apiGrpc.getListUnevaluatedRoomMethod = getListUnevaluatedRoomMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.ListUnevaluatedRoomRequest, com.zhijiejiaoyu.glory_api.live.ListUnevaluatedRoomResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListUnevaluatedRoom"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListUnevaluatedRoomRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListUnevaluatedRoomResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListUnevaluatedRoom"))
              .build();
        }
      }
    }
    return getListUnevaluatedRoomMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListStudentEvalutionsRequest,
      com.zhijiejiaoyu.glory_api.live.ListStudentEvalutionsResponse> getListStudentEvaluationsMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListStudentEvaluations",
      requestType = com.zhijiejiaoyu.glory_api.live.ListStudentEvalutionsRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.ListStudentEvalutionsResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListStudentEvalutionsRequest,
      com.zhijiejiaoyu.glory_api.live.ListStudentEvalutionsResponse> getListStudentEvaluationsMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListStudentEvalutionsRequest, com.zhijiejiaoyu.glory_api.live.ListStudentEvalutionsResponse> getListStudentEvaluationsMethod;
    if ((getListStudentEvaluationsMethod = glory_apiGrpc.getListStudentEvaluationsMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListStudentEvaluationsMethod = glory_apiGrpc.getListStudentEvaluationsMethod) == null) {
          glory_apiGrpc.getListStudentEvaluationsMethod = getListStudentEvaluationsMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.ListStudentEvalutionsRequest, com.zhijiejiaoyu.glory_api.live.ListStudentEvalutionsResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListStudentEvaluations"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListStudentEvalutionsRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListStudentEvalutionsResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListStudentEvaluations"))
              .build();
        }
      }
    }
    return getListStudentEvaluationsMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.IgnoreLiveEvaluationRequest,
      com.zhijiejiaoyu.glory_api.live.IgnoreLiveEvaluationResponse> getIgnoreEvaluationMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "IgnoreEvaluation",
      requestType = com.zhijiejiaoyu.glory_api.live.IgnoreLiveEvaluationRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.IgnoreLiveEvaluationResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.IgnoreLiveEvaluationRequest,
      com.zhijiejiaoyu.glory_api.live.IgnoreLiveEvaluationResponse> getIgnoreEvaluationMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.IgnoreLiveEvaluationRequest, com.zhijiejiaoyu.glory_api.live.IgnoreLiveEvaluationResponse> getIgnoreEvaluationMethod;
    if ((getIgnoreEvaluationMethod = glory_apiGrpc.getIgnoreEvaluationMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getIgnoreEvaluationMethod = glory_apiGrpc.getIgnoreEvaluationMethod) == null) {
          glory_apiGrpc.getIgnoreEvaluationMethod = getIgnoreEvaluationMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.IgnoreLiveEvaluationRequest, com.zhijiejiaoyu.glory_api.live.IgnoreLiveEvaluationResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "IgnoreEvaluation"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.IgnoreLiveEvaluationRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.IgnoreLiveEvaluationResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("IgnoreEvaluation"))
              .build();
        }
      }
    }
    return getIgnoreEvaluationMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetRankRequest,
      com.zhijiejiaoyu.glory_api.live.GetRankResponse> getGetRankMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetRank",
      requestType = com.zhijiejiaoyu.glory_api.live.GetRankRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.GetRankResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetRankRequest,
      com.zhijiejiaoyu.glory_api.live.GetRankResponse> getGetRankMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetRankRequest, com.zhijiejiaoyu.glory_api.live.GetRankResponse> getGetRankMethod;
    if ((getGetRankMethod = glory_apiGrpc.getGetRankMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetRankMethod = glory_apiGrpc.getGetRankMethod) == null) {
          glory_apiGrpc.getGetRankMethod = getGetRankMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.GetRankRequest, com.zhijiejiaoyu.glory_api.live.GetRankResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetRank"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetRankRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetRankResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetRank"))
              .build();
        }
      }
    }
    return getGetRankMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.RecordLiveCallbackRequest,
      com.zhijiejiaoyu.glory_api.live.RecordLiveCallbackResponse> getRecordLiveCallbackMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "RecordLiveCallback",
      requestType = com.zhijiejiaoyu.glory_api.live.RecordLiveCallbackRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.RecordLiveCallbackResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.RecordLiveCallbackRequest,
      com.zhijiejiaoyu.glory_api.live.RecordLiveCallbackResponse> getRecordLiveCallbackMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.RecordLiveCallbackRequest, com.zhijiejiaoyu.glory_api.live.RecordLiveCallbackResponse> getRecordLiveCallbackMethod;
    if ((getRecordLiveCallbackMethod = glory_apiGrpc.getRecordLiveCallbackMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getRecordLiveCallbackMethod = glory_apiGrpc.getRecordLiveCallbackMethod) == null) {
          glory_apiGrpc.getRecordLiveCallbackMethod = getRecordLiveCallbackMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.RecordLiveCallbackRequest, com.zhijiejiaoyu.glory_api.live.RecordLiveCallbackResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "RecordLiveCallback"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.RecordLiveCallbackRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.RecordLiveCallbackResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("RecordLiveCallback"))
              .build();
        }
      }
    }
    return getRecordLiveCallbackMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.VideoToTextCallbackRequest,
      com.zhijiejiaoyu.glory_api.live.VideoToTextCallbackResponse> getVideoToTextCallbackMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "VideoToTextCallback",
      requestType = com.zhijiejiaoyu.glory_api.live.VideoToTextCallbackRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.VideoToTextCallbackResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.VideoToTextCallbackRequest,
      com.zhijiejiaoyu.glory_api.live.VideoToTextCallbackResponse> getVideoToTextCallbackMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.VideoToTextCallbackRequest, com.zhijiejiaoyu.glory_api.live.VideoToTextCallbackResponse> getVideoToTextCallbackMethod;
    if ((getVideoToTextCallbackMethod = glory_apiGrpc.getVideoToTextCallbackMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getVideoToTextCallbackMethod = glory_apiGrpc.getVideoToTextCallbackMethod) == null) {
          glory_apiGrpc.getVideoToTextCallbackMethod = getVideoToTextCallbackMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.VideoToTextCallbackRequest, com.zhijiejiaoyu.glory_api.live.VideoToTextCallbackResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "VideoToTextCallback"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.VideoToTextCallbackRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.VideoToTextCallbackResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("VideoToTextCallback"))
              .build();
        }
      }
    }
    return getVideoToTextCallbackMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.LiveStreamCallbackRequest,
      com.zhijiejiaoyu.glory_api.live.LiveStreamCallbackResponse> getLiveStreamCallbackMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "LiveStreamCallback",
      requestType = com.zhijiejiaoyu.glory_api.live.LiveStreamCallbackRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.LiveStreamCallbackResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.LiveStreamCallbackRequest,
      com.zhijiejiaoyu.glory_api.live.LiveStreamCallbackResponse> getLiveStreamCallbackMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.LiveStreamCallbackRequest, com.zhijiejiaoyu.glory_api.live.LiveStreamCallbackResponse> getLiveStreamCallbackMethod;
    if ((getLiveStreamCallbackMethod = glory_apiGrpc.getLiveStreamCallbackMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getLiveStreamCallbackMethod = glory_apiGrpc.getLiveStreamCallbackMethod) == null) {
          glory_apiGrpc.getLiveStreamCallbackMethod = getLiveStreamCallbackMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.LiveStreamCallbackRequest, com.zhijiejiaoyu.glory_api.live.LiveStreamCallbackResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "LiveStreamCallback"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.LiveStreamCallbackRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.LiveStreamCallbackResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("LiveStreamCallback"))
              .build();
        }
      }
    }
    return getLiveStreamCallbackMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.RegenerationAiFeedbackRequest,
      com.zhijiejiaoyu.glory_api.live.RegenerationAiFeedbackResponse> getRegenerationAiFeedbackMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "RegenerationAiFeedback",
      requestType = com.zhijiejiaoyu.glory_api.live.RegenerationAiFeedbackRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.RegenerationAiFeedbackResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.RegenerationAiFeedbackRequest,
      com.zhijiejiaoyu.glory_api.live.RegenerationAiFeedbackResponse> getRegenerationAiFeedbackMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.RegenerationAiFeedbackRequest, com.zhijiejiaoyu.glory_api.live.RegenerationAiFeedbackResponse> getRegenerationAiFeedbackMethod;
    if ((getRegenerationAiFeedbackMethod = glory_apiGrpc.getRegenerationAiFeedbackMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getRegenerationAiFeedbackMethod = glory_apiGrpc.getRegenerationAiFeedbackMethod) == null) {
          glory_apiGrpc.getRegenerationAiFeedbackMethod = getRegenerationAiFeedbackMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.RegenerationAiFeedbackRequest, com.zhijiejiaoyu.glory_api.live.RegenerationAiFeedbackResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "RegenerationAiFeedback"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.RegenerationAiFeedbackRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.RegenerationAiFeedbackResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("RegenerationAiFeedback"))
              .build();
        }
      }
    }
    return getRegenerationAiFeedbackMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.SubmitUserAttitudeForAIResultRequest,
      com.zhijiejiaoyu.glory_api.live.SubmitUserAttitudeForAIResultResponse> getSubmitUserAttitudeForAiResultMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "SubmitUserAttitudeForAiResult",
      requestType = com.zhijiejiaoyu.glory_api.live.SubmitUserAttitudeForAIResultRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.SubmitUserAttitudeForAIResultResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.SubmitUserAttitudeForAIResultRequest,
      com.zhijiejiaoyu.glory_api.live.SubmitUserAttitudeForAIResultResponse> getSubmitUserAttitudeForAiResultMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.SubmitUserAttitudeForAIResultRequest, com.zhijiejiaoyu.glory_api.live.SubmitUserAttitudeForAIResultResponse> getSubmitUserAttitudeForAiResultMethod;
    if ((getSubmitUserAttitudeForAiResultMethod = glory_apiGrpc.getSubmitUserAttitudeForAiResultMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getSubmitUserAttitudeForAiResultMethod = glory_apiGrpc.getSubmitUserAttitudeForAiResultMethod) == null) {
          glory_apiGrpc.getSubmitUserAttitudeForAiResultMethod = getSubmitUserAttitudeForAiResultMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.SubmitUserAttitudeForAIResultRequest, com.zhijiejiaoyu.glory_api.live.SubmitUserAttitudeForAIResultResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "SubmitUserAttitudeForAiResult"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.SubmitUserAttitudeForAIResultRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.SubmitUserAttitudeForAIResultResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("SubmitUserAttitudeForAiResult"))
              .build();
        }
      }
    }
    return getSubmitUserAttitudeForAiResultMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.PreheatRequest,
      com.zhijiejiaoyu.glory_api.live.PreheatResponse> getPreheatProductMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "PreheatProduct",
      requestType = com.zhijiejiaoyu.glory_api.live.PreheatRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.PreheatResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.PreheatRequest,
      com.zhijiejiaoyu.glory_api.live.PreheatResponse> getPreheatProductMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.PreheatRequest, com.zhijiejiaoyu.glory_api.live.PreheatResponse> getPreheatProductMethod;
    if ((getPreheatProductMethod = glory_apiGrpc.getPreheatProductMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getPreheatProductMethod = glory_apiGrpc.getPreheatProductMethod) == null) {
          glory_apiGrpc.getPreheatProductMethod = getPreheatProductMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.PreheatRequest, com.zhijiejiaoyu.glory_api.live.PreheatResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "PreheatProduct"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.PreheatRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.PreheatResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("PreheatProduct"))
              .build();
        }
      }
    }
    return getPreheatProductMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.PublicPriceRequest,
      com.zhijiejiaoyu.glory_api.live.PublicPriceResponse> getPublicPriceMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "PublicPrice",
      requestType = com.zhijiejiaoyu.glory_api.live.PublicPriceRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.PublicPriceResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.PublicPriceRequest,
      com.zhijiejiaoyu.glory_api.live.PublicPriceResponse> getPublicPriceMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.PublicPriceRequest, com.zhijiejiaoyu.glory_api.live.PublicPriceResponse> getPublicPriceMethod;
    if ((getPublicPriceMethod = glory_apiGrpc.getPublicPriceMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getPublicPriceMethod = glory_apiGrpc.getPublicPriceMethod) == null) {
          glory_apiGrpc.getPublicPriceMethod = getPublicPriceMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.PublicPriceRequest, com.zhijiejiaoyu.glory_api.live.PublicPriceResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "PublicPrice"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.PublicPriceRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.PublicPriceResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("PublicPrice"))
              .build();
        }
      }
    }
    return getPublicPriceMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.ListTenantSystemRequest,
      com.zhijiejiaoyu.glory_api.tenant.ListTenantSystemResponse> getListTenantSystemMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListTenantSystem",
      requestType = com.zhijiejiaoyu.glory_api.tenant.ListTenantSystemRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.ListTenantSystemResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.ListTenantSystemRequest,
      com.zhijiejiaoyu.glory_api.tenant.ListTenantSystemResponse> getListTenantSystemMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.ListTenantSystemRequest, com.zhijiejiaoyu.glory_api.tenant.ListTenantSystemResponse> getListTenantSystemMethod;
    if ((getListTenantSystemMethod = glory_apiGrpc.getListTenantSystemMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListTenantSystemMethod = glory_apiGrpc.getListTenantSystemMethod) == null) {
          glory_apiGrpc.getListTenantSystemMethod = getListTenantSystemMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.ListTenantSystemRequest, com.zhijiejiaoyu.glory_api.tenant.ListTenantSystemResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListTenantSystem"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.ListTenantSystemRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.ListTenantSystemResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListTenantSystem"))
              .build();
        }
      }
    }
    return getListTenantSystemMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.CreateTenantRequest,
      com.zhijiejiaoyu.glory_api.tenant.CreateTenantResponse> getCreateTenantMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateTenant",
      requestType = com.zhijiejiaoyu.glory_api.tenant.CreateTenantRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.CreateTenantResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.CreateTenantRequest,
      com.zhijiejiaoyu.glory_api.tenant.CreateTenantResponse> getCreateTenantMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.CreateTenantRequest, com.zhijiejiaoyu.glory_api.tenant.CreateTenantResponse> getCreateTenantMethod;
    if ((getCreateTenantMethod = glory_apiGrpc.getCreateTenantMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateTenantMethod = glory_apiGrpc.getCreateTenantMethod) == null) {
          glory_apiGrpc.getCreateTenantMethod = getCreateTenantMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.CreateTenantRequest, com.zhijiejiaoyu.glory_api.tenant.CreateTenantResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateTenant"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.CreateTenantRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.CreateTenantResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateTenant"))
              .build();
        }
      }
    }
    return getCreateTenantMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.GetTenantRequest,
      com.zhijiejiaoyu.glory_api.tenant.GetTenantResponse> getGetTenantMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetTenant",
      requestType = com.zhijiejiaoyu.glory_api.tenant.GetTenantRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.GetTenantResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.GetTenantRequest,
      com.zhijiejiaoyu.glory_api.tenant.GetTenantResponse> getGetTenantMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.GetTenantRequest, com.zhijiejiaoyu.glory_api.tenant.GetTenantResponse> getGetTenantMethod;
    if ((getGetTenantMethod = glory_apiGrpc.getGetTenantMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetTenantMethod = glory_apiGrpc.getGetTenantMethod) == null) {
          glory_apiGrpc.getGetTenantMethod = getGetTenantMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.GetTenantRequest, com.zhijiejiaoyu.glory_api.tenant.GetTenantResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetTenant"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.GetTenantRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.GetTenantResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetTenant"))
              .build();
        }
      }
    }
    return getGetTenantMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantRequest,
      com.zhijiejiaoyu.glory_api.tenant.UpdateTenantResponse> getUpdateTenantMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateTenant",
      requestType = com.zhijiejiaoyu.glory_api.tenant.UpdateTenantRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.UpdateTenantResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantRequest,
      com.zhijiejiaoyu.glory_api.tenant.UpdateTenantResponse> getUpdateTenantMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantRequest, com.zhijiejiaoyu.glory_api.tenant.UpdateTenantResponse> getUpdateTenantMethod;
    if ((getUpdateTenantMethod = glory_apiGrpc.getUpdateTenantMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateTenantMethod = glory_apiGrpc.getUpdateTenantMethod) == null) {
          glory_apiGrpc.getUpdateTenantMethod = getUpdateTenantMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantRequest, com.zhijiejiaoyu.glory_api.tenant.UpdateTenantResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateTenant"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.UpdateTenantRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.UpdateTenantResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateTenant"))
              .build();
        }
      }
    }
    return getUpdateTenantMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.DeleteTenantRequest,
      com.zhijiejiaoyu.glory_api.tenant.DeleteTenantResponse> getDeleteTenantMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteTenant",
      requestType = com.zhijiejiaoyu.glory_api.tenant.DeleteTenantRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.DeleteTenantResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.DeleteTenantRequest,
      com.zhijiejiaoyu.glory_api.tenant.DeleteTenantResponse> getDeleteTenantMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.DeleteTenantRequest, com.zhijiejiaoyu.glory_api.tenant.DeleteTenantResponse> getDeleteTenantMethod;
    if ((getDeleteTenantMethod = glory_apiGrpc.getDeleteTenantMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteTenantMethod = glory_apiGrpc.getDeleteTenantMethod) == null) {
          glory_apiGrpc.getDeleteTenantMethod = getDeleteTenantMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.DeleteTenantRequest, com.zhijiejiaoyu.glory_api.tenant.DeleteTenantResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteTenant"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.DeleteTenantRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.DeleteTenantResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteTenant"))
              .build();
        }
      }
    }
    return getDeleteTenantMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.ListTenantRequest,
      com.zhijiejiaoyu.glory_api.tenant.ListTenantResponse> getListTenantMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListTenant",
      requestType = com.zhijiejiaoyu.glory_api.tenant.ListTenantRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.ListTenantResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.ListTenantRequest,
      com.zhijiejiaoyu.glory_api.tenant.ListTenantResponse> getListTenantMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.ListTenantRequest, com.zhijiejiaoyu.glory_api.tenant.ListTenantResponse> getListTenantMethod;
    if ((getListTenantMethod = glory_apiGrpc.getListTenantMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListTenantMethod = glory_apiGrpc.getListTenantMethod) == null) {
          glory_apiGrpc.getListTenantMethod = getListTenantMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.ListTenantRequest, com.zhijiejiaoyu.glory_api.tenant.ListTenantResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListTenant"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.ListTenantRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.ListTenantResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListTenant"))
              .build();
        }
      }
    }
    return getListTenantMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.GetTenantOrgRequest,
      com.zhijiejiaoyu.glory_api.tenant.GetTenantOrgResponse> getGetTenantOrgMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetTenantOrg",
      requestType = com.zhijiejiaoyu.glory_api.tenant.GetTenantOrgRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.GetTenantOrgResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.GetTenantOrgRequest,
      com.zhijiejiaoyu.glory_api.tenant.GetTenantOrgResponse> getGetTenantOrgMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.GetTenantOrgRequest, com.zhijiejiaoyu.glory_api.tenant.GetTenantOrgResponse> getGetTenantOrgMethod;
    if ((getGetTenantOrgMethod = glory_apiGrpc.getGetTenantOrgMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetTenantOrgMethod = glory_apiGrpc.getGetTenantOrgMethod) == null) {
          glory_apiGrpc.getGetTenantOrgMethod = getGetTenantOrgMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.GetTenantOrgRequest, com.zhijiejiaoyu.glory_api.tenant.GetTenantOrgResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetTenantOrg"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.GetTenantOrgRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.GetTenantOrgResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetTenantOrg"))
              .build();
        }
      }
    }
    return getGetTenantOrgMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.EnterTenantRequest,
      com.zhijiejiaoyu.glory_api.tenant.EnterTenantResponse> getEnterTenantMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "EnterTenant",
      requestType = com.zhijiejiaoyu.glory_api.tenant.EnterTenantRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.EnterTenantResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.EnterTenantRequest,
      com.zhijiejiaoyu.glory_api.tenant.EnterTenantResponse> getEnterTenantMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.EnterTenantRequest, com.zhijiejiaoyu.glory_api.tenant.EnterTenantResponse> getEnterTenantMethod;
    if ((getEnterTenantMethod = glory_apiGrpc.getEnterTenantMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getEnterTenantMethod = glory_apiGrpc.getEnterTenantMethod) == null) {
          glory_apiGrpc.getEnterTenantMethod = getEnterTenantMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.EnterTenantRequest, com.zhijiejiaoyu.glory_api.tenant.EnterTenantResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "EnterTenant"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.EnterTenantRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.EnterTenantResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("EnterTenant"))
              .build();
        }
      }
    }
    return getEnterTenantMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.ExitTenantRequest,
      com.zhijiejiaoyu.glory_api.tenant.ExitTenantResponse> getExitTenantMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ExitTenant",
      requestType = com.zhijiejiaoyu.glory_api.tenant.ExitTenantRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.ExitTenantResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.ExitTenantRequest,
      com.zhijiejiaoyu.glory_api.tenant.ExitTenantResponse> getExitTenantMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.ExitTenantRequest, com.zhijiejiaoyu.glory_api.tenant.ExitTenantResponse> getExitTenantMethod;
    if ((getExitTenantMethod = glory_apiGrpc.getExitTenantMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getExitTenantMethod = glory_apiGrpc.getExitTenantMethod) == null) {
          glory_apiGrpc.getExitTenantMethod = getExitTenantMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.ExitTenantRequest, com.zhijiejiaoyu.glory_api.tenant.ExitTenantResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ExitTenant"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.ExitTenantRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.ExitTenantResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ExitTenant"))
              .build();
        }
      }
    }
    return getExitTenantMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.IsEnterTenantRequest,
      com.zhijiejiaoyu.glory_api.tenant.IsTenantResponse> getIsEnterTenantMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "IsEnterTenant",
      requestType = com.zhijiejiaoyu.glory_api.tenant.IsEnterTenantRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.IsTenantResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.IsEnterTenantRequest,
      com.zhijiejiaoyu.glory_api.tenant.IsTenantResponse> getIsEnterTenantMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.IsEnterTenantRequest, com.zhijiejiaoyu.glory_api.tenant.IsTenantResponse> getIsEnterTenantMethod;
    if ((getIsEnterTenantMethod = glory_apiGrpc.getIsEnterTenantMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getIsEnterTenantMethod = glory_apiGrpc.getIsEnterTenantMethod) == null) {
          glory_apiGrpc.getIsEnterTenantMethod = getIsEnterTenantMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.IsEnterTenantRequest, com.zhijiejiaoyu.glory_api.tenant.IsTenantResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "IsEnterTenant"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.IsEnterTenantRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.IsTenantResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("IsEnterTenant"))
              .build();
        }
      }
    }
    return getIsEnterTenantMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.InitTenantRequest,
      com.zhijiejiaoyu.glory_api.tenant.InitTenantResponse> getInitTenantMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "InitTenant",
      requestType = com.zhijiejiaoyu.glory_api.tenant.InitTenantRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.InitTenantResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.InitTenantRequest,
      com.zhijiejiaoyu.glory_api.tenant.InitTenantResponse> getInitTenantMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.InitTenantRequest, com.zhijiejiaoyu.glory_api.tenant.InitTenantResponse> getInitTenantMethod;
    if ((getInitTenantMethod = glory_apiGrpc.getInitTenantMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getInitTenantMethod = glory_apiGrpc.getInitTenantMethod) == null) {
          glory_apiGrpc.getInitTenantMethod = getInitTenantMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.InitTenantRequest, com.zhijiejiaoyu.glory_api.tenant.InitTenantResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "InitTenant"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.InitTenantRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.InitTenantResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("InitTenant"))
              .build();
        }
      }
    }
    return getInitTenantMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.CreateTenantCourseRequest,
      com.zhijiejiaoyu.glory_api.tenant.CreateTenantCourseResponse> getCreateTenantCourseMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateTenantCourse",
      requestType = com.zhijiejiaoyu.glory_api.tenant.CreateTenantCourseRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.CreateTenantCourseResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.CreateTenantCourseRequest,
      com.zhijiejiaoyu.glory_api.tenant.CreateTenantCourseResponse> getCreateTenantCourseMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.CreateTenantCourseRequest, com.zhijiejiaoyu.glory_api.tenant.CreateTenantCourseResponse> getCreateTenantCourseMethod;
    if ((getCreateTenantCourseMethod = glory_apiGrpc.getCreateTenantCourseMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateTenantCourseMethod = glory_apiGrpc.getCreateTenantCourseMethod) == null) {
          glory_apiGrpc.getCreateTenantCourseMethod = getCreateTenantCourseMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.CreateTenantCourseRequest, com.zhijiejiaoyu.glory_api.tenant.CreateTenantCourseResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateTenantCourse"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.CreateTenantCourseRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.CreateTenantCourseResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateTenantCourse"))
              .build();
        }
      }
    }
    return getCreateTenantCourseMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.ListTenantRequest,
      com.zhijiejiaoyu.glory_api.tenant.ListTenantResponse> getListTenantCourseMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListTenantCourse",
      requestType = com.zhijiejiaoyu.glory_api.tenant.ListTenantRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.ListTenantResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.ListTenantRequest,
      com.zhijiejiaoyu.glory_api.tenant.ListTenantResponse> getListTenantCourseMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.ListTenantRequest, com.zhijiejiaoyu.glory_api.tenant.ListTenantResponse> getListTenantCourseMethod;
    if ((getListTenantCourseMethod = glory_apiGrpc.getListTenantCourseMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListTenantCourseMethod = glory_apiGrpc.getListTenantCourseMethod) == null) {
          glory_apiGrpc.getListTenantCourseMethod = getListTenantCourseMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.ListTenantRequest, com.zhijiejiaoyu.glory_api.tenant.ListTenantResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListTenantCourse"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.ListTenantRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.ListTenantResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListTenantCourse"))
              .build();
        }
      }
    }
    return getListTenantCourseMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.CreateTenantDeptRequest,
      com.zhijiejiaoyu.glory_api.tenant.CreateTenantDeptResponse> getCreateTenantDeptMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateTenantDept",
      requestType = com.zhijiejiaoyu.glory_api.tenant.CreateTenantDeptRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.CreateTenantDeptResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.CreateTenantDeptRequest,
      com.zhijiejiaoyu.glory_api.tenant.CreateTenantDeptResponse> getCreateTenantDeptMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.CreateTenantDeptRequest, com.zhijiejiaoyu.glory_api.tenant.CreateTenantDeptResponse> getCreateTenantDeptMethod;
    if ((getCreateTenantDeptMethod = glory_apiGrpc.getCreateTenantDeptMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateTenantDeptMethod = glory_apiGrpc.getCreateTenantDeptMethod) == null) {
          glory_apiGrpc.getCreateTenantDeptMethod = getCreateTenantDeptMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.CreateTenantDeptRequest, com.zhijiejiaoyu.glory_api.tenant.CreateTenantDeptResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateTenantDept"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.CreateTenantDeptRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.CreateTenantDeptResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateTenantDept"))
              .build();
        }
      }
    }
    return getCreateTenantDeptMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantDeptRequest,
      com.zhijiejiaoyu.glory_api.tenant.UpdateTenantDeptResponse> getUpdateTenantDeptMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateTenantDept",
      requestType = com.zhijiejiaoyu.glory_api.tenant.UpdateTenantDeptRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.UpdateTenantDeptResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantDeptRequest,
      com.zhijiejiaoyu.glory_api.tenant.UpdateTenantDeptResponse> getUpdateTenantDeptMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantDeptRequest, com.zhijiejiaoyu.glory_api.tenant.UpdateTenantDeptResponse> getUpdateTenantDeptMethod;
    if ((getUpdateTenantDeptMethod = glory_apiGrpc.getUpdateTenantDeptMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateTenantDeptMethod = glory_apiGrpc.getUpdateTenantDeptMethod) == null) {
          glory_apiGrpc.getUpdateTenantDeptMethod = getUpdateTenantDeptMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantDeptRequest, com.zhijiejiaoyu.glory_api.tenant.UpdateTenantDeptResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateTenantDept"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.UpdateTenantDeptRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.UpdateTenantDeptResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateTenantDept"))
              .build();
        }
      }
    }
    return getUpdateTenantDeptMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.DeleteTenantDeptRequest,
      com.zhijiejiaoyu.glory_api.tenant.DeleteTenantDeptResponse> getDeleteTenantDeptMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteTenantDept",
      requestType = com.zhijiejiaoyu.glory_api.tenant.DeleteTenantDeptRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.DeleteTenantDeptResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.DeleteTenantDeptRequest,
      com.zhijiejiaoyu.glory_api.tenant.DeleteTenantDeptResponse> getDeleteTenantDeptMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.DeleteTenantDeptRequest, com.zhijiejiaoyu.glory_api.tenant.DeleteTenantDeptResponse> getDeleteTenantDeptMethod;
    if ((getDeleteTenantDeptMethod = glory_apiGrpc.getDeleteTenantDeptMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteTenantDeptMethod = glory_apiGrpc.getDeleteTenantDeptMethod) == null) {
          glory_apiGrpc.getDeleteTenantDeptMethod = getDeleteTenantDeptMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.DeleteTenantDeptRequest, com.zhijiejiaoyu.glory_api.tenant.DeleteTenantDeptResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteTenantDept"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.DeleteTenantDeptRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.DeleteTenantDeptResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteTenantDept"))
              .build();
        }
      }
    }
    return getDeleteTenantDeptMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptRequest,
      com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptResponse> getGetTenantDeptMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetTenantDept",
      requestType = com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptRequest,
      com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptResponse> getGetTenantDeptMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptRequest, com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptResponse> getGetTenantDeptMethod;
    if ((getGetTenantDeptMethod = glory_apiGrpc.getGetTenantDeptMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetTenantDeptMethod = glory_apiGrpc.getGetTenantDeptMethod) == null) {
          glory_apiGrpc.getGetTenantDeptMethod = getGetTenantDeptMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptRequest, com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetTenantDept"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetTenantDept"))
              .build();
        }
      }
    }
    return getGetTenantDeptMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptTypeRequest,
      com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptTypeResponse> getGetTenantDeptTypeMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetTenantDeptType",
      requestType = com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptTypeRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptTypeResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptTypeRequest,
      com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptTypeResponse> getGetTenantDeptTypeMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptTypeRequest, com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptTypeResponse> getGetTenantDeptTypeMethod;
    if ((getGetTenantDeptTypeMethod = glory_apiGrpc.getGetTenantDeptTypeMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetTenantDeptTypeMethod = glory_apiGrpc.getGetTenantDeptTypeMethod) == null) {
          glory_apiGrpc.getGetTenantDeptTypeMethod = getGetTenantDeptTypeMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptTypeRequest, com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptTypeResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetTenantDeptType"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptTypeRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptTypeResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetTenantDeptType"))
              .build();
        }
      }
    }
    return getGetTenantDeptTypeMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.ListTenantDeptRequest,
      com.zhijiejiaoyu.glory_api.tenant.ListTenantDeptResponse> getListTenantDeptMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListTenantDept",
      requestType = com.zhijiejiaoyu.glory_api.tenant.ListTenantDeptRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.ListTenantDeptResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.ListTenantDeptRequest,
      com.zhijiejiaoyu.glory_api.tenant.ListTenantDeptResponse> getListTenantDeptMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.ListTenantDeptRequest, com.zhijiejiaoyu.glory_api.tenant.ListTenantDeptResponse> getListTenantDeptMethod;
    if ((getListTenantDeptMethod = glory_apiGrpc.getListTenantDeptMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListTenantDeptMethod = glory_apiGrpc.getListTenantDeptMethod) == null) {
          glory_apiGrpc.getListTenantDeptMethod = getListTenantDeptMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.ListTenantDeptRequest, com.zhijiejiaoyu.glory_api.tenant.ListTenantDeptResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListTenantDept"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.ListTenantDeptRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.ListTenantDeptResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListTenantDept"))
              .build();
        }
      }
    }
    return getListTenantDeptMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.CreateTenantUserRequest,
      com.zhijiejiaoyu.glory_api.tenant.CreateTenantUserResponse> getCreateTenantUserMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateTenantUser",
      requestType = com.zhijiejiaoyu.glory_api.tenant.CreateTenantUserRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.CreateTenantUserResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.CreateTenantUserRequest,
      com.zhijiejiaoyu.glory_api.tenant.CreateTenantUserResponse> getCreateTenantUserMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.CreateTenantUserRequest, com.zhijiejiaoyu.glory_api.tenant.CreateTenantUserResponse> getCreateTenantUserMethod;
    if ((getCreateTenantUserMethod = glory_apiGrpc.getCreateTenantUserMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateTenantUserMethod = glory_apiGrpc.getCreateTenantUserMethod) == null) {
          glory_apiGrpc.getCreateTenantUserMethod = getCreateTenantUserMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.CreateTenantUserRequest, com.zhijiejiaoyu.glory_api.tenant.CreateTenantUserResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateTenantUser"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.CreateTenantUserRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.CreateTenantUserResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateTenantUser"))
              .build();
        }
      }
    }
    return getCreateTenantUserMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.DeleteTenantUserRequest,
      com.zhijiejiaoyu.glory_api.tenant.DeleteTenantUserResponse> getDeleteTenantUserMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteTenantUser",
      requestType = com.zhijiejiaoyu.glory_api.tenant.DeleteTenantUserRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.DeleteTenantUserResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.DeleteTenantUserRequest,
      com.zhijiejiaoyu.glory_api.tenant.DeleteTenantUserResponse> getDeleteTenantUserMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.DeleteTenantUserRequest, com.zhijiejiaoyu.glory_api.tenant.DeleteTenantUserResponse> getDeleteTenantUserMethod;
    if ((getDeleteTenantUserMethod = glory_apiGrpc.getDeleteTenantUserMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteTenantUserMethod = glory_apiGrpc.getDeleteTenantUserMethod) == null) {
          glory_apiGrpc.getDeleteTenantUserMethod = getDeleteTenantUserMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.DeleteTenantUserRequest, com.zhijiejiaoyu.glory_api.tenant.DeleteTenantUserResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteTenantUser"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.DeleteTenantUserRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.DeleteTenantUserResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteTenantUser"))
              .build();
        }
      }
    }
    return getDeleteTenantUserMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserRequest,
      com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserResponse> getUpdateTenantUserMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateTenantUser",
      requestType = com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserRequest,
      com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserResponse> getUpdateTenantUserMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserRequest, com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserResponse> getUpdateTenantUserMethod;
    if ((getUpdateTenantUserMethod = glory_apiGrpc.getUpdateTenantUserMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateTenantUserMethod = glory_apiGrpc.getUpdateTenantUserMethod) == null) {
          glory_apiGrpc.getUpdateTenantUserMethod = getUpdateTenantUserMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserRequest, com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateTenantUser"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateTenantUser"))
              .build();
        }
      }
    }
    return getUpdateTenantUserMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.GetTenantUserRequest,
      com.zhijiejiaoyu.glory_api.tenant.GetTenantUserResponse> getGetTenantUserMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetTenantUser",
      requestType = com.zhijiejiaoyu.glory_api.tenant.GetTenantUserRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.GetTenantUserResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.GetTenantUserRequest,
      com.zhijiejiaoyu.glory_api.tenant.GetTenantUserResponse> getGetTenantUserMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.GetTenantUserRequest, com.zhijiejiaoyu.glory_api.tenant.GetTenantUserResponse> getGetTenantUserMethod;
    if ((getGetTenantUserMethod = glory_apiGrpc.getGetTenantUserMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetTenantUserMethod = glory_apiGrpc.getGetTenantUserMethod) == null) {
          glory_apiGrpc.getGetTenantUserMethod = getGetTenantUserMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.GetTenantUserRequest, com.zhijiejiaoyu.glory_api.tenant.GetTenantUserResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetTenantUser"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.GetTenantUserRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.GetTenantUserResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetTenantUser"))
              .build();
        }
      }
    }
    return getGetTenantUserMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.ListTenantUserRequest,
      com.zhijiejiaoyu.glory_api.tenant.ListTenantUserResponse> getListTenantUserMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListTenantUser",
      requestType = com.zhijiejiaoyu.glory_api.tenant.ListTenantUserRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.ListTenantUserResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.ListTenantUserRequest,
      com.zhijiejiaoyu.glory_api.tenant.ListTenantUserResponse> getListTenantUserMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.ListTenantUserRequest, com.zhijiejiaoyu.glory_api.tenant.ListTenantUserResponse> getListTenantUserMethod;
    if ((getListTenantUserMethod = glory_apiGrpc.getListTenantUserMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListTenantUserMethod = glory_apiGrpc.getListTenantUserMethod) == null) {
          glory_apiGrpc.getListTenantUserMethod = getListTenantUserMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.ListTenantUserRequest, com.zhijiejiaoyu.glory_api.tenant.ListTenantUserResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListTenantUser"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.ListTenantUserRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.ListTenantUserResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListTenantUser"))
              .build();
        }
      }
    }
    return getListTenantUserMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.ListTenantStudentRequest,
      com.zhijiejiaoyu.glory_api.tenant.ListTenantStudentResponse> getListTenantStudentMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListTenantStudent",
      requestType = com.zhijiejiaoyu.glory_api.tenant.ListTenantStudentRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.ListTenantStudentResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.ListTenantStudentRequest,
      com.zhijiejiaoyu.glory_api.tenant.ListTenantStudentResponse> getListTenantStudentMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.ListTenantStudentRequest, com.zhijiejiaoyu.glory_api.tenant.ListTenantStudentResponse> getListTenantStudentMethod;
    if ((getListTenantStudentMethod = glory_apiGrpc.getListTenantStudentMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListTenantStudentMethod = glory_apiGrpc.getListTenantStudentMethod) == null) {
          glory_apiGrpc.getListTenantStudentMethod = getListTenantStudentMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.ListTenantStudentRequest, com.zhijiejiaoyu.glory_api.tenant.ListTenantStudentResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListTenantStudent"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.ListTenantStudentRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.ListTenantStudentResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListTenantStudent"))
              .build();
        }
      }
    }
    return getListTenantStudentMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserPasswordRequest,
      com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserPasswordResponse> getUpdateTenantUserPasswordMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateTenantUserPassword",
      requestType = com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserPasswordRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserPasswordResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserPasswordRequest,
      com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserPasswordResponse> getUpdateTenantUserPasswordMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserPasswordRequest, com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserPasswordResponse> getUpdateTenantUserPasswordMethod;
    if ((getUpdateTenantUserPasswordMethod = glory_apiGrpc.getUpdateTenantUserPasswordMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateTenantUserPasswordMethod = glory_apiGrpc.getUpdateTenantUserPasswordMethod) == null) {
          glory_apiGrpc.getUpdateTenantUserPasswordMethod = getUpdateTenantUserPasswordMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserPasswordRequest, com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserPasswordResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateTenantUserPassword"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserPasswordRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserPasswordResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateTenantUserPassword"))
              .build();
        }
      }
    }
    return getUpdateTenantUserPasswordMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantConfigRequest,
      com.zhijiejiaoyu.glory_api.tenant.UpdateTenantConfigResponse> getUpdateTenantConfigMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateTenantConfig",
      requestType = com.zhijiejiaoyu.glory_api.tenant.UpdateTenantConfigRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.UpdateTenantConfigResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantConfigRequest,
      com.zhijiejiaoyu.glory_api.tenant.UpdateTenantConfigResponse> getUpdateTenantConfigMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantConfigRequest, com.zhijiejiaoyu.glory_api.tenant.UpdateTenantConfigResponse> getUpdateTenantConfigMethod;
    if ((getUpdateTenantConfigMethod = glory_apiGrpc.getUpdateTenantConfigMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateTenantConfigMethod = glory_apiGrpc.getUpdateTenantConfigMethod) == null) {
          glory_apiGrpc.getUpdateTenantConfigMethod = getUpdateTenantConfigMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantConfigRequest, com.zhijiejiaoyu.glory_api.tenant.UpdateTenantConfigResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateTenantConfig"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.UpdateTenantConfigRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.UpdateTenantConfigResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateTenantConfig"))
              .build();
        }
      }
    }
    return getUpdateTenantConfigMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.ListTenantConfigRequest,
      com.zhijiejiaoyu.glory_api.tenant.ListTenantConfigResponse> getListTenantConfigMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListTenantConfig",
      requestType = com.zhijiejiaoyu.glory_api.tenant.ListTenantConfigRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.tenant.ListTenantConfigResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.ListTenantConfigRequest,
      com.zhijiejiaoyu.glory_api.tenant.ListTenantConfigResponse> getListTenantConfigMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.tenant.ListTenantConfigRequest, com.zhijiejiaoyu.glory_api.tenant.ListTenantConfigResponse> getListTenantConfigMethod;
    if ((getListTenantConfigMethod = glory_apiGrpc.getListTenantConfigMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListTenantConfigMethod = glory_apiGrpc.getListTenantConfigMethod) == null) {
          glory_apiGrpc.getListTenantConfigMethod = getListTenantConfigMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.tenant.ListTenantConfigRequest, com.zhijiejiaoyu.glory_api.tenant.ListTenantConfigResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListTenantConfig"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.ListTenantConfigRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.tenant.ListTenantConfigResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListTenantConfig"))
              .build();
        }
      }
    }
    return getListTenantConfigMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoResponse> getCreateShortVideoMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateShortVideo",
      requestType = com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoResponse> getCreateShortVideoMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoRequest, com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoResponse> getCreateShortVideoMethod;
    if ((getCreateShortVideoMethod = glory_apiGrpc.getCreateShortVideoMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateShortVideoMethod = glory_apiGrpc.getCreateShortVideoMethod) == null) {
          glory_apiGrpc.getCreateShortVideoMethod = getCreateShortVideoMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoRequest, com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateShortVideo"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateShortVideo"))
              .build();
        }
      }
    }
    return getCreateShortVideoMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.StageShortVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.StageShortVideoResponse> getStageShortVideoMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "StageShortVideo",
      requestType = com.zhijiejiaoyu.glory_api.short_video.StageShortVideoRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.StageShortVideoResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.StageShortVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.StageShortVideoResponse> getStageShortVideoMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.StageShortVideoRequest, com.zhijiejiaoyu.glory_api.short_video.StageShortVideoResponse> getStageShortVideoMethod;
    if ((getStageShortVideoMethod = glory_apiGrpc.getStageShortVideoMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getStageShortVideoMethod = glory_apiGrpc.getStageShortVideoMethod) == null) {
          glory_apiGrpc.getStageShortVideoMethod = getStageShortVideoMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.StageShortVideoRequest, com.zhijiejiaoyu.glory_api.short_video.StageShortVideoResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "StageShortVideo"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.StageShortVideoRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.StageShortVideoResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("StageShortVideo"))
              .build();
        }
      }
    }
    return getStageShortVideoMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListMyShortVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListMyShortVideoResponse> getListMyShortVideoMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListMyShortVideo",
      requestType = com.zhijiejiaoyu.glory_api.short_video.ListMyShortVideoRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.ListMyShortVideoResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListMyShortVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListMyShortVideoResponse> getListMyShortVideoMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListMyShortVideoRequest, com.zhijiejiaoyu.glory_api.short_video.ListMyShortVideoResponse> getListMyShortVideoMethod;
    if ((getListMyShortVideoMethod = glory_apiGrpc.getListMyShortVideoMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListMyShortVideoMethod = glory_apiGrpc.getListMyShortVideoMethod) == null) {
          glory_apiGrpc.getListMyShortVideoMethod = getListMyShortVideoMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.ListMyShortVideoRequest, com.zhijiejiaoyu.glory_api.short_video.ListMyShortVideoResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListMyShortVideo"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListMyShortVideoRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListMyShortVideoResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListMyShortVideo"))
              .build();
        }
      }
    }
    return getListMyShortVideoMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListMyStageVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListMyStageVideoResponse> getListMyStageVideoMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListMyStageVideo",
      requestType = com.zhijiejiaoyu.glory_api.short_video.ListMyStageVideoRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.ListMyStageVideoResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListMyStageVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListMyStageVideoResponse> getListMyStageVideoMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListMyStageVideoRequest, com.zhijiejiaoyu.glory_api.short_video.ListMyStageVideoResponse> getListMyStageVideoMethod;
    if ((getListMyStageVideoMethod = glory_apiGrpc.getListMyStageVideoMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListMyStageVideoMethod = glory_apiGrpc.getListMyStageVideoMethod) == null) {
          glory_apiGrpc.getListMyStageVideoMethod = getListMyStageVideoMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.ListMyStageVideoRequest, com.zhijiejiaoyu.glory_api.short_video.ListMyStageVideoResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListMyStageVideo"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListMyStageVideoRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListMyStageVideoResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListMyStageVideo"))
              .build();
        }
      }
    }
    return getListMyStageVideoMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListMyLikeVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListMyLikeVideoResponse> getListMyLikeVideoMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListMyLikeVideo",
      requestType = com.zhijiejiaoyu.glory_api.short_video.ListMyLikeVideoRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.ListMyLikeVideoResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListMyLikeVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListMyLikeVideoResponse> getListMyLikeVideoMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListMyLikeVideoRequest, com.zhijiejiaoyu.glory_api.short_video.ListMyLikeVideoResponse> getListMyLikeVideoMethod;
    if ((getListMyLikeVideoMethod = glory_apiGrpc.getListMyLikeVideoMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListMyLikeVideoMethod = glory_apiGrpc.getListMyLikeVideoMethod) == null) {
          glory_apiGrpc.getListMyLikeVideoMethod = getListMyLikeVideoMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.ListMyLikeVideoRequest, com.zhijiejiaoyu.glory_api.short_video.ListMyLikeVideoResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListMyLikeVideo"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListMyLikeVideoRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListMyLikeVideoResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListMyLikeVideo"))
              .build();
        }
      }
    }
    return getListMyLikeVideoMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListMyFavoriteVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListMyFavoriteVideoResponse> getListMyFavoriteVideoMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListMyFavoriteVideo",
      requestType = com.zhijiejiaoyu.glory_api.short_video.ListMyFavoriteVideoRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.ListMyFavoriteVideoResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListMyFavoriteVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListMyFavoriteVideoResponse> getListMyFavoriteVideoMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListMyFavoriteVideoRequest, com.zhijiejiaoyu.glory_api.short_video.ListMyFavoriteVideoResponse> getListMyFavoriteVideoMethod;
    if ((getListMyFavoriteVideoMethod = glory_apiGrpc.getListMyFavoriteVideoMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListMyFavoriteVideoMethod = glory_apiGrpc.getListMyFavoriteVideoMethod) == null) {
          glory_apiGrpc.getListMyFavoriteVideoMethod = getListMyFavoriteVideoMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.ListMyFavoriteVideoRequest, com.zhijiejiaoyu.glory_api.short_video.ListMyFavoriteVideoResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListMyFavoriteVideo"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListMyFavoriteVideoRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListMyFavoriteVideoResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListMyFavoriteVideo"))
              .build();
        }
      }
    }
    return getListMyFavoriteVideoMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetShortVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.GetShortVideoResponse> getGetShortVideoMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetShortVideo",
      requestType = com.zhijiejiaoyu.glory_api.short_video.GetShortVideoRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.GetShortVideoResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetShortVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.GetShortVideoResponse> getGetShortVideoMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetShortVideoRequest, com.zhijiejiaoyu.glory_api.short_video.GetShortVideoResponse> getGetShortVideoMethod;
    if ((getGetShortVideoMethod = glory_apiGrpc.getGetShortVideoMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetShortVideoMethod = glory_apiGrpc.getGetShortVideoMethod) == null) {
          glory_apiGrpc.getGetShortVideoMethod = getGetShortVideoMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.GetShortVideoRequest, com.zhijiejiaoyu.glory_api.short_video.GetShortVideoResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetShortVideo"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.GetShortVideoRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.GetShortVideoResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetShortVideo"))
              .build();
        }
      }
    }
    return getGetShortVideoMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.UpdateShortVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.UpdateShortVideoResponse> getUpdateShortVideoMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateShortVideo",
      requestType = com.zhijiejiaoyu.glory_api.short_video.UpdateShortVideoRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.UpdateShortVideoResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.UpdateShortVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.UpdateShortVideoResponse> getUpdateShortVideoMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.UpdateShortVideoRequest, com.zhijiejiaoyu.glory_api.short_video.UpdateShortVideoResponse> getUpdateShortVideoMethod;
    if ((getUpdateShortVideoMethod = glory_apiGrpc.getUpdateShortVideoMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateShortVideoMethod = glory_apiGrpc.getUpdateShortVideoMethod) == null) {
          glory_apiGrpc.getUpdateShortVideoMethod = getUpdateShortVideoMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.UpdateShortVideoRequest, com.zhijiejiaoyu.glory_api.short_video.UpdateShortVideoResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateShortVideo"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.UpdateShortVideoRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.UpdateShortVideoResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateShortVideo"))
              .build();
        }
      }
    }
    return getUpdateShortVideoMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoResponse> getDeleteShortVideoMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteShortVideo",
      requestType = com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoResponse> getDeleteShortVideoMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoRequest, com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoResponse> getDeleteShortVideoMethod;
    if ((getDeleteShortVideoMethod = glory_apiGrpc.getDeleteShortVideoMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteShortVideoMethod = glory_apiGrpc.getDeleteShortVideoMethod) == null) {
          glory_apiGrpc.getDeleteShortVideoMethod = getDeleteShortVideoMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoRequest, com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteShortVideo"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteShortVideo"))
              .build();
        }
      }
    }
    return getDeleteShortVideoMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetStageVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.GetStageVideoResponse> getGetStageVideoMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetStageVideo",
      requestType = com.zhijiejiaoyu.glory_api.short_video.GetStageVideoRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.GetStageVideoResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetStageVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.GetStageVideoResponse> getGetStageVideoMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetStageVideoRequest, com.zhijiejiaoyu.glory_api.short_video.GetStageVideoResponse> getGetStageVideoMethod;
    if ((getGetStageVideoMethod = glory_apiGrpc.getGetStageVideoMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetStageVideoMethod = glory_apiGrpc.getGetStageVideoMethod) == null) {
          glory_apiGrpc.getGetStageVideoMethod = getGetStageVideoMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.GetStageVideoRequest, com.zhijiejiaoyu.glory_api.short_video.GetStageVideoResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetStageVideo"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.GetStageVideoRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.GetStageVideoResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetStageVideo"))
              .build();
        }
      }
    }
    return getGetStageVideoMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.DeleteStageVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.DeleteStageVideoResponse> getDeleteStageVideoMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteStageVideo",
      requestType = com.zhijiejiaoyu.glory_api.short_video.DeleteStageVideoRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.DeleteStageVideoResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.DeleteStageVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.DeleteStageVideoResponse> getDeleteStageVideoMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.DeleteStageVideoRequest, com.zhijiejiaoyu.glory_api.short_video.DeleteStageVideoResponse> getDeleteStageVideoMethod;
    if ((getDeleteStageVideoMethod = glory_apiGrpc.getDeleteStageVideoMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteStageVideoMethod = glory_apiGrpc.getDeleteStageVideoMethod) == null) {
          glory_apiGrpc.getDeleteStageVideoMethod = getDeleteStageVideoMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.DeleteStageVideoRequest, com.zhijiejiaoyu.glory_api.short_video.DeleteStageVideoResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteStageVideo"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.DeleteStageVideoRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.DeleteStageVideoResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteStageVideo"))
              .build();
        }
      }
    }
    return getDeleteStageVideoMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.UpdateStageVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.UpdateStageVideoResponse> getUpdateStageVideoMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateStageVideo",
      requestType = com.zhijiejiaoyu.glory_api.short_video.UpdateStageVideoRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.UpdateStageVideoResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.UpdateStageVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.UpdateStageVideoResponse> getUpdateStageVideoMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.UpdateStageVideoRequest, com.zhijiejiaoyu.glory_api.short_video.UpdateStageVideoResponse> getUpdateStageVideoMethod;
    if ((getUpdateStageVideoMethod = glory_apiGrpc.getUpdateStageVideoMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateStageVideoMethod = glory_apiGrpc.getUpdateStageVideoMethod) == null) {
          glory_apiGrpc.getUpdateStageVideoMethod = getUpdateStageVideoMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.UpdateStageVideoRequest, com.zhijiejiaoyu.glory_api.short_video.UpdateStageVideoResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateStageVideo"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.UpdateStageVideoRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.UpdateStageVideoResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateStageVideo"))
              .build();
        }
      }
    }
    return getUpdateStageVideoMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ManagementListShortVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.ManagementListShortVideoResponse> getManagementListShortVideoMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ManagementListShortVideo",
      requestType = com.zhijiejiaoyu.glory_api.short_video.ManagementListShortVideoRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.ManagementListShortVideoResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ManagementListShortVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.ManagementListShortVideoResponse> getManagementListShortVideoMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ManagementListShortVideoRequest, com.zhijiejiaoyu.glory_api.short_video.ManagementListShortVideoResponse> getManagementListShortVideoMethod;
    if ((getManagementListShortVideoMethod = glory_apiGrpc.getManagementListShortVideoMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getManagementListShortVideoMethod = glory_apiGrpc.getManagementListShortVideoMethod) == null) {
          glory_apiGrpc.getManagementListShortVideoMethod = getManagementListShortVideoMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.ManagementListShortVideoRequest, com.zhijiejiaoyu.glory_api.short_video.ManagementListShortVideoResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ManagementListShortVideo"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ManagementListShortVideoRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ManagementListShortVideoResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ManagementListShortVideo"))
              .build();
        }
      }
    }
    return getManagementListShortVideoMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ManagementCensorShortVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.ManagementCensorShortVideoResponse> getManagementCensorShortVideoMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ManagementCensorShortVideo",
      requestType = com.zhijiejiaoyu.glory_api.short_video.ManagementCensorShortVideoRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.ManagementCensorShortVideoResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ManagementCensorShortVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.ManagementCensorShortVideoResponse> getManagementCensorShortVideoMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ManagementCensorShortVideoRequest, com.zhijiejiaoyu.glory_api.short_video.ManagementCensorShortVideoResponse> getManagementCensorShortVideoMethod;
    if ((getManagementCensorShortVideoMethod = glory_apiGrpc.getManagementCensorShortVideoMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getManagementCensorShortVideoMethod = glory_apiGrpc.getManagementCensorShortVideoMethod) == null) {
          glory_apiGrpc.getManagementCensorShortVideoMethod = getManagementCensorShortVideoMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.ManagementCensorShortVideoRequest, com.zhijiejiaoyu.glory_api.short_video.ManagementCensorShortVideoResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ManagementCensorShortVideo"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ManagementCensorShortVideoRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ManagementCensorShortVideoResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ManagementCensorShortVideo"))
              .build();
        }
      }
    }
    return getManagementCensorShortVideoMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ManagementDeleteShortVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.ManagementDeleteShortVideoResponse> getManagementDeleteShortVideoMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ManagementDeleteShortVideo",
      requestType = com.zhijiejiaoyu.glory_api.short_video.ManagementDeleteShortVideoRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.ManagementDeleteShortVideoResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ManagementDeleteShortVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.ManagementDeleteShortVideoResponse> getManagementDeleteShortVideoMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ManagementDeleteShortVideoRequest, com.zhijiejiaoyu.glory_api.short_video.ManagementDeleteShortVideoResponse> getManagementDeleteShortVideoMethod;
    if ((getManagementDeleteShortVideoMethod = glory_apiGrpc.getManagementDeleteShortVideoMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getManagementDeleteShortVideoMethod = glory_apiGrpc.getManagementDeleteShortVideoMethod) == null) {
          glory_apiGrpc.getManagementDeleteShortVideoMethod = getManagementDeleteShortVideoMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.ManagementDeleteShortVideoRequest, com.zhijiejiaoyu.glory_api.short_video.ManagementDeleteShortVideoResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ManagementDeleteShortVideo"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ManagementDeleteShortVideoRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ManagementDeleteShortVideoResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ManagementDeleteShortVideo"))
              .build();
        }
      }
    }
    return getManagementDeleteShortVideoMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListShortVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListShortVideoResponse> getListShortVideoMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListShortVideo",
      requestType = com.zhijiejiaoyu.glory_api.short_video.ListShortVideoRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.ListShortVideoResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListShortVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListShortVideoResponse> getListShortVideoMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListShortVideoRequest, com.zhijiejiaoyu.glory_api.short_video.ListShortVideoResponse> getListShortVideoMethod;
    if ((getListShortVideoMethod = glory_apiGrpc.getListShortVideoMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListShortVideoMethod = glory_apiGrpc.getListShortVideoMethod) == null) {
          glory_apiGrpc.getListShortVideoMethod = getListShortVideoMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.ListShortVideoRequest, com.zhijiejiaoyu.glory_api.short_video.ListShortVideoResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListShortVideo"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListShortVideoRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListShortVideoResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListShortVideo"))
              .build();
        }
      }
    }
    return getListShortVideoMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.LikeShortVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.LikeShortVideoResponse> getLikeShortVideoMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "LikeShortVideo",
      requestType = com.zhijiejiaoyu.glory_api.short_video.LikeShortVideoRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.LikeShortVideoResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.LikeShortVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.LikeShortVideoResponse> getLikeShortVideoMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.LikeShortVideoRequest, com.zhijiejiaoyu.glory_api.short_video.LikeShortVideoResponse> getLikeShortVideoMethod;
    if ((getLikeShortVideoMethod = glory_apiGrpc.getLikeShortVideoMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getLikeShortVideoMethod = glory_apiGrpc.getLikeShortVideoMethod) == null) {
          glory_apiGrpc.getLikeShortVideoMethod = getLikeShortVideoMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.LikeShortVideoRequest, com.zhijiejiaoyu.glory_api.short_video.LikeShortVideoResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "LikeShortVideo"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.LikeShortVideoRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.LikeShortVideoResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("LikeShortVideo"))
              .build();
        }
      }
    }
    return getLikeShortVideoMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.FavoriteShortVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.FavoriteShortVideoResponse> getFavoriteShortVideoMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "FavoriteShortVideo",
      requestType = com.zhijiejiaoyu.glory_api.short_video.FavoriteShortVideoRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.FavoriteShortVideoResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.FavoriteShortVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.FavoriteShortVideoResponse> getFavoriteShortVideoMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.FavoriteShortVideoRequest, com.zhijiejiaoyu.glory_api.short_video.FavoriteShortVideoResponse> getFavoriteShortVideoMethod;
    if ((getFavoriteShortVideoMethod = glory_apiGrpc.getFavoriteShortVideoMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getFavoriteShortVideoMethod = glory_apiGrpc.getFavoriteShortVideoMethod) == null) {
          glory_apiGrpc.getFavoriteShortVideoMethod = getFavoriteShortVideoMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.FavoriteShortVideoRequest, com.zhijiejiaoyu.glory_api.short_video.FavoriteShortVideoResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "FavoriteShortVideo"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.FavoriteShortVideoRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.FavoriteShortVideoResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("FavoriteShortVideo"))
              .build();
        }
      }
    }
    return getFavoriteShortVideoMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoCommentRequest,
      com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoCommentResponse> getCreateShortVideoCommentMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateShortVideoComment",
      requestType = com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoCommentRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoCommentResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoCommentRequest,
      com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoCommentResponse> getCreateShortVideoCommentMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoCommentRequest, com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoCommentResponse> getCreateShortVideoCommentMethod;
    if ((getCreateShortVideoCommentMethod = glory_apiGrpc.getCreateShortVideoCommentMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateShortVideoCommentMethod = glory_apiGrpc.getCreateShortVideoCommentMethod) == null) {
          glory_apiGrpc.getCreateShortVideoCommentMethod = getCreateShortVideoCommentMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoCommentRequest, com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoCommentResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateShortVideoComment"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoCommentRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoCommentResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateShortVideoComment"))
              .build();
        }
      }
    }
    return getCreateShortVideoCommentMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoCommentRequest,
      com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoCommentResponse> getDeleteShortVideoCommentMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteShortVideoComment",
      requestType = com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoCommentRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoCommentResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoCommentRequest,
      com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoCommentResponse> getDeleteShortVideoCommentMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoCommentRequest, com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoCommentResponse> getDeleteShortVideoCommentMethod;
    if ((getDeleteShortVideoCommentMethod = glory_apiGrpc.getDeleteShortVideoCommentMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteShortVideoCommentMethod = glory_apiGrpc.getDeleteShortVideoCommentMethod) == null) {
          glory_apiGrpc.getDeleteShortVideoCommentMethod = getDeleteShortVideoCommentMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoCommentRequest, com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoCommentResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteShortVideoComment"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoCommentRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoCommentResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteShortVideoComment"))
              .build();
        }
      }
    }
    return getDeleteShortVideoCommentMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListShortVideoCommentRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListShortVideoCommentResponse> getListShortVideoCommentMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListShortVideoComment",
      requestType = com.zhijiejiaoyu.glory_api.short_video.ListShortVideoCommentRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.ListShortVideoCommentResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListShortVideoCommentRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListShortVideoCommentResponse> getListShortVideoCommentMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListShortVideoCommentRequest, com.zhijiejiaoyu.glory_api.short_video.ListShortVideoCommentResponse> getListShortVideoCommentMethod;
    if ((getListShortVideoCommentMethod = glory_apiGrpc.getListShortVideoCommentMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListShortVideoCommentMethod = glory_apiGrpc.getListShortVideoCommentMethod) == null) {
          glory_apiGrpc.getListShortVideoCommentMethod = getListShortVideoCommentMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.ListShortVideoCommentRequest, com.zhijiejiaoyu.glory_api.short_video.ListShortVideoCommentResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListShortVideoComment"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListShortVideoCommentRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListShortVideoCommentResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListShortVideoComment"))
              .build();
        }
      }
    }
    return getListShortVideoCommentMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.TeacherListStudentShortVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.TeacherListStudentShortVideoResponse> getTeacherListStudentShortVideoMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "TeacherListStudentShortVideo",
      requestType = com.zhijiejiaoyu.glory_api.short_video.TeacherListStudentShortVideoRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.TeacherListStudentShortVideoResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.TeacherListStudentShortVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.TeacherListStudentShortVideoResponse> getTeacherListStudentShortVideoMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.TeacherListStudentShortVideoRequest, com.zhijiejiaoyu.glory_api.short_video.TeacherListStudentShortVideoResponse> getTeacherListStudentShortVideoMethod;
    if ((getTeacherListStudentShortVideoMethod = glory_apiGrpc.getTeacherListStudentShortVideoMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getTeacherListStudentShortVideoMethod = glory_apiGrpc.getTeacherListStudentShortVideoMethod) == null) {
          glory_apiGrpc.getTeacherListStudentShortVideoMethod = getTeacherListStudentShortVideoMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.TeacherListStudentShortVideoRequest, com.zhijiejiaoyu.glory_api.short_video.TeacherListStudentShortVideoResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "TeacherListStudentShortVideo"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.TeacherListStudentShortVideoRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.TeacherListStudentShortVideoResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("TeacherListStudentShortVideo"))
              .build();
        }
      }
    }
    return getTeacherListStudentShortVideoMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CreateCouponRequest,
      com.zhijiejiaoyu.glory_api.shop.CreateCouponResponse> getCreateCouponMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateCoupon",
      requestType = com.zhijiejiaoyu.glory_api.shop.CreateCouponRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.CreateCouponResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CreateCouponRequest,
      com.zhijiejiaoyu.glory_api.shop.CreateCouponResponse> getCreateCouponMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CreateCouponRequest, com.zhijiejiaoyu.glory_api.shop.CreateCouponResponse> getCreateCouponMethod;
    if ((getCreateCouponMethod = glory_apiGrpc.getCreateCouponMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateCouponMethod = glory_apiGrpc.getCreateCouponMethod) == null) {
          glory_apiGrpc.getCreateCouponMethod = getCreateCouponMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.CreateCouponRequest, com.zhijiejiaoyu.glory_api.shop.CreateCouponResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateCoupon"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.CreateCouponRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.CreateCouponResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateCoupon"))
              .build();
        }
      }
    }
    return getCreateCouponMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListCouponRequest,
      com.zhijiejiaoyu.glory_api.shop.ListCouponResponse> getListCouponMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListCoupon",
      requestType = com.zhijiejiaoyu.glory_api.shop.ListCouponRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.ListCouponResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListCouponRequest,
      com.zhijiejiaoyu.glory_api.shop.ListCouponResponse> getListCouponMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListCouponRequest, com.zhijiejiaoyu.glory_api.shop.ListCouponResponse> getListCouponMethod;
    if ((getListCouponMethod = glory_apiGrpc.getListCouponMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListCouponMethod = glory_apiGrpc.getListCouponMethod) == null) {
          glory_apiGrpc.getListCouponMethod = getListCouponMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.ListCouponRequest, com.zhijiejiaoyu.glory_api.shop.ListCouponResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListCoupon"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListCouponRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListCouponResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListCoupon"))
              .build();
        }
      }
    }
    return getListCouponMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetCouponDetailRequest,
      com.zhijiejiaoyu.glory_api.shop.GetCouponDetailResponse> getCouponDetailMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CouponDetail",
      requestType = com.zhijiejiaoyu.glory_api.shop.GetCouponDetailRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.GetCouponDetailResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetCouponDetailRequest,
      com.zhijiejiaoyu.glory_api.shop.GetCouponDetailResponse> getCouponDetailMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetCouponDetailRequest, com.zhijiejiaoyu.glory_api.shop.GetCouponDetailResponse> getCouponDetailMethod;
    if ((getCouponDetailMethod = glory_apiGrpc.getCouponDetailMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCouponDetailMethod = glory_apiGrpc.getCouponDetailMethod) == null) {
          glory_apiGrpc.getCouponDetailMethod = getCouponDetailMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.GetCouponDetailRequest, com.zhijiejiaoyu.glory_api.shop.GetCouponDetailResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CouponDetail"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetCouponDetailRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetCouponDetailResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CouponDetail"))
              .build();
        }
      }
    }
    return getCouponDetailMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateCouponRequest,
      com.zhijiejiaoyu.glory_api.shop.UpdateCouponResponse> getUpdateCouponMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateCoupon",
      requestType = com.zhijiejiaoyu.glory_api.shop.UpdateCouponRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.UpdateCouponResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateCouponRequest,
      com.zhijiejiaoyu.glory_api.shop.UpdateCouponResponse> getUpdateCouponMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateCouponRequest, com.zhijiejiaoyu.glory_api.shop.UpdateCouponResponse> getUpdateCouponMethod;
    if ((getUpdateCouponMethod = glory_apiGrpc.getUpdateCouponMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateCouponMethod = glory_apiGrpc.getUpdateCouponMethod) == null) {
          glory_apiGrpc.getUpdateCouponMethod = getUpdateCouponMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.UpdateCouponRequest, com.zhijiejiaoyu.glory_api.shop.UpdateCouponResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateCoupon"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.UpdateCouponRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.UpdateCouponResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateCoupon"))
              .build();
        }
      }
    }
    return getUpdateCouponMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteCouponRequest,
      com.zhijiejiaoyu.glory_api.shop.DeleteCouponResponse> getDeleteCouponMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteCoupon",
      requestType = com.zhijiejiaoyu.glory_api.shop.DeleteCouponRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.DeleteCouponResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteCouponRequest,
      com.zhijiejiaoyu.glory_api.shop.DeleteCouponResponse> getDeleteCouponMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteCouponRequest, com.zhijiejiaoyu.glory_api.shop.DeleteCouponResponse> getDeleteCouponMethod;
    if ((getDeleteCouponMethod = glory_apiGrpc.getDeleteCouponMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteCouponMethod = glory_apiGrpc.getDeleteCouponMethod) == null) {
          glory_apiGrpc.getDeleteCouponMethod = getDeleteCouponMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.DeleteCouponRequest, com.zhijiejiaoyu.glory_api.shop.DeleteCouponResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteCoupon"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DeleteCouponRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DeleteCouponResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteCoupon"))
              .build();
        }
      }
    }
    return getDeleteCouponMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.AbolishCouponRequest,
      com.zhijiejiaoyu.glory_api.shop.AbolishCouponResponse> getAbolishCouponMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "AbolishCoupon",
      requestType = com.zhijiejiaoyu.glory_api.shop.AbolishCouponRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.AbolishCouponResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.AbolishCouponRequest,
      com.zhijiejiaoyu.glory_api.shop.AbolishCouponResponse> getAbolishCouponMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.AbolishCouponRequest, com.zhijiejiaoyu.glory_api.shop.AbolishCouponResponse> getAbolishCouponMethod;
    if ((getAbolishCouponMethod = glory_apiGrpc.getAbolishCouponMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getAbolishCouponMethod = glory_apiGrpc.getAbolishCouponMethod) == null) {
          glory_apiGrpc.getAbolishCouponMethod = getAbolishCouponMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.AbolishCouponRequest, com.zhijiejiaoyu.glory_api.shop.AbolishCouponResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "AbolishCoupon"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.AbolishCouponRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.AbolishCouponResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("AbolishCoupon"))
              .build();
        }
      }
    }
    return getAbolishCouponMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateCouponDistributionStatusRequest,
      com.zhijiejiaoyu.glory_api.shop.UpdateCouponDistributionStatusResponse> getUpdateCouponDistributionStatusMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateCouponDistributionStatus",
      requestType = com.zhijiejiaoyu.glory_api.shop.UpdateCouponDistributionStatusRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.UpdateCouponDistributionStatusResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateCouponDistributionStatusRequest,
      com.zhijiejiaoyu.glory_api.shop.UpdateCouponDistributionStatusResponse> getUpdateCouponDistributionStatusMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateCouponDistributionStatusRequest, com.zhijiejiaoyu.glory_api.shop.UpdateCouponDistributionStatusResponse> getUpdateCouponDistributionStatusMethod;
    if ((getUpdateCouponDistributionStatusMethod = glory_apiGrpc.getUpdateCouponDistributionStatusMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateCouponDistributionStatusMethod = glory_apiGrpc.getUpdateCouponDistributionStatusMethod) == null) {
          glory_apiGrpc.getUpdateCouponDistributionStatusMethod = getUpdateCouponDistributionStatusMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.UpdateCouponDistributionStatusRequest, com.zhijiejiaoyu.glory_api.shop.UpdateCouponDistributionStatusResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateCouponDistributionStatus"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.UpdateCouponDistributionStatusRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.UpdateCouponDistributionStatusResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateCouponDistributionStatus"))
              .build();
        }
      }
    }
    return getUpdateCouponDistributionStatusMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ClaimCouponRequest,
      com.zhijiejiaoyu.glory_api.shop.ClaimCouponResponse> getClaimCouponMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ClaimCoupon",
      requestType = com.zhijiejiaoyu.glory_api.shop.ClaimCouponRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.ClaimCouponResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ClaimCouponRequest,
      com.zhijiejiaoyu.glory_api.shop.ClaimCouponResponse> getClaimCouponMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ClaimCouponRequest, com.zhijiejiaoyu.glory_api.shop.ClaimCouponResponse> getClaimCouponMethod;
    if ((getClaimCouponMethod = glory_apiGrpc.getClaimCouponMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getClaimCouponMethod = glory_apiGrpc.getClaimCouponMethod) == null) {
          glory_apiGrpc.getClaimCouponMethod = getClaimCouponMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.ClaimCouponRequest, com.zhijiejiaoyu.glory_api.shop.ClaimCouponResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ClaimCoupon"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ClaimCouponRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ClaimCouponResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ClaimCoupon"))
              .build();
        }
      }
    }
    return getClaimCouponMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListMyCouponRequest,
      com.zhijiejiaoyu.glory_api.shop.ListMyCouponResponse> getListMyCouponMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListMyCoupon",
      requestType = com.zhijiejiaoyu.glory_api.shop.ListMyCouponRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.ListMyCouponResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListMyCouponRequest,
      com.zhijiejiaoyu.glory_api.shop.ListMyCouponResponse> getListMyCouponMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListMyCouponRequest, com.zhijiejiaoyu.glory_api.shop.ListMyCouponResponse> getListMyCouponMethod;
    if ((getListMyCouponMethod = glory_apiGrpc.getListMyCouponMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListMyCouponMethod = glory_apiGrpc.getListMyCouponMethod) == null) {
          glory_apiGrpc.getListMyCouponMethod = getListMyCouponMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.ListMyCouponRequest, com.zhijiejiaoyu.glory_api.shop.ListMyCouponResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListMyCoupon"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListMyCouponRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListMyCouponResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListMyCoupon"))
              .build();
        }
      }
    }
    return getListMyCouponMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CreateActivityRequest,
      com.zhijiejiaoyu.glory_api.shop.CreateActivityResponse> getCreateActivityMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateActivity",
      requestType = com.zhijiejiaoyu.glory_api.shop.CreateActivityRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.CreateActivityResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CreateActivityRequest,
      com.zhijiejiaoyu.glory_api.shop.CreateActivityResponse> getCreateActivityMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.CreateActivityRequest, com.zhijiejiaoyu.glory_api.shop.CreateActivityResponse> getCreateActivityMethod;
    if ((getCreateActivityMethod = glory_apiGrpc.getCreateActivityMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateActivityMethod = glory_apiGrpc.getCreateActivityMethod) == null) {
          glory_apiGrpc.getCreateActivityMethod = getCreateActivityMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.CreateActivityRequest, com.zhijiejiaoyu.glory_api.shop.CreateActivityResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateActivity"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.CreateActivityRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.CreateActivityResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateActivity"))
              .build();
        }
      }
    }
    return getCreateActivityMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListActivityRequest,
      com.zhijiejiaoyu.glory_api.shop.ListActivityResponse> getListActivityMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListActivity",
      requestType = com.zhijiejiaoyu.glory_api.shop.ListActivityRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.ListActivityResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListActivityRequest,
      com.zhijiejiaoyu.glory_api.shop.ListActivityResponse> getListActivityMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.ListActivityRequest, com.zhijiejiaoyu.glory_api.shop.ListActivityResponse> getListActivityMethod;
    if ((getListActivityMethod = glory_apiGrpc.getListActivityMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListActivityMethod = glory_apiGrpc.getListActivityMethod) == null) {
          glory_apiGrpc.getListActivityMethod = getListActivityMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.ListActivityRequest, com.zhijiejiaoyu.glory_api.shop.ListActivityResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListActivity"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListActivityRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.ListActivityResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListActivity"))
              .build();
        }
      }
    }
    return getListActivityMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetActivityDetailRequest,
      com.zhijiejiaoyu.glory_api.shop.GetActivityDetailResponse> getActivityDetailMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ActivityDetail",
      requestType = com.zhijiejiaoyu.glory_api.shop.GetActivityDetailRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.GetActivityDetailResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetActivityDetailRequest,
      com.zhijiejiaoyu.glory_api.shop.GetActivityDetailResponse> getActivityDetailMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.GetActivityDetailRequest, com.zhijiejiaoyu.glory_api.shop.GetActivityDetailResponse> getActivityDetailMethod;
    if ((getActivityDetailMethod = glory_apiGrpc.getActivityDetailMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getActivityDetailMethod = glory_apiGrpc.getActivityDetailMethod) == null) {
          glory_apiGrpc.getActivityDetailMethod = getActivityDetailMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.GetActivityDetailRequest, com.zhijiejiaoyu.glory_api.shop.GetActivityDetailResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ActivityDetail"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetActivityDetailRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.GetActivityDetailResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ActivityDetail"))
              .build();
        }
      }
    }
    return getActivityDetailMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateActivityRequest,
      com.zhijiejiaoyu.glory_api.shop.UpdateActivityResponse> getUpdateActivityMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateActivity",
      requestType = com.zhijiejiaoyu.glory_api.shop.UpdateActivityRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.UpdateActivityResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateActivityRequest,
      com.zhijiejiaoyu.glory_api.shop.UpdateActivityResponse> getUpdateActivityMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.UpdateActivityRequest, com.zhijiejiaoyu.glory_api.shop.UpdateActivityResponse> getUpdateActivityMethod;
    if ((getUpdateActivityMethod = glory_apiGrpc.getUpdateActivityMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateActivityMethod = glory_apiGrpc.getUpdateActivityMethod) == null) {
          glory_apiGrpc.getUpdateActivityMethod = getUpdateActivityMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.UpdateActivityRequest, com.zhijiejiaoyu.glory_api.shop.UpdateActivityResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateActivity"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.UpdateActivityRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.UpdateActivityResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateActivity"))
              .build();
        }
      }
    }
    return getUpdateActivityMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteActivityRequest,
      com.zhijiejiaoyu.glory_api.shop.DeleteActivityResponse> getDeleteActivityMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteActivity",
      requestType = com.zhijiejiaoyu.glory_api.shop.DeleteActivityRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.DeleteActivityResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteActivityRequest,
      com.zhijiejiaoyu.glory_api.shop.DeleteActivityResponse> getDeleteActivityMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DeleteActivityRequest, com.zhijiejiaoyu.glory_api.shop.DeleteActivityResponse> getDeleteActivityMethod;
    if ((getDeleteActivityMethod = glory_apiGrpc.getDeleteActivityMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteActivityMethod = glory_apiGrpc.getDeleteActivityMethod) == null) {
          glory_apiGrpc.getDeleteActivityMethod = getDeleteActivityMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.DeleteActivityRequest, com.zhijiejiaoyu.glory_api.shop.DeleteActivityResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteActivity"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DeleteActivityRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DeleteActivityResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteActivity"))
              .build();
        }
      }
    }
    return getDeleteActivityMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DisableActivityRequest,
      com.zhijiejiaoyu.glory_api.shop.DisableActivityResponse> getDisableActivityMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DisableActivity",
      requestType = com.zhijiejiaoyu.glory_api.shop.DisableActivityRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.shop.DisableActivityResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DisableActivityRequest,
      com.zhijiejiaoyu.glory_api.shop.DisableActivityResponse> getDisableActivityMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.shop.DisableActivityRequest, com.zhijiejiaoyu.glory_api.shop.DisableActivityResponse> getDisableActivityMethod;
    if ((getDisableActivityMethod = glory_apiGrpc.getDisableActivityMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDisableActivityMethod = glory_apiGrpc.getDisableActivityMethod) == null) {
          glory_apiGrpc.getDisableActivityMethod = getDisableActivityMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.shop.DisableActivityRequest, com.zhijiejiaoyu.glory_api.shop.DisableActivityResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DisableActivity"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DisableActivityRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.shop.DisableActivityResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DisableActivity"))
              .build();
        }
      }
    }
    return getDisableActivityMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetCouponAndIntroducingProductRequest,
      com.zhijiejiaoyu.glory_api.live.GetCouponAndIntroducingProductResponse> getGetCouponAndIntroducingProductMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetCouponAndIntroducingProduct",
      requestType = com.zhijiejiaoyu.glory_api.live.GetCouponAndIntroducingProductRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.GetCouponAndIntroducingProductResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetCouponAndIntroducingProductRequest,
      com.zhijiejiaoyu.glory_api.live.GetCouponAndIntroducingProductResponse> getGetCouponAndIntroducingProductMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetCouponAndIntroducingProductRequest, com.zhijiejiaoyu.glory_api.live.GetCouponAndIntroducingProductResponse> getGetCouponAndIntroducingProductMethod;
    if ((getGetCouponAndIntroducingProductMethod = glory_apiGrpc.getGetCouponAndIntroducingProductMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetCouponAndIntroducingProductMethod = glory_apiGrpc.getGetCouponAndIntroducingProductMethod) == null) {
          glory_apiGrpc.getGetCouponAndIntroducingProductMethod = getGetCouponAndIntroducingProductMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.GetCouponAndIntroducingProductRequest, com.zhijiejiaoyu.glory_api.live.GetCouponAndIntroducingProductResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetCouponAndIntroducingProduct"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetCouponAndIntroducingProductRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetCouponAndIntroducingProductResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetCouponAndIntroducingProduct"))
              .build();
        }
      }
    }
    return getGetCouponAndIntroducingProductMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateCourseMaterialBoxRequest,
      com.zhijiejiaoyu.glory_api.course.CreateCourseMaterialBoxResponse> getCreateCourseMaterialBoxMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateCourseMaterialBox",
      requestType = com.zhijiejiaoyu.glory_api.course.CreateCourseMaterialBoxRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.CreateCourseMaterialBoxResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateCourseMaterialBoxRequest,
      com.zhijiejiaoyu.glory_api.course.CreateCourseMaterialBoxResponse> getCreateCourseMaterialBoxMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateCourseMaterialBoxRequest, com.zhijiejiaoyu.glory_api.course.CreateCourseMaterialBoxResponse> getCreateCourseMaterialBoxMethod;
    if ((getCreateCourseMaterialBoxMethod = glory_apiGrpc.getCreateCourseMaterialBoxMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateCourseMaterialBoxMethod = glory_apiGrpc.getCreateCourseMaterialBoxMethod) == null) {
          glory_apiGrpc.getCreateCourseMaterialBoxMethod = getCreateCourseMaterialBoxMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.CreateCourseMaterialBoxRequest, com.zhijiejiaoyu.glory_api.course.CreateCourseMaterialBoxResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateCourseMaterialBox"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.CreateCourseMaterialBoxRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.CreateCourseMaterialBoxResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateCourseMaterialBox"))
              .build();
        }
      }
    }
    return getCreateCourseMaterialBoxMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateCourseMaterialBoxRequest,
      com.zhijiejiaoyu.glory_api.course.UpdateCourseMaterialBoxResponse> getUpdateCourseMaterialBoxMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateCourseMaterialBox",
      requestType = com.zhijiejiaoyu.glory_api.course.UpdateCourseMaterialBoxRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.UpdateCourseMaterialBoxResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateCourseMaterialBoxRequest,
      com.zhijiejiaoyu.glory_api.course.UpdateCourseMaterialBoxResponse> getUpdateCourseMaterialBoxMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateCourseMaterialBoxRequest, com.zhijiejiaoyu.glory_api.course.UpdateCourseMaterialBoxResponse> getUpdateCourseMaterialBoxMethod;
    if ((getUpdateCourseMaterialBoxMethod = glory_apiGrpc.getUpdateCourseMaterialBoxMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateCourseMaterialBoxMethod = glory_apiGrpc.getUpdateCourseMaterialBoxMethod) == null) {
          glory_apiGrpc.getUpdateCourseMaterialBoxMethod = getUpdateCourseMaterialBoxMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.UpdateCourseMaterialBoxRequest, com.zhijiejiaoyu.glory_api.course.UpdateCourseMaterialBoxResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateCourseMaterialBox"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.UpdateCourseMaterialBoxRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.UpdateCourseMaterialBoxResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateCourseMaterialBox"))
              .build();
        }
      }
    }
    return getUpdateCourseMaterialBoxMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListCourseMaterialBoxRequest,
      com.zhijiejiaoyu.glory_api.course.ListCourseMaterialBoxResponse> getListCourseMaterialBoxMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListCourseMaterialBox",
      requestType = com.zhijiejiaoyu.glory_api.course.ListCourseMaterialBoxRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.ListCourseMaterialBoxResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListCourseMaterialBoxRequest,
      com.zhijiejiaoyu.glory_api.course.ListCourseMaterialBoxResponse> getListCourseMaterialBoxMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListCourseMaterialBoxRequest, com.zhijiejiaoyu.glory_api.course.ListCourseMaterialBoxResponse> getListCourseMaterialBoxMethod;
    if ((getListCourseMaterialBoxMethod = glory_apiGrpc.getListCourseMaterialBoxMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListCourseMaterialBoxMethod = glory_apiGrpc.getListCourseMaterialBoxMethod) == null) {
          glory_apiGrpc.getListCourseMaterialBoxMethod = getListCourseMaterialBoxMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.ListCourseMaterialBoxRequest, com.zhijiejiaoyu.glory_api.course.ListCourseMaterialBoxResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListCourseMaterialBox"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.ListCourseMaterialBoxRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.ListCourseMaterialBoxResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListCourseMaterialBox"))
              .build();
        }
      }
    }
    return getListCourseMaterialBoxMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialBoxRequest,
      com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialBoxResponse> getDeleteCourseMaterialBoxMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteCourseMaterialBox",
      requestType = com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialBoxRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialBoxResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialBoxRequest,
      com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialBoxResponse> getDeleteCourseMaterialBoxMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialBoxRequest, com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialBoxResponse> getDeleteCourseMaterialBoxMethod;
    if ((getDeleteCourseMaterialBoxMethod = glory_apiGrpc.getDeleteCourseMaterialBoxMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteCourseMaterialBoxMethod = glory_apiGrpc.getDeleteCourseMaterialBoxMethod) == null) {
          glory_apiGrpc.getDeleteCourseMaterialBoxMethod = getDeleteCourseMaterialBoxMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialBoxRequest, com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialBoxResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteCourseMaterialBox"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialBoxRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialBoxResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteCourseMaterialBox"))
              .build();
        }
      }
    }
    return getDeleteCourseMaterialBoxMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UploadCourseMaterialRequest,
      com.zhijiejiaoyu.glory_api.course.UploadCourseMaterialResponse> getUploadCourseMaterialMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UploadCourseMaterial",
      requestType = com.zhijiejiaoyu.glory_api.course.UploadCourseMaterialRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.UploadCourseMaterialResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UploadCourseMaterialRequest,
      com.zhijiejiaoyu.glory_api.course.UploadCourseMaterialResponse> getUploadCourseMaterialMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UploadCourseMaterialRequest, com.zhijiejiaoyu.glory_api.course.UploadCourseMaterialResponse> getUploadCourseMaterialMethod;
    if ((getUploadCourseMaterialMethod = glory_apiGrpc.getUploadCourseMaterialMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUploadCourseMaterialMethod = glory_apiGrpc.getUploadCourseMaterialMethod) == null) {
          glory_apiGrpc.getUploadCourseMaterialMethod = getUploadCourseMaterialMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.UploadCourseMaterialRequest, com.zhijiejiaoyu.glory_api.course.UploadCourseMaterialResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UploadCourseMaterial"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.UploadCourseMaterialRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.UploadCourseMaterialResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UploadCourseMaterial"))
              .build();
        }
      }
    }
    return getUploadCourseMaterialMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListCourseMaterialRequest,
      com.zhijiejiaoyu.glory_api.course.ListCourseMaterialResponse> getListCourseMaterialMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListCourseMaterial",
      requestType = com.zhijiejiaoyu.glory_api.course.ListCourseMaterialRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.ListCourseMaterialResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListCourseMaterialRequest,
      com.zhijiejiaoyu.glory_api.course.ListCourseMaterialResponse> getListCourseMaterialMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListCourseMaterialRequest, com.zhijiejiaoyu.glory_api.course.ListCourseMaterialResponse> getListCourseMaterialMethod;
    if ((getListCourseMaterialMethod = glory_apiGrpc.getListCourseMaterialMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListCourseMaterialMethod = glory_apiGrpc.getListCourseMaterialMethod) == null) {
          glory_apiGrpc.getListCourseMaterialMethod = getListCourseMaterialMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.ListCourseMaterialRequest, com.zhijiejiaoyu.glory_api.course.ListCourseMaterialResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListCourseMaterial"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.ListCourseMaterialRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.ListCourseMaterialResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListCourseMaterial"))
              .build();
        }
      }
    }
    return getListCourseMaterialMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialRequest,
      com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialResponse> getDeleteCourseMaterialMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteCourseMaterial",
      requestType = com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialRequest,
      com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialResponse> getDeleteCourseMaterialMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialRequest, com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialResponse> getDeleteCourseMaterialMethod;
    if ((getDeleteCourseMaterialMethod = glory_apiGrpc.getDeleteCourseMaterialMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteCourseMaterialMethod = glory_apiGrpc.getDeleteCourseMaterialMethod) == null) {
          glory_apiGrpc.getDeleteCourseMaterialMethod = getDeleteCourseMaterialMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialRequest, com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteCourseMaterial"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteCourseMaterial"))
              .build();
        }
      }
    }
    return getDeleteCourseMaterialMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetCourseTypeTreeRequest,
      com.zhijiejiaoyu.glory_api.course.GetCourseTypeTreeResponse> getGetCourseTypeTreeMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetCourseTypeTree",
      requestType = com.zhijiejiaoyu.glory_api.course.GetCourseTypeTreeRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.GetCourseTypeTreeResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetCourseTypeTreeRequest,
      com.zhijiejiaoyu.glory_api.course.GetCourseTypeTreeResponse> getGetCourseTypeTreeMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetCourseTypeTreeRequest, com.zhijiejiaoyu.glory_api.course.GetCourseTypeTreeResponse> getGetCourseTypeTreeMethod;
    if ((getGetCourseTypeTreeMethod = glory_apiGrpc.getGetCourseTypeTreeMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetCourseTypeTreeMethod = glory_apiGrpc.getGetCourseTypeTreeMethod) == null) {
          glory_apiGrpc.getGetCourseTypeTreeMethod = getGetCourseTypeTreeMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.GetCourseTypeTreeRequest, com.zhijiejiaoyu.glory_api.course.GetCourseTypeTreeResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetCourseTypeTree"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.GetCourseTypeTreeRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.GetCourseTypeTreeResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetCourseTypeTree"))
              .build();
        }
      }
    }
    return getGetCourseTypeTreeMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetCourseTypeListRequest,
      com.zhijiejiaoyu.glory_api.course.GetCourseTypeListResponse> getGetCourseTypeListMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetCourseTypeList",
      requestType = com.zhijiejiaoyu.glory_api.course.GetCourseTypeListRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.GetCourseTypeListResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetCourseTypeListRequest,
      com.zhijiejiaoyu.glory_api.course.GetCourseTypeListResponse> getGetCourseTypeListMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetCourseTypeListRequest, com.zhijiejiaoyu.glory_api.course.GetCourseTypeListResponse> getGetCourseTypeListMethod;
    if ((getGetCourseTypeListMethod = glory_apiGrpc.getGetCourseTypeListMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetCourseTypeListMethod = glory_apiGrpc.getGetCourseTypeListMethod) == null) {
          glory_apiGrpc.getGetCourseTypeListMethod = getGetCourseTypeListMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.GetCourseTypeListRequest, com.zhijiejiaoyu.glory_api.course.GetCourseTypeListResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetCourseTypeList"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.GetCourseTypeListRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.GetCourseTypeListResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetCourseTypeList"))
              .build();
        }
      }
    }
    return getGetCourseTypeListMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetCourseModuleCodeRequest,
      com.zhijiejiaoyu.glory_api.course.GetCourseModuleCodeResponse> getGetCourseModuleCodeMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetCourseModuleCode",
      requestType = com.zhijiejiaoyu.glory_api.course.GetCourseModuleCodeRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.GetCourseModuleCodeResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetCourseModuleCodeRequest,
      com.zhijiejiaoyu.glory_api.course.GetCourseModuleCodeResponse> getGetCourseModuleCodeMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetCourseModuleCodeRequest, com.zhijiejiaoyu.glory_api.course.GetCourseModuleCodeResponse> getGetCourseModuleCodeMethod;
    if ((getGetCourseModuleCodeMethod = glory_apiGrpc.getGetCourseModuleCodeMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetCourseModuleCodeMethod = glory_apiGrpc.getGetCourseModuleCodeMethod) == null) {
          glory_apiGrpc.getGetCourseModuleCodeMethod = getGetCourseModuleCodeMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.GetCourseModuleCodeRequest, com.zhijiejiaoyu.glory_api.course.GetCourseModuleCodeResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetCourseModuleCode"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.GetCourseModuleCodeRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.GetCourseModuleCodeResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetCourseModuleCode"))
              .build();
        }
      }
    }
    return getGetCourseModuleCodeMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetCourseChapterCodeRequest,
      com.zhijiejiaoyu.glory_api.course.GetCourseChapterCodeResponse> getGetCourseChapterCodeMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetCourseChapterCode",
      requestType = com.zhijiejiaoyu.glory_api.course.GetCourseChapterCodeRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.GetCourseChapterCodeResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetCourseChapterCodeRequest,
      com.zhijiejiaoyu.glory_api.course.GetCourseChapterCodeResponse> getGetCourseChapterCodeMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetCourseChapterCodeRequest, com.zhijiejiaoyu.glory_api.course.GetCourseChapterCodeResponse> getGetCourseChapterCodeMethod;
    if ((getGetCourseChapterCodeMethod = glory_apiGrpc.getGetCourseChapterCodeMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetCourseChapterCodeMethod = glory_apiGrpc.getGetCourseChapterCodeMethod) == null) {
          glory_apiGrpc.getGetCourseChapterCodeMethod = getGetCourseChapterCodeMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.GetCourseChapterCodeRequest, com.zhijiejiaoyu.glory_api.course.GetCourseChapterCodeResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetCourseChapterCode"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.GetCourseChapterCodeRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.GetCourseChapterCodeResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetCourseChapterCode"))
              .build();
        }
      }
    }
    return getGetCourseChapterCodeMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateCourseModuleRequest,
      com.zhijiejiaoyu.glory_api.course.CreateCourseModuleResponse> getCreateCourseModuleMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateCourseModule",
      requestType = com.zhijiejiaoyu.glory_api.course.CreateCourseModuleRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.CreateCourseModuleResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateCourseModuleRequest,
      com.zhijiejiaoyu.glory_api.course.CreateCourseModuleResponse> getCreateCourseModuleMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateCourseModuleRequest, com.zhijiejiaoyu.glory_api.course.CreateCourseModuleResponse> getCreateCourseModuleMethod;
    if ((getCreateCourseModuleMethod = glory_apiGrpc.getCreateCourseModuleMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateCourseModuleMethod = glory_apiGrpc.getCreateCourseModuleMethod) == null) {
          glory_apiGrpc.getCreateCourseModuleMethod = getCreateCourseModuleMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.CreateCourseModuleRequest, com.zhijiejiaoyu.glory_api.course.CreateCourseModuleResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateCourseModule"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.CreateCourseModuleRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.CreateCourseModuleResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateCourseModule"))
              .build();
        }
      }
    }
    return getCreateCourseModuleMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetCourseModuleRequest,
      com.zhijiejiaoyu.glory_api.course.GetCourseModuleResponse> getGetCourseModuleMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetCourseModule",
      requestType = com.zhijiejiaoyu.glory_api.course.GetCourseModuleRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.GetCourseModuleResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetCourseModuleRequest,
      com.zhijiejiaoyu.glory_api.course.GetCourseModuleResponse> getGetCourseModuleMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetCourseModuleRequest, com.zhijiejiaoyu.glory_api.course.GetCourseModuleResponse> getGetCourseModuleMethod;
    if ((getGetCourseModuleMethod = glory_apiGrpc.getGetCourseModuleMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetCourseModuleMethod = glory_apiGrpc.getGetCourseModuleMethod) == null) {
          glory_apiGrpc.getGetCourseModuleMethod = getGetCourseModuleMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.GetCourseModuleRequest, com.zhijiejiaoyu.glory_api.course.GetCourseModuleResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetCourseModule"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.GetCourseModuleRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.GetCourseModuleResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetCourseModule"))
              .build();
        }
      }
    }
    return getGetCourseModuleMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateCourseModuleRequest,
      com.zhijiejiaoyu.glory_api.course.UpdateCourseModuleResponse> getUpdateCourseModuleMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateCourseModule",
      requestType = com.zhijiejiaoyu.glory_api.course.UpdateCourseModuleRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.UpdateCourseModuleResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateCourseModuleRequest,
      com.zhijiejiaoyu.glory_api.course.UpdateCourseModuleResponse> getUpdateCourseModuleMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateCourseModuleRequest, com.zhijiejiaoyu.glory_api.course.UpdateCourseModuleResponse> getUpdateCourseModuleMethod;
    if ((getUpdateCourseModuleMethod = glory_apiGrpc.getUpdateCourseModuleMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateCourseModuleMethod = glory_apiGrpc.getUpdateCourseModuleMethod) == null) {
          glory_apiGrpc.getUpdateCourseModuleMethod = getUpdateCourseModuleMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.UpdateCourseModuleRequest, com.zhijiejiaoyu.glory_api.course.UpdateCourseModuleResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateCourseModule"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.UpdateCourseModuleRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.UpdateCourseModuleResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateCourseModule"))
              .build();
        }
      }
    }
    return getUpdateCourseModuleMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteCourseModuleRequest,
      com.zhijiejiaoyu.glory_api.course.DeleteCourseModuleResponse> getDeleteCourseModuleMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteCourseModule",
      requestType = com.zhijiejiaoyu.glory_api.course.DeleteCourseModuleRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.DeleteCourseModuleResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteCourseModuleRequest,
      com.zhijiejiaoyu.glory_api.course.DeleteCourseModuleResponse> getDeleteCourseModuleMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteCourseModuleRequest, com.zhijiejiaoyu.glory_api.course.DeleteCourseModuleResponse> getDeleteCourseModuleMethod;
    if ((getDeleteCourseModuleMethod = glory_apiGrpc.getDeleteCourseModuleMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteCourseModuleMethod = glory_apiGrpc.getDeleteCourseModuleMethod) == null) {
          glory_apiGrpc.getDeleteCourseModuleMethod = getDeleteCourseModuleMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.DeleteCourseModuleRequest, com.zhijiejiaoyu.glory_api.course.DeleteCourseModuleResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteCourseModule"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.DeleteCourseModuleRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.DeleteCourseModuleResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteCourseModule"))
              .build();
        }
      }
    }
    return getDeleteCourseModuleMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListCourseModuleRequest,
      com.zhijiejiaoyu.glory_api.course.ListCourseModuleResponse> getListCourseModuleMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListCourseModule",
      requestType = com.zhijiejiaoyu.glory_api.course.ListCourseModuleRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.ListCourseModuleResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListCourseModuleRequest,
      com.zhijiejiaoyu.glory_api.course.ListCourseModuleResponse> getListCourseModuleMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListCourseModuleRequest, com.zhijiejiaoyu.glory_api.course.ListCourseModuleResponse> getListCourseModuleMethod;
    if ((getListCourseModuleMethod = glory_apiGrpc.getListCourseModuleMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListCourseModuleMethod = glory_apiGrpc.getListCourseModuleMethod) == null) {
          glory_apiGrpc.getListCourseModuleMethod = getListCourseModuleMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.ListCourseModuleRequest, com.zhijiejiaoyu.glory_api.course.ListCourseModuleResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListCourseModule"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.ListCourseModuleRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.ListCourseModuleResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListCourseModule"))
              .build();
        }
      }
    }
    return getListCourseModuleMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListLatestCourseRequest,
      com.zhijiejiaoyu.glory_api.course.ListLatestCourseResponse> getListLatestCourseMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListLatestCourse",
      requestType = com.zhijiejiaoyu.glory_api.course.ListLatestCourseRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.ListLatestCourseResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListLatestCourseRequest,
      com.zhijiejiaoyu.glory_api.course.ListLatestCourseResponse> getListLatestCourseMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListLatestCourseRequest, com.zhijiejiaoyu.glory_api.course.ListLatestCourseResponse> getListLatestCourseMethod;
    if ((getListLatestCourseMethod = glory_apiGrpc.getListLatestCourseMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListLatestCourseMethod = glory_apiGrpc.getListLatestCourseMethod) == null) {
          glory_apiGrpc.getListLatestCourseMethod = getListLatestCourseMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.ListLatestCourseRequest, com.zhijiejiaoyu.glory_api.course.ListLatestCourseResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListLatestCourse"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.ListLatestCourseRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.ListLatestCourseResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListLatestCourse"))
              .build();
        }
      }
    }
    return getListLatestCourseMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListHottestCourseRequest,
      com.zhijiejiaoyu.glory_api.course.ListHottestCourseResponse> getListHottestCourseMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListHottestCourse",
      requestType = com.zhijiejiaoyu.glory_api.course.ListHottestCourseRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.ListHottestCourseResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListHottestCourseRequest,
      com.zhijiejiaoyu.glory_api.course.ListHottestCourseResponse> getListHottestCourseMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListHottestCourseRequest, com.zhijiejiaoyu.glory_api.course.ListHottestCourseResponse> getListHottestCourseMethod;
    if ((getListHottestCourseMethod = glory_apiGrpc.getListHottestCourseMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListHottestCourseMethod = glory_apiGrpc.getListHottestCourseMethod) == null) {
          glory_apiGrpc.getListHottestCourseMethod = getListHottestCourseMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.ListHottestCourseRequest, com.zhijiejiaoyu.glory_api.course.ListHottestCourseResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListHottestCourse"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.ListHottestCourseRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.ListHottestCourseResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListHottestCourse"))
              .build();
        }
      }
    }
    return getListHottestCourseMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateCmCourseRequest,
      com.zhijiejiaoyu.glory_api.course.CreateCmCourseResponse> getCreateCmCourseMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateCmCourse",
      requestType = com.zhijiejiaoyu.glory_api.course.CreateCmCourseRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.CreateCmCourseResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateCmCourseRequest,
      com.zhijiejiaoyu.glory_api.course.CreateCmCourseResponse> getCreateCmCourseMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateCmCourseRequest, com.zhijiejiaoyu.glory_api.course.CreateCmCourseResponse> getCreateCmCourseMethod;
    if ((getCreateCmCourseMethod = glory_apiGrpc.getCreateCmCourseMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateCmCourseMethod = glory_apiGrpc.getCreateCmCourseMethod) == null) {
          glory_apiGrpc.getCreateCmCourseMethod = getCreateCmCourseMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.CreateCmCourseRequest, com.zhijiejiaoyu.glory_api.course.CreateCmCourseResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateCmCourse"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.CreateCmCourseRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.CreateCmCourseResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateCmCourse"))
              .build();
        }
      }
    }
    return getCreateCmCourseMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.PreviewCmCourseRequest,
      com.zhijiejiaoyu.glory_api.course.PreviewCmCourseResponse> getPreviewCmCourseMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "PreviewCmCourse",
      requestType = com.zhijiejiaoyu.glory_api.course.PreviewCmCourseRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.PreviewCmCourseResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.PreviewCmCourseRequest,
      com.zhijiejiaoyu.glory_api.course.PreviewCmCourseResponse> getPreviewCmCourseMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.PreviewCmCourseRequest, com.zhijiejiaoyu.glory_api.course.PreviewCmCourseResponse> getPreviewCmCourseMethod;
    if ((getPreviewCmCourseMethod = glory_apiGrpc.getPreviewCmCourseMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getPreviewCmCourseMethod = glory_apiGrpc.getPreviewCmCourseMethod) == null) {
          glory_apiGrpc.getPreviewCmCourseMethod = getPreviewCmCourseMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.PreviewCmCourseRequest, com.zhijiejiaoyu.glory_api.course.PreviewCmCourseResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "PreviewCmCourse"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.PreviewCmCourseRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.PreviewCmCourseResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("PreviewCmCourse"))
              .build();
        }
      }
    }
    return getPreviewCmCourseMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResourceRequest,
      com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResourceResponse> getCreateNmCourseResourceMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateNmCourseResource",
      requestType = com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResourceRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResourceResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResourceRequest,
      com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResourceResponse> getCreateNmCourseResourceMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResourceRequest, com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResourceResponse> getCreateNmCourseResourceMethod;
    if ((getCreateNmCourseResourceMethod = glory_apiGrpc.getCreateNmCourseResourceMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateNmCourseResourceMethod = glory_apiGrpc.getCreateNmCourseResourceMethod) == null) {
          glory_apiGrpc.getCreateNmCourseResourceMethod = getCreateNmCourseResourceMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResourceRequest, com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResourceResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateNmCourseResource"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResourceRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResourceResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateNmCourseResource"))
              .build();
        }
      }
    }
    return getCreateNmCourseResourceMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterRequest,
      com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResponse> getCreateNmCourseChapterMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateNmCourseChapter",
      requestType = com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterRequest,
      com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResponse> getCreateNmCourseChapterMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterRequest, com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResponse> getCreateNmCourseChapterMethod;
    if ((getCreateNmCourseChapterMethod = glory_apiGrpc.getCreateNmCourseChapterMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateNmCourseChapterMethod = glory_apiGrpc.getCreateNmCourseChapterMethod) == null) {
          glory_apiGrpc.getCreateNmCourseChapterMethod = getCreateNmCourseChapterMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterRequest, com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateNmCourseChapter"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateNmCourseChapter"))
              .build();
        }
      }
    }
    return getCreateNmCourseChapterMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateNmCourseRequest,
      com.zhijiejiaoyu.glory_api.course.CreateNmCourseResponse> getCreateNmCourseMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateNmCourse",
      requestType = com.zhijiejiaoyu.glory_api.course.CreateNmCourseRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.CreateNmCourseResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateNmCourseRequest,
      com.zhijiejiaoyu.glory_api.course.CreateNmCourseResponse> getCreateNmCourseMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateNmCourseRequest, com.zhijiejiaoyu.glory_api.course.CreateNmCourseResponse> getCreateNmCourseMethod;
    if ((getCreateNmCourseMethod = glory_apiGrpc.getCreateNmCourseMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateNmCourseMethod = glory_apiGrpc.getCreateNmCourseMethod) == null) {
          glory_apiGrpc.getCreateNmCourseMethod = getCreateNmCourseMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.CreateNmCourseRequest, com.zhijiejiaoyu.glory_api.course.CreateNmCourseResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateNmCourse"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.CreateNmCourseRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.CreateNmCourseResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateNmCourse"))
              .build();
        }
      }
    }
    return getCreateNmCourseMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateNmCourseRequest,
      com.zhijiejiaoyu.glory_api.course.UpdateNmCourseResponse> getUpdateNmCourseMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateNmCourse",
      requestType = com.zhijiejiaoyu.glory_api.course.UpdateNmCourseRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.UpdateNmCourseResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateNmCourseRequest,
      com.zhijiejiaoyu.glory_api.course.UpdateNmCourseResponse> getUpdateNmCourseMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateNmCourseRequest, com.zhijiejiaoyu.glory_api.course.UpdateNmCourseResponse> getUpdateNmCourseMethod;
    if ((getUpdateNmCourseMethod = glory_apiGrpc.getUpdateNmCourseMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateNmCourseMethod = glory_apiGrpc.getUpdateNmCourseMethod) == null) {
          glory_apiGrpc.getUpdateNmCourseMethod = getUpdateNmCourseMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.UpdateNmCourseRequest, com.zhijiejiaoyu.glory_api.course.UpdateNmCourseResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateNmCourse"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.UpdateNmCourseRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.UpdateNmCourseResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateNmCourse"))
              .build();
        }
      }
    }
    return getUpdateNmCourseMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListNmCourseRequest,
      com.zhijiejiaoyu.glory_api.course.ListNmCourseResponse> getListNmCourseMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListNmCourse",
      requestType = com.zhijiejiaoyu.glory_api.course.ListNmCourseRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.ListNmCourseResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListNmCourseRequest,
      com.zhijiejiaoyu.glory_api.course.ListNmCourseResponse> getListNmCourseMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListNmCourseRequest, com.zhijiejiaoyu.glory_api.course.ListNmCourseResponse> getListNmCourseMethod;
    if ((getListNmCourseMethod = glory_apiGrpc.getListNmCourseMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListNmCourseMethod = glory_apiGrpc.getListNmCourseMethod) == null) {
          glory_apiGrpc.getListNmCourseMethod = getListNmCourseMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.ListNmCourseRequest, com.zhijiejiaoyu.glory_api.course.ListNmCourseResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListNmCourse"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.ListNmCourseRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.ListNmCourseResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListNmCourse"))
              .build();
        }
      }
    }
    return getListNmCourseMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.NmCourseDetailRequest,
      com.zhijiejiaoyu.glory_api.course.NmCourseDetailResponse> getNmCourseDetailMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "NmCourseDetail",
      requestType = com.zhijiejiaoyu.glory_api.course.NmCourseDetailRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.NmCourseDetailResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.NmCourseDetailRequest,
      com.zhijiejiaoyu.glory_api.course.NmCourseDetailResponse> getNmCourseDetailMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.NmCourseDetailRequest, com.zhijiejiaoyu.glory_api.course.NmCourseDetailResponse> getNmCourseDetailMethod;
    if ((getNmCourseDetailMethod = glory_apiGrpc.getNmCourseDetailMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getNmCourseDetailMethod = glory_apiGrpc.getNmCourseDetailMethod) == null) {
          glory_apiGrpc.getNmCourseDetailMethod = getNmCourseDetailMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.NmCourseDetailRequest, com.zhijiejiaoyu.glory_api.course.NmCourseDetailResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "NmCourseDetail"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.NmCourseDetailRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.NmCourseDetailResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("NmCourseDetail"))
              .build();
        }
      }
    }
    return getNmCourseDetailMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteNmCourseRequest,
      com.zhijiejiaoyu.glory_api.course.DeleteNmCourseResponse> getDeleteNmCourseMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteNmCourse",
      requestType = com.zhijiejiaoyu.glory_api.course.DeleteNmCourseRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.DeleteNmCourseResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteNmCourseRequest,
      com.zhijiejiaoyu.glory_api.course.DeleteNmCourseResponse> getDeleteNmCourseMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteNmCourseRequest, com.zhijiejiaoyu.glory_api.course.DeleteNmCourseResponse> getDeleteNmCourseMethod;
    if ((getDeleteNmCourseMethod = glory_apiGrpc.getDeleteNmCourseMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteNmCourseMethod = glory_apiGrpc.getDeleteNmCourseMethod) == null) {
          glory_apiGrpc.getDeleteNmCourseMethod = getDeleteNmCourseMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.DeleteNmCourseRequest, com.zhijiejiaoyu.glory_api.course.DeleteNmCourseResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteNmCourse"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.DeleteNmCourseRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.DeleteNmCourseResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteNmCourse"))
              .build();
        }
      }
    }
    return getDeleteNmCourseMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateCourseRequest,
      com.zhijiejiaoyu.glory_api.course.CreateCourseResponse> getCreateCourseMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateCourse",
      requestType = com.zhijiejiaoyu.glory_api.course.CreateCourseRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.CreateCourseResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateCourseRequest,
      com.zhijiejiaoyu.glory_api.course.CreateCourseResponse> getCreateCourseMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateCourseRequest, com.zhijiejiaoyu.glory_api.course.CreateCourseResponse> getCreateCourseMethod;
    if ((getCreateCourseMethod = glory_apiGrpc.getCreateCourseMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateCourseMethod = glory_apiGrpc.getCreateCourseMethod) == null) {
          glory_apiGrpc.getCreateCourseMethod = getCreateCourseMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.CreateCourseRequest, com.zhijiejiaoyu.glory_api.course.CreateCourseResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateCourse"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.CreateCourseRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.CreateCourseResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateCourse"))
              .build();
        }
      }
    }
    return getCreateCourseMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetCourseRequest,
      com.zhijiejiaoyu.glory_api.course.GetCourseResponse> getGetCourseMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetCourse",
      requestType = com.zhijiejiaoyu.glory_api.course.GetCourseRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.GetCourseResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetCourseRequest,
      com.zhijiejiaoyu.glory_api.course.GetCourseResponse> getGetCourseMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetCourseRequest, com.zhijiejiaoyu.glory_api.course.GetCourseResponse> getGetCourseMethod;
    if ((getGetCourseMethod = glory_apiGrpc.getGetCourseMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetCourseMethod = glory_apiGrpc.getGetCourseMethod) == null) {
          glory_apiGrpc.getGetCourseMethod = getGetCourseMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.GetCourseRequest, com.zhijiejiaoyu.glory_api.course.GetCourseResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetCourse"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.GetCourseRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.GetCourseResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetCourse"))
              .build();
        }
      }
    }
    return getGetCourseMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateCourseRequest,
      com.zhijiejiaoyu.glory_api.course.UpdateCourseResponse> getUpdateCourseMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateCourse",
      requestType = com.zhijiejiaoyu.glory_api.course.UpdateCourseRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.UpdateCourseResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateCourseRequest,
      com.zhijiejiaoyu.glory_api.course.UpdateCourseResponse> getUpdateCourseMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateCourseRequest, com.zhijiejiaoyu.glory_api.course.UpdateCourseResponse> getUpdateCourseMethod;
    if ((getUpdateCourseMethod = glory_apiGrpc.getUpdateCourseMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateCourseMethod = glory_apiGrpc.getUpdateCourseMethod) == null) {
          glory_apiGrpc.getUpdateCourseMethod = getUpdateCourseMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.UpdateCourseRequest, com.zhijiejiaoyu.glory_api.course.UpdateCourseResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateCourse"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.UpdateCourseRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.UpdateCourseResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateCourse"))
              .build();
        }
      }
    }
    return getUpdateCourseMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteCourseRequest,
      com.zhijiejiaoyu.glory_api.course.DeleteCourseResponse> getDeleteCourseMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteCourse",
      requestType = com.zhijiejiaoyu.glory_api.course.DeleteCourseRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.DeleteCourseResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteCourseRequest,
      com.zhijiejiaoyu.glory_api.course.DeleteCourseResponse> getDeleteCourseMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteCourseRequest, com.zhijiejiaoyu.glory_api.course.DeleteCourseResponse> getDeleteCourseMethod;
    if ((getDeleteCourseMethod = glory_apiGrpc.getDeleteCourseMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteCourseMethod = glory_apiGrpc.getDeleteCourseMethod) == null) {
          glory_apiGrpc.getDeleteCourseMethod = getDeleteCourseMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.DeleteCourseRequest, com.zhijiejiaoyu.glory_api.course.DeleteCourseResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteCourse"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.DeleteCourseRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.DeleteCourseResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteCourse"))
              .build();
        }
      }
    }
    return getDeleteCourseMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListCourseRequest,
      com.zhijiejiaoyu.glory_api.course.ListCourseResponse> getListCourseMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListCourse",
      requestType = com.zhijiejiaoyu.glory_api.course.ListCourseRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.ListCourseResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListCourseRequest,
      com.zhijiejiaoyu.glory_api.course.ListCourseResponse> getListCourseMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListCourseRequest, com.zhijiejiaoyu.glory_api.course.ListCourseResponse> getListCourseMethod;
    if ((getListCourseMethod = glory_apiGrpc.getListCourseMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListCourseMethod = glory_apiGrpc.getListCourseMethod) == null) {
          glory_apiGrpc.getListCourseMethod = getListCourseMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.ListCourseRequest, com.zhijiejiaoyu.glory_api.course.ListCourseResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListCourse"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.ListCourseRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.ListCourseResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListCourse"))
              .build();
        }
      }
    }
    return getListCourseMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateKnowledgeGraphRequest,
      com.zhijiejiaoyu.glory_api.course.CreateKnowledgeGraphResponse> getCreateKnowledgeGraphMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateKnowledgeGraph",
      requestType = com.zhijiejiaoyu.glory_api.course.CreateKnowledgeGraphRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.CreateKnowledgeGraphResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateKnowledgeGraphRequest,
      com.zhijiejiaoyu.glory_api.course.CreateKnowledgeGraphResponse> getCreateKnowledgeGraphMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateKnowledgeGraphRequest, com.zhijiejiaoyu.glory_api.course.CreateKnowledgeGraphResponse> getCreateKnowledgeGraphMethod;
    if ((getCreateKnowledgeGraphMethod = glory_apiGrpc.getCreateKnowledgeGraphMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateKnowledgeGraphMethod = glory_apiGrpc.getCreateKnowledgeGraphMethod) == null) {
          glory_apiGrpc.getCreateKnowledgeGraphMethod = getCreateKnowledgeGraphMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.CreateKnowledgeGraphRequest, com.zhijiejiaoyu.glory_api.course.CreateKnowledgeGraphResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateKnowledgeGraph"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.CreateKnowledgeGraphRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.CreateKnowledgeGraphResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateKnowledgeGraph"))
              .build();
        }
      }
    }
    return getCreateKnowledgeGraphMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphRequest,
      com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphResponse> getGetKnowledgeGraphMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetKnowledgeGraph",
      requestType = com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphRequest,
      com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphResponse> getGetKnowledgeGraphMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphRequest, com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphResponse> getGetKnowledgeGraphMethod;
    if ((getGetKnowledgeGraphMethod = glory_apiGrpc.getGetKnowledgeGraphMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetKnowledgeGraphMethod = glory_apiGrpc.getGetKnowledgeGraphMethod) == null) {
          glory_apiGrpc.getGetKnowledgeGraphMethod = getGetKnowledgeGraphMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphRequest, com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetKnowledgeGraph"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetKnowledgeGraph"))
              .build();
        }
      }
    }
    return getGetKnowledgeGraphMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphNodeRequest,
      com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphNodeResponse> getGetKnowledgeGraphNodeMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetKnowledgeGraphNode",
      requestType = com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphNodeRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphNodeResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphNodeRequest,
      com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphNodeResponse> getGetKnowledgeGraphNodeMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphNodeRequest, com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphNodeResponse> getGetKnowledgeGraphNodeMethod;
    if ((getGetKnowledgeGraphNodeMethod = glory_apiGrpc.getGetKnowledgeGraphNodeMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetKnowledgeGraphNodeMethod = glory_apiGrpc.getGetKnowledgeGraphNodeMethod) == null) {
          glory_apiGrpc.getGetKnowledgeGraphNodeMethod = getGetKnowledgeGraphNodeMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphNodeRequest, com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphNodeResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetKnowledgeGraphNode"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphNodeRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphNodeResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetKnowledgeGraphNode"))
              .build();
        }
      }
    }
    return getGetKnowledgeGraphNodeMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetCourseIdsRequest,
      com.zhijiejiaoyu.glory_api.course.GetCourseIdsResponse> getGetCourseIdsMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetCourseIds",
      requestType = com.zhijiejiaoyu.glory_api.course.GetCourseIdsRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.GetCourseIdsResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetCourseIdsRequest,
      com.zhijiejiaoyu.glory_api.course.GetCourseIdsResponse> getGetCourseIdsMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetCourseIdsRequest, com.zhijiejiaoyu.glory_api.course.GetCourseIdsResponse> getGetCourseIdsMethod;
    if ((getGetCourseIdsMethod = glory_apiGrpc.getGetCourseIdsMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetCourseIdsMethod = glory_apiGrpc.getGetCourseIdsMethod) == null) {
          glory_apiGrpc.getGetCourseIdsMethod = getGetCourseIdsMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.GetCourseIdsRequest, com.zhijiejiaoyu.glory_api.course.GetCourseIdsResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetCourseIds"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.GetCourseIdsRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.GetCourseIdsResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetCourseIds"))
              .build();
        }
      }
    }
    return getGetCourseIdsMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.EnrollCourseRequest,
      com.zhijiejiaoyu.glory_api.course.EnrollCourseResponse> getEnrollCourseMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "EnrollCourse",
      requestType = com.zhijiejiaoyu.glory_api.course.EnrollCourseRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.EnrollCourseResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.EnrollCourseRequest,
      com.zhijiejiaoyu.glory_api.course.EnrollCourseResponse> getEnrollCourseMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.EnrollCourseRequest, com.zhijiejiaoyu.glory_api.course.EnrollCourseResponse> getEnrollCourseMethod;
    if ((getEnrollCourseMethod = glory_apiGrpc.getEnrollCourseMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getEnrollCourseMethod = glory_apiGrpc.getEnrollCourseMethod) == null) {
          glory_apiGrpc.getEnrollCourseMethod = getEnrollCourseMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.EnrollCourseRequest, com.zhijiejiaoyu.glory_api.course.EnrollCourseResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "EnrollCourse"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.EnrollCourseRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.EnrollCourseResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("EnrollCourse"))
              .build();
        }
      }
    }
    return getEnrollCourseMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteMyCourseRequest,
      com.zhijiejiaoyu.glory_api.course.DeleteMyCourseResponse> getDeleteMyCourseMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteMyCourse",
      requestType = com.zhijiejiaoyu.glory_api.course.DeleteMyCourseRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.DeleteMyCourseResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteMyCourseRequest,
      com.zhijiejiaoyu.glory_api.course.DeleteMyCourseResponse> getDeleteMyCourseMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteMyCourseRequest, com.zhijiejiaoyu.glory_api.course.DeleteMyCourseResponse> getDeleteMyCourseMethod;
    if ((getDeleteMyCourseMethod = glory_apiGrpc.getDeleteMyCourseMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteMyCourseMethod = glory_apiGrpc.getDeleteMyCourseMethod) == null) {
          glory_apiGrpc.getDeleteMyCourseMethod = getDeleteMyCourseMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.DeleteMyCourseRequest, com.zhijiejiaoyu.glory_api.course.DeleteMyCourseResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteMyCourse"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.DeleteMyCourseRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.DeleteMyCourseResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteMyCourse"))
              .build();
        }
      }
    }
    return getDeleteMyCourseMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateCourseProgressRequest,
      com.zhijiejiaoyu.glory_api.course.UpdateCourseProgressResponse> getUpdateCourseProgressMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateCourseProgress",
      requestType = com.zhijiejiaoyu.glory_api.course.UpdateCourseProgressRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.UpdateCourseProgressResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateCourseProgressRequest,
      com.zhijiejiaoyu.glory_api.course.UpdateCourseProgressResponse> getUpdateCourseProgressMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateCourseProgressRequest, com.zhijiejiaoyu.glory_api.course.UpdateCourseProgressResponse> getUpdateCourseProgressMethod;
    if ((getUpdateCourseProgressMethod = glory_apiGrpc.getUpdateCourseProgressMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateCourseProgressMethod = glory_apiGrpc.getUpdateCourseProgressMethod) == null) {
          glory_apiGrpc.getUpdateCourseProgressMethod = getUpdateCourseProgressMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.UpdateCourseProgressRequest, com.zhijiejiaoyu.glory_api.course.UpdateCourseProgressResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateCourseProgress"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.UpdateCourseProgressRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.UpdateCourseProgressResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateCourseProgress"))
              .build();
        }
      }
    }
    return getUpdateCourseProgressMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListMyCourseRequest,
      com.zhijiejiaoyu.glory_api.course.ListMyCourseResponse> getListMyCourseMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListMyCourse",
      requestType = com.zhijiejiaoyu.glory_api.course.ListMyCourseRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.ListMyCourseResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListMyCourseRequest,
      com.zhijiejiaoyu.glory_api.course.ListMyCourseResponse> getListMyCourseMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListMyCourseRequest, com.zhijiejiaoyu.glory_api.course.ListMyCourseResponse> getListMyCourseMethod;
    if ((getListMyCourseMethod = glory_apiGrpc.getListMyCourseMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListMyCourseMethod = glory_apiGrpc.getListMyCourseMethod) == null) {
          glory_apiGrpc.getListMyCourseMethod = getListMyCourseMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.ListMyCourseRequest, com.zhijiejiaoyu.glory_api.course.ListMyCourseResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListMyCourse"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.ListMyCourseRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.ListMyCourseResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListMyCourse"))
              .build();
        }
      }
    }
    return getListMyCourseMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListTeachingPlanRequest,
      com.zhijiejiaoyu.glory_api.course.ListTeachingPlanResponse> getListTeachingPlanMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListTeachingPlan",
      requestType = com.zhijiejiaoyu.glory_api.course.ListTeachingPlanRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.ListTeachingPlanResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListTeachingPlanRequest,
      com.zhijiejiaoyu.glory_api.course.ListTeachingPlanResponse> getListTeachingPlanMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListTeachingPlanRequest, com.zhijiejiaoyu.glory_api.course.ListTeachingPlanResponse> getListTeachingPlanMethod;
    if ((getListTeachingPlanMethod = glory_apiGrpc.getListTeachingPlanMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListTeachingPlanMethod = glory_apiGrpc.getListTeachingPlanMethod) == null) {
          glory_apiGrpc.getListTeachingPlanMethod = getListTeachingPlanMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.ListTeachingPlanRequest, com.zhijiejiaoyu.glory_api.course.ListTeachingPlanResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListTeachingPlan"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.ListTeachingPlanRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.ListTeachingPlanResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListTeachingPlan"))
              .build();
        }
      }
    }
    return getListTeachingPlanMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateTeachingPlanRequest,
      com.zhijiejiaoyu.glory_api.course.CreateTeachingPlanResponse> getCreateTeachingPlanMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateTeachingPlan",
      requestType = com.zhijiejiaoyu.glory_api.course.CreateTeachingPlanRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.CreateTeachingPlanResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateTeachingPlanRequest,
      com.zhijiejiaoyu.glory_api.course.CreateTeachingPlanResponse> getCreateTeachingPlanMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateTeachingPlanRequest, com.zhijiejiaoyu.glory_api.course.CreateTeachingPlanResponse> getCreateTeachingPlanMethod;
    if ((getCreateTeachingPlanMethod = glory_apiGrpc.getCreateTeachingPlanMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateTeachingPlanMethod = glory_apiGrpc.getCreateTeachingPlanMethod) == null) {
          glory_apiGrpc.getCreateTeachingPlanMethod = getCreateTeachingPlanMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.CreateTeachingPlanRequest, com.zhijiejiaoyu.glory_api.course.CreateTeachingPlanResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateTeachingPlan"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.CreateTeachingPlanRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.CreateTeachingPlanResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateTeachingPlan"))
              .build();
        }
      }
    }
    return getCreateTeachingPlanMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateTeachingPlanRequest,
      com.zhijiejiaoyu.glory_api.course.UpdateTeachingPlanResponse> getUpdateTeachingPlanMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateTeachingPlan",
      requestType = com.zhijiejiaoyu.glory_api.course.UpdateTeachingPlanRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.UpdateTeachingPlanResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateTeachingPlanRequest,
      com.zhijiejiaoyu.glory_api.course.UpdateTeachingPlanResponse> getUpdateTeachingPlanMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateTeachingPlanRequest, com.zhijiejiaoyu.glory_api.course.UpdateTeachingPlanResponse> getUpdateTeachingPlanMethod;
    if ((getUpdateTeachingPlanMethod = glory_apiGrpc.getUpdateTeachingPlanMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateTeachingPlanMethod = glory_apiGrpc.getUpdateTeachingPlanMethod) == null) {
          glory_apiGrpc.getUpdateTeachingPlanMethod = getUpdateTeachingPlanMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.UpdateTeachingPlanRequest, com.zhijiejiaoyu.glory_api.course.UpdateTeachingPlanResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateTeachingPlan"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.UpdateTeachingPlanRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.UpdateTeachingPlanResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateTeachingPlan"))
              .build();
        }
      }
    }
    return getUpdateTeachingPlanMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteTeachingPlanRequest,
      com.zhijiejiaoyu.glory_api.course.DeleteTeachingPlanResponse> getDeleteTeachingPlanMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteTeachingPlan",
      requestType = com.zhijiejiaoyu.glory_api.course.DeleteTeachingPlanRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.DeleteTeachingPlanResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteTeachingPlanRequest,
      com.zhijiejiaoyu.glory_api.course.DeleteTeachingPlanResponse> getDeleteTeachingPlanMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteTeachingPlanRequest, com.zhijiejiaoyu.glory_api.course.DeleteTeachingPlanResponse> getDeleteTeachingPlanMethod;
    if ((getDeleteTeachingPlanMethod = glory_apiGrpc.getDeleteTeachingPlanMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteTeachingPlanMethod = glory_apiGrpc.getDeleteTeachingPlanMethod) == null) {
          glory_apiGrpc.getDeleteTeachingPlanMethod = getDeleteTeachingPlanMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.DeleteTeachingPlanRequest, com.zhijiejiaoyu.glory_api.course.DeleteTeachingPlanResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteTeachingPlan"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.DeleteTeachingPlanRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.DeleteTeachingPlanResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteTeachingPlan"))
              .build();
        }
      }
    }
    return getDeleteTeachingPlanMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateTeachingCourseProgressRequest,
      com.zhijiejiaoyu.glory_api.course.UpdateTeachingCourseProgressResponse> getUpdateTeachingCourseProgressMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateTeachingCourseProgress",
      requestType = com.zhijiejiaoyu.glory_api.course.UpdateTeachingCourseProgressRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.UpdateTeachingCourseProgressResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateTeachingCourseProgressRequest,
      com.zhijiejiaoyu.glory_api.course.UpdateTeachingCourseProgressResponse> getUpdateTeachingCourseProgressMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateTeachingCourseProgressRequest, com.zhijiejiaoyu.glory_api.course.UpdateTeachingCourseProgressResponse> getUpdateTeachingCourseProgressMethod;
    if ((getUpdateTeachingCourseProgressMethod = glory_apiGrpc.getUpdateTeachingCourseProgressMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateTeachingCourseProgressMethod = glory_apiGrpc.getUpdateTeachingCourseProgressMethod) == null) {
          glory_apiGrpc.getUpdateTeachingCourseProgressMethod = getUpdateTeachingCourseProgressMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.UpdateTeachingCourseProgressRequest, com.zhijiejiaoyu.glory_api.course.UpdateTeachingCourseProgressResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateTeachingCourseProgress"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.UpdateTeachingCourseProgressRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.UpdateTeachingCourseProgressResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateTeachingCourseProgress"))
              .build();
        }
      }
    }
    return getUpdateTeachingCourseProgressMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateEduSchemeRequest,
      com.zhijiejiaoyu.glory_api.course.CreateEduSchemeResponse> getCreateEduSchemeMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateEduScheme",
      requestType = com.zhijiejiaoyu.glory_api.course.CreateEduSchemeRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.CreateEduSchemeResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateEduSchemeRequest,
      com.zhijiejiaoyu.glory_api.course.CreateEduSchemeResponse> getCreateEduSchemeMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateEduSchemeRequest, com.zhijiejiaoyu.glory_api.course.CreateEduSchemeResponse> getCreateEduSchemeMethod;
    if ((getCreateEduSchemeMethod = glory_apiGrpc.getCreateEduSchemeMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateEduSchemeMethod = glory_apiGrpc.getCreateEduSchemeMethod) == null) {
          glory_apiGrpc.getCreateEduSchemeMethod = getCreateEduSchemeMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.CreateEduSchemeRequest, com.zhijiejiaoyu.glory_api.course.CreateEduSchemeResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateEduScheme"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.CreateEduSchemeRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.CreateEduSchemeResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateEduScheme"))
              .build();
        }
      }
    }
    return getCreateEduSchemeMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateEduSchemeRequest,
      com.zhijiejiaoyu.glory_api.course.UpdateEduSchemeResponse> getUpdateEduSchemeMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateEduScheme",
      requestType = com.zhijiejiaoyu.glory_api.course.UpdateEduSchemeRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.UpdateEduSchemeResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateEduSchemeRequest,
      com.zhijiejiaoyu.glory_api.course.UpdateEduSchemeResponse> getUpdateEduSchemeMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateEduSchemeRequest, com.zhijiejiaoyu.glory_api.course.UpdateEduSchemeResponse> getUpdateEduSchemeMethod;
    if ((getUpdateEduSchemeMethod = glory_apiGrpc.getUpdateEduSchemeMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateEduSchemeMethod = glory_apiGrpc.getUpdateEduSchemeMethod) == null) {
          glory_apiGrpc.getUpdateEduSchemeMethod = getUpdateEduSchemeMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.UpdateEduSchemeRequest, com.zhijiejiaoyu.glory_api.course.UpdateEduSchemeResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateEduScheme"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.UpdateEduSchemeRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.UpdateEduSchemeResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateEduScheme"))
              .build();
        }
      }
    }
    return getUpdateEduSchemeMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListEduSchemeRequest,
      com.zhijiejiaoyu.glory_api.course.ListEduSchemeResponse> getListEduSchemeMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListEduScheme",
      requestType = com.zhijiejiaoyu.glory_api.course.ListEduSchemeRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.ListEduSchemeResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListEduSchemeRequest,
      com.zhijiejiaoyu.glory_api.course.ListEduSchemeResponse> getListEduSchemeMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListEduSchemeRequest, com.zhijiejiaoyu.glory_api.course.ListEduSchemeResponse> getListEduSchemeMethod;
    if ((getListEduSchemeMethod = glory_apiGrpc.getListEduSchemeMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListEduSchemeMethod = glory_apiGrpc.getListEduSchemeMethod) == null) {
          glory_apiGrpc.getListEduSchemeMethod = getListEduSchemeMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.ListEduSchemeRequest, com.zhijiejiaoyu.glory_api.course.ListEduSchemeResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListEduScheme"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.ListEduSchemeRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.ListEduSchemeResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListEduScheme"))
              .build();
        }
      }
    }
    return getListEduSchemeMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.EduSchemeDetailRequest,
      com.zhijiejiaoyu.glory_api.course.EduSchemeDetailResponse> getEduSchemeDetailMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "EduSchemeDetail",
      requestType = com.zhijiejiaoyu.glory_api.course.EduSchemeDetailRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.EduSchemeDetailResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.EduSchemeDetailRequest,
      com.zhijiejiaoyu.glory_api.course.EduSchemeDetailResponse> getEduSchemeDetailMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.EduSchemeDetailRequest, com.zhijiejiaoyu.glory_api.course.EduSchemeDetailResponse> getEduSchemeDetailMethod;
    if ((getEduSchemeDetailMethod = glory_apiGrpc.getEduSchemeDetailMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getEduSchemeDetailMethod = glory_apiGrpc.getEduSchemeDetailMethod) == null) {
          glory_apiGrpc.getEduSchemeDetailMethod = getEduSchemeDetailMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.EduSchemeDetailRequest, com.zhijiejiaoyu.glory_api.course.EduSchemeDetailResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "EduSchemeDetail"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.EduSchemeDetailRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.EduSchemeDetailResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("EduSchemeDetail"))
              .build();
        }
      }
    }
    return getEduSchemeDetailMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteEduSchemeRequest,
      com.zhijiejiaoyu.glory_api.course.DeleteEduSchemeResponse> getDeleteEduSchemeMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteEduScheme",
      requestType = com.zhijiejiaoyu.glory_api.course.DeleteEduSchemeRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.DeleteEduSchemeResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteEduSchemeRequest,
      com.zhijiejiaoyu.glory_api.course.DeleteEduSchemeResponse> getDeleteEduSchemeMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteEduSchemeRequest, com.zhijiejiaoyu.glory_api.course.DeleteEduSchemeResponse> getDeleteEduSchemeMethod;
    if ((getDeleteEduSchemeMethod = glory_apiGrpc.getDeleteEduSchemeMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteEduSchemeMethod = glory_apiGrpc.getDeleteEduSchemeMethod) == null) {
          glory_apiGrpc.getDeleteEduSchemeMethod = getDeleteEduSchemeMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.DeleteEduSchemeRequest, com.zhijiejiaoyu.glory_api.course.DeleteEduSchemeResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteEduScheme"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.DeleteEduSchemeRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.DeleteEduSchemeResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteEduScheme"))
              .build();
        }
      }
    }
    return getDeleteEduSchemeMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DistributeEduSchemeRequest,
      com.zhijiejiaoyu.glory_api.course.DistributeEduSchemeResponse> getDistributeEduSchemeMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DistributeEduScheme",
      requestType = com.zhijiejiaoyu.glory_api.course.DistributeEduSchemeRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.DistributeEduSchemeResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DistributeEduSchemeRequest,
      com.zhijiejiaoyu.glory_api.course.DistributeEduSchemeResponse> getDistributeEduSchemeMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DistributeEduSchemeRequest, com.zhijiejiaoyu.glory_api.course.DistributeEduSchemeResponse> getDistributeEduSchemeMethod;
    if ((getDistributeEduSchemeMethod = glory_apiGrpc.getDistributeEduSchemeMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDistributeEduSchemeMethod = glory_apiGrpc.getDistributeEduSchemeMethod) == null) {
          glory_apiGrpc.getDistributeEduSchemeMethod = getDistributeEduSchemeMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.DistributeEduSchemeRequest, com.zhijiejiaoyu.glory_api.course.DistributeEduSchemeResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DistributeEduScheme"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.DistributeEduSchemeRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.DistributeEduSchemeResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DistributeEduScheme"))
              .build();
        }
      }
    }
    return getDistributeEduSchemeMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetEduSchemeLikeCourseRequest,
      com.zhijiejiaoyu.glory_api.course.GetEduSchemeLikeCourseResponse> getGetEduSchemeLikeCourseMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetEduSchemeLikeCourse",
      requestType = com.zhijiejiaoyu.glory_api.course.GetEduSchemeLikeCourseRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.GetEduSchemeLikeCourseResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetEduSchemeLikeCourseRequest,
      com.zhijiejiaoyu.glory_api.course.GetEduSchemeLikeCourseResponse> getGetEduSchemeLikeCourseMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetEduSchemeLikeCourseRequest, com.zhijiejiaoyu.glory_api.course.GetEduSchemeLikeCourseResponse> getGetEduSchemeLikeCourseMethod;
    if ((getGetEduSchemeLikeCourseMethod = glory_apiGrpc.getGetEduSchemeLikeCourseMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetEduSchemeLikeCourseMethod = glory_apiGrpc.getGetEduSchemeLikeCourseMethod) == null) {
          glory_apiGrpc.getGetEduSchemeLikeCourseMethod = getGetEduSchemeLikeCourseMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.GetEduSchemeLikeCourseRequest, com.zhijiejiaoyu.glory_api.course.GetEduSchemeLikeCourseResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetEduSchemeLikeCourse"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.GetEduSchemeLikeCourseRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.GetEduSchemeLikeCourseResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetEduSchemeLikeCourse"))
              .build();
        }
      }
    }
    return getGetEduSchemeLikeCourseMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetAndroidQRCodeRequest,
      com.zhijiejiaoyu.glory_api.course.GetAndroidQRCodeResponse> getGetAndroidQRcodeMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetAndroidQRcode",
      requestType = com.zhijiejiaoyu.glory_api.course.GetAndroidQRCodeRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.GetAndroidQRCodeResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetAndroidQRCodeRequest,
      com.zhijiejiaoyu.glory_api.course.GetAndroidQRCodeResponse> getGetAndroidQRcodeMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetAndroidQRCodeRequest, com.zhijiejiaoyu.glory_api.course.GetAndroidQRCodeResponse> getGetAndroidQRcodeMethod;
    if ((getGetAndroidQRcodeMethod = glory_apiGrpc.getGetAndroidQRcodeMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetAndroidQRcodeMethod = glory_apiGrpc.getGetAndroidQRcodeMethod) == null) {
          glory_apiGrpc.getGetAndroidQRcodeMethod = getGetAndroidQRcodeMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.GetAndroidQRCodeRequest, com.zhijiejiaoyu.glory_api.course.GetAndroidQRCodeResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetAndroidQRcode"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.GetAndroidQRCodeRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.GetAndroidQRCodeResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetAndroidQRcode"))
              .build();
        }
      }
    }
    return getGetAndroidQRcodeMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateJobRequest,
      com.zhijiejiaoyu.glory_api.course.CreateJobResponse> getCreateJobMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateJob",
      requestType = com.zhijiejiaoyu.glory_api.course.CreateJobRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.CreateJobResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateJobRequest,
      com.zhijiejiaoyu.glory_api.course.CreateJobResponse> getCreateJobMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateJobRequest, com.zhijiejiaoyu.glory_api.course.CreateJobResponse> getCreateJobMethod;
    if ((getCreateJobMethod = glory_apiGrpc.getCreateJobMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateJobMethod = glory_apiGrpc.getCreateJobMethod) == null) {
          glory_apiGrpc.getCreateJobMethod = getCreateJobMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.CreateJobRequest, com.zhijiejiaoyu.glory_api.course.CreateJobResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateJob"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.CreateJobRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.CreateJobResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateJob"))
              .build();
        }
      }
    }
    return getCreateJobMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateJobRequest,
      com.zhijiejiaoyu.glory_api.course.UpdateJobResponse> getUpdateJobMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateJob",
      requestType = com.zhijiejiaoyu.glory_api.course.UpdateJobRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.UpdateJobResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateJobRequest,
      com.zhijiejiaoyu.glory_api.course.UpdateJobResponse> getUpdateJobMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateJobRequest, com.zhijiejiaoyu.glory_api.course.UpdateJobResponse> getUpdateJobMethod;
    if ((getUpdateJobMethod = glory_apiGrpc.getUpdateJobMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateJobMethod = glory_apiGrpc.getUpdateJobMethod) == null) {
          glory_apiGrpc.getUpdateJobMethod = getUpdateJobMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.UpdateJobRequest, com.zhijiejiaoyu.glory_api.course.UpdateJobResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateJob"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.UpdateJobRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.UpdateJobResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateJob"))
              .build();
        }
      }
    }
    return getUpdateJobMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteJobRequest,
      com.zhijiejiaoyu.glory_api.course.DeleteJobResponse> getDeleteJobMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteJob",
      requestType = com.zhijiejiaoyu.glory_api.course.DeleteJobRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.DeleteJobResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteJobRequest,
      com.zhijiejiaoyu.glory_api.course.DeleteJobResponse> getDeleteJobMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteJobRequest, com.zhijiejiaoyu.glory_api.course.DeleteJobResponse> getDeleteJobMethod;
    if ((getDeleteJobMethod = glory_apiGrpc.getDeleteJobMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteJobMethod = glory_apiGrpc.getDeleteJobMethod) == null) {
          glory_apiGrpc.getDeleteJobMethod = getDeleteJobMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.DeleteJobRequest, com.zhijiejiaoyu.glory_api.course.DeleteJobResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteJob"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.DeleteJobRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.DeleteJobResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteJob"))
              .build();
        }
      }
    }
    return getDeleteJobMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListJobRequest,
      com.zhijiejiaoyu.glory_api.course.ListJobResponse> getListJobMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListJob",
      requestType = com.zhijiejiaoyu.glory_api.course.ListJobRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.ListJobResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListJobRequest,
      com.zhijiejiaoyu.glory_api.course.ListJobResponse> getListJobMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListJobRequest, com.zhijiejiaoyu.glory_api.course.ListJobResponse> getListJobMethod;
    if ((getListJobMethod = glory_apiGrpc.getListJobMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListJobMethod = glory_apiGrpc.getListJobMethod) == null) {
          glory_apiGrpc.getListJobMethod = getListJobMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.ListJobRequest, com.zhijiejiaoyu.glory_api.course.ListJobResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListJob"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.ListJobRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.ListJobResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListJob"))
              .build();
        }
      }
    }
    return getListJobMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.traffic.GetSchoolLiveTrafficChartRequest,
      com.zhijiejiaoyu.glory_api.traffic.GetSchoolLiveTrafficChartResponse> getGetSchooLiveChartMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetSchooLiveChart",
      requestType = com.zhijiejiaoyu.glory_api.traffic.GetSchoolLiveTrafficChartRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.traffic.GetSchoolLiveTrafficChartResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.traffic.GetSchoolLiveTrafficChartRequest,
      com.zhijiejiaoyu.glory_api.traffic.GetSchoolLiveTrafficChartResponse> getGetSchooLiveChartMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.traffic.GetSchoolLiveTrafficChartRequest, com.zhijiejiaoyu.glory_api.traffic.GetSchoolLiveTrafficChartResponse> getGetSchooLiveChartMethod;
    if ((getGetSchooLiveChartMethod = glory_apiGrpc.getGetSchooLiveChartMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetSchooLiveChartMethod = glory_apiGrpc.getGetSchooLiveChartMethod) == null) {
          glory_apiGrpc.getGetSchooLiveChartMethod = getGetSchooLiveChartMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.traffic.GetSchoolLiveTrafficChartRequest, com.zhijiejiaoyu.glory_api.traffic.GetSchoolLiveTrafficChartResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetSchooLiveChart"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.traffic.GetSchoolLiveTrafficChartRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.traffic.GetSchoolLiveTrafficChartResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetSchooLiveChart"))
              .build();
        }
      }
    }
    return getGetSchooLiveChartMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.traffic.ListSchoolLiveTrafficRequest,
      com.zhijiejiaoyu.glory_api.traffic.ListSchoolLiveTrafficResponse> getListSchooLiveTrafficMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListSchooLiveTraffic",
      requestType = com.zhijiejiaoyu.glory_api.traffic.ListSchoolLiveTrafficRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.traffic.ListSchoolLiveTrafficResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.traffic.ListSchoolLiveTrafficRequest,
      com.zhijiejiaoyu.glory_api.traffic.ListSchoolLiveTrafficResponse> getListSchooLiveTrafficMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.traffic.ListSchoolLiveTrafficRequest, com.zhijiejiaoyu.glory_api.traffic.ListSchoolLiveTrafficResponse> getListSchooLiveTrafficMethod;
    if ((getListSchooLiveTrafficMethod = glory_apiGrpc.getListSchooLiveTrafficMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListSchooLiveTrafficMethod = glory_apiGrpc.getListSchooLiveTrafficMethod) == null) {
          glory_apiGrpc.getListSchooLiveTrafficMethod = getListSchooLiveTrafficMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.traffic.ListSchoolLiveTrafficRequest, com.zhijiejiaoyu.glory_api.traffic.ListSchoolLiveTrafficResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListSchooLiveTraffic"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.traffic.ListSchoolLiveTrafficRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.traffic.ListSchoolLiveTrafficResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListSchooLiveTraffic"))
              .build();
        }
      }
    }
    return getListSchooLiveTrafficMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.traffic.GetAllLiveTrafficRequest,
      com.zhijiejiaoyu.glory_api.traffic.GetAllLiveTrafficResponse> getGetLiveAllTrafficMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetLiveAllTraffic",
      requestType = com.zhijiejiaoyu.glory_api.traffic.GetAllLiveTrafficRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.traffic.GetAllLiveTrafficResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.traffic.GetAllLiveTrafficRequest,
      com.zhijiejiaoyu.glory_api.traffic.GetAllLiveTrafficResponse> getGetLiveAllTrafficMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.traffic.GetAllLiveTrafficRequest, com.zhijiejiaoyu.glory_api.traffic.GetAllLiveTrafficResponse> getGetLiveAllTrafficMethod;
    if ((getGetLiveAllTrafficMethod = glory_apiGrpc.getGetLiveAllTrafficMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetLiveAllTrafficMethod = glory_apiGrpc.getGetLiveAllTrafficMethod) == null) {
          glory_apiGrpc.getGetLiveAllTrafficMethod = getGetLiveAllTrafficMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.traffic.GetAllLiveTrafficRequest, com.zhijiejiaoyu.glory_api.traffic.GetAllLiveTrafficResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetLiveAllTraffic"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.traffic.GetAllLiveTrafficRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.traffic.GetAllLiveTrafficResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetLiveAllTraffic"))
              .build();
        }
      }
    }
    return getGetLiveAllTrafficMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.traffic.GetSchooLiveTrafficRequest,
      com.zhijiejiaoyu.glory_api.traffic.GetSchooLiveTrafficResponse> getGetSchooLiveTrafficMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetSchooLiveTraffic",
      requestType = com.zhijiejiaoyu.glory_api.traffic.GetSchooLiveTrafficRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.traffic.GetSchooLiveTrafficResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.traffic.GetSchooLiveTrafficRequest,
      com.zhijiejiaoyu.glory_api.traffic.GetSchooLiveTrafficResponse> getGetSchooLiveTrafficMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.traffic.GetSchooLiveTrafficRequest, com.zhijiejiaoyu.glory_api.traffic.GetSchooLiveTrafficResponse> getGetSchooLiveTrafficMethod;
    if ((getGetSchooLiveTrafficMethod = glory_apiGrpc.getGetSchooLiveTrafficMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetSchooLiveTrafficMethod = glory_apiGrpc.getGetSchooLiveTrafficMethod) == null) {
          glory_apiGrpc.getGetSchooLiveTrafficMethod = getGetSchooLiveTrafficMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.traffic.GetSchooLiveTrafficRequest, com.zhijiejiaoyu.glory_api.traffic.GetSchooLiveTrafficResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetSchooLiveTraffic"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.traffic.GetSchooLiveTrafficRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.traffic.GetSchooLiveTrafficResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetSchooLiveTraffic"))
              .build();
        }
      }
    }
    return getGetSchooLiveTrafficMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.traffic.ListTenantLiveTrafficConfigRequest,
      com.zhijiejiaoyu.glory_api.traffic.ListTenantLiveTrafficConfigResponse> getListTenantTrafficConfigMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListTenantTrafficConfig",
      requestType = com.zhijiejiaoyu.glory_api.traffic.ListTenantLiveTrafficConfigRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.traffic.ListTenantLiveTrafficConfigResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.traffic.ListTenantLiveTrafficConfigRequest,
      com.zhijiejiaoyu.glory_api.traffic.ListTenantLiveTrafficConfigResponse> getListTenantTrafficConfigMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.traffic.ListTenantLiveTrafficConfigRequest, com.zhijiejiaoyu.glory_api.traffic.ListTenantLiveTrafficConfigResponse> getListTenantTrafficConfigMethod;
    if ((getListTenantTrafficConfigMethod = glory_apiGrpc.getListTenantTrafficConfigMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListTenantTrafficConfigMethod = glory_apiGrpc.getListTenantTrafficConfigMethod) == null) {
          glory_apiGrpc.getListTenantTrafficConfigMethod = getListTenantTrafficConfigMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.traffic.ListTenantLiveTrafficConfigRequest, com.zhijiejiaoyu.glory_api.traffic.ListTenantLiveTrafficConfigResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListTenantTrafficConfig"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.traffic.ListTenantLiveTrafficConfigRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.traffic.ListTenantLiveTrafficConfigResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListTenantTrafficConfig"))
              .build();
        }
      }
    }
    return getListTenantTrafficConfigMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.traffic.UpdateTenantLiveTrafficConfigRequest,
      com.zhijiejiaoyu.glory_api.traffic.UpdateTenantLiveTrafficConfigResponse> getUpdateTenantTrafficConfigMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateTenantTrafficConfig",
      requestType = com.zhijiejiaoyu.glory_api.traffic.UpdateTenantLiveTrafficConfigRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.traffic.UpdateTenantLiveTrafficConfigResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.traffic.UpdateTenantLiveTrafficConfigRequest,
      com.zhijiejiaoyu.glory_api.traffic.UpdateTenantLiveTrafficConfigResponse> getUpdateTenantTrafficConfigMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.traffic.UpdateTenantLiveTrafficConfigRequest, com.zhijiejiaoyu.glory_api.traffic.UpdateTenantLiveTrafficConfigResponse> getUpdateTenantTrafficConfigMethod;
    if ((getUpdateTenantTrafficConfigMethod = glory_apiGrpc.getUpdateTenantTrafficConfigMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateTenantTrafficConfigMethod = glory_apiGrpc.getUpdateTenantTrafficConfigMethod) == null) {
          glory_apiGrpc.getUpdateTenantTrafficConfigMethod = getUpdateTenantTrafficConfigMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.traffic.UpdateTenantLiveTrafficConfigRequest, com.zhijiejiaoyu.glory_api.traffic.UpdateTenantLiveTrafficConfigResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateTenantTrafficConfig"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.traffic.UpdateTenantLiveTrafficConfigRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.traffic.UpdateTenantLiveTrafficConfigResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateTenantTrafficConfig"))
              .build();
        }
      }
    }
    return getUpdateTenantTrafficConfigMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.traffic.ListTrafficWarningRequest,
      com.zhijiejiaoyu.glory_api.traffic.ListTrafficWarningResponse> getListTrafficWarningMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListTrafficWarning",
      requestType = com.zhijiejiaoyu.glory_api.traffic.ListTrafficWarningRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.traffic.ListTrafficWarningResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.traffic.ListTrafficWarningRequest,
      com.zhijiejiaoyu.glory_api.traffic.ListTrafficWarningResponse> getListTrafficWarningMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.traffic.ListTrafficWarningRequest, com.zhijiejiaoyu.glory_api.traffic.ListTrafficWarningResponse> getListTrafficWarningMethod;
    if ((getListTrafficWarningMethod = glory_apiGrpc.getListTrafficWarningMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListTrafficWarningMethod = glory_apiGrpc.getListTrafficWarningMethod) == null) {
          glory_apiGrpc.getListTrafficWarningMethod = getListTrafficWarningMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.traffic.ListTrafficWarningRequest, com.zhijiejiaoyu.glory_api.traffic.ListTrafficWarningResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListTrafficWarning"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.traffic.ListTrafficWarningRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.traffic.ListTrafficWarningResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListTrafficWarning"))
              .build();
        }
      }
    }
    return getListTrafficWarningMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.traffic.DeleteTrafficWarningRequest,
      com.zhijiejiaoyu.glory_api.traffic.DeleteTrafficWarningResponse> getDeleteTrafficWarningMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteTrafficWarning",
      requestType = com.zhijiejiaoyu.glory_api.traffic.DeleteTrafficWarningRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.traffic.DeleteTrafficWarningResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.traffic.DeleteTrafficWarningRequest,
      com.zhijiejiaoyu.glory_api.traffic.DeleteTrafficWarningResponse> getDeleteTrafficWarningMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.traffic.DeleteTrafficWarningRequest, com.zhijiejiaoyu.glory_api.traffic.DeleteTrafficWarningResponse> getDeleteTrafficWarningMethod;
    if ((getDeleteTrafficWarningMethod = glory_apiGrpc.getDeleteTrafficWarningMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteTrafficWarningMethod = glory_apiGrpc.getDeleteTrafficWarningMethod) == null) {
          glory_apiGrpc.getDeleteTrafficWarningMethod = getDeleteTrafficWarningMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.traffic.DeleteTrafficWarningRequest, com.zhijiejiaoyu.glory_api.traffic.DeleteTrafficWarningResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteTrafficWarning"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.traffic.DeleteTrafficWarningRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.traffic.DeleteTrafficWarningResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteTrafficWarning"))
              .build();
        }
      }
    }
    return getDeleteTrafficWarningMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateLiveControlRequest,
      com.zhijiejiaoyu.glory_api.live.CreateLiveControlResponse> getCreateLiveControlMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateLiveControl",
      requestType = com.zhijiejiaoyu.glory_api.live.CreateLiveControlRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.CreateLiveControlResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateLiveControlRequest,
      com.zhijiejiaoyu.glory_api.live.CreateLiveControlResponse> getCreateLiveControlMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateLiveControlRequest, com.zhijiejiaoyu.glory_api.live.CreateLiveControlResponse> getCreateLiveControlMethod;
    if ((getCreateLiveControlMethod = glory_apiGrpc.getCreateLiveControlMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateLiveControlMethod = glory_apiGrpc.getCreateLiveControlMethod) == null) {
          glory_apiGrpc.getCreateLiveControlMethod = getCreateLiveControlMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.CreateLiveControlRequest, com.zhijiejiaoyu.glory_api.live.CreateLiveControlResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateLiveControl"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.CreateLiveControlRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.CreateLiveControlResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateLiveControl"))
              .build();
        }
      }
    }
    return getCreateLiveControlMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UpdateLiveControlRequest,
      com.zhijiejiaoyu.glory_api.live.UpdateLiveControlResponse> getUpdateLiveControlMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateLiveControl",
      requestType = com.zhijiejiaoyu.glory_api.live.UpdateLiveControlRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.UpdateLiveControlResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UpdateLiveControlRequest,
      com.zhijiejiaoyu.glory_api.live.UpdateLiveControlResponse> getUpdateLiveControlMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UpdateLiveControlRequest, com.zhijiejiaoyu.glory_api.live.UpdateLiveControlResponse> getUpdateLiveControlMethod;
    if ((getUpdateLiveControlMethod = glory_apiGrpc.getUpdateLiveControlMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateLiveControlMethod = glory_apiGrpc.getUpdateLiveControlMethod) == null) {
          glory_apiGrpc.getUpdateLiveControlMethod = getUpdateLiveControlMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.UpdateLiveControlRequest, com.zhijiejiaoyu.glory_api.live.UpdateLiveControlResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateLiveControl"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.UpdateLiveControlRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.UpdateLiveControlResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateLiveControl"))
              .build();
        }
      }
    }
    return getUpdateLiveControlMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListLiveControlRequest,
      com.zhijiejiaoyu.glory_api.live.ListLiveControlResponse> getListLiveControlMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListLiveControl",
      requestType = com.zhijiejiaoyu.glory_api.live.ListLiveControlRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.ListLiveControlResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListLiveControlRequest,
      com.zhijiejiaoyu.glory_api.live.ListLiveControlResponse> getListLiveControlMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListLiveControlRequest, com.zhijiejiaoyu.glory_api.live.ListLiveControlResponse> getListLiveControlMethod;
    if ((getListLiveControlMethod = glory_apiGrpc.getListLiveControlMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListLiveControlMethod = glory_apiGrpc.getListLiveControlMethod) == null) {
          glory_apiGrpc.getListLiveControlMethod = getListLiveControlMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.ListLiveControlRequest, com.zhijiejiaoyu.glory_api.live.ListLiveControlResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListLiveControl"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListLiveControlRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListLiveControlResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListLiveControl"))
              .build();
        }
      }
    }
    return getListLiveControlMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.DeleteLiveControlRequest,
      com.zhijiejiaoyu.glory_api.live.DeleteLiveControlResponse> getDeleteLiveControlMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteLiveControl",
      requestType = com.zhijiejiaoyu.glory_api.live.DeleteLiveControlRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.DeleteLiveControlResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.DeleteLiveControlRequest,
      com.zhijiejiaoyu.glory_api.live.DeleteLiveControlResponse> getDeleteLiveControlMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.DeleteLiveControlRequest, com.zhijiejiaoyu.glory_api.live.DeleteLiveControlResponse> getDeleteLiveControlMethod;
    if ((getDeleteLiveControlMethod = glory_apiGrpc.getDeleteLiveControlMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteLiveControlMethod = glory_apiGrpc.getDeleteLiveControlMethod) == null) {
          glory_apiGrpc.getDeleteLiveControlMethod = getDeleteLiveControlMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.DeleteLiveControlRequest, com.zhijiejiaoyu.glory_api.live.DeleteLiveControlResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteLiveControl"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.DeleteLiveControlRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.DeleteLiveControlResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteLiveControl"))
              .build();
        }
      }
    }
    return getDeleteLiveControlMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationRequest,
      com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationResponse> getCreateQuickEvaluationStandardMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateQuickEvaluationStandard",
      requestType = com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationRequest,
      com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationResponse> getCreateQuickEvaluationStandardMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationRequest, com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationResponse> getCreateQuickEvaluationStandardMethod;
    if ((getCreateQuickEvaluationStandardMethod = glory_apiGrpc.getCreateQuickEvaluationStandardMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateQuickEvaluationStandardMethod = glory_apiGrpc.getCreateQuickEvaluationStandardMethod) == null) {
          glory_apiGrpc.getCreateQuickEvaluationStandardMethod = getCreateQuickEvaluationStandardMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationRequest, com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateQuickEvaluationStandard"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateQuickEvaluationStandard"))
              .build();
        }
      }
    }
    return getCreateQuickEvaluationStandardMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UpdateQuickEvaluationRequest,
      com.zhijiejiaoyu.glory_api.live.UpdateQuickEvaluationResponse> getUpdateQuickEvaluationStandardMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateQuickEvaluationStandard",
      requestType = com.zhijiejiaoyu.glory_api.live.UpdateQuickEvaluationRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.UpdateQuickEvaluationResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UpdateQuickEvaluationRequest,
      com.zhijiejiaoyu.glory_api.live.UpdateQuickEvaluationResponse> getUpdateQuickEvaluationStandardMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.UpdateQuickEvaluationRequest, com.zhijiejiaoyu.glory_api.live.UpdateQuickEvaluationResponse> getUpdateQuickEvaluationStandardMethod;
    if ((getUpdateQuickEvaluationStandardMethod = glory_apiGrpc.getUpdateQuickEvaluationStandardMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateQuickEvaluationStandardMethod = glory_apiGrpc.getUpdateQuickEvaluationStandardMethod) == null) {
          glory_apiGrpc.getUpdateQuickEvaluationStandardMethod = getUpdateQuickEvaluationStandardMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.UpdateQuickEvaluationRequest, com.zhijiejiaoyu.glory_api.live.UpdateQuickEvaluationResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateQuickEvaluationStandard"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.UpdateQuickEvaluationRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.UpdateQuickEvaluationResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateQuickEvaluationStandard"))
              .build();
        }
      }
    }
    return getUpdateQuickEvaluationStandardMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationRequest,
      com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationResponse> getDeleteQuickEvaluationStandardMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteQuickEvaluationStandard",
      requestType = com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationRequest,
      com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationResponse> getDeleteQuickEvaluationStandardMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationRequest, com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationResponse> getDeleteQuickEvaluationStandardMethod;
    if ((getDeleteQuickEvaluationStandardMethod = glory_apiGrpc.getDeleteQuickEvaluationStandardMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteQuickEvaluationStandardMethod = glory_apiGrpc.getDeleteQuickEvaluationStandardMethod) == null) {
          glory_apiGrpc.getDeleteQuickEvaluationStandardMethod = getDeleteQuickEvaluationStandardMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationRequest, com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteQuickEvaluationStandard"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteQuickEvaluationStandard"))
              .build();
        }
      }
    }
    return getDeleteQuickEvaluationStandardMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationRequest,
      com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationResponse> getListQuickEvaluationStandardMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListQuickEvaluationStandard",
      requestType = com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationRequest,
      com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationResponse> getListQuickEvaluationStandardMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationRequest, com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationResponse> getListQuickEvaluationStandardMethod;
    if ((getListQuickEvaluationStandardMethod = glory_apiGrpc.getListQuickEvaluationStandardMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListQuickEvaluationStandardMethod = glory_apiGrpc.getListQuickEvaluationStandardMethod) == null) {
          glory_apiGrpc.getListQuickEvaluationStandardMethod = getListQuickEvaluationStandardMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationRequest, com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListQuickEvaluationStandard"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListQuickEvaluationStandard"))
              .build();
        }
      }
    }
    return getListQuickEvaluationStandardMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetLiveReplayRequest,
      com.zhijiejiaoyu.glory_api.live.GetLiveReplayResponse> getGetLiveReplayMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetLiveReplay",
      requestType = com.zhijiejiaoyu.glory_api.live.GetLiveReplayRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.GetLiveReplayResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetLiveReplayRequest,
      com.zhijiejiaoyu.glory_api.live.GetLiveReplayResponse> getGetLiveReplayMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetLiveReplayRequest, com.zhijiejiaoyu.glory_api.live.GetLiveReplayResponse> getGetLiveReplayMethod;
    if ((getGetLiveReplayMethod = glory_apiGrpc.getGetLiveReplayMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetLiveReplayMethod = glory_apiGrpc.getGetLiveReplayMethod) == null) {
          glory_apiGrpc.getGetLiveReplayMethod = getGetLiveReplayMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.GetLiveReplayRequest, com.zhijiejiaoyu.glory_api.live.GetLiveReplayResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetLiveReplay"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetLiveReplayRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetLiveReplayResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetLiveReplay"))
              .build();
        }
      }
    }
    return getGetLiveReplayMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationReportRequest,
      com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationReportResponse> getCreateQuickEvaluationReportMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateQuickEvaluationReport",
      requestType = com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationReportRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationReportResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationReportRequest,
      com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationReportResponse> getCreateQuickEvaluationReportMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationReportRequest, com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationReportResponse> getCreateQuickEvaluationReportMethod;
    if ((getCreateQuickEvaluationReportMethod = glory_apiGrpc.getCreateQuickEvaluationReportMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateQuickEvaluationReportMethod = glory_apiGrpc.getCreateQuickEvaluationReportMethod) == null) {
          glory_apiGrpc.getCreateQuickEvaluationReportMethod = getCreateQuickEvaluationReportMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationReportRequest, com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationReportResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateQuickEvaluationReport"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationReportRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationReportResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateQuickEvaluationReport"))
              .build();
        }
      }
    }
    return getCreateQuickEvaluationReportMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationReportRequest,
      com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationReportResponse> getListQuickEvaluationReportMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListQuickEvaluationReport",
      requestType = com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationReportRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationReportResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationReportRequest,
      com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationReportResponse> getListQuickEvaluationReportMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationReportRequest, com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationReportResponse> getListQuickEvaluationReportMethod;
    if ((getListQuickEvaluationReportMethod = glory_apiGrpc.getListQuickEvaluationReportMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListQuickEvaluationReportMethod = glory_apiGrpc.getListQuickEvaluationReportMethod) == null) {
          glory_apiGrpc.getListQuickEvaluationReportMethod = getListQuickEvaluationReportMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationReportRequest, com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationReportResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListQuickEvaluationReport"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationReportRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationReportResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListQuickEvaluationReport"))
              .build();
        }
      }
    }
    return getListQuickEvaluationReportMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationReportRequest,
      com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationReportResponse> getGetQuickEvaluationReportMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetQuickEvaluationReport",
      requestType = com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationReportRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationReportResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationReportRequest,
      com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationReportResponse> getGetQuickEvaluationReportMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationReportRequest, com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationReportResponse> getGetQuickEvaluationReportMethod;
    if ((getGetQuickEvaluationReportMethod = glory_apiGrpc.getGetQuickEvaluationReportMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetQuickEvaluationReportMethod = glory_apiGrpc.getGetQuickEvaluationReportMethod) == null) {
          glory_apiGrpc.getGetQuickEvaluationReportMethod = getGetQuickEvaluationReportMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationReportRequest, com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationReportResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetQuickEvaluationReport"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationReportRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationReportResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetQuickEvaluationReport"))
              .build();
        }
      }
    }
    return getGetQuickEvaluationReportMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationReportRequest,
      com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationReportResponse> getDeleteQuickEvaluationReportMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteQuickEvaluationReport",
      requestType = com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationReportRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationReportResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationReportRequest,
      com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationReportResponse> getDeleteQuickEvaluationReportMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationReportRequest, com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationReportResponse> getDeleteQuickEvaluationReportMethod;
    if ((getDeleteQuickEvaluationReportMethod = glory_apiGrpc.getDeleteQuickEvaluationReportMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteQuickEvaluationReportMethod = glory_apiGrpc.getDeleteQuickEvaluationReportMethod) == null) {
          glory_apiGrpc.getDeleteQuickEvaluationReportMethod = getDeleteQuickEvaluationReportMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationReportRequest, com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationReportResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteQuickEvaluationReport"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationReportRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationReportResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteQuickEvaluationReport"))
              .build();
        }
      }
    }
    return getDeleteQuickEvaluationReportMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationDetailRequest,
      com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationDetailResponse> getGetQuickEvaluationDetailMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetQuickEvaluationDetail",
      requestType = com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationDetailRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationDetailResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationDetailRequest,
      com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationDetailResponse> getGetQuickEvaluationDetailMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationDetailRequest, com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationDetailResponse> getGetQuickEvaluationDetailMethod;
    if ((getGetQuickEvaluationDetailMethod = glory_apiGrpc.getGetQuickEvaluationDetailMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetQuickEvaluationDetailMethod = glory_apiGrpc.getGetQuickEvaluationDetailMethod) == null) {
          glory_apiGrpc.getGetQuickEvaluationDetailMethod = getGetQuickEvaluationDetailMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationDetailRequest, com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationDetailResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetQuickEvaluationDetail"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationDetailRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationDetailResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetQuickEvaluationDetail"))
              .build();
        }
      }
    }
    return getGetQuickEvaluationDetailMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateVersionLogRequest,
      com.zhijiejiaoyu.glory_api.course.CreateVersionLogResponse> getCreateVersionLogMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateVersionLog",
      requestType = com.zhijiejiaoyu.glory_api.course.CreateVersionLogRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.CreateVersionLogResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateVersionLogRequest,
      com.zhijiejiaoyu.glory_api.course.CreateVersionLogResponse> getCreateVersionLogMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.CreateVersionLogRequest, com.zhijiejiaoyu.glory_api.course.CreateVersionLogResponse> getCreateVersionLogMethod;
    if ((getCreateVersionLogMethod = glory_apiGrpc.getCreateVersionLogMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateVersionLogMethod = glory_apiGrpc.getCreateVersionLogMethod) == null) {
          glory_apiGrpc.getCreateVersionLogMethod = getCreateVersionLogMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.CreateVersionLogRequest, com.zhijiejiaoyu.glory_api.course.CreateVersionLogResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateVersionLog"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.CreateVersionLogRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.CreateVersionLogResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateVersionLog"))
              .build();
        }
      }
    }
    return getCreateVersionLogMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateVersionLogRequest,
      com.zhijiejiaoyu.glory_api.course.UpdateVersionLogResponse> getUpdateVersionLogMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateVersionLog",
      requestType = com.zhijiejiaoyu.glory_api.course.UpdateVersionLogRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.UpdateVersionLogResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateVersionLogRequest,
      com.zhijiejiaoyu.glory_api.course.UpdateVersionLogResponse> getUpdateVersionLogMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.UpdateVersionLogRequest, com.zhijiejiaoyu.glory_api.course.UpdateVersionLogResponse> getUpdateVersionLogMethod;
    if ((getUpdateVersionLogMethod = glory_apiGrpc.getUpdateVersionLogMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateVersionLogMethod = glory_apiGrpc.getUpdateVersionLogMethod) == null) {
          glory_apiGrpc.getUpdateVersionLogMethod = getUpdateVersionLogMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.UpdateVersionLogRequest, com.zhijiejiaoyu.glory_api.course.UpdateVersionLogResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateVersionLog"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.UpdateVersionLogRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.UpdateVersionLogResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateVersionLog"))
              .build();
        }
      }
    }
    return getUpdateVersionLogMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListVersionLogRequest,
      com.zhijiejiaoyu.glory_api.course.ListVersionLogResponse> getListVersionLogMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListVersionLog",
      requestType = com.zhijiejiaoyu.glory_api.course.ListVersionLogRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.ListVersionLogResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListVersionLogRequest,
      com.zhijiejiaoyu.glory_api.course.ListVersionLogResponse> getListVersionLogMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.ListVersionLogRequest, com.zhijiejiaoyu.glory_api.course.ListVersionLogResponse> getListVersionLogMethod;
    if ((getListVersionLogMethod = glory_apiGrpc.getListVersionLogMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListVersionLogMethod = glory_apiGrpc.getListVersionLogMethod) == null) {
          glory_apiGrpc.getListVersionLogMethod = getListVersionLogMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.ListVersionLogRequest, com.zhijiejiaoyu.glory_api.course.ListVersionLogResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListVersionLog"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.ListVersionLogRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.ListVersionLogResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListVersionLog"))
              .build();
        }
      }
    }
    return getListVersionLogMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteVersionLogRequest,
      com.zhijiejiaoyu.glory_api.course.DeleteVersionLogResponse> getDeleteVersionLogMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteVersionLog",
      requestType = com.zhijiejiaoyu.glory_api.course.DeleteVersionLogRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.DeleteVersionLogResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteVersionLogRequest,
      com.zhijiejiaoyu.glory_api.course.DeleteVersionLogResponse> getDeleteVersionLogMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.DeleteVersionLogRequest, com.zhijiejiaoyu.glory_api.course.DeleteVersionLogResponse> getDeleteVersionLogMethod;
    if ((getDeleteVersionLogMethod = glory_apiGrpc.getDeleteVersionLogMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteVersionLogMethod = glory_apiGrpc.getDeleteVersionLogMethod) == null) {
          glory_apiGrpc.getDeleteVersionLogMethod = getDeleteVersionLogMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.DeleteVersionLogRequest, com.zhijiejiaoyu.glory_api.course.DeleteVersionLogResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteVersionLog"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.DeleteVersionLogRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.DeleteVersionLogResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteVersionLog"))
              .build();
        }
      }
    }
    return getDeleteVersionLogMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetLatestVersionRequest,
      com.zhijiejiaoyu.glory_api.course.GetLatestVersionResponse> getGetLatestVersionMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetLatestVersion",
      requestType = com.zhijiejiaoyu.glory_api.course.GetLatestVersionRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.course.GetLatestVersionResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetLatestVersionRequest,
      com.zhijiejiaoyu.glory_api.course.GetLatestVersionResponse> getGetLatestVersionMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.course.GetLatestVersionRequest, com.zhijiejiaoyu.glory_api.course.GetLatestVersionResponse> getGetLatestVersionMethod;
    if ((getGetLatestVersionMethod = glory_apiGrpc.getGetLatestVersionMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetLatestVersionMethod = glory_apiGrpc.getGetLatestVersionMethod) == null) {
          glory_apiGrpc.getGetLatestVersionMethod = getGetLatestVersionMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.course.GetLatestVersionRequest, com.zhijiejiaoyu.glory_api.course.GetLatestVersionResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetLatestVersion"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.GetLatestVersionRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.course.GetLatestVersionResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetLatestVersion"))
              .build();
        }
      }
    }
    return getGetLatestVersionMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.GetTaskConfigRequest,
      com.zhijiejiaoyu.glory_api.task.GetTaskConfigResponse> getGetTaskConfigMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetTaskConfig",
      requestType = com.zhijiejiaoyu.glory_api.task.GetTaskConfigRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.GetTaskConfigResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.GetTaskConfigRequest,
      com.zhijiejiaoyu.glory_api.task.GetTaskConfigResponse> getGetTaskConfigMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.GetTaskConfigRequest, com.zhijiejiaoyu.glory_api.task.GetTaskConfigResponse> getGetTaskConfigMethod;
    if ((getGetTaskConfigMethod = glory_apiGrpc.getGetTaskConfigMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetTaskConfigMethod = glory_apiGrpc.getGetTaskConfigMethod) == null) {
          glory_apiGrpc.getGetTaskConfigMethod = getGetTaskConfigMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.GetTaskConfigRequest, com.zhijiejiaoyu.glory_api.task.GetTaskConfigResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetTaskConfig"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.GetTaskConfigRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.GetTaskConfigResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetTaskConfig"))
              .build();
        }
      }
    }
    return getGetTaskConfigMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CreateSystemTaskRequest,
      com.zhijiejiaoyu.glory_api.task.CreateSystemTaskResponse> getCreateSystemTaskMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateSystemTask",
      requestType = com.zhijiejiaoyu.glory_api.task.CreateSystemTaskRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.CreateSystemTaskResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CreateSystemTaskRequest,
      com.zhijiejiaoyu.glory_api.task.CreateSystemTaskResponse> getCreateSystemTaskMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CreateSystemTaskRequest, com.zhijiejiaoyu.glory_api.task.CreateSystemTaskResponse> getCreateSystemTaskMethod;
    if ((getCreateSystemTaskMethod = glory_apiGrpc.getCreateSystemTaskMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateSystemTaskMethod = glory_apiGrpc.getCreateSystemTaskMethod) == null) {
          glory_apiGrpc.getCreateSystemTaskMethod = getCreateSystemTaskMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.CreateSystemTaskRequest, com.zhijiejiaoyu.glory_api.task.CreateSystemTaskResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateSystemTask"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CreateSystemTaskRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CreateSystemTaskResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateSystemTask"))
              .build();
        }
      }
    }
    return getCreateSystemTaskMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.ListSystemTaskRequest,
      com.zhijiejiaoyu.glory_api.task.ListSystemTaskResponse> getListSystemTaskMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListSystemTask",
      requestType = com.zhijiejiaoyu.glory_api.task.ListSystemTaskRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.ListSystemTaskResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.ListSystemTaskRequest,
      com.zhijiejiaoyu.glory_api.task.ListSystemTaskResponse> getListSystemTaskMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.ListSystemTaskRequest, com.zhijiejiaoyu.glory_api.task.ListSystemTaskResponse> getListSystemTaskMethod;
    if ((getListSystemTaskMethod = glory_apiGrpc.getListSystemTaskMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListSystemTaskMethod = glory_apiGrpc.getListSystemTaskMethod) == null) {
          glory_apiGrpc.getListSystemTaskMethod = getListSystemTaskMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.ListSystemTaskRequest, com.zhijiejiaoyu.glory_api.task.ListSystemTaskResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListSystemTask"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.ListSystemTaskRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.ListSystemTaskResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListSystemTask"))
              .build();
        }
      }
    }
    return getListSystemTaskMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.GetSystemTaskRequest,
      com.zhijiejiaoyu.glory_api.task.GetSystemTaskResponse> getGetSystemTaskMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetSystemTask",
      requestType = com.zhijiejiaoyu.glory_api.task.GetSystemTaskRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.GetSystemTaskResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.GetSystemTaskRequest,
      com.zhijiejiaoyu.glory_api.task.GetSystemTaskResponse> getGetSystemTaskMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.GetSystemTaskRequest, com.zhijiejiaoyu.glory_api.task.GetSystemTaskResponse> getGetSystemTaskMethod;
    if ((getGetSystemTaskMethod = glory_apiGrpc.getGetSystemTaskMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetSystemTaskMethod = glory_apiGrpc.getGetSystemTaskMethod) == null) {
          glory_apiGrpc.getGetSystemTaskMethod = getGetSystemTaskMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.GetSystemTaskRequest, com.zhijiejiaoyu.glory_api.task.GetSystemTaskResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetSystemTask"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.GetSystemTaskRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.GetSystemTaskResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetSystemTask"))
              .build();
        }
      }
    }
    return getGetSystemTaskMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.UpdateSystemTaskRequest,
      com.zhijiejiaoyu.glory_api.task.UpdateSystemTaskResponse> getUpdateSystemTaskMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateSystemTask",
      requestType = com.zhijiejiaoyu.glory_api.task.UpdateSystemTaskRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.UpdateSystemTaskResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.UpdateSystemTaskRequest,
      com.zhijiejiaoyu.glory_api.task.UpdateSystemTaskResponse> getUpdateSystemTaskMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.UpdateSystemTaskRequest, com.zhijiejiaoyu.glory_api.task.UpdateSystemTaskResponse> getUpdateSystemTaskMethod;
    if ((getUpdateSystemTaskMethod = glory_apiGrpc.getUpdateSystemTaskMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateSystemTaskMethod = glory_apiGrpc.getUpdateSystemTaskMethod) == null) {
          glory_apiGrpc.getUpdateSystemTaskMethod = getUpdateSystemTaskMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.UpdateSystemTaskRequest, com.zhijiejiaoyu.glory_api.task.UpdateSystemTaskResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateSystemTask"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.UpdateSystemTaskRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.UpdateSystemTaskResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateSystemTask"))
              .build();
        }
      }
    }
    return getUpdateSystemTaskMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.DeleteSystemTaskRequest,
      com.zhijiejiaoyu.glory_api.task.DeleteSystemTaskResponse> getDeleteSystemTaskMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteSystemTask",
      requestType = com.zhijiejiaoyu.glory_api.task.DeleteSystemTaskRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.DeleteSystemTaskResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.DeleteSystemTaskRequest,
      com.zhijiejiaoyu.glory_api.task.DeleteSystemTaskResponse> getDeleteSystemTaskMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.DeleteSystemTaskRequest, com.zhijiejiaoyu.glory_api.task.DeleteSystemTaskResponse> getDeleteSystemTaskMethod;
    if ((getDeleteSystemTaskMethod = glory_apiGrpc.getDeleteSystemTaskMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteSystemTaskMethod = glory_apiGrpc.getDeleteSystemTaskMethod) == null) {
          glory_apiGrpc.getDeleteSystemTaskMethod = getDeleteSystemTaskMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.DeleteSystemTaskRequest, com.zhijiejiaoyu.glory_api.task.DeleteSystemTaskResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteSystemTask"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.DeleteSystemTaskRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.DeleteSystemTaskResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteSystemTask"))
              .build();
        }
      }
    }
    return getDeleteSystemTaskMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskTemplateRequest,
      com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskTemplateResponse> getCreateTeacherTaskTemplateMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateTeacherTaskTemplate",
      requestType = com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskTemplateRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskTemplateResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskTemplateRequest,
      com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskTemplateResponse> getCreateTeacherTaskTemplateMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskTemplateRequest, com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskTemplateResponse> getCreateTeacherTaskTemplateMethod;
    if ((getCreateTeacherTaskTemplateMethod = glory_apiGrpc.getCreateTeacherTaskTemplateMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateTeacherTaskTemplateMethod = glory_apiGrpc.getCreateTeacherTaskTemplateMethod) == null) {
          glory_apiGrpc.getCreateTeacherTaskTemplateMethod = getCreateTeacherTaskTemplateMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskTemplateRequest, com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskTemplateResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateTeacherTaskTemplate"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskTemplateRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskTemplateResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateTeacherTaskTemplate"))
              .build();
        }
      }
    }
    return getCreateTeacherTaskTemplateMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskTemplateRequest,
      com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskTemplateResponse> getUpdateTeacherTaskTemplateMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateTeacherTaskTemplate",
      requestType = com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskTemplateRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskTemplateResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskTemplateRequest,
      com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskTemplateResponse> getUpdateTeacherTaskTemplateMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskTemplateRequest, com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskTemplateResponse> getUpdateTeacherTaskTemplateMethod;
    if ((getUpdateTeacherTaskTemplateMethod = glory_apiGrpc.getUpdateTeacherTaskTemplateMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateTeacherTaskTemplateMethod = glory_apiGrpc.getUpdateTeacherTaskTemplateMethod) == null) {
          glory_apiGrpc.getUpdateTeacherTaskTemplateMethod = getUpdateTeacherTaskTemplateMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskTemplateRequest, com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskTemplateResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateTeacherTaskTemplate"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskTemplateRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskTemplateResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateTeacherTaskTemplate"))
              .build();
        }
      }
    }
    return getUpdateTeacherTaskTemplateMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.ListTeacherTaskTemplateRequest,
      com.zhijiejiaoyu.glory_api.task.ListTeacherTaskTemplateResponse> getListTeacherTaskTemplateMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListTeacherTaskTemplate",
      requestType = com.zhijiejiaoyu.glory_api.task.ListTeacherTaskTemplateRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.ListTeacherTaskTemplateResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.ListTeacherTaskTemplateRequest,
      com.zhijiejiaoyu.glory_api.task.ListTeacherTaskTemplateResponse> getListTeacherTaskTemplateMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.ListTeacherTaskTemplateRequest, com.zhijiejiaoyu.glory_api.task.ListTeacherTaskTemplateResponse> getListTeacherTaskTemplateMethod;
    if ((getListTeacherTaskTemplateMethod = glory_apiGrpc.getListTeacherTaskTemplateMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListTeacherTaskTemplateMethod = glory_apiGrpc.getListTeacherTaskTemplateMethod) == null) {
          glory_apiGrpc.getListTeacherTaskTemplateMethod = getListTeacherTaskTemplateMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.ListTeacherTaskTemplateRequest, com.zhijiejiaoyu.glory_api.task.ListTeacherTaskTemplateResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListTeacherTaskTemplate"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.ListTeacherTaskTemplateRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.ListTeacherTaskTemplateResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListTeacherTaskTemplate"))
              .build();
        }
      }
    }
    return getListTeacherTaskTemplateMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.GetTeacherTaskTemplateRequest,
      com.zhijiejiaoyu.glory_api.task.GetTeacherTaskTemplateResponse> getGetTeacherTaskTemplateMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetTeacherTaskTemplate",
      requestType = com.zhijiejiaoyu.glory_api.task.GetTeacherTaskTemplateRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.GetTeacherTaskTemplateResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.GetTeacherTaskTemplateRequest,
      com.zhijiejiaoyu.glory_api.task.GetTeacherTaskTemplateResponse> getGetTeacherTaskTemplateMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.GetTeacherTaskTemplateRequest, com.zhijiejiaoyu.glory_api.task.GetTeacherTaskTemplateResponse> getGetTeacherTaskTemplateMethod;
    if ((getGetTeacherTaskTemplateMethod = glory_apiGrpc.getGetTeacherTaskTemplateMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetTeacherTaskTemplateMethod = glory_apiGrpc.getGetTeacherTaskTemplateMethod) == null) {
          glory_apiGrpc.getGetTeacherTaskTemplateMethod = getGetTeacherTaskTemplateMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.GetTeacherTaskTemplateRequest, com.zhijiejiaoyu.glory_api.task.GetTeacherTaskTemplateResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetTeacherTaskTemplate"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.GetTeacherTaskTemplateRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.GetTeacherTaskTemplateResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetTeacherTaskTemplate"))
              .build();
        }
      }
    }
    return getGetTeacherTaskTemplateMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskTemplateRequest,
      com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskTemplateResponse> getDeleteTeacherTaskTemplateMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteTeacherTaskTemplate",
      requestType = com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskTemplateRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskTemplateResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskTemplateRequest,
      com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskTemplateResponse> getDeleteTeacherTaskTemplateMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskTemplateRequest, com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskTemplateResponse> getDeleteTeacherTaskTemplateMethod;
    if ((getDeleteTeacherTaskTemplateMethod = glory_apiGrpc.getDeleteTeacherTaskTemplateMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteTeacherTaskTemplateMethod = glory_apiGrpc.getDeleteTeacherTaskTemplateMethod) == null) {
          glory_apiGrpc.getDeleteTeacherTaskTemplateMethod = getDeleteTeacherTaskTemplateMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskTemplateRequest, com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskTemplateResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteTeacherTaskTemplate"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskTemplateRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskTemplateResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteTeacherTaskTemplate"))
              .build();
        }
      }
    }
    return getDeleteTeacherTaskTemplateMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskResponse> getCreateTeacherTaskMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateTeacherTask",
      requestType = com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskResponse> getCreateTeacherTaskMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskResponse> getCreateTeacherTaskMethod;
    if ((getCreateTeacherTaskMethod = glory_apiGrpc.getCreateTeacherTaskMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateTeacherTaskMethod = glory_apiGrpc.getCreateTeacherTaskMethod) == null) {
          glory_apiGrpc.getCreateTeacherTaskMethod = getCreateTeacherTaskMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateTeacherTask"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateTeacherTask"))
              .build();
        }
      }
    }
    return getCreateTeacherTaskMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskResponse> getUpdateTeacherTaskMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateTeacherTask",
      requestType = com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskResponse> getUpdateTeacherTaskMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskResponse> getUpdateTeacherTaskMethod;
    if ((getUpdateTeacherTaskMethod = glory_apiGrpc.getUpdateTeacherTaskMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateTeacherTaskMethod = glory_apiGrpc.getUpdateTeacherTaskMethod) == null) {
          glory_apiGrpc.getUpdateTeacherTaskMethod = getUpdateTeacherTaskMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateTeacherTask"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateTeacherTask"))
              .build();
        }
      }
    }
    return getUpdateTeacherTaskMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.ListTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.ListTeacherTaskResponse> getListTeacherTaskMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListTeacherTask",
      requestType = com.zhijiejiaoyu.glory_api.task.ListTeacherTaskRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.ListTeacherTaskResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.ListTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.ListTeacherTaskResponse> getListTeacherTaskMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.ListTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.ListTeacherTaskResponse> getListTeacherTaskMethod;
    if ((getListTeacherTaskMethod = glory_apiGrpc.getListTeacherTaskMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListTeacherTaskMethod = glory_apiGrpc.getListTeacherTaskMethod) == null) {
          glory_apiGrpc.getListTeacherTaskMethod = getListTeacherTaskMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.ListTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.ListTeacherTaskResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListTeacherTask"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.ListTeacherTaskRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.ListTeacherTaskResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListTeacherTask"))
              .build();
        }
      }
    }
    return getListTeacherTaskMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.GetTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.GetTeacherTaskResponse> getGetTeacherTaskMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetTeacherTask",
      requestType = com.zhijiejiaoyu.glory_api.task.GetTeacherTaskRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.GetTeacherTaskResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.GetTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.GetTeacherTaskResponse> getGetTeacherTaskMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.GetTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.GetTeacherTaskResponse> getGetTeacherTaskMethod;
    if ((getGetTeacherTaskMethod = glory_apiGrpc.getGetTeacherTaskMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetTeacherTaskMethod = glory_apiGrpc.getGetTeacherTaskMethod) == null) {
          glory_apiGrpc.getGetTeacherTaskMethod = getGetTeacherTaskMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.GetTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.GetTeacherTaskResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetTeacherTask"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.GetTeacherTaskRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.GetTeacherTaskResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetTeacherTask"))
              .build();
        }
      }
    }
    return getGetTeacherTaskMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.GetTeacherTaskProgressRequest,
      com.zhijiejiaoyu.glory_api.task.GetTeacherTaskProgressResponse> getGetTeacherTaskProgressMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetTeacherTaskProgress",
      requestType = com.zhijiejiaoyu.glory_api.task.GetTeacherTaskProgressRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.GetTeacherTaskProgressResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.GetTeacherTaskProgressRequest,
      com.zhijiejiaoyu.glory_api.task.GetTeacherTaskProgressResponse> getGetTeacherTaskProgressMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.GetTeacherTaskProgressRequest, com.zhijiejiaoyu.glory_api.task.GetTeacherTaskProgressResponse> getGetTeacherTaskProgressMethod;
    if ((getGetTeacherTaskProgressMethod = glory_apiGrpc.getGetTeacherTaskProgressMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetTeacherTaskProgressMethod = glory_apiGrpc.getGetTeacherTaskProgressMethod) == null) {
          glory_apiGrpc.getGetTeacherTaskProgressMethod = getGetTeacherTaskProgressMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.GetTeacherTaskProgressRequest, com.zhijiejiaoyu.glory_api.task.GetTeacherTaskProgressResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetTeacherTaskProgress"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.GetTeacherTaskProgressRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.GetTeacherTaskProgressResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetTeacherTaskProgress"))
              .build();
        }
      }
    }
    return getGetTeacherTaskProgressMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskResponse> getDeleteTeacherTaskMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteTeacherTask",
      requestType = com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskResponse> getDeleteTeacherTaskMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskResponse> getDeleteTeacherTaskMethod;
    if ((getDeleteTeacherTaskMethod = glory_apiGrpc.getDeleteTeacherTaskMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteTeacherTaskMethod = glory_apiGrpc.getDeleteTeacherTaskMethod) == null) {
          glory_apiGrpc.getDeleteTeacherTaskMethod = getDeleteTeacherTaskMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteTeacherTask"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteTeacherTask"))
              .build();
        }
      }
    }
    return getDeleteTeacherTaskMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.TeacherTaskStatsRequest,
      com.zhijiejiaoyu.glory_api.task.TeacherTaskStatsResponse> getTeacherTaskStatsMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "TeacherTaskStats",
      requestType = com.zhijiejiaoyu.glory_api.task.TeacherTaskStatsRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.TeacherTaskStatsResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.TeacherTaskStatsRequest,
      com.zhijiejiaoyu.glory_api.task.TeacherTaskStatsResponse> getTeacherTaskStatsMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.TeacherTaskStatsRequest, com.zhijiejiaoyu.glory_api.task.TeacherTaskStatsResponse> getTeacherTaskStatsMethod;
    if ((getTeacherTaskStatsMethod = glory_apiGrpc.getTeacherTaskStatsMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getTeacherTaskStatsMethod = glory_apiGrpc.getTeacherTaskStatsMethod) == null) {
          glory_apiGrpc.getTeacherTaskStatsMethod = getTeacherTaskStatsMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.TeacherTaskStatsRequest, com.zhijiejiaoyu.glory_api.task.TeacherTaskStatsResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "TeacherTaskStats"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.TeacherTaskStatsRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.TeacherTaskStatsResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("TeacherTaskStats"))
              .build();
        }
      }
    }
    return getTeacherTaskStatsMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.ListTaskStudentRequest,
      com.zhijiejiaoyu.glory_api.task.ListTaskStudentResponse> getTeacherTaskStudentsMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "TeacherTaskStudents",
      requestType = com.zhijiejiaoyu.glory_api.task.ListTaskStudentRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.ListTaskStudentResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.ListTaskStudentRequest,
      com.zhijiejiaoyu.glory_api.task.ListTaskStudentResponse> getTeacherTaskStudentsMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.ListTaskStudentRequest, com.zhijiejiaoyu.glory_api.task.ListTaskStudentResponse> getTeacherTaskStudentsMethod;
    if ((getTeacherTaskStudentsMethod = glory_apiGrpc.getTeacherTaskStudentsMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getTeacherTaskStudentsMethod = glory_apiGrpc.getTeacherTaskStudentsMethod) == null) {
          glory_apiGrpc.getTeacherTaskStudentsMethod = getTeacherTaskStudentsMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.ListTaskStudentRequest, com.zhijiejiaoyu.glory_api.task.ListTaskStudentResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "TeacherTaskStudents"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.ListTaskStudentRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.ListTaskStudentResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("TeacherTaskStudents"))
              .build();
        }
      }
    }
    return getTeacherTaskStudentsMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.CountClassSubmitResponse> getCountClassSubmitMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CountClassSubmit",
      requestType = com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.CountClassSubmitResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.CountClassSubmitResponse> getCountClassSubmitMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.CountClassSubmitResponse> getCountClassSubmitMethod;
    if ((getCountClassSubmitMethod = glory_apiGrpc.getCountClassSubmitMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCountClassSubmitMethod = glory_apiGrpc.getCountClassSubmitMethod) == null) {
          glory_apiGrpc.getCountClassSubmitMethod = getCountClassSubmitMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.CountClassSubmitResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CountClassSubmit"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CountClassSubmitResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CountClassSubmit"))
              .build();
        }
      }
    }
    return getCountClassSubmitMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.CountClassSubmitListResponse> getCountClassSubmitListMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CountClassSubmitList",
      requestType = com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.CountClassSubmitListResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.CountClassSubmitListResponse> getCountClassSubmitListMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.CountClassSubmitListResponse> getCountClassSubmitListMethod;
    if ((getCountClassSubmitListMethod = glory_apiGrpc.getCountClassSubmitListMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCountClassSubmitListMethod = glory_apiGrpc.getCountClassSubmitListMethod) == null) {
          glory_apiGrpc.getCountClassSubmitListMethod = getCountClassSubmitListMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.CountClassSubmitListResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CountClassSubmitList"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CountClassSubmitListResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CountClassSubmitList"))
              .build();
        }
      }
    }
    return getCountClassSubmitListMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.CountPositiveListResponse> getCountPositiveListMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CountPositiveList",
      requestType = com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.CountPositiveListResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.CountPositiveListResponse> getCountPositiveListMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.CountPositiveListResponse> getCountPositiveListMethod;
    if ((getCountPositiveListMethod = glory_apiGrpc.getCountPositiveListMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCountPositiveListMethod = glory_apiGrpc.getCountPositiveListMethod) == null) {
          glory_apiGrpc.getCountPositiveListMethod = getCountPositiveListMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.CountPositiveListResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CountPositiveList"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CountPositiveListResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CountPositiveList"))
              .build();
        }
      }
    }
    return getCountPositiveListMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.CountPotentialListResponse> getCountPotentialListMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CountPotentialList",
      requestType = com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.CountPotentialListResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.CountPotentialListResponse> getCountPotentialListMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.CountPotentialListResponse> getCountPotentialListMethod;
    if ((getCountPotentialListMethod = glory_apiGrpc.getCountPotentialListMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCountPotentialListMethod = glory_apiGrpc.getCountPotentialListMethod) == null) {
          glory_apiGrpc.getCountPotentialListMethod = getCountPotentialListMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.CountPotentialListResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CountPotentialList"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CountPotentialListResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CountPotentialList"))
              .build();
        }
      }
    }
    return getCountPotentialListMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.CountSubmitListResponse> getCountSubmitListMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CountSubmitList",
      requestType = com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.CountSubmitListResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.CountSubmitListResponse> getCountSubmitListMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.CountSubmitListResponse> getCountSubmitListMethod;
    if ((getCountSubmitListMethod = glory_apiGrpc.getCountSubmitListMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCountSubmitListMethod = glory_apiGrpc.getCountSubmitListMethod) == null) {
          glory_apiGrpc.getCountSubmitListMethod = getCountSubmitListMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.CountSubmitListResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CountSubmitList"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CountSubmitListResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CountSubmitList"))
              .build();
        }
      }
    }
    return getCountSubmitListMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.CountClassPassResponse> getCountClassPassMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CountClassPass",
      requestType = com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.CountClassPassResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.CountClassPassResponse> getCountClassPassMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.CountClassPassResponse> getCountClassPassMethod;
    if ((getCountClassPassMethod = glory_apiGrpc.getCountClassPassMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCountClassPassMethod = glory_apiGrpc.getCountClassPassMethod) == null) {
          glory_apiGrpc.getCountClassPassMethod = getCountClassPassMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.CountClassPassResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CountClassPass"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CountClassPassResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CountClassPass"))
              .build();
        }
      }
    }
    return getCountClassPassMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.CountClassPassListResponse> getCountClassPassListMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CountClassPassList",
      requestType = com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.CountClassPassListResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.CountClassPassListResponse> getCountClassPassListMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.CountClassPassListResponse> getCountClassPassListMethod;
    if ((getCountClassPassListMethod = glory_apiGrpc.getCountClassPassListMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCountClassPassListMethod = glory_apiGrpc.getCountClassPassListMethod) == null) {
          glory_apiGrpc.getCountClassPassListMethod = getCountClassPassListMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.CountClassPassListResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CountClassPassList"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CountClassPassListResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CountClassPassList"))
              .build();
        }
      }
    }
    return getCountClassPassListMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.CountSuperStudentListResponse> getCountSuperStudentListMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CountSuperStudentList",
      requestType = com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.CountSuperStudentListResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.CountSuperStudentListResponse> getCountSuperStudentListMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.CountSuperStudentListResponse> getCountSuperStudentListMethod;
    if ((getCountSuperStudentListMethod = glory_apiGrpc.getCountSuperStudentListMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCountSuperStudentListMethod = glory_apiGrpc.getCountSuperStudentListMethod) == null) {
          glory_apiGrpc.getCountSuperStudentListMethod = getCountSuperStudentListMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.CountSuperStudentListResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CountSuperStudentList"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CountSuperStudentListResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CountSuperStudentList"))
              .build();
        }
      }
    }
    return getCountSuperStudentListMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.CountLaggingStudentListResponse> getCountLaggingStudentListMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CountLaggingStudentList",
      requestType = com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.CountLaggingStudentListResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.CountLaggingStudentListResponse> getCountLaggingStudentListMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.CountLaggingStudentListResponse> getCountLaggingStudentListMethod;
    if ((getCountLaggingStudentListMethod = glory_apiGrpc.getCountLaggingStudentListMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCountLaggingStudentListMethod = glory_apiGrpc.getCountLaggingStudentListMethod) == null) {
          glory_apiGrpc.getCountLaggingStudentListMethod = getCountLaggingStudentListMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.CountLaggingStudentListResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CountLaggingStudentList"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CountLaggingStudentListResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CountLaggingStudentList"))
              .build();
        }
      }
    }
    return getCountLaggingStudentListMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.CountPassListResponse> getCountPassListMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CountPassList",
      requestType = com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.CountPassListResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.CountPassListResponse> getCountPassListMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.CountPassListResponse> getCountPassListMethod;
    if ((getCountPassListMethod = glory_apiGrpc.getCountPassListMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCountPassListMethod = glory_apiGrpc.getCountPassListMethod) == null) {
          glory_apiGrpc.getCountPassListMethod = getCountPassListMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.CountPassListResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CountPassList"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CountPassListResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CountPassList"))
              .build();
        }
      }
    }
    return getCountPassListMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountHistoryTaskRequest,
      com.zhijiejiaoyu.glory_api.task.CountHistoryTaskResponse> getCountHistoryTaskMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CountHistoryTask",
      requestType = com.zhijiejiaoyu.glory_api.task.CountHistoryTaskRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.CountHistoryTaskResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountHistoryTaskRequest,
      com.zhijiejiaoyu.glory_api.task.CountHistoryTaskResponse> getCountHistoryTaskMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.CountHistoryTaskRequest, com.zhijiejiaoyu.glory_api.task.CountHistoryTaskResponse> getCountHistoryTaskMethod;
    if ((getCountHistoryTaskMethod = glory_apiGrpc.getCountHistoryTaskMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCountHistoryTaskMethod = glory_apiGrpc.getCountHistoryTaskMethod) == null) {
          glory_apiGrpc.getCountHistoryTaskMethod = getCountHistoryTaskMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.CountHistoryTaskRequest, com.zhijiejiaoyu.glory_api.task.CountHistoryTaskResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CountHistoryTask"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CountHistoryTaskRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.CountHistoryTaskResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CountHistoryTask"))
              .build();
        }
      }
    }
    return getCountHistoryTaskMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.ListStudentTaskRequest,
      com.zhijiejiaoyu.glory_api.task.ListStudentTaskResponse> getListStudentTaskMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListStudentTask",
      requestType = com.zhijiejiaoyu.glory_api.task.ListStudentTaskRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.ListStudentTaskResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.ListStudentTaskRequest,
      com.zhijiejiaoyu.glory_api.task.ListStudentTaskResponse> getListStudentTaskMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.ListStudentTaskRequest, com.zhijiejiaoyu.glory_api.task.ListStudentTaskResponse> getListStudentTaskMethod;
    if ((getListStudentTaskMethod = glory_apiGrpc.getListStudentTaskMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListStudentTaskMethod = glory_apiGrpc.getListStudentTaskMethod) == null) {
          glory_apiGrpc.getListStudentTaskMethod = getListStudentTaskMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.ListStudentTaskRequest, com.zhijiejiaoyu.glory_api.task.ListStudentTaskResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListStudentTask"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.ListStudentTaskRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.ListStudentTaskResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListStudentTask"))
              .build();
        }
      }
    }
    return getListStudentTaskMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.SubmitStudentTaskRequest,
      com.zhijiejiaoyu.glory_api.task.SubmitStudentTaskResponse> getSubmitStudentTaskMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "SubmitStudentTask",
      requestType = com.zhijiejiaoyu.glory_api.task.SubmitStudentTaskRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.SubmitStudentTaskResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.SubmitStudentTaskRequest,
      com.zhijiejiaoyu.glory_api.task.SubmitStudentTaskResponse> getSubmitStudentTaskMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.SubmitStudentTaskRequest, com.zhijiejiaoyu.glory_api.task.SubmitStudentTaskResponse> getSubmitStudentTaskMethod;
    if ((getSubmitStudentTaskMethod = glory_apiGrpc.getSubmitStudentTaskMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getSubmitStudentTaskMethod = glory_apiGrpc.getSubmitStudentTaskMethod) == null) {
          glory_apiGrpc.getSubmitStudentTaskMethod = getSubmitStudentTaskMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.SubmitStudentTaskRequest, com.zhijiejiaoyu.glory_api.task.SubmitStudentTaskResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "SubmitStudentTask"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.SubmitStudentTaskRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.SubmitStudentTaskResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("SubmitStudentTask"))
              .build();
        }
      }
    }
    return getSubmitStudentTaskMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.GetStudentTaskRequest,
      com.zhijiejiaoyu.glory_api.task.GetStudentTaskResponse> getGetStudentTaskMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetStudentTask",
      requestType = com.zhijiejiaoyu.glory_api.task.GetStudentTaskRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.GetStudentTaskResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.GetStudentTaskRequest,
      com.zhijiejiaoyu.glory_api.task.GetStudentTaskResponse> getGetStudentTaskMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.GetStudentTaskRequest, com.zhijiejiaoyu.glory_api.task.GetStudentTaskResponse> getGetStudentTaskMethod;
    if ((getGetStudentTaskMethod = glory_apiGrpc.getGetStudentTaskMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetStudentTaskMethod = glory_apiGrpc.getGetStudentTaskMethod) == null) {
          glory_apiGrpc.getGetStudentTaskMethod = getGetStudentTaskMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.GetStudentTaskRequest, com.zhijiejiaoyu.glory_api.task.GetStudentTaskResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetStudentTask"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.GetStudentTaskRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.GetStudentTaskResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetStudentTask"))
              .build();
        }
      }
    }
    return getGetStudentTaskMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.TeacherListStudentTaskRequest,
      com.zhijiejiaoyu.glory_api.task.TeacherListStudentTaskResponse> getTeacherListStudentTaskMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "TeacherListStudentTask",
      requestType = com.zhijiejiaoyu.glory_api.task.TeacherListStudentTaskRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.TeacherListStudentTaskResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.TeacherListStudentTaskRequest,
      com.zhijiejiaoyu.glory_api.task.TeacherListStudentTaskResponse> getTeacherListStudentTaskMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.TeacherListStudentTaskRequest, com.zhijiejiaoyu.glory_api.task.TeacherListStudentTaskResponse> getTeacherListStudentTaskMethod;
    if ((getTeacherListStudentTaskMethod = glory_apiGrpc.getTeacherListStudentTaskMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getTeacherListStudentTaskMethod = glory_apiGrpc.getTeacherListStudentTaskMethod) == null) {
          glory_apiGrpc.getTeacherListStudentTaskMethod = getTeacherListStudentTaskMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.TeacherListStudentTaskRequest, com.zhijiejiaoyu.glory_api.task.TeacherListStudentTaskResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "TeacherListStudentTask"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.TeacherListStudentTaskRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.TeacherListStudentTaskResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("TeacherListStudentTask"))
              .build();
        }
      }
    }
    return getTeacherListStudentTaskMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.TeacherEvaluateStudentTaskRequest,
      com.zhijiejiaoyu.glory_api.task.TeacherEvaluateStudentTaskResponse> getTeacherEvaluateStudentTaskMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "TeacherEvaluateStudentTask",
      requestType = com.zhijiejiaoyu.glory_api.task.TeacherEvaluateStudentTaskRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.TeacherEvaluateStudentTaskResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.TeacherEvaluateStudentTaskRequest,
      com.zhijiejiaoyu.glory_api.task.TeacherEvaluateStudentTaskResponse> getTeacherEvaluateStudentTaskMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.TeacherEvaluateStudentTaskRequest, com.zhijiejiaoyu.glory_api.task.TeacherEvaluateStudentTaskResponse> getTeacherEvaluateStudentTaskMethod;
    if ((getTeacherEvaluateStudentTaskMethod = glory_apiGrpc.getTeacherEvaluateStudentTaskMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getTeacherEvaluateStudentTaskMethod = glory_apiGrpc.getTeacherEvaluateStudentTaskMethod) == null) {
          glory_apiGrpc.getTeacherEvaluateStudentTaskMethod = getTeacherEvaluateStudentTaskMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.TeacherEvaluateStudentTaskRequest, com.zhijiejiaoyu.glory_api.task.TeacherEvaluateStudentTaskResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "TeacherEvaluateStudentTask"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.TeacherEvaluateStudentTaskRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.TeacherEvaluateStudentTaskResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("TeacherEvaluateStudentTask"))
              .build();
        }
      }
    }
    return getTeacherEvaluateStudentTaskMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.StudentTaskStatsRequest,
      com.zhijiejiaoyu.glory_api.task.StudentTaskStatsResponse> getStudentTaskStatsMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "StudentTaskStats",
      requestType = com.zhijiejiaoyu.glory_api.task.StudentTaskStatsRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.StudentTaskStatsResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.StudentTaskStatsRequest,
      com.zhijiejiaoyu.glory_api.task.StudentTaskStatsResponse> getStudentTaskStatsMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.StudentTaskStatsRequest, com.zhijiejiaoyu.glory_api.task.StudentTaskStatsResponse> getStudentTaskStatsMethod;
    if ((getStudentTaskStatsMethod = glory_apiGrpc.getStudentTaskStatsMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getStudentTaskStatsMethod = glory_apiGrpc.getStudentTaskStatsMethod) == null) {
          glory_apiGrpc.getStudentTaskStatsMethod = getStudentTaskStatsMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.StudentTaskStatsRequest, com.zhijiejiaoyu.glory_api.task.StudentTaskStatsResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "StudentTaskStats"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.StudentTaskStatsRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.StudentTaskStatsResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("StudentTaskStats"))
              .build();
        }
      }
    }
    return getStudentTaskStatsMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.StudentTaskEvaluateStatsRequest,
      com.zhijiejiaoyu.glory_api.task.StudentTaskEvaluateStatsResponse> getStudentTaskEvaluateStatsMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "StudentTaskEvaluateStats",
      requestType = com.zhijiejiaoyu.glory_api.task.StudentTaskEvaluateStatsRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.StudentTaskEvaluateStatsResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.StudentTaskEvaluateStatsRequest,
      com.zhijiejiaoyu.glory_api.task.StudentTaskEvaluateStatsResponse> getStudentTaskEvaluateStatsMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.StudentTaskEvaluateStatsRequest, com.zhijiejiaoyu.glory_api.task.StudentTaskEvaluateStatsResponse> getStudentTaskEvaluateStatsMethod;
    if ((getStudentTaskEvaluateStatsMethod = glory_apiGrpc.getStudentTaskEvaluateStatsMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getStudentTaskEvaluateStatsMethod = glory_apiGrpc.getStudentTaskEvaluateStatsMethod) == null) {
          glory_apiGrpc.getStudentTaskEvaluateStatsMethod = getStudentTaskEvaluateStatsMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.StudentTaskEvaluateStatsRequest, com.zhijiejiaoyu.glory_api.task.StudentTaskEvaluateStatsResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "StudentTaskEvaluateStats"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.StudentTaskEvaluateStatsRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.StudentTaskEvaluateStatsResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("StudentTaskEvaluateStats"))
              .build();
        }
      }
    }
    return getStudentTaskEvaluateStatsMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.StartStudentTaskTimeRequest,
      com.zhijiejiaoyu.glory_api.task.StartStudentTaskTimeResponse> getStartStudentTaskTimeMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "StartStudentTaskTime",
      requestType = com.zhijiejiaoyu.glory_api.task.StartStudentTaskTimeRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.StartStudentTaskTimeResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.StartStudentTaskTimeRequest,
      com.zhijiejiaoyu.glory_api.task.StartStudentTaskTimeResponse> getStartStudentTaskTimeMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.StartStudentTaskTimeRequest, com.zhijiejiaoyu.glory_api.task.StartStudentTaskTimeResponse> getStartStudentTaskTimeMethod;
    if ((getStartStudentTaskTimeMethod = glory_apiGrpc.getStartStudentTaskTimeMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getStartStudentTaskTimeMethod = glory_apiGrpc.getStartStudentTaskTimeMethod) == null) {
          glory_apiGrpc.getStartStudentTaskTimeMethod = getStartStudentTaskTimeMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.StartStudentTaskTimeRequest, com.zhijiejiaoyu.glory_api.task.StartStudentTaskTimeResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "StartStudentTaskTime"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.StartStudentTaskTimeRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.StartStudentTaskTimeResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("StartStudentTaskTime"))
              .build();
        }
      }
    }
    return getStartStudentTaskTimeMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.DownloadTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.DownloadTeacherTaskResponse> getDownloadTeacherTaskMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DownloadTeacherTask",
      requestType = com.zhijiejiaoyu.glory_api.task.DownloadTeacherTaskRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.task.DownloadTeacherTaskResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.DownloadTeacherTaskRequest,
      com.zhijiejiaoyu.glory_api.task.DownloadTeacherTaskResponse> getDownloadTeacherTaskMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.task.DownloadTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.DownloadTeacherTaskResponse> getDownloadTeacherTaskMethod;
    if ((getDownloadTeacherTaskMethod = glory_apiGrpc.getDownloadTeacherTaskMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDownloadTeacherTaskMethod = glory_apiGrpc.getDownloadTeacherTaskMethod) == null) {
          glory_apiGrpc.getDownloadTeacherTaskMethod = getDownloadTeacherTaskMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.task.DownloadTeacherTaskRequest, com.zhijiejiaoyu.glory_api.task.DownloadTeacherTaskResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DownloadTeacherTask"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.DownloadTeacherTaskRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.task.DownloadTeacherTaskResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DownloadTeacherTask"))
              .build();
        }
      }
    }
    return getDownloadTeacherTaskMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.notification.ListNotificationRequest,
      com.zhijiejiaoyu.glory_api.notification.ListNotificationResponse> getListNotificationMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListNotification",
      requestType = com.zhijiejiaoyu.glory_api.notification.ListNotificationRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.notification.ListNotificationResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.notification.ListNotificationRequest,
      com.zhijiejiaoyu.glory_api.notification.ListNotificationResponse> getListNotificationMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.notification.ListNotificationRequest, com.zhijiejiaoyu.glory_api.notification.ListNotificationResponse> getListNotificationMethod;
    if ((getListNotificationMethod = glory_apiGrpc.getListNotificationMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListNotificationMethod = glory_apiGrpc.getListNotificationMethod) == null) {
          glory_apiGrpc.getListNotificationMethod = getListNotificationMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.notification.ListNotificationRequest, com.zhijiejiaoyu.glory_api.notification.ListNotificationResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListNotification"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.notification.ListNotificationRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.notification.ListNotificationResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListNotification"))
              .build();
        }
      }
    }
    return getListNotificationMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.notification.CountNotificationRequest,
      com.zhijiejiaoyu.glory_api.notification.CountNotificationResponse> getCountNotificationMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CountNotification",
      requestType = com.zhijiejiaoyu.glory_api.notification.CountNotificationRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.notification.CountNotificationResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.notification.CountNotificationRequest,
      com.zhijiejiaoyu.glory_api.notification.CountNotificationResponse> getCountNotificationMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.notification.CountNotificationRequest, com.zhijiejiaoyu.glory_api.notification.CountNotificationResponse> getCountNotificationMethod;
    if ((getCountNotificationMethod = glory_apiGrpc.getCountNotificationMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCountNotificationMethod = glory_apiGrpc.getCountNotificationMethod) == null) {
          glory_apiGrpc.getCountNotificationMethod = getCountNotificationMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.notification.CountNotificationRequest, com.zhijiejiaoyu.glory_api.notification.CountNotificationResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CountNotification"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.notification.CountNotificationRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.notification.CountNotificationResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CountNotification"))
              .build();
        }
      }
    }
    return getCountNotificationMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.notification.ReadNotificationRequest,
      com.zhijiejiaoyu.glory_api.notification.ReadNotificationResponse> getReadNotificationMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ReadNotification",
      requestType = com.zhijiejiaoyu.glory_api.notification.ReadNotificationRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.notification.ReadNotificationResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.notification.ReadNotificationRequest,
      com.zhijiejiaoyu.glory_api.notification.ReadNotificationResponse> getReadNotificationMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.notification.ReadNotificationRequest, com.zhijiejiaoyu.glory_api.notification.ReadNotificationResponse> getReadNotificationMethod;
    if ((getReadNotificationMethod = glory_apiGrpc.getReadNotificationMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getReadNotificationMethod = glory_apiGrpc.getReadNotificationMethod) == null) {
          glory_apiGrpc.getReadNotificationMethod = getReadNotificationMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.notification.ReadNotificationRequest, com.zhijiejiaoyu.glory_api.notification.ReadNotificationResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ReadNotification"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.notification.ReadNotificationRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.notification.ReadNotificationResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ReadNotification"))
              .build();
        }
      }
    }
    return getReadNotificationMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.notification.TestNotificationRequest,
      com.zhijiejiaoyu.glory_api.notification.TestNotificationResponse> getTestNotificationMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "TestNotification",
      requestType = com.zhijiejiaoyu.glory_api.notification.TestNotificationRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.notification.TestNotificationResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.notification.TestNotificationRequest,
      com.zhijiejiaoyu.glory_api.notification.TestNotificationResponse> getTestNotificationMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.notification.TestNotificationRequest, com.zhijiejiaoyu.glory_api.notification.TestNotificationResponse> getTestNotificationMethod;
    if ((getTestNotificationMethod = glory_apiGrpc.getTestNotificationMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getTestNotificationMethod = glory_apiGrpc.getTestNotificationMethod) == null) {
          glory_apiGrpc.getTestNotificationMethod = getTestNotificationMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.notification.TestNotificationRequest, com.zhijiejiaoyu.glory_api.notification.TestNotificationResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "TestNotification"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.notification.TestNotificationRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.notification.TestNotificationResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("TestNotification"))
              .build();
        }
      }
    }
    return getTestNotificationMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.notification.DeleteNotificationRequest,
      com.zhijiejiaoyu.glory_api.notification.DeleteNotificationResponse> getDeleteNotificationMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteNotification",
      requestType = com.zhijiejiaoyu.glory_api.notification.DeleteNotificationRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.notification.DeleteNotificationResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.notification.DeleteNotificationRequest,
      com.zhijiejiaoyu.glory_api.notification.DeleteNotificationResponse> getDeleteNotificationMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.notification.DeleteNotificationRequest, com.zhijiejiaoyu.glory_api.notification.DeleteNotificationResponse> getDeleteNotificationMethod;
    if ((getDeleteNotificationMethod = glory_apiGrpc.getDeleteNotificationMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteNotificationMethod = glory_apiGrpc.getDeleteNotificationMethod) == null) {
          glory_apiGrpc.getDeleteNotificationMethod = getDeleteNotificationMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.notification.DeleteNotificationRequest, com.zhijiejiaoyu.glory_api.notification.DeleteNotificationResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteNotification"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.notification.DeleteNotificationRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.notification.DeleteNotificationResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteNotification"))
              .build();
        }
      }
    }
    return getDeleteNotificationMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListUserMajorAndClasRequest,
      com.zhijiejiaoyu.glory_api.live.ListUserMajorAndClasResponse> getListUserMajorAndClassMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListUserMajorAndClass",
      requestType = com.zhijiejiaoyu.glory_api.live.ListUserMajorAndClasRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.ListUserMajorAndClasResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListUserMajorAndClasRequest,
      com.zhijiejiaoyu.glory_api.live.ListUserMajorAndClasResponse> getListUserMajorAndClassMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListUserMajorAndClasRequest, com.zhijiejiaoyu.glory_api.live.ListUserMajorAndClasResponse> getListUserMajorAndClassMethod;
    if ((getListUserMajorAndClassMethod = glory_apiGrpc.getListUserMajorAndClassMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListUserMajorAndClassMethod = glory_apiGrpc.getListUserMajorAndClassMethod) == null) {
          glory_apiGrpc.getListUserMajorAndClassMethod = getListUserMajorAndClassMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.ListUserMajorAndClasRequest, com.zhijiejiaoyu.glory_api.live.ListUserMajorAndClasResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListUserMajorAndClass"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListUserMajorAndClasRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListUserMajorAndClasResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListUserMajorAndClass"))
              .build();
        }
      }
    }
    return getListUserMajorAndClassMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetAggregationLiveUrlRequest,
      com.zhijiejiaoyu.glory_api.live.GetAggregationLiveUrlResponse> getGetAggregationLiveUrlMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetAggregationLiveUrl",
      requestType = com.zhijiejiaoyu.glory_api.live.GetAggregationLiveUrlRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.GetAggregationLiveUrlResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetAggregationLiveUrlRequest,
      com.zhijiejiaoyu.glory_api.live.GetAggregationLiveUrlResponse> getGetAggregationLiveUrlMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetAggregationLiveUrlRequest, com.zhijiejiaoyu.glory_api.live.GetAggregationLiveUrlResponse> getGetAggregationLiveUrlMethod;
    if ((getGetAggregationLiveUrlMethod = glory_apiGrpc.getGetAggregationLiveUrlMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetAggregationLiveUrlMethod = glory_apiGrpc.getGetAggregationLiveUrlMethod) == null) {
          glory_apiGrpc.getGetAggregationLiveUrlMethod = getGetAggregationLiveUrlMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.GetAggregationLiveUrlRequest, com.zhijiejiaoyu.glory_api.live.GetAggregationLiveUrlResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetAggregationLiveUrl"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetAggregationLiveUrlRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetAggregationLiveUrlResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetAggregationLiveUrl"))
              .build();
        }
      }
    }
    return getGetAggregationLiveUrlMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetLiveBoardDataRequest,
      com.zhijiejiaoyu.glory_api.live.GetLiveBoardDataResponse> getGetLiveBoardDataMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetLiveBoardData",
      requestType = com.zhijiejiaoyu.glory_api.live.GetLiveBoardDataRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.GetLiveBoardDataResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetLiveBoardDataRequest,
      com.zhijiejiaoyu.glory_api.live.GetLiveBoardDataResponse> getGetLiveBoardDataMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetLiveBoardDataRequest, com.zhijiejiaoyu.glory_api.live.GetLiveBoardDataResponse> getGetLiveBoardDataMethod;
    if ((getGetLiveBoardDataMethod = glory_apiGrpc.getGetLiveBoardDataMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetLiveBoardDataMethod = glory_apiGrpc.getGetLiveBoardDataMethod) == null) {
          glory_apiGrpc.getGetLiveBoardDataMethod = getGetLiveBoardDataMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.GetLiveBoardDataRequest, com.zhijiejiaoyu.glory_api.live.GetLiveBoardDataResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetLiveBoardData"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetLiveBoardDataRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetLiveBoardDataResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetLiveBoardData"))
              .build();
        }
      }
    }
    return getGetLiveBoardDataMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetLiveBoardCommentsRequest,
      com.zhijiejiaoyu.glory_api.live.GetLiveBoardCommentsResponse> getGetLiveBoardCommentsMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetLiveBoardComments",
      requestType = com.zhijiejiaoyu.glory_api.live.GetLiveBoardCommentsRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.GetLiveBoardCommentsResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetLiveBoardCommentsRequest,
      com.zhijiejiaoyu.glory_api.live.GetLiveBoardCommentsResponse> getGetLiveBoardCommentsMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.GetLiveBoardCommentsRequest, com.zhijiejiaoyu.glory_api.live.GetLiveBoardCommentsResponse> getGetLiveBoardCommentsMethod;
    if ((getGetLiveBoardCommentsMethod = glory_apiGrpc.getGetLiveBoardCommentsMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetLiveBoardCommentsMethod = glory_apiGrpc.getGetLiveBoardCommentsMethod) == null) {
          glory_apiGrpc.getGetLiveBoardCommentsMethod = getGetLiveBoardCommentsMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.GetLiveBoardCommentsRequest, com.zhijiejiaoyu.glory_api.live.GetLiveBoardCommentsResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetLiveBoardComments"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetLiveBoardCommentsRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.GetLiveBoardCommentsResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetLiveBoardComments"))
              .build();
        }
      }
    }
    return getGetLiveBoardCommentsMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListLivingUserRequest,
      com.zhijiejiaoyu.glory_api.live.ListLivingUserResponse> getListBoardLivingUserMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListBoardLivingUser",
      requestType = com.zhijiejiaoyu.glory_api.live.ListLivingUserRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.ListLivingUserResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListLivingUserRequest,
      com.zhijiejiaoyu.glory_api.live.ListLivingUserResponse> getListBoardLivingUserMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.ListLivingUserRequest, com.zhijiejiaoyu.glory_api.live.ListLivingUserResponse> getListBoardLivingUserMethod;
    if ((getListBoardLivingUserMethod = glory_apiGrpc.getListBoardLivingUserMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListBoardLivingUserMethod = glory_apiGrpc.getListBoardLivingUserMethod) == null) {
          glory_apiGrpc.getListBoardLivingUserMethod = getListBoardLivingUserMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.ListLivingUserRequest, com.zhijiejiaoyu.glory_api.live.ListLivingUserResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListBoardLivingUser"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListLivingUserRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.ListLivingUserResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListBoardLivingUser"))
              .build();
        }
      }
    }
    return getListBoardLivingUserMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CloseCasterRequest,
      com.zhijiejiaoyu.glory_api.live.CloseCasterResponse> getCloseCasterMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CloseCaster",
      requestType = com.zhijiejiaoyu.glory_api.live.CloseCasterRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.live.CloseCasterResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CloseCasterRequest,
      com.zhijiejiaoyu.glory_api.live.CloseCasterResponse> getCloseCasterMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.live.CloseCasterRequest, com.zhijiejiaoyu.glory_api.live.CloseCasterResponse> getCloseCasterMethod;
    if ((getCloseCasterMethod = glory_apiGrpc.getCloseCasterMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCloseCasterMethod = glory_apiGrpc.getCloseCasterMethod) == null) {
          glory_apiGrpc.getCloseCasterMethod = getCloseCasterMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.live.CloseCasterRequest, com.zhijiejiaoyu.glory_api.live.CloseCasterResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CloseCaster"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.CloseCasterRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.live.CloseCasterResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CloseCaster"))
              .build();
        }
      }
    }
    return getCloseCasterMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationRequest,
      com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationResponse> getCreateArticleCreationMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateArticleCreation",
      requestType = com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationRequest,
      com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationResponse> getCreateArticleCreationMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationRequest, com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationResponse> getCreateArticleCreationMethod;
    if ((getCreateArticleCreationMethod = glory_apiGrpc.getCreateArticleCreationMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateArticleCreationMethod = glory_apiGrpc.getCreateArticleCreationMethod) == null) {
          glory_apiGrpc.getCreateArticleCreationMethod = getCreateArticleCreationMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationRequest, com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateArticleCreation"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateArticleCreation"))
              .build();
        }
      }
    }
    return getCreateArticleCreationMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationResponse> getListMyArticleCreationMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListMyArticleCreation",
      requestType = com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationResponse> getListMyArticleCreationMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationRequest, com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationResponse> getListMyArticleCreationMethod;
    if ((getListMyArticleCreationMethod = glory_apiGrpc.getListMyArticleCreationMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListMyArticleCreationMethod = glory_apiGrpc.getListMyArticleCreationMethod) == null) {
          glory_apiGrpc.getListMyArticleCreationMethod = getListMyArticleCreationMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationRequest, com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListMyArticleCreation"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListMyArticleCreation"))
              .build();
        }
      }
    }
    return getListMyArticleCreationMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationDraftRequest,
      com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationDraftResponse> getCreateArticleCreationDraftMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateArticleCreationDraft",
      requestType = com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationDraftRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationDraftResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationDraftRequest,
      com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationDraftResponse> getCreateArticleCreationDraftMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationDraftRequest, com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationDraftResponse> getCreateArticleCreationDraftMethod;
    if ((getCreateArticleCreationDraftMethod = glory_apiGrpc.getCreateArticleCreationDraftMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateArticleCreationDraftMethod = glory_apiGrpc.getCreateArticleCreationDraftMethod) == null) {
          glory_apiGrpc.getCreateArticleCreationDraftMethod = getCreateArticleCreationDraftMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationDraftRequest, com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationDraftResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateArticleCreationDraft"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationDraftRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationDraftResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateArticleCreationDraft"))
              .build();
        }
      }
    }
    return getCreateArticleCreationDraftMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationDraftRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationDraftResponse> getListMyDraftArticleCreationMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListMyDraftArticleCreation",
      requestType = com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationDraftRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationDraftResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationDraftRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationDraftResponse> getListMyDraftArticleCreationMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationDraftRequest, com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationDraftResponse> getListMyDraftArticleCreationMethod;
    if ((getListMyDraftArticleCreationMethod = glory_apiGrpc.getListMyDraftArticleCreationMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListMyDraftArticleCreationMethod = glory_apiGrpc.getListMyDraftArticleCreationMethod) == null) {
          glory_apiGrpc.getListMyDraftArticleCreationMethod = getListMyDraftArticleCreationMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationDraftRequest, com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationDraftResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListMyDraftArticleCreation"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationDraftRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationDraftResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListMyDraftArticleCreation"))
              .build();
        }
      }
    }
    return getListMyDraftArticleCreationMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ArticleCreationDraftDetailRequest,
      com.zhijiejiaoyu.glory_api.short_video.ArticleCreationDraftDetailResponse> getDraftArticleCreationDetailMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DraftArticleCreationDetail",
      requestType = com.zhijiejiaoyu.glory_api.short_video.ArticleCreationDraftDetailRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.ArticleCreationDraftDetailResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ArticleCreationDraftDetailRequest,
      com.zhijiejiaoyu.glory_api.short_video.ArticleCreationDraftDetailResponse> getDraftArticleCreationDetailMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ArticleCreationDraftDetailRequest, com.zhijiejiaoyu.glory_api.short_video.ArticleCreationDraftDetailResponse> getDraftArticleCreationDetailMethod;
    if ((getDraftArticleCreationDetailMethod = glory_apiGrpc.getDraftArticleCreationDetailMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDraftArticleCreationDetailMethod = glory_apiGrpc.getDraftArticleCreationDetailMethod) == null) {
          glory_apiGrpc.getDraftArticleCreationDetailMethod = getDraftArticleCreationDetailMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.ArticleCreationDraftDetailRequest, com.zhijiejiaoyu.glory_api.short_video.ArticleCreationDraftDetailResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DraftArticleCreationDetail"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ArticleCreationDraftDetailRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ArticleCreationDraftDetailResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DraftArticleCreationDetail"))
              .build();
        }
      }
    }
    return getDraftArticleCreationDetailMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.DeleteArticleCreationDraftRequest,
      com.zhijiejiaoyu.glory_api.short_video.DeleteArticleCreationDraftResponse> getDeleteDraftArticleCreationMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteDraftArticleCreation",
      requestType = com.zhijiejiaoyu.glory_api.short_video.DeleteArticleCreationDraftRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.DeleteArticleCreationDraftResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.DeleteArticleCreationDraftRequest,
      com.zhijiejiaoyu.glory_api.short_video.DeleteArticleCreationDraftResponse> getDeleteDraftArticleCreationMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.DeleteArticleCreationDraftRequest, com.zhijiejiaoyu.glory_api.short_video.DeleteArticleCreationDraftResponse> getDeleteDraftArticleCreationMethod;
    if ((getDeleteDraftArticleCreationMethod = glory_apiGrpc.getDeleteDraftArticleCreationMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteDraftArticleCreationMethod = glory_apiGrpc.getDeleteDraftArticleCreationMethod) == null) {
          glory_apiGrpc.getDeleteDraftArticleCreationMethod = getDeleteDraftArticleCreationMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.DeleteArticleCreationDraftRequest, com.zhijiejiaoyu.glory_api.short_video.DeleteArticleCreationDraftResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteDraftArticleCreation"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.DeleteArticleCreationDraftRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.DeleteArticleCreationDraftResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteDraftArticleCreation"))
              .build();
        }
      }
    }
    return getDeleteDraftArticleCreationMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ArticleCreationStatisticsRequest,
      com.zhijiejiaoyu.glory_api.short_video.ArticleCreationStatisticsResponse> getArticleCreationStatisticsMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ArticleCreationStatistics",
      requestType = com.zhijiejiaoyu.glory_api.short_video.ArticleCreationStatisticsRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.ArticleCreationStatisticsResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ArticleCreationStatisticsRequest,
      com.zhijiejiaoyu.glory_api.short_video.ArticleCreationStatisticsResponse> getArticleCreationStatisticsMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ArticleCreationStatisticsRequest, com.zhijiejiaoyu.glory_api.short_video.ArticleCreationStatisticsResponse> getArticleCreationStatisticsMethod;
    if ((getArticleCreationStatisticsMethod = glory_apiGrpc.getArticleCreationStatisticsMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getArticleCreationStatisticsMethod = glory_apiGrpc.getArticleCreationStatisticsMethod) == null) {
          glory_apiGrpc.getArticleCreationStatisticsMethod = getArticleCreationStatisticsMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.ArticleCreationStatisticsRequest, com.zhijiejiaoyu.glory_api.short_video.ArticleCreationStatisticsResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ArticleCreationStatistics"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ArticleCreationStatisticsRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ArticleCreationStatisticsResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ArticleCreationStatistics"))
              .build();
        }
      }
    }
    return getArticleCreationStatisticsMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetExampleArticleRequest,
      com.zhijiejiaoyu.glory_api.short_video.GetExampleArticleResponse> getGetExampleArticleMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetExampleArticle",
      requestType = com.zhijiejiaoyu.glory_api.short_video.GetExampleArticleRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.GetExampleArticleResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetExampleArticleRequest,
      com.zhijiejiaoyu.glory_api.short_video.GetExampleArticleResponse> getGetExampleArticleMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetExampleArticleRequest, com.zhijiejiaoyu.glory_api.short_video.GetExampleArticleResponse> getGetExampleArticleMethod;
    if ((getGetExampleArticleMethod = glory_apiGrpc.getGetExampleArticleMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetExampleArticleMethod = glory_apiGrpc.getGetExampleArticleMethod) == null) {
          glory_apiGrpc.getGetExampleArticleMethod = getGetExampleArticleMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.GetExampleArticleRequest, com.zhijiejiaoyu.glory_api.short_video.GetExampleArticleResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetExampleArticle"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.GetExampleArticleRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.GetExampleArticleResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetExampleArticle"))
              .build();
        }
      }
    }
    return getGetExampleArticleMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetEvaluationStandardRequest,
      com.zhijiejiaoyu.glory_api.short_video.GetEvaluationStandardResponse> getGetEvaluationStandardMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetEvaluationStandard",
      requestType = com.zhijiejiaoyu.glory_api.short_video.GetEvaluationStandardRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.GetEvaluationStandardResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetEvaluationStandardRequest,
      com.zhijiejiaoyu.glory_api.short_video.GetEvaluationStandardResponse> getGetEvaluationStandardMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetEvaluationStandardRequest, com.zhijiejiaoyu.glory_api.short_video.GetEvaluationStandardResponse> getGetEvaluationStandardMethod;
    if ((getGetEvaluationStandardMethod = glory_apiGrpc.getGetEvaluationStandardMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetEvaluationStandardMethod = glory_apiGrpc.getGetEvaluationStandardMethod) == null) {
          glory_apiGrpc.getGetEvaluationStandardMethod = getGetEvaluationStandardMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.GetEvaluationStandardRequest, com.zhijiejiaoyu.glory_api.short_video.GetEvaluationStandardResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetEvaluationStandard"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.GetEvaluationStandardRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.GetEvaluationStandardResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetEvaluationStandard"))
              .build();
        }
      }
    }
    return getGetEvaluationStandardMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.CreateEvaluationConfigRequest,
      com.zhijiejiaoyu.glory_api.short_video.CreateEvaluationConfigResponse> getCreateEvaluationConfigMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateEvaluationConfig",
      requestType = com.zhijiejiaoyu.glory_api.short_video.CreateEvaluationConfigRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.CreateEvaluationConfigResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.CreateEvaluationConfigRequest,
      com.zhijiejiaoyu.glory_api.short_video.CreateEvaluationConfigResponse> getCreateEvaluationConfigMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.CreateEvaluationConfigRequest, com.zhijiejiaoyu.glory_api.short_video.CreateEvaluationConfigResponse> getCreateEvaluationConfigMethod;
    if ((getCreateEvaluationConfigMethod = glory_apiGrpc.getCreateEvaluationConfigMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateEvaluationConfigMethod = glory_apiGrpc.getCreateEvaluationConfigMethod) == null) {
          glory_apiGrpc.getCreateEvaluationConfigMethod = getCreateEvaluationConfigMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.CreateEvaluationConfigRequest, com.zhijiejiaoyu.glory_api.short_video.CreateEvaluationConfigResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateEvaluationConfig"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.CreateEvaluationConfigRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.CreateEvaluationConfigResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateEvaluationConfig"))
              .build();
        }
      }
    }
    return getCreateEvaluationConfigMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListEvaluationConfigRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListEvaluationConfigResponse> getListEvaluationConfigMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListEvaluationConfig",
      requestType = com.zhijiejiaoyu.glory_api.short_video.ListEvaluationConfigRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.ListEvaluationConfigResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListEvaluationConfigRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListEvaluationConfigResponse> getListEvaluationConfigMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListEvaluationConfigRequest, com.zhijiejiaoyu.glory_api.short_video.ListEvaluationConfigResponse> getListEvaluationConfigMethod;
    if ((getListEvaluationConfigMethod = glory_apiGrpc.getListEvaluationConfigMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListEvaluationConfigMethod = glory_apiGrpc.getListEvaluationConfigMethod) == null) {
          glory_apiGrpc.getListEvaluationConfigMethod = getListEvaluationConfigMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.ListEvaluationConfigRequest, com.zhijiejiaoyu.glory_api.short_video.ListEvaluationConfigResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListEvaluationConfig"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListEvaluationConfigRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListEvaluationConfigResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListEvaluationConfig"))
              .build();
        }
      }
    }
    return getListEvaluationConfigMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.BatchEvaluateArticleRequest,
      com.zhijiejiaoyu.glory_api.short_video.BatchEvaluateArticleResponse> getBatchEvaluateArticleCreationMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "BatchEvaluateArticleCreation",
      requestType = com.zhijiejiaoyu.glory_api.short_video.BatchEvaluateArticleRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.BatchEvaluateArticleResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.BatchEvaluateArticleRequest,
      com.zhijiejiaoyu.glory_api.short_video.BatchEvaluateArticleResponse> getBatchEvaluateArticleCreationMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.BatchEvaluateArticleRequest, com.zhijiejiaoyu.glory_api.short_video.BatchEvaluateArticleResponse> getBatchEvaluateArticleCreationMethod;
    if ((getBatchEvaluateArticleCreationMethod = glory_apiGrpc.getBatchEvaluateArticleCreationMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getBatchEvaluateArticleCreationMethod = glory_apiGrpc.getBatchEvaluateArticleCreationMethod) == null) {
          glory_apiGrpc.getBatchEvaluateArticleCreationMethod = getBatchEvaluateArticleCreationMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.BatchEvaluateArticleRequest, com.zhijiejiaoyu.glory_api.short_video.BatchEvaluateArticleResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "BatchEvaluateArticleCreation"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.BatchEvaluateArticleRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.BatchEvaluateArticleResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("BatchEvaluateArticleCreation"))
              .build();
        }
      }
    }
    return getBatchEvaluateArticleCreationMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListStudentArticleCreationRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListStudentArticleCreationResponse> getListStudentArticleCreationMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListStudentArticleCreation",
      requestType = com.zhijiejiaoyu.glory_api.short_video.ListStudentArticleCreationRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.ListStudentArticleCreationResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListStudentArticleCreationRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListStudentArticleCreationResponse> getListStudentArticleCreationMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListStudentArticleCreationRequest, com.zhijiejiaoyu.glory_api.short_video.ListStudentArticleCreationResponse> getListStudentArticleCreationMethod;
    if ((getListStudentArticleCreationMethod = glory_apiGrpc.getListStudentArticleCreationMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListStudentArticleCreationMethod = glory_apiGrpc.getListStudentArticleCreationMethod) == null) {
          glory_apiGrpc.getListStudentArticleCreationMethod = getListStudentArticleCreationMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.ListStudentArticleCreationRequest, com.zhijiejiaoyu.glory_api.short_video.ListStudentArticleCreationResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListStudentArticleCreation"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListStudentArticleCreationRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListStudentArticleCreationResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListStudentArticleCreation"))
              .build();
        }
      }
    }
    return getListStudentArticleCreationMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.StudentArticleCreationEvaluationDetailRequest,
      com.zhijiejiaoyu.glory_api.short_video.StudentArticleCreationEvaluationDetailResponse> getStudentArticleCreationEvaluationDetailMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "StudentArticleCreationEvaluationDetail",
      requestType = com.zhijiejiaoyu.glory_api.short_video.StudentArticleCreationEvaluationDetailRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.StudentArticleCreationEvaluationDetailResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.StudentArticleCreationEvaluationDetailRequest,
      com.zhijiejiaoyu.glory_api.short_video.StudentArticleCreationEvaluationDetailResponse> getStudentArticleCreationEvaluationDetailMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.StudentArticleCreationEvaluationDetailRequest, com.zhijiejiaoyu.glory_api.short_video.StudentArticleCreationEvaluationDetailResponse> getStudentArticleCreationEvaluationDetailMethod;
    if ((getStudentArticleCreationEvaluationDetailMethod = glory_apiGrpc.getStudentArticleCreationEvaluationDetailMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getStudentArticleCreationEvaluationDetailMethod = glory_apiGrpc.getStudentArticleCreationEvaluationDetailMethod) == null) {
          glory_apiGrpc.getStudentArticleCreationEvaluationDetailMethod = getStudentArticleCreationEvaluationDetailMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.StudentArticleCreationEvaluationDetailRequest, com.zhijiejiaoyu.glory_api.short_video.StudentArticleCreationEvaluationDetailResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "StudentArticleCreationEvaluationDetail"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.StudentArticleCreationEvaluationDetailRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.StudentArticleCreationEvaluationDetailResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("StudentArticleCreationEvaluationDetail"))
              .build();
        }
      }
    }
    return getStudentArticleCreationEvaluationDetailMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.CorrectSentenceRequest,
      com.zhijiejiaoyu.glory_api.short_video.CorrectSentenceResponse> getCorrectSentenceMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CorrectSentence",
      requestType = com.zhijiejiaoyu.glory_api.short_video.CorrectSentenceRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.CorrectSentenceResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.CorrectSentenceRequest,
      com.zhijiejiaoyu.glory_api.short_video.CorrectSentenceResponse> getCorrectSentenceMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.CorrectSentenceRequest, com.zhijiejiaoyu.glory_api.short_video.CorrectSentenceResponse> getCorrectSentenceMethod;
    if ((getCorrectSentenceMethod = glory_apiGrpc.getCorrectSentenceMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCorrectSentenceMethod = glory_apiGrpc.getCorrectSentenceMethod) == null) {
          glory_apiGrpc.getCorrectSentenceMethod = getCorrectSentenceMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.CorrectSentenceRequest, com.zhijiejiaoyu.glory_api.short_video.CorrectSentenceResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CorrectSentence"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.CorrectSentenceRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.CorrectSentenceResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CorrectSentence"))
              .build();
        }
      }
    }
    return getCorrectSentenceMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GenArticleAIEvaluationRequest,
      com.zhijiejiaoyu.glory_api.short_video.GenArticleAIEvaluationResponse> getGenArticleAiEvaluationMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GenArticleAiEvaluation",
      requestType = com.zhijiejiaoyu.glory_api.short_video.GenArticleAIEvaluationRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.GenArticleAIEvaluationResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GenArticleAIEvaluationRequest,
      com.zhijiejiaoyu.glory_api.short_video.GenArticleAIEvaluationResponse> getGenArticleAiEvaluationMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GenArticleAIEvaluationRequest, com.zhijiejiaoyu.glory_api.short_video.GenArticleAIEvaluationResponse> getGenArticleAiEvaluationMethod;
    if ((getGenArticleAiEvaluationMethod = glory_apiGrpc.getGenArticleAiEvaluationMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGenArticleAiEvaluationMethod = glory_apiGrpc.getGenArticleAiEvaluationMethod) == null) {
          glory_apiGrpc.getGenArticleAiEvaluationMethod = getGenArticleAiEvaluationMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.GenArticleAIEvaluationRequest, com.zhijiejiaoyu.glory_api.short_video.GenArticleAIEvaluationResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GenArticleAiEvaluation"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.GenArticleAIEvaluationRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.GenArticleAIEvaluationResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GenArticleAiEvaluation"))
              .build();
        }
      }
    }
    return getGenArticleAiEvaluationMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetArticleAIEvaluationRequest,
      com.zhijiejiaoyu.glory_api.short_video.GetArticleAIEvaluationResponse> getGetArticleAiEvaluationMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetArticleAiEvaluation",
      requestType = com.zhijiejiaoyu.glory_api.short_video.GetArticleAIEvaluationRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.GetArticleAIEvaluationResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetArticleAIEvaluationRequest,
      com.zhijiejiaoyu.glory_api.short_video.GetArticleAIEvaluationResponse> getGetArticleAiEvaluationMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetArticleAIEvaluationRequest, com.zhijiejiaoyu.glory_api.short_video.GetArticleAIEvaluationResponse> getGetArticleAiEvaluationMethod;
    if ((getGetArticleAiEvaluationMethod = glory_apiGrpc.getGetArticleAiEvaluationMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetArticleAiEvaluationMethod = glory_apiGrpc.getGetArticleAiEvaluationMethod) == null) {
          glory_apiGrpc.getGetArticleAiEvaluationMethod = getGetArticleAiEvaluationMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.GetArticleAIEvaluationRequest, com.zhijiejiaoyu.glory_api.short_video.GetArticleAIEvaluationResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetArticleAiEvaluation"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.GetArticleAIEvaluationRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.GetArticleAIEvaluationResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetArticleAiEvaluation"))
              .build();
        }
      }
    }
    return getGetArticleAiEvaluationMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ArticleAIChatRequest,
      com.zhijiejiaoyu.glory_api.short_video.ArticleAIChatResponse> getArticleAiChatMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ArticleAiChat",
      requestType = com.zhijiejiaoyu.glory_api.short_video.ArticleAIChatRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.ArticleAIChatResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ArticleAIChatRequest,
      com.zhijiejiaoyu.glory_api.short_video.ArticleAIChatResponse> getArticleAiChatMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ArticleAIChatRequest, com.zhijiejiaoyu.glory_api.short_video.ArticleAIChatResponse> getArticleAiChatMethod;
    if ((getArticleAiChatMethod = glory_apiGrpc.getArticleAiChatMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getArticleAiChatMethod = glory_apiGrpc.getArticleAiChatMethod) == null) {
          glory_apiGrpc.getArticleAiChatMethod = getArticleAiChatMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.ArticleAIChatRequest, com.zhijiejiaoyu.glory_api.short_video.ArticleAIChatResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ArticleAiChat"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ArticleAIChatRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ArticleAIChatResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ArticleAiChat"))
              .build();
        }
      }
    }
    return getArticleAiChatMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetChatConfigRequest,
      com.zhijiejiaoyu.glory_api.short_video.GetChatConfigResponse> getGetChatConfigMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetChatConfig",
      requestType = com.zhijiejiaoyu.glory_api.short_video.GetChatConfigRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.GetChatConfigResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetChatConfigRequest,
      com.zhijiejiaoyu.glory_api.short_video.GetChatConfigResponse> getGetChatConfigMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetChatConfigRequest, com.zhijiejiaoyu.glory_api.short_video.GetChatConfigResponse> getGetChatConfigMethod;
    if ((getGetChatConfigMethod = glory_apiGrpc.getGetChatConfigMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetChatConfigMethod = glory_apiGrpc.getGetChatConfigMethod) == null) {
          glory_apiGrpc.getGetChatConfigMethod = getGetChatConfigMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.GetChatConfigRequest, com.zhijiejiaoyu.glory_api.short_video.GetChatConfigResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetChatConfig"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.GetChatConfigRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.GetChatConfigResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetChatConfig"))
              .build();
        }
      }
    }
    return getGetChatConfigMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.UpdateModelPriceRequest,
      com.zhijiejiaoyu.glory_api.short_video.UpdateModelPriceResponse> getUpdateModelPriceMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateModelPrice",
      requestType = com.zhijiejiaoyu.glory_api.short_video.UpdateModelPriceRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.UpdateModelPriceResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.UpdateModelPriceRequest,
      com.zhijiejiaoyu.glory_api.short_video.UpdateModelPriceResponse> getUpdateModelPriceMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.UpdateModelPriceRequest, com.zhijiejiaoyu.glory_api.short_video.UpdateModelPriceResponse> getUpdateModelPriceMethod;
    if ((getUpdateModelPriceMethod = glory_apiGrpc.getUpdateModelPriceMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateModelPriceMethod = glory_apiGrpc.getUpdateModelPriceMethod) == null) {
          glory_apiGrpc.getUpdateModelPriceMethod = getUpdateModelPriceMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.UpdateModelPriceRequest, com.zhijiejiaoyu.glory_api.short_video.UpdateModelPriceResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateModelPrice"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.UpdateModelPriceRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.UpdateModelPriceResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateModelPrice"))
              .build();
        }
      }
    }
    return getUpdateModelPriceMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.UpdateTenantCourseDataRequest,
      com.zhijiejiaoyu.glory_api.short_video.UpdateTenantCourseDataResponse> getUpdateArticleCreationTenantCourseMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "UpdateArticleCreationTenantCourse",
      requestType = com.zhijiejiaoyu.glory_api.short_video.UpdateTenantCourseDataRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.UpdateTenantCourseDataResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.UpdateTenantCourseDataRequest,
      com.zhijiejiaoyu.glory_api.short_video.UpdateTenantCourseDataResponse> getUpdateArticleCreationTenantCourseMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.UpdateTenantCourseDataRequest, com.zhijiejiaoyu.glory_api.short_video.UpdateTenantCourseDataResponse> getUpdateArticleCreationTenantCourseMethod;
    if ((getUpdateArticleCreationTenantCourseMethod = glory_apiGrpc.getUpdateArticleCreationTenantCourseMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getUpdateArticleCreationTenantCourseMethod = glory_apiGrpc.getUpdateArticleCreationTenantCourseMethod) == null) {
          glory_apiGrpc.getUpdateArticleCreationTenantCourseMethod = getUpdateArticleCreationTenantCourseMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.UpdateTenantCourseDataRequest, com.zhijiejiaoyu.glory_api.short_video.UpdateTenantCourseDataResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "UpdateArticleCreationTenantCourse"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.UpdateTenantCourseDataRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.UpdateTenantCourseDataResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("UpdateArticleCreationTenantCourse"))
              .build();
        }
      }
    }
    return getUpdateArticleCreationTenantCourseMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantRequest,
      com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantResponse> getGetArticleCreationTenantMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetArticleCreationTenant",
      requestType = com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantRequest,
      com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantResponse> getGetArticleCreationTenantMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantRequest, com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantResponse> getGetArticleCreationTenantMethod;
    if ((getGetArticleCreationTenantMethod = glory_apiGrpc.getGetArticleCreationTenantMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetArticleCreationTenantMethod = glory_apiGrpc.getGetArticleCreationTenantMethod) == null) {
          glory_apiGrpc.getGetArticleCreationTenantMethod = getGetArticleCreationTenantMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantRequest, com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetArticleCreationTenant"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetArticleCreationTenant"))
              .build();
        }
      }
    }
    return getGetArticleCreationTenantMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantResponse> getListArticleCreationTenantMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListArticleCreationTenant",
      requestType = com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantResponse> getListArticleCreationTenantMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantRequest, com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantResponse> getListArticleCreationTenantMethod;
    if ((getListArticleCreationTenantMethod = glory_apiGrpc.getListArticleCreationTenantMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListArticleCreationTenantMethod = glory_apiGrpc.getListArticleCreationTenantMethod) == null) {
          glory_apiGrpc.getListArticleCreationTenantMethod = getListArticleCreationTenantMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantRequest, com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListArticleCreationTenant"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListArticleCreationTenant"))
              .build();
        }
      }
    }
    return getListArticleCreationTenantMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantCostRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantCostResponse> getListArticleCreationTenantCostMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListArticleCreationTenantCost",
      requestType = com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantCostRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantCostResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantCostRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantCostResponse> getListArticleCreationTenantCostMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantCostRequest, com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantCostResponse> getListArticleCreationTenantCostMethod;
    if ((getListArticleCreationTenantCostMethod = glory_apiGrpc.getListArticleCreationTenantCostMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListArticleCreationTenantCostMethod = glory_apiGrpc.getListArticleCreationTenantCostMethod) == null) {
          glory_apiGrpc.getListArticleCreationTenantCostMethod = getListArticleCreationTenantCostMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantCostRequest, com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantCostResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListArticleCreationTenantCost"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantCostRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantCostResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListArticleCreationTenantCost"))
              .build();
        }
      }
    }
    return getListArticleCreationTenantCostMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantCostRequest,
      com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantCostResponse> getGetArticleCreationTenantCostMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetArticleCreationTenantCost",
      requestType = com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantCostRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantCostResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantCostRequest,
      com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantCostResponse> getGetArticleCreationTenantCostMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantCostRequest, com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantCostResponse> getGetArticleCreationTenantCostMethod;
    if ((getGetArticleCreationTenantCostMethod = glory_apiGrpc.getGetArticleCreationTenantCostMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetArticleCreationTenantCostMethod = glory_apiGrpc.getGetArticleCreationTenantCostMethod) == null) {
          glory_apiGrpc.getGetArticleCreationTenantCostMethod = getGetArticleCreationTenantCostMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantCostRequest, com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantCostResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetArticleCreationTenantCost"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantCostRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantCostResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetArticleCreationTenantCost"))
              .build();
        }
      }
    }
    return getGetArticleCreationTenantCostMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetSubTopicAiResultRequest,
      com.zhijiejiaoyu.glory_api.short_video.GetSubTopicAiResultResponse> getGetSubTopicAiResultMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetSubTopicAiResult",
      requestType = com.zhijiejiaoyu.glory_api.short_video.GetSubTopicAiResultRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.GetSubTopicAiResultResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetSubTopicAiResultRequest,
      com.zhijiejiaoyu.glory_api.short_video.GetSubTopicAiResultResponse> getGetSubTopicAiResultMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetSubTopicAiResultRequest, com.zhijiejiaoyu.glory_api.short_video.GetSubTopicAiResultResponse> getGetSubTopicAiResultMethod;
    if ((getGetSubTopicAiResultMethod = glory_apiGrpc.getGetSubTopicAiResultMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetSubTopicAiResultMethod = glory_apiGrpc.getGetSubTopicAiResultMethod) == null) {
          glory_apiGrpc.getGetSubTopicAiResultMethod = getGetSubTopicAiResultMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.GetSubTopicAiResultRequest, com.zhijiejiaoyu.glory_api.short_video.GetSubTopicAiResultResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetSubTopicAiResult"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.GetSubTopicAiResultRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.GetSubTopicAiResultResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetSubTopicAiResult"))
              .build();
        }
      }
    }
    return getGetSubTopicAiResultMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.CreateDigitalVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.CreateDigitalVideoResponse> getCreateDigitalVideoMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "CreateDigitalVideo",
      requestType = com.zhijiejiaoyu.glory_api.short_video.CreateDigitalVideoRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.CreateDigitalVideoResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.CreateDigitalVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.CreateDigitalVideoResponse> getCreateDigitalVideoMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.CreateDigitalVideoRequest, com.zhijiejiaoyu.glory_api.short_video.CreateDigitalVideoResponse> getCreateDigitalVideoMethod;
    if ((getCreateDigitalVideoMethod = glory_apiGrpc.getCreateDigitalVideoMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getCreateDigitalVideoMethod = glory_apiGrpc.getCreateDigitalVideoMethod) == null) {
          glory_apiGrpc.getCreateDigitalVideoMethod = getCreateDigitalVideoMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.CreateDigitalVideoRequest, com.zhijiejiaoyu.glory_api.short_video.CreateDigitalVideoResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "CreateDigitalVideo"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.CreateDigitalVideoRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.CreateDigitalVideoResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("CreateDigitalVideo"))
              .build();
        }
      }
    }
    return getCreateDigitalVideoMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListDigitalVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListDigitalVideoResponse> getListDigitalVideoMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListDigitalVideo",
      requestType = com.zhijiejiaoyu.glory_api.short_video.ListDigitalVideoRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.ListDigitalVideoResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListDigitalVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListDigitalVideoResponse> getListDigitalVideoMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListDigitalVideoRequest, com.zhijiejiaoyu.glory_api.short_video.ListDigitalVideoResponse> getListDigitalVideoMethod;
    if ((getListDigitalVideoMethod = glory_apiGrpc.getListDigitalVideoMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListDigitalVideoMethod = glory_apiGrpc.getListDigitalVideoMethod) == null) {
          glory_apiGrpc.getListDigitalVideoMethod = getListDigitalVideoMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.ListDigitalVideoRequest, com.zhijiejiaoyu.glory_api.short_video.ListDigitalVideoResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListDigitalVideo"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListDigitalVideoRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListDigitalVideoResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListDigitalVideo"))
              .build();
        }
      }
    }
    return getListDigitalVideoMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetDigitalVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.GetDigitalVideoResponse> getGetDigitalVideoMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "GetDigitalVideo",
      requestType = com.zhijiejiaoyu.glory_api.short_video.GetDigitalVideoRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.GetDigitalVideoResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetDigitalVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.GetDigitalVideoResponse> getGetDigitalVideoMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.GetDigitalVideoRequest, com.zhijiejiaoyu.glory_api.short_video.GetDigitalVideoResponse> getGetDigitalVideoMethod;
    if ((getGetDigitalVideoMethod = glory_apiGrpc.getGetDigitalVideoMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getGetDigitalVideoMethod = glory_apiGrpc.getGetDigitalVideoMethod) == null) {
          glory_apiGrpc.getGetDigitalVideoMethod = getGetDigitalVideoMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.GetDigitalVideoRequest, com.zhijiejiaoyu.glory_api.short_video.GetDigitalVideoResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "GetDigitalVideo"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.GetDigitalVideoRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.GetDigitalVideoResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("GetDigitalVideo"))
              .build();
        }
      }
    }
    return getGetDigitalVideoMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListDigitalCodeRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListDigitalCodeResponse> getListDigitalCodeMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListDigitalCode",
      requestType = com.zhijiejiaoyu.glory_api.short_video.ListDigitalCodeRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.ListDigitalCodeResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListDigitalCodeRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListDigitalCodeResponse> getListDigitalCodeMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListDigitalCodeRequest, com.zhijiejiaoyu.glory_api.short_video.ListDigitalCodeResponse> getListDigitalCodeMethod;
    if ((getListDigitalCodeMethod = glory_apiGrpc.getListDigitalCodeMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListDigitalCodeMethod = glory_apiGrpc.getListDigitalCodeMethod) == null) {
          glory_apiGrpc.getListDigitalCodeMethod = getListDigitalCodeMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.ListDigitalCodeRequest, com.zhijiejiaoyu.glory_api.short_video.ListDigitalCodeResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListDigitalCode"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListDigitalCodeRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListDigitalCodeResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListDigitalCode"))
              .build();
        }
      }
    }
    return getListDigitalCodeMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.DeleteDigitalVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.DeleteDigitalVideoResponse> getDeleteDigitalVideoMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "DeleteDigitalVideo",
      requestType = com.zhijiejiaoyu.glory_api.short_video.DeleteDigitalVideoRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.DeleteDigitalVideoResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.DeleteDigitalVideoRequest,
      com.zhijiejiaoyu.glory_api.short_video.DeleteDigitalVideoResponse> getDeleteDigitalVideoMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.DeleteDigitalVideoRequest, com.zhijiejiaoyu.glory_api.short_video.DeleteDigitalVideoResponse> getDeleteDigitalVideoMethod;
    if ((getDeleteDigitalVideoMethod = glory_apiGrpc.getDeleteDigitalVideoMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getDeleteDigitalVideoMethod = glory_apiGrpc.getDeleteDigitalVideoMethod) == null) {
          glory_apiGrpc.getDeleteDigitalVideoMethod = getDeleteDigitalVideoMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.DeleteDigitalVideoRequest, com.zhijiejiaoyu.glory_api.short_video.DeleteDigitalVideoResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "DeleteDigitalVideo"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.DeleteDigitalVideoRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.DeleteDigitalVideoResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("DeleteDigitalVideo"))
              .build();
        }
      }
    }
    return getDeleteDigitalVideoMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListDigitalAvatarRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListDigitalAvatarResponse> getListDigitalAvatarMethod;

  @io.grpc.stub.annotations.RpcMethod(
      fullMethodName = SERVICE_NAME + '/' + "ListDigitalAvatar",
      requestType = com.zhijiejiaoyu.glory_api.short_video.ListDigitalAvatarRequest.class,
      responseType = com.zhijiejiaoyu.glory_api.short_video.ListDigitalAvatarResponse.class,
      methodType = io.grpc.MethodDescriptor.MethodType.UNARY)
  public static io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListDigitalAvatarRequest,
      com.zhijiejiaoyu.glory_api.short_video.ListDigitalAvatarResponse> getListDigitalAvatarMethod() {
    io.grpc.MethodDescriptor<com.zhijiejiaoyu.glory_api.short_video.ListDigitalAvatarRequest, com.zhijiejiaoyu.glory_api.short_video.ListDigitalAvatarResponse> getListDigitalAvatarMethod;
    if ((getListDigitalAvatarMethod = glory_apiGrpc.getListDigitalAvatarMethod) == null) {
      synchronized (glory_apiGrpc.class) {
        if ((getListDigitalAvatarMethod = glory_apiGrpc.getListDigitalAvatarMethod) == null) {
          glory_apiGrpc.getListDigitalAvatarMethod = getListDigitalAvatarMethod =
              io.grpc.MethodDescriptor.<com.zhijiejiaoyu.glory_api.short_video.ListDigitalAvatarRequest, com.zhijiejiaoyu.glory_api.short_video.ListDigitalAvatarResponse>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(SERVICE_NAME, "ListDigitalAvatar"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListDigitalAvatarRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.zhijiejiaoyu.glory_api.short_video.ListDigitalAvatarResponse.getDefaultInstance()))
              .setSchemaDescriptor(new glory_apiMethodDescriptorSupplier("ListDigitalAvatar"))
              .build();
        }
      }
    }
    return getListDigitalAvatarMethod;
  }

  /**
   * Creates a new async stub that supports all call types for the service
   */
  public static glory_apiStub newStub(io.grpc.Channel channel) {
    io.grpc.stub.AbstractStub.StubFactory<glory_apiStub> factory =
      new io.grpc.stub.AbstractStub.StubFactory<glory_apiStub>() {
        @java.lang.Override
        public glory_apiStub newStub(io.grpc.Channel channel, io.grpc.CallOptions callOptions) {
          return new glory_apiStub(channel, callOptions);
        }
      };
    return glory_apiStub.newStub(factory, channel);
  }

  /**
   * Creates a new blocking-style stub that supports unary and streaming output calls on the service
   */
  public static glory_apiBlockingStub newBlockingStub(
      io.grpc.Channel channel) {
    io.grpc.stub.AbstractStub.StubFactory<glory_apiBlockingStub> factory =
      new io.grpc.stub.AbstractStub.StubFactory<glory_apiBlockingStub>() {
        @java.lang.Override
        public glory_apiBlockingStub newStub(io.grpc.Channel channel, io.grpc.CallOptions callOptions) {
          return new glory_apiBlockingStub(channel, callOptions);
        }
      };
    return glory_apiBlockingStub.newStub(factory, channel);
  }

  /**
   * Creates a new ListenableFuture-style stub that supports unary calls on the service
   */
  public static glory_apiFutureStub newFutureStub(
      io.grpc.Channel channel) {
    io.grpc.stub.AbstractStub.StubFactory<glory_apiFutureStub> factory =
      new io.grpc.stub.AbstractStub.StubFactory<glory_apiFutureStub>() {
        @java.lang.Override
        public glory_apiFutureStub newStub(io.grpc.Channel channel, io.grpc.CallOptions callOptions) {
          return new glory_apiFutureStub(channel, callOptions);
        }
      };
    return glory_apiFutureStub.newStub(factory, channel);
  }

  /**
   */
  public interface AsyncService {

    /**
     * <pre>
     * endpoint /api/example/create_example, create example
     * </pre>
     */
    default void createExample(com.zhijiejiaoyu.glory_api.example.CreateExampleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.example.CreateExampleResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateExampleMethod(), responseObserver);
    }

    /**
     * <pre>
     * endpoint /api/example/get_example, get_example
     * </pre>
     */
    default void getExample(com.zhijiejiaoyu.glory_api.example.GetExampleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.example.GetExampleResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetExampleMethod(), responseObserver);
    }

    /**
     * <pre>
     * endpoint /api/example/update_example, update_example
     * </pre>
     */
    default void updateExample(com.zhijiejiaoyu.glory_api.example.UpdateExampleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.example.UpdateExampleResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateExampleMethod(), responseObserver);
    }

    /**
     * <pre>
     * endpoint /api/example/list_example, list example
     * </pre>
     */
    default void listExample(com.zhijiejiaoyu.glory_api.example.ListExampleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.example.ListExampleResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListExampleMethod(), responseObserver);
    }

    /**
     * <pre>
     * endpoint /api/example/delete_example, delete example
     * </pre>
     */
    default void deleteExample(com.zhijiejiaoyu.glory_api.example.DeleteExampleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.example.DeleteExampleResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteExampleMethod(), responseObserver);
    }

    /**
     * <pre>
     *user
     * </pre>
     */
    default void login(com.zhijiejiaoyu.glory_api.user.LoginRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.LoginResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getLoginMethod(), responseObserver);
    }

    /**
     */
    default void logout(com.zhijiejiaoyu.glory_api.user.LogoutRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.LogoutResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getLogoutMethod(), responseObserver);
    }

    /**
     */
    default void deleteUser(com.zhijiejiaoyu.glory_api.user.DeleteUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.DeleteUserResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteUserMethod(), responseObserver);
    }

    /**
     */
    default void listOwnAccess(com.zhijiejiaoyu.glory_api.user.ListOwnAccessRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListOwnAccessResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListOwnAccessMethod(), responseObserver);
    }

    /**
     */
    default void getVerifyCode(com.zhijiejiaoyu.glory_api.user.GetVerifyCodeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GetVerifyCodeResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetVerifyCodeMethod(), responseObserver);
    }

    /**
     */
    default void checkVerifyCode(com.zhijiejiaoyu.glory_api.user.CheckVerifyCodeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.CheckVerifyCodeResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCheckVerifyCodeMethod(), responseObserver);
    }

    /**
     */
    default void getUser(com.zhijiejiaoyu.glory_api.user.GetUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GetUserResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetUserMethod(), responseObserver);
    }

    /**
     */
    default void getUserByPhone(com.zhijiejiaoyu.glory_api.user.GetUserByPhoneRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GetUserByPhoneResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetUserByPhoneMethod(), responseObserver);
    }

    /**
     */
    default void loginWithPassword(com.zhijiejiaoyu.glory_api.user.LoginWithPasswordRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.LoginWithPasswordResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getLoginWithPasswordMethod(), responseObserver);
    }

    /**
     */
    default void updatePassword(com.zhijiejiaoyu.glory_api.user.UpdatePasswordRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.UpdatePasswordResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdatePasswordMethod(), responseObserver);
    }

    /**
     */
    default void updateUser(com.zhijiejiaoyu.glory_api.user.UpdateUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.UpdateUserResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateUserMethod(), responseObserver);
    }

    /**
     */
    default void updatePhone(com.zhijiejiaoyu.glory_api.user.UpdatePhoneRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.UpdatePhoneResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdatePhoneMethod(), responseObserver);
    }

    /**
     * <pre>
     * 获取用户的所有专业[select]
     * </pre>
     */
    default void getUserMajor(com.zhijiejiaoyu.glory_api.user.GetUserMajorRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GetUserMajorResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetUserMajorMethod(), responseObserver);
    }

    /**
     */
    default void updateUserTenant(com.zhijiejiaoyu.glory_api.user.UpdateUserTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.UpdateUserTenantResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateUserTenantMethod(), responseObserver);
    }

    /**
     * <pre>
     * 用户列表[用户名+头像]
     * </pre>
     */
    default void listUser(com.zhijiejiaoyu.glory_api.user.ListUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListUserResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListUserMethod(), responseObserver);
    }

    /**
     * <pre>
     * 绑定微信接口
     * </pre>
     */
    default void userBindWechat(com.zhijiejiaoyu.glory_api.user.UserBindWechatRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.UserBindWechatResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUserBindWechatMethod(), responseObserver);
    }

    /**
     * <pre>
     * 微信解绑接口
     * </pre>
     */
    default void userUnbindWechat(com.zhijiejiaoyu.glory_api.user.UserUnbindWechatRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.UserUnbindWechatResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUserUnbindWechatMethod(), responseObserver);
    }

    /**
     * <pre>
     * 关注用户
     * </pre>
     */
    default void followUser(com.zhijiejiaoyu.glory_api.user.FollowUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.FollowUserResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getFollowUserMethod(), responseObserver);
    }

    /**
     * <pre>
     * 我的关注列表
     * </pre>
     */
    default void listMyFollowing(com.zhijiejiaoyu.glory_api.user.ListMyFollowingRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListMyFollowingResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListMyFollowingMethod(), responseObserver);
    }

    /**
     * <pre>
     * 我的粉丝列表
     * </pre>
     */
    default void listMyFollower(com.zhijiejiaoyu.glory_api.user.ListMyFollowerRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListMyFollowerResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListMyFollowerMethod(), responseObserver);
    }

    /**
     * <pre>
     * 我的朋友列表
     * </pre>
     */
    default void listMyFriend(com.zhijiejiaoyu.glory_api.user.ListMyFriendRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListMyFriendResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListMyFriendMethod(), responseObserver);
    }

    /**
     * <pre>
     * 我的社交信息
     * </pre>
     */
    default void getMySocialSummary(com.zhijiejiaoyu.glory_api.user.GetMySocialSummaryRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GetMySocialSummaryResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetMySocialSummaryMethod(), responseObserver);
    }

    /**
     * <pre>
     * page permission
     * </pre>
     */
    default void getUserPagePermission(com.zhijiejiaoyu.glory_api.user.GetUserPagePermissionRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GetUserPagePermissionResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetUserPagePermissionMethod(), responseObserver);
    }

    /**
     */
    default void createRolePagePermission(com.zhijiejiaoyu.glory_api.user.CreateRolePagePermissionRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.CreateRolePagePermissionResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateRolePagePermissionMethod(), responseObserver);
    }

    /**
     */
    default void updateRolePagePermission(com.zhijiejiaoyu.glory_api.user.UpdateRolePagePermissionRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.UpdateRolePagePermissionResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateRolePagePermissionMethod(), responseObserver);
    }

    /**
     */
    default void getRolePagePermission(com.zhijiejiaoyu.glory_api.user.GetRolePagePermissionRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GetRolePagePermissionResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetRolePagePermissionMethod(), responseObserver);
    }

    /**
     * <pre>
     * address
     * </pre>
     */
    default void addAddress(com.zhijiejiaoyu.glory_api.user.AddAddressRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.AddAddressResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getAddAddressMethod(), responseObserver);
    }

    /**
     */
    default void deleteAddress(com.zhijiejiaoyu.glory_api.user.DeleteAddressRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.DeleteAddressResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteAddressMethod(), responseObserver);
    }

    /**
     */
    default void updateAddress(com.zhijiejiaoyu.glory_api.user.UpdateAddressRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.UpdateAddressResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateAddressMethod(), responseObserver);
    }

    /**
     */
    default void getAddress(com.zhijiejiaoyu.glory_api.user.GetAddressRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GetAddressResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetAddressMethod(), responseObserver);
    }

    /**
     */
    default void listAddress(com.zhijiejiaoyu.glory_api.user.ListAddressRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListAddressResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListAddressMethod(), responseObserver);
    }

    /**
     */
    default void listUserByRole(com.zhijiejiaoyu.glory_api.user.ListUserByRoleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListUserByRoleResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListUserByRoleMethod(), responseObserver);
    }

    /**
     * <pre>
     * user permission
     *list the permissions that supported
     * </pre>
     */
    default void listPermission(com.zhijiejiaoyu.glory_api.user.ListPermissionRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListPermissionResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListPermissionMethod(), responseObserver);
    }

    /**
     */
    default void listRole(com.zhijiejiaoyu.glory_api.user.ListRoleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListRoleResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListRoleMethod(), responseObserver);
    }

    /**
     */
    default void giveRolePermission(com.zhijiejiaoyu.glory_api.user.GiveRolePermissionRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GiveRolePermissionResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGiveRolePermissionMethod(), responseObserver);
    }

    /**
     */
    default void removeRolePermission(com.zhijiejiaoyu.glory_api.user.RemoveRolePermissionRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.RemoveRolePermissionResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getRemoveRolePermissionMethod(), responseObserver);
    }

    /**
     */
    default void createRole(com.zhijiejiaoyu.glory_api.user.CreateRoleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.CreateRoleResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateRoleMethod(), responseObserver);
    }

    /**
     */
    default void deleteRole(com.zhijiejiaoyu.glory_api.user.DeleteRoleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.DeleteRoleResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteRoleMethod(), responseObserver);
    }

    /**
     */
    default void listResource(com.zhijiejiaoyu.glory_api.user.ListResourceRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListResourceResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListResourceMethod(), responseObserver);
    }

    /**
     */
    default void getRoleType(com.zhijiejiaoyu.glory_api.user.GetRoleTypeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GetRoleTypeResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetRoleTypeMethod(), responseObserver);
    }

    /**
     */
    default void getRoleTemplate(com.zhijiejiaoyu.glory_api.role.GetRoleTemplateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.role.GetRoleTemplateResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetRoleTemplateMethod(), responseObserver);
    }

    /**
     */
    default void updateRoleTemplate(com.zhijiejiaoyu.glory_api.role.UpdateRoleTemplateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.role.UpdateRoleTemplateResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateRoleTemplateMethod(), responseObserver);
    }

    /**
     * <pre>
     * shop
     * </pre>
     */
    default void createShop(com.zhijiejiaoyu.glory_api.shop.CreateShopRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CreateShopResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateShopMethod(), responseObserver);
    }

    /**
     */
    default void getShop(com.zhijiejiaoyu.glory_api.shop.GetShopRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetShopResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetShopMethod(), responseObserver);
    }

    /**
     */
    default void updateShop(com.zhijiejiaoyu.glory_api.shop.UpdateShopRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateShopResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateShopMethod(), responseObserver);
    }

    /**
     */
    default void listShop(com.zhijiejiaoyu.glory_api.shop.ListShopRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListShopResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListShopMethod(), responseObserver);
    }

    /**
     */
    default void deleteShop(com.zhijiejiaoyu.glory_api.shop.DeleteShopRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteShopResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteShopMethod(), responseObserver);
    }

    /**
     */
    default void listOperationMetrics(com.zhijiejiaoyu.glory_api.shop.ListOperationMetricsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListOperationMetricsResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListOperationMetricsMethod(), responseObserver);
    }

    /**
     */
    default void getShopQrcode(com.zhijiejiaoyu.glory_api.shop.GetShopQrcodeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetShopQrcodeResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetShopQrcodeMethod(), responseObserver);
    }

    /**
     */
    default void updateShopManager(com.zhijiejiaoyu.glory_api.shop.UpdateShopManagerRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateShopManagerResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateShopManagerMethod(), responseObserver);
    }

    /**
     */
    default void getShopBusinessData(com.zhijiejiaoyu.glory_api.shop.GetShopBusinessDataRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetShopBusinessDataResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetShopBusinessDataMethod(), responseObserver);
    }

    /**
     */
    default void addShopAccess(com.zhijiejiaoyu.glory_api.shop.AddShopAccessRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.AddShopAccessResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getAddShopAccessMethod(), responseObserver);
    }

    /**
     */
    default void removeShopAccess(com.zhijiejiaoyu.glory_api.shop.RemoveShopAccessRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.RemoveShopAccessResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getRemoveShopAccessMethod(), responseObserver);
    }

    /**
     */
    default void verifyField(com.zhijiejiaoyu.glory_api.shop.VerifyFieldRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.VerifyFieldResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getVerifyFieldMethod(), responseObserver);
    }

    /**
     */
    default void listShopAccess(com.zhijiejiaoyu.glory_api.shop.ListShopAccessRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListShopAccessResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListShopAccessMethod(), responseObserver);
    }

    /**
     */
    default void addShopCategory(com.zhijiejiaoyu.glory_api.shop.AddShopCategoryRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.AddShopCategoryResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getAddShopCategoryMethod(), responseObserver);
    }

    /**
     */
    default void getShopCategory(com.zhijiejiaoyu.glory_api.shop.GetShopCategoryRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetShopCategoryResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetShopCategoryMethod(), responseObserver);
    }

    /**
     */
    default void removeShopCategory(com.zhijiejiaoyu.glory_api.shop.RemoveShopCategoryRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.RemoveShopCategoryResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getRemoveShopCategoryMethod(), responseObserver);
    }

    /**
     */
    default void addFreightTemplate(com.zhijiejiaoyu.glory_api.shop.CreateTemplateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CreateTemplateResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getAddFreightTemplateMethod(), responseObserver);
    }

    /**
     */
    default void getFreightTemplate(com.zhijiejiaoyu.glory_api.shop.GetTemplateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetTemplateResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetFreightTemplateMethod(), responseObserver);
    }

    /**
     */
    default void updateFreightTemplate(com.zhijiejiaoyu.glory_api.shop.UpdateTemplateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateTemplateResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateFreightTemplateMethod(), responseObserver);
    }

    /**
     */
    default void deleteFreightTemplate(com.zhijiejiaoyu.glory_api.shop.DeleteTemplateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteTemplateResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteFreightTemplateMethod(), responseObserver);
    }

    /**
     */
    default void listFreightTemplate(com.zhijiejiaoyu.glory_api.shop.ListTemplateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListTemplateResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListFreightTemplateMethod(), responseObserver);
    }

    /**
     */
    default void listQualification(com.zhijiejiaoyu.glory_api.shop.ListShopQualificationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListShopQualificationResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListQualificationMethod(), responseObserver);
    }

    /**
     * <pre>
     *mall
     * </pre>
     */
    default void getMallIndex(com.zhijiejiaoyu.glory_api.mall.MallIndexRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.mall.MallIndexResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetMallIndexMethod(), responseObserver);
    }

    /**
     * <pre>
     * product category
     * </pre>
     */
    default void createCategory(com.zhijiejiaoyu.glory_api.shop.CreateCategoryRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CreateCategoryResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateCategoryMethod(), responseObserver);
    }

    /**
     */
    default void getCategory(com.zhijiejiaoyu.glory_api.shop.GetCategoryRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetCategoryResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetCategoryMethod(), responseObserver);
    }

    /**
     */
    default void updateCategory(com.zhijiejiaoyu.glory_api.shop.UpdateCategoryRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateCategoryResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateCategoryMethod(), responseObserver);
    }

    /**
     */
    default void listCategory(com.zhijiejiaoyu.glory_api.shop.ListCategoryRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListCategoryResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListCategoryMethod(), responseObserver);
    }

    /**
     */
    default void deleteCategory(com.zhijiejiaoyu.glory_api.shop.DeleteCategoryRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteCategoryResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteCategoryMethod(), responseObserver);
    }

    /**
     * <pre>
     *category qualification
     * </pre>
     */
    default void listCategoryQualification(com.zhijiejiaoyu.glory_api.shop.ListCategoryQualificationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListCategoryQualificationResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListCategoryQualificationMethod(), responseObserver);
    }

    /**
     * <pre>
     * product product
     * </pre>
     */
    default void createProduct(com.zhijiejiaoyu.glory_api.shop.CreateProductRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CreateProductResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateProductMethod(), responseObserver);
    }

    /**
     */
    default void getProduct(com.zhijiejiaoyu.glory_api.shop.GetProductRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetProductResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetProductMethod(), responseObserver);
    }

    /**
     */
    default void updateProduct(com.zhijiejiaoyu.glory_api.shop.UpdateProductRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateProductResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateProductMethod(), responseObserver);
    }

    /**
     */
    default void listProduct(com.zhijiejiaoyu.glory_api.shop.ListProductRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListProductResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListProductMethod(), responseObserver);
    }

    /**
     */
    default void listProductByIDs(com.zhijiejiaoyu.glory_api.shop.ListProductByProductIDsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListProductByProductIDsResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListProductByIDsMethod(), responseObserver);
    }

    /**
     */
    default void deleteProduct(com.zhijiejiaoyu.glory_api.shop.DeleteProductRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteProductResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteProductMethod(), responseObserver);
    }

    /**
     */
    default void uploadMultiImage(com.zhijiejiaoyu.glory_api.shop.UploadMultiImageRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UploadMultiImageResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUploadMultiImageMethod(), responseObserver);
    }

    /**
     */
    default void deleteImageById(com.zhijiejiaoyu.glory_api.shop.DeleteImageRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteImageResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteImageByIdMethod(), responseObserver);
    }

    /**
     */
    default void bindAttribute(com.zhijiejiaoyu.glory_api.shop.BindAttributeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.BindAttributeResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getBindAttributeMethod(), responseObserver);
    }

    /**
     */
    default void publishProduct(com.zhijiejiaoyu.glory_api.shop.PublishProductRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.PublishProductResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getPublishProductMethod(), responseObserver);
    }

    /**
     */
    default void offShelfProductInBatches(com.zhijiejiaoyu.glory_api.shop.OffSelfProductsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.OffSelfProductsResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getOffShelfProductInBatchesMethod(), responseObserver);
    }

    /**
     */
    default void deleteProductInBatches(com.zhijiejiaoyu.glory_api.shop.DeleteProductsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteProductsResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteProductInBatchesMethod(), responseObserver);
    }

    /**
     */
    default void changeProductsState(com.zhijiejiaoyu.glory_api.shop.ChangeProductStateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ChangeProductStateResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getChangeProductsStateMethod(), responseObserver);
    }

    /**
     */
    default void saveProductImageInfo(com.zhijiejiaoyu.glory_api.shop.SaveImageInfoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.SaveImageInfoResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getSaveProductImageInfoMethod(), responseObserver);
    }

    /**
     * <pre>
     * sku sku
     * </pre>
     */
    default void createSku(com.zhijiejiaoyu.glory_api.shop.CreateSkuRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CreateSkuResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateSkuMethod(), responseObserver);
    }

    /**
     */
    default void getSku(com.zhijiejiaoyu.glory_api.shop.GetSkuRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetSkuResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetSkuMethod(), responseObserver);
    }

    /**
     */
    default void updateSku(com.zhijiejiaoyu.glory_api.shop.UpdateSkuRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateSkuResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateSkuMethod(), responseObserver);
    }

    /**
     */
    default void listSku(com.zhijiejiaoyu.glory_api.shop.ListSkuRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListSkuResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListSkuMethod(), responseObserver);
    }

    /**
     */
    default void deleteSku(com.zhijiejiaoyu.glory_api.shop.DeleteSkuRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteSkuResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteSkuMethod(), responseObserver);
    }

    /**
     * <pre>
     * attribute
     * </pre>
     */
    default void createAttribute(com.zhijiejiaoyu.glory_api.shop.CreateAttributeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CreateAttributeResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateAttributeMethod(), responseObserver);
    }

    /**
     */
    default void getAttribute(com.zhijiejiaoyu.glory_api.shop.GetAttributeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetAttributeResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetAttributeMethod(), responseObserver);
    }

    /**
     */
    default void listAttribute(com.zhijiejiaoyu.glory_api.shop.ListAttributeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListAttributeResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListAttributeMethod(), responseObserver);
    }

    /**
     */
    default void deleteAttribute(com.zhijiejiaoyu.glory_api.shop.DeleteAttributeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteAttributeResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteAttributeMethod(), responseObserver);
    }

    /**
     */
    default void addAttributeValue(com.zhijiejiaoyu.glory_api.shop.AddAttributeValueRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.AddAttributeValueResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getAddAttributeValueMethod(), responseObserver);
    }

    /**
     */
    default void deleteAttributeValue(com.zhijiejiaoyu.glory_api.shop.DeleteAttributeValueRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteAttributeValueResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteAttributeValueMethod(), responseObserver);
    }

    /**
     * <pre>
     * order
     * </pre>
     */
    default void createOrder(com.zhijiejiaoyu.glory_api.shop.CreateOrderRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CreateOrderResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateOrderMethod(), responseObserver);
    }

    /**
     */
    default void getOrder(com.zhijiejiaoyu.glory_api.shop.GetOrderRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetOrderResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetOrderMethod(), responseObserver);
    }

    /**
     */
    default void updateOrder(com.zhijiejiaoyu.glory_api.shop.UpdateOrderRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateOrderResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateOrderMethod(), responseObserver);
    }

    /**
     */
    default void listOrder(com.zhijiejiaoyu.glory_api.shop.ListOrderRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListOrderResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListOrderMethod(), responseObserver);
    }

    /**
     */
    default void deleteOrder(com.zhijiejiaoyu.glory_api.shop.DeleteOrderRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteOrderResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteOrderMethod(), responseObserver);
    }

    /**
     */
    default void shipGoods(com.zhijiejiaoyu.glory_api.shop.ShipGoodsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ShipGoodsResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getShipGoodsMethod(), responseObserver);
    }

    /**
     */
    default void confirmReceiptGoods(com.zhijiejiaoyu.glory_api.shop.ConfirmReceiptGoodsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ConfirmReceiptGoodsResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getConfirmReceiptGoodsMethod(), responseObserver);
    }

    /**
     */
    default void getOrderStatus(com.zhijiejiaoyu.glory_api.shop.GetOrderStatusRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetOrderStatusResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetOrderStatusMethod(), responseObserver);
    }

    /**
     */
    default void cancelOrder(com.zhijiejiaoyu.glory_api.shop.CancelOrderRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CancelOrderResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCancelOrderMethod(), responseObserver);
    }

    /**
     */
    default void shipGoodsInBatches(com.zhijiejiaoyu.glory_api.shop.ShipGoodsInBatchesRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ShipGoodsInBatchesResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getShipGoodsInBatchesMethod(), responseObserver);
    }

    /**
     */
    default void freeShippingInBatches(com.zhijiejiaoyu.glory_api.shop.FreeShippingInBatchesRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.FreeShippingInBatchesResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getFreeShippingInBatchesMethod(), responseObserver);
    }

    /**
     */
    default void listShopSummary(com.zhijiejiaoyu.glory_api.shop.ListShopSummaryRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListShopSummaryResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListShopSummaryMethod(), responseObserver);
    }

    /**
     */
    default void listShopBySellerID(com.zhijiejiaoyu.glory_api.shop.ListShopBySellerIDRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListShopBySellerIDResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListShopBySellerIDMethod(), responseObserver);
    }

    /**
     * <pre>
     * cart
     * </pre>
     */
    default void createCart(com.zhijiejiaoyu.glory_api.shop.AddCartRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.AddCartResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateCartMethod(), responseObserver);
    }

    /**
     */
    default void getCart(com.zhijiejiaoyu.glory_api.shop.GetCartRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetCartResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetCartMethod(), responseObserver);
    }

    /**
     */
    default void updateCart(com.zhijiejiaoyu.glory_api.shop.UpdateCartRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateCartResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateCartMethod(), responseObserver);
    }

    /**
     */
    default void deleteCart(com.zhijiejiaoyu.glory_api.shop.DeleteCartRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteCartResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteCartMethod(), responseObserver);
    }

    /**
     * <pre>
     * seller
     * </pre>
     */
    default void uploadAttachment(com.zhijiejiaoyu.glory_api.seller.UploadAttachmentRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.seller.UploadAttachmentResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUploadAttachmentMethod(), responseObserver);
    }

    /**
     */
    default void saveAttachment(com.zhijiejiaoyu.glory_api.seller.SaveAttachmentRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.seller.SaveAttachmentResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getSaveAttachmentMethod(), responseObserver);
    }

    /**
     */
    default void listAttachment(com.zhijiejiaoyu.glory_api.seller.ListAttachmentRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.seller.ListAttachmentResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListAttachmentMethod(), responseObserver);
    }

    /**
     */
    default void deleteAttachment(com.zhijiejiaoyu.glory_api.seller.DeleteAttachmentRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.seller.DeleteAttachmentResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteAttachmentMethod(), responseObserver);
    }

    /**
     */
    default void createSeller(com.zhijiejiaoyu.glory_api.seller.CreateSellerRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.seller.CreateSellerResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateSellerMethod(), responseObserver);
    }

    /**
     * <pre>
     * payment
     * </pre>
     */
    default void createPayment(com.zhijiejiaoyu.glory_api.payment.CreatePaymentRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.payment.CreatePaymentResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreatePaymentMethod(), responseObserver);
    }

    /**
     */
    default void getPayment(com.zhijiejiaoyu.glory_api.payment.GetPaymentRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.payment.GetPaymentResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetPaymentMethod(), responseObserver);
    }

    /**
     */
    default void updatePayment(com.zhijiejiaoyu.glory_api.payment.UpdatePaymentRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.payment.UpdatePaymentResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdatePaymentMethod(), responseObserver);
    }

    /**
     */
    default void deletePayment(com.zhijiejiaoyu.glory_api.payment.DeletePaymentRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.payment.DeletePaymentResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeletePaymentMethod(), responseObserver);
    }

    /**
     */
    default void wechatPaymentNotify(com.zhijiejiaoyu.glory_api.payment.WechatPaymentNotifyRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.payment.WechatPaymentNotifyResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getWechatPaymentNotifyMethod(), responseObserver);
    }

    /**
     * <pre>
     *admin_config
     * </pre>
     */
    default void createConfig(com.zhijiejiaoyu.glory_api.admin.CreateConfigRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.CreateConfigResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateConfigMethod(), responseObserver);
    }

    /**
     */
    default void updateConfig(com.zhijiejiaoyu.glory_api.admin.UpdateConfigRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.UpdateConfigResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateConfigMethod(), responseObserver);
    }

    /**
     */
    default void deleteConfig(com.zhijiejiaoyu.glory_api.admin.DeleteConfigRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.DeleteConfigResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteConfigMethod(), responseObserver);
    }

    /**
     */
    default void getConfig(com.zhijiejiaoyu.glory_api.admin.GetConfigRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.GetConfigResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetConfigMethod(), responseObserver);
    }

    /**
     * <pre>
     *admin_other
     * </pre>
     */
    default void getSTS(com.zhijiejiaoyu.glory_api.admin.GetSTSRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.GetSTSResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetSTSMethod(), responseObserver);
    }

    /**
     */
    default void generateWebofficeToken(com.zhijiejiaoyu.glory_api.admin.GenerateWebofficeTokenRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.GenerateWebofficeTokenResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGenerateWebofficeTokenMethod(), responseObserver);
    }

    /**
     */
    default void refreshWebofficeToken(com.zhijiejiaoyu.glory_api.admin.RefreshWebofficeTokenRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.RefreshWebofficeTokenResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getRefreshWebofficeTokenMethod(), responseObserver);
    }

    /**
     */
    default void listTenantOrg(com.zhijiejiaoyu.glory_api.admin.ListTenantOrgRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.ListTenantOrgResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListTenantOrgMethod(), responseObserver);
    }

    /**
     * <pre>
     *admin_user
     * </pre>
     */
    default void getAdminTenant(com.zhijiejiaoyu.glory_api.admin.GetAdminTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.GetAdminTenantResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetAdminTenantMethod(), responseObserver);
    }

    /**
     */
    default void listAdminUser(com.zhijiejiaoyu.glory_api.admin.ListAdminUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.ListAdminUserResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListAdminUserMethod(), responseObserver);
    }

    /**
     */
    default void createAdminUser(com.zhijiejiaoyu.glory_api.admin.CreateAdminUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.CreateAdminUserResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateAdminUserMethod(), responseObserver);
    }

    /**
     */
    default void updateAdminUser(com.zhijiejiaoyu.glory_api.admin.UpdateAdminUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.UpdateAdminUserResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateAdminUserMethod(), responseObserver);
    }

    /**
     */
    default void deleteAdminUser(com.zhijiejiaoyu.glory_api.admin.DeleteAdminUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.DeleteAdminUserResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteAdminUserMethod(), responseObserver);
    }

    /**
     * <pre>
     * wxpay
     * </pre>
     */
    default void wxPrepay(com.zhijiejiaoyu.glory_api.wxpay.PrepayRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.wxpay.PrepayResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getWxPrepayMethod(), responseObserver);
    }

    /**
     */
    default void closeOrder(com.zhijiejiaoyu.glory_api.wxpay.CloseOrderRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.wxpay.CloseOrderResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCloseOrderMethod(), responseObserver);
    }

    /**
     */
    default void queryOrderById(com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByIdRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByIdResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getQueryOrderByIdMethod(), responseObserver);
    }

    /**
     */
    default void queryOrderByOutTrade(com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByOutTradeNoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByOutTradeNoResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getQueryOrderByOutTradeMethod(), responseObserver);
    }

    /**
     * <pre>
     *virtual currency  虚拟币（成长币）
     * </pre>
     */
    default void addVCurrency(com.zhijiejiaoyu.glory_api.currency.AddVirtualCurrencyRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.currency.AddVirtualCurrencyResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getAddVCurrencyMethod(), responseObserver);
    }

    /**
     */
    default void rechargeCurrency(com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getRechargeCurrencyMethod(), responseObserver);
    }

    /**
     */
    default void rechargeCurrencyInBatches(com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyInBatchesRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyInBatchesResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getRechargeCurrencyInBatchesMethod(), responseObserver);
    }

    /**
     */
    default void getVCurrency(com.zhijiejiaoyu.glory_api.currency.GetVirtualCurrencyRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.currency.GetVirtualCurrencyResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetVCurrencyMethod(), responseObserver);
    }

    /**
     */
    default void listVCurrency(com.zhijiejiaoyu.glory_api.currency.ListVirtualCurrencyRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.currency.ListVirtualCurrencyResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListVCurrencyMethod(), responseObserver);
    }

    /**
     */
    default void listAccountOperation(com.zhijiejiaoyu.glory_api.account.ListAccountOperationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.account.ListAccountOperationResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListAccountOperationMethod(), responseObserver);
    }

    /**
     * <pre>
     * live
     * </pre>
     */
    default void createRoom(com.zhijiejiaoyu.glory_api.live.CreateRoomRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateRoomResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateRoomMethod(), responseObserver);
    }

    /**
     */
    default void getRoom(com.zhijiejiaoyu.glory_api.live.GetRoomRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetRoomResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetRoomMethod(), responseObserver);
    }

    /**
     */
    default void updateRoom(com.zhijiejiaoyu.glory_api.live.UpdateRoomRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UpdateRoomResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateRoomMethod(), responseObserver);
    }

    /**
     */
    default void listRoom(com.zhijiejiaoyu.glory_api.live.ListRoomRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListRoomResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListRoomMethod(), responseObserver);
    }

    /**
     */
    default void deleteRoom(com.zhijiejiaoyu.glory_api.live.DeleteRoomRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.DeleteRoomResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteRoomMethod(), responseObserver);
    }

    /**
     */
    default void listFinishedRoom(com.zhijiejiaoyu.glory_api.live.ListFinishedRoomRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListFinishedRoomResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListFinishedRoomMethod(), responseObserver);
    }

    /**
     */
    default void getFinishedRoom(com.zhijiejiaoyu.glory_api.live.GetFinishedRoomRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetFinishedRoomResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetFinishedRoomMethod(), responseObserver);
    }

    /**
     */
    default void record(com.zhijiejiaoyu.glory_api.live.LiveRecordRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.LiveRecordResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getRecordMethod(), responseObserver);
    }

    /**
     */
    default void createLiveUserToken(com.zhijiejiaoyu.glory_api.live.CreateLiveUserTokenRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateLiveUserTokenResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateLiveUserTokenMethod(), responseObserver);
    }

    /**
     */
    default void createNewLiveUserToken(com.zhijiejiaoyu.glory_api.live.CreateNewMessageTokenRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateNewMessageTokenResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateNewLiveUserTokenMethod(), responseObserver);
    }

    /**
     */
    default void userEnterRoom(com.zhijiejiaoyu.glory_api.live.UserEnterRoomRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UserEnterRoomResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUserEnterRoomMethod(), responseObserver);
    }

    /**
     */
    default void userExitRoom(com.zhijiejiaoyu.glory_api.live.UserExitRoomRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UserExitRoomResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUserExitRoomMethod(), responseObserver);
    }

    /**
     */
    default void listActiveRoomUser(com.zhijiejiaoyu.glory_api.live.ListActiveRoomUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.seller.ListAttachmentResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListActiveRoomUserMethod(), responseObserver);
    }

    /**
     */
    default void liveSSE(com.zhijiejiaoyu.glory_api.live.LiveSSERequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.LiveSSEResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getLiveSSEMethod(), responseObserver);
    }

    /**
     */
    default void closeShopAllLive(com.zhijiejiaoyu.glory_api.live.CloseShopAllLiveRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CloseShopAllLiveResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCloseShopAllLiveMethod(), responseObserver);
    }

    /**
     */
    default void updateLiveCommentCount(com.zhijiejiaoyu.glory_api.live.UpdateLiveCommentCountRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UpdateLiveCommentCountResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateLiveCommentCountMethod(), responseObserver);
    }

    /**
     * <pre>
     * live plan
     * live plan crud
     * </pre>
     */
    default void createLivePlan(com.zhijiejiaoyu.glory_api.live.CreateLivePlanRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateLivePlanResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateLivePlanMethod(), responseObserver);
    }

    /**
     */
    default void getLivePlan(com.zhijiejiaoyu.glory_api.live.GetLivePlanRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetLivePlanResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetLivePlanMethod(), responseObserver);
    }

    /**
     */
    default void updateLivePlan(com.zhijiejiaoyu.glory_api.live.UpdateLivePlanRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UpdateLivePlanResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateLivePlanMethod(), responseObserver);
    }

    /**
     */
    default void listLivePlan(com.zhijiejiaoyu.glory_api.live.ListLivePlanRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListLivePlanResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListLivePlanMethod(), responseObserver);
    }

    /**
     */
    default void deleteLivePlan(com.zhijiejiaoyu.glory_api.live.DeleteLivePlanRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.DeleteLivePlanResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteLivePlanMethod(), responseObserver);
    }

    /**
     * <pre>
     * live plan prod crud
     * CreateLivePlanProduct create live plan product
     * </pre>
     */
    default void createLivePlanProduct(com.zhijiejiaoyu.glory_api.live.CreateLivePlanProductRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateLivePlanProductResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateLivePlanProductMethod(), responseObserver);
    }

    /**
     */
    default void updateLivePlanProduct(com.zhijiejiaoyu.glory_api.live.UpdateLivePlanProductRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UpdateLivePlanProductResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateLivePlanProductMethod(), responseObserver);
    }

    /**
     */
    default void listLivePlanProduct(com.zhijiejiaoyu.glory_api.live.ListLivePlanProductRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListLivePlanProductResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListLivePlanProductMethod(), responseObserver);
    }

    /**
     */
    default void deleteLivePlanProduct(com.zhijiejiaoyu.glory_api.live.DeleteLivePlanProductRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.DeleteLivePlanProductResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteLivePlanProductMethod(), responseObserver);
    }

    /**
     */
    default void loadLivePlanProduct(com.zhijiejiaoyu.glory_api.live.LoadLivePlanProductRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.LoadLivePlanProductResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getLoadLivePlanProductMethod(), responseObserver);
    }

    /**
     */
    default void updateLiveProductStatus(com.zhijiejiaoyu.glory_api.live.UpdateLiveProductStatusRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UpdateLiveProductStatusResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateLiveProductStatusMethod(), responseObserver);
    }

    /**
     */
    default void listLiveProductStatus(com.zhijiejiaoyu.glory_api.live.ListLiveProductStatusRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListLiveProductStatusResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListLiveProductStatusMethod(), responseObserver);
    }

    /**
     */
    default void deleteLiveProductStatus(com.zhijiejiaoyu.glory_api.live.DeleteLiveProductStatusRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.DeleteLiveProductStatusResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteLiveProductStatusMethod(), responseObserver);
    }

    /**
     */
    default void createLiveProductStatus(com.zhijiejiaoyu.glory_api.live.CreateLiveProductStatusRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateLiveProductStatusResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateLiveProductStatusMethod(), responseObserver);
    }

    /**
     */
    default void getLivingProductStatus(com.zhijiejiaoyu.glory_api.live.GetLivingProductStatusRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetLivingProductStatusResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetLivingProductStatusMethod(), responseObserver);
    }

    /**
     */
    default void updateLiveProductIntroductStatus(com.zhijiejiaoyu.glory_api.live.UpdateLiveProductIntroductStatusRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UpdateLiveProductIntroductStatusResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateLiveProductIntroductStatusMethod(), responseObserver);
    }

    /**
     * <pre>
     * live text crud
     * </pre>
     */
    default void createLiveText(com.zhijiejiaoyu.glory_api.live.CreateLiveTextRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateLiveTextResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateLiveTextMethod(), responseObserver);
    }

    /**
     */
    default void updateLiveText(com.zhijiejiaoyu.glory_api.live.UpdateLiveTextRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UpdateLiveTextResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateLiveTextMethod(), responseObserver);
    }

    /**
     */
    default void listLiveText(com.zhijiejiaoyu.glory_api.live.ListLiveTextRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListLiveTextResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListLiveTextMethod(), responseObserver);
    }

    /**
     */
    default void getLiveText(com.zhijiejiaoyu.glory_api.live.GetLiveTextRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetLiveTextResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetLiveTextMethod(), responseObserver);
    }

    /**
     */
    default void deleteLiveTexts(com.zhijiejiaoyu.glory_api.live.DeleteLiveTextsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.DeleteLiveTextsResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteLiveTextsMethod(), responseObserver);
    }

    /**
     */
    default void teacherListStudentShortVideoText(com.zhijiejiaoyu.glory_api.live.TeacherListStudentShortVideoTextRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.TeacherListStudentShortVideoTextResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getTeacherListStudentShortVideoTextMethod(), responseObserver);
    }

    /**
     * <pre>
     * live chart
     * </pre>
     */
    default void getLiveChartData(com.zhijiejiaoyu.glory_api.live.GetLiveChartDataRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetLiveChartDataResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetLiveChartDataMethod(), responseObserver);
    }

    /**
     * <pre>
     * live evaluate
     * </pre>
     */
    default void getEvaluateSelector(com.zhijiejiaoyu.glory_api.live.GetEvaluateSelectorRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetEvaluateSelectorResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetEvaluateSelectorMethod(), responseObserver);
    }

    /**
     */
    default void listPersonalEvaluate(com.zhijiejiaoyu.glory_api.live.ListPersonalEvaluateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListPersonalEvaluateResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListPersonalEvaluateMethod(), responseObserver);
    }

    /**
     */
    default void getEvaluateDetail(com.zhijiejiaoyu.glory_api.live.GetEvaluateDetailRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetEvaluateDetailResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetEvaluateDetailMethod(), responseObserver);
    }

    /**
     */
    default void submitEvaluate(com.zhijiejiaoyu.glory_api.live.SubmitEvaluateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.SubmitEvaluateResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getSubmitEvaluateMethod(), responseObserver);
    }

    /**
     */
    default void listUnevaluatedRoom(com.zhijiejiaoyu.glory_api.live.ListUnevaluatedRoomRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListUnevaluatedRoomResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListUnevaluatedRoomMethod(), responseObserver);
    }

    /**
     */
    default void listStudentEvaluations(com.zhijiejiaoyu.glory_api.live.ListStudentEvalutionsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListStudentEvalutionsResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListStudentEvaluationsMethod(), responseObserver);
    }

    /**
     */
    default void ignoreEvaluation(com.zhijiejiaoyu.glory_api.live.IgnoreLiveEvaluationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.IgnoreLiveEvaluationResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getIgnoreEvaluationMethod(), responseObserver);
    }

    /**
     */
    default void getRank(com.zhijiejiaoyu.glory_api.live.GetRankRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetRankResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetRankMethod(), responseObserver);
    }

    /**
     */
    default void recordLiveCallback(com.zhijiejiaoyu.glory_api.live.RecordLiveCallbackRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.RecordLiveCallbackResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getRecordLiveCallbackMethod(), responseObserver);
    }

    /**
     */
    default void videoToTextCallback(com.zhijiejiaoyu.glory_api.live.VideoToTextCallbackRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.VideoToTextCallbackResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getVideoToTextCallbackMethod(), responseObserver);
    }

    /**
     */
    default void liveStreamCallback(com.zhijiejiaoyu.glory_api.live.LiveStreamCallbackRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.LiveStreamCallbackResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getLiveStreamCallbackMethod(), responseObserver);
    }

    /**
     */
    default void regenerationAiFeedback(com.zhijiejiaoyu.glory_api.live.RegenerationAiFeedbackRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.RegenerationAiFeedbackResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getRegenerationAiFeedbackMethod(), responseObserver);
    }

    /**
     */
    default void submitUserAttitudeForAiResult(com.zhijiejiaoyu.glory_api.live.SubmitUserAttitudeForAIResultRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.SubmitUserAttitudeForAIResultResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getSubmitUserAttitudeForAiResultMethod(), responseObserver);
    }

    /**
     */
    default void preheatProduct(com.zhijiejiaoyu.glory_api.live.PreheatRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.PreheatResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getPreheatProductMethod(), responseObserver);
    }

    /**
     */
    default void publicPrice(com.zhijiejiaoyu.glory_api.live.PublicPriceRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.PublicPriceResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getPublicPriceMethod(), responseObserver);
    }

    /**
     * <pre>
     *tenant
     * </pre>
     */
    default void listTenantSystem(com.zhijiejiaoyu.glory_api.tenant.ListTenantSystemRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.ListTenantSystemResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListTenantSystemMethod(), responseObserver);
    }

    /**
     */
    default void createTenant(com.zhijiejiaoyu.glory_api.tenant.CreateTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.CreateTenantResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateTenantMethod(), responseObserver);
    }

    /**
     */
    default void getTenant(com.zhijiejiaoyu.glory_api.tenant.GetTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.GetTenantResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetTenantMethod(), responseObserver);
    }

    /**
     */
    default void updateTenant(com.zhijiejiaoyu.glory_api.tenant.UpdateTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateTenantMethod(), responseObserver);
    }

    /**
     */
    default void deleteTenant(com.zhijiejiaoyu.glory_api.tenant.DeleteTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.DeleteTenantResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteTenantMethod(), responseObserver);
    }

    /**
     */
    default void listTenant(com.zhijiejiaoyu.glory_api.tenant.ListTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.ListTenantResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListTenantMethod(), responseObserver);
    }

    /**
     */
    default void getTenantOrg(com.zhijiejiaoyu.glory_api.tenant.GetTenantOrgRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.GetTenantOrgResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetTenantOrgMethod(), responseObserver);
    }

    /**
     */
    default void enterTenant(com.zhijiejiaoyu.glory_api.tenant.EnterTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.EnterTenantResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getEnterTenantMethod(), responseObserver);
    }

    /**
     */
    default void exitTenant(com.zhijiejiaoyu.glory_api.tenant.ExitTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.ExitTenantResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getExitTenantMethod(), responseObserver);
    }

    /**
     */
    default void isEnterTenant(com.zhijiejiaoyu.glory_api.tenant.IsEnterTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.IsTenantResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getIsEnterTenantMethod(), responseObserver);
    }

    /**
     */
    default void initTenant(com.zhijiejiaoyu.glory_api.tenant.InitTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.InitTenantResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getInitTenantMethod(), responseObserver);
    }

    /**
     */
    default void createTenantCourse(com.zhijiejiaoyu.glory_api.tenant.CreateTenantCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.CreateTenantCourseResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateTenantCourseMethod(), responseObserver);
    }

    /**
     */
    default void listTenantCourse(com.zhijiejiaoyu.glory_api.tenant.ListTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.ListTenantResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListTenantCourseMethod(), responseObserver);
    }

    /**
     * <pre>
     *tenant_dept
     * </pre>
     */
    default void createTenantDept(com.zhijiejiaoyu.glory_api.tenant.CreateTenantDeptRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.CreateTenantDeptResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateTenantDeptMethod(), responseObserver);
    }

    /**
     */
    default void updateTenantDept(com.zhijiejiaoyu.glory_api.tenant.UpdateTenantDeptRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantDeptResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateTenantDeptMethod(), responseObserver);
    }

    /**
     */
    default void deleteTenantDept(com.zhijiejiaoyu.glory_api.tenant.DeleteTenantDeptRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.DeleteTenantDeptResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteTenantDeptMethod(), responseObserver);
    }

    /**
     */
    default void getTenantDept(com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetTenantDeptMethod(), responseObserver);
    }

    /**
     * <pre>
     * 获取所有部门类型[select]
     * </pre>
     */
    default void getTenantDeptType(com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptTypeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptTypeResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetTenantDeptTypeMethod(), responseObserver);
    }

    /**
     */
    default void listTenantDept(com.zhijiejiaoyu.glory_api.tenant.ListTenantDeptRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.ListTenantDeptResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListTenantDeptMethod(), responseObserver);
    }

    /**
     * <pre>
     * tenant_user
     * </pre>
     */
    default void createTenantUser(com.zhijiejiaoyu.glory_api.tenant.CreateTenantUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.CreateTenantUserResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateTenantUserMethod(), responseObserver);
    }

    /**
     */
    default void deleteTenantUser(com.zhijiejiaoyu.glory_api.tenant.DeleteTenantUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.DeleteTenantUserResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteTenantUserMethod(), responseObserver);
    }

    /**
     */
    default void updateTenantUser(com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateTenantUserMethod(), responseObserver);
    }

    /**
     */
    default void getTenantUser(com.zhijiejiaoyu.glory_api.tenant.GetTenantUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.GetTenantUserResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetTenantUserMethod(), responseObserver);
    }

    /**
     */
    default void listTenantUser(com.zhijiejiaoyu.glory_api.tenant.ListTenantUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.ListTenantUserResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListTenantUserMethod(), responseObserver);
    }

    /**
     */
    default void listTenantStudent(com.zhijiejiaoyu.glory_api.tenant.ListTenantStudentRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.ListTenantStudentResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListTenantStudentMethod(), responseObserver);
    }

    /**
     */
    default void updateTenantUserPassword(com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserPasswordRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserPasswordResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateTenantUserPasswordMethod(), responseObserver);
    }

    /**
     * <pre>
     *tenant_config
     * </pre>
     */
    default void updateTenantConfig(com.zhijiejiaoyu.glory_api.tenant.UpdateTenantConfigRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantConfigResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateTenantConfigMethod(), responseObserver);
    }

    /**
     */
    default void listTenantConfig(com.zhijiejiaoyu.glory_api.tenant.ListTenantConfigRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.ListTenantConfigResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListTenantConfigMethod(), responseObserver);
    }

    /**
     * <pre>
     * short_video
     * </pre>
     */
    default void createShortVideo(com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateShortVideoMethod(), responseObserver);
    }

    /**
     */
    default void stageShortVideo(com.zhijiejiaoyu.glory_api.short_video.StageShortVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.StageShortVideoResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getStageShortVideoMethod(), responseObserver);
    }

    /**
     * <pre>
     * 我的短视频列表
     * </pre>
     */
    default void listMyShortVideo(com.zhijiejiaoyu.glory_api.short_video.ListMyShortVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListMyShortVideoResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListMyShortVideoMethod(), responseObserver);
    }

    /**
     * <pre>
     * 我的暂存视频列表
     * </pre>
     */
    default void listMyStageVideo(com.zhijiejiaoyu.glory_api.short_video.ListMyStageVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListMyStageVideoResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListMyStageVideoMethod(), responseObserver);
    }

    /**
     * <pre>
     * 我的喜欢视频列表
     * </pre>
     */
    default void listMyLikeVideo(com.zhijiejiaoyu.glory_api.short_video.ListMyLikeVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListMyLikeVideoResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListMyLikeVideoMethod(), responseObserver);
    }

    /**
     * <pre>
     * 我的收藏视频列表
     * </pre>
     */
    default void listMyFavoriteVideo(com.zhijiejiaoyu.glory_api.short_video.ListMyFavoriteVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListMyFavoriteVideoResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListMyFavoriteVideoMethod(), responseObserver);
    }

    /**
     * <pre>
     * 获取短视频详情
     * </pre>
     */
    default void getShortVideo(com.zhijiejiaoyu.glory_api.short_video.GetShortVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetShortVideoResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetShortVideoMethod(), responseObserver);
    }

    /**
     * <pre>
     * 更新短视频详情
     * </pre>
     */
    default void updateShortVideo(com.zhijiejiaoyu.glory_api.short_video.UpdateShortVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.UpdateShortVideoResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateShortVideoMethod(), responseObserver);
    }

    /**
     * <pre>
     * 删除短视频
     * </pre>
     */
    default void deleteShortVideo(com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteShortVideoMethod(), responseObserver);
    }

    /**
     * <pre>
     * 获取暂存视频详情
     * </pre>
     */
    default void getStageVideo(com.zhijiejiaoyu.glory_api.short_video.GetStageVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetStageVideoResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetStageVideoMethod(), responseObserver);
    }

    /**
     * <pre>
     * 删除暂存视频
     * </pre>
     */
    default void deleteStageVideo(com.zhijiejiaoyu.glory_api.short_video.DeleteStageVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.DeleteStageVideoResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteStageVideoMethod(), responseObserver);
    }

    /**
     */
    default void updateStageVideo(com.zhijiejiaoyu.glory_api.short_video.UpdateStageVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.UpdateStageVideoResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateStageVideoMethod(), responseObserver);
    }

    /**
     * <pre>
     * 平台短短视频列表
     * </pre>
     */
    default void managementListShortVideo(com.zhijiejiaoyu.glory_api.short_video.ManagementListShortVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ManagementListShortVideoResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getManagementListShortVideoMethod(), responseObserver);
    }

    /**
     * <pre>
     * 平台审核短视频
     * </pre>
     */
    default void managementCensorShortVideo(com.zhijiejiaoyu.glory_api.short_video.ManagementCensorShortVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ManagementCensorShortVideoResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getManagementCensorShortVideoMethod(), responseObserver);
    }

    /**
     * <pre>
     * 平台删除短视频
     * </pre>
     */
    default void managementDeleteShortVideo(com.zhijiejiaoyu.glory_api.short_video.ManagementDeleteShortVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ManagementDeleteShortVideoResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getManagementDeleteShortVideoMethod(), responseObserver);
    }

    /**
     * <pre>
     * APP首页短视频列表
     * </pre>
     */
    default void listShortVideo(com.zhijiejiaoyu.glory_api.short_video.ListShortVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListShortVideoResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListShortVideoMethod(), responseObserver);
    }

    /**
     * <pre>
     * 点赞短视频
     * </pre>
     */
    default void likeShortVideo(com.zhijiejiaoyu.glory_api.short_video.LikeShortVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.LikeShortVideoResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getLikeShortVideoMethod(), responseObserver);
    }

    /**
     * <pre>
     * 收藏短视频
     * </pre>
     */
    default void favoriteShortVideo(com.zhijiejiaoyu.glory_api.short_video.FavoriteShortVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.FavoriteShortVideoResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getFavoriteShortVideoMethod(), responseObserver);
    }

    /**
     * <pre>
     * 发布短视频评论
     * </pre>
     */
    default void createShortVideoComment(com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoCommentRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoCommentResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateShortVideoCommentMethod(), responseObserver);
    }

    /**
     * <pre>
     * 删除短视频评论
     * </pre>
     */
    default void deleteShortVideoComment(com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoCommentRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoCommentResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteShortVideoCommentMethod(), responseObserver);
    }

    /**
     * <pre>
     * 短视频评论列表
     * </pre>
     */
    default void listShortVideoComment(com.zhijiejiaoyu.glory_api.short_video.ListShortVideoCommentRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListShortVideoCommentResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListShortVideoCommentMethod(), responseObserver);
    }

    /**
     */
    default void teacherListStudentShortVideo(com.zhijiejiaoyu.glory_api.short_video.TeacherListStudentShortVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.TeacherListStudentShortVideoResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getTeacherListStudentShortVideoMethod(), responseObserver);
    }

    /**
     * <pre>
     * coupon
     * </pre>
     */
    default void createCoupon(com.zhijiejiaoyu.glory_api.shop.CreateCouponRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CreateCouponResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateCouponMethod(), responseObserver);
    }

    /**
     */
    default void listCoupon(com.zhijiejiaoyu.glory_api.shop.ListCouponRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListCouponResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListCouponMethod(), responseObserver);
    }

    /**
     */
    default void couponDetail(com.zhijiejiaoyu.glory_api.shop.GetCouponDetailRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetCouponDetailResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCouponDetailMethod(), responseObserver);
    }

    /**
     */
    default void updateCoupon(com.zhijiejiaoyu.glory_api.shop.UpdateCouponRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateCouponResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateCouponMethod(), responseObserver);
    }

    /**
     */
    default void deleteCoupon(com.zhijiejiaoyu.glory_api.shop.DeleteCouponRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteCouponResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteCouponMethod(), responseObserver);
    }

    /**
     */
    default void abolishCoupon(com.zhijiejiaoyu.glory_api.shop.AbolishCouponRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.AbolishCouponResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getAbolishCouponMethod(), responseObserver);
    }

    /**
     */
    default void updateCouponDistributionStatus(com.zhijiejiaoyu.glory_api.shop.UpdateCouponDistributionStatusRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateCouponDistributionStatusResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateCouponDistributionStatusMethod(), responseObserver);
    }

    /**
     */
    default void claimCoupon(com.zhijiejiaoyu.glory_api.shop.ClaimCouponRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ClaimCouponResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getClaimCouponMethod(), responseObserver);
    }

    /**
     */
    default void listMyCoupon(com.zhijiejiaoyu.glory_api.shop.ListMyCouponRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListMyCouponResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListMyCouponMethod(), responseObserver);
    }

    /**
     * <pre>
     * activity
     * </pre>
     */
    default void createActivity(com.zhijiejiaoyu.glory_api.shop.CreateActivityRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CreateActivityResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateActivityMethod(), responseObserver);
    }

    /**
     */
    default void listActivity(com.zhijiejiaoyu.glory_api.shop.ListActivityRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListActivityResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListActivityMethod(), responseObserver);
    }

    /**
     */
    default void activityDetail(com.zhijiejiaoyu.glory_api.shop.GetActivityDetailRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetActivityDetailResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getActivityDetailMethod(), responseObserver);
    }

    /**
     */
    default void updateActivity(com.zhijiejiaoyu.glory_api.shop.UpdateActivityRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateActivityResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateActivityMethod(), responseObserver);
    }

    /**
     */
    default void deleteActivity(com.zhijiejiaoyu.glory_api.shop.DeleteActivityRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteActivityResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteActivityMethod(), responseObserver);
    }

    /**
     */
    default void disableActivity(com.zhijiejiaoyu.glory_api.shop.DisableActivityRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DisableActivityResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDisableActivityMethod(), responseObserver);
    }

    /**
     * <pre>
     * 获取正在讲解的商品和发放中的优惠券
     * </pre>
     */
    default void getCouponAndIntroducingProduct(com.zhijiejiaoyu.glory_api.live.GetCouponAndIntroducingProductRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetCouponAndIntroducingProductResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetCouponAndIntroducingProductMethod(), responseObserver);
    }

    /**
     * <pre>
     * 素材库
     * 创建画板
     * </pre>
     */
    default void createCourseMaterialBox(com.zhijiejiaoyu.glory_api.course.CreateCourseMaterialBoxRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateCourseMaterialBoxResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateCourseMaterialBoxMethod(), responseObserver);
    }

    /**
     * <pre>
     * 编辑画板
     * </pre>
     */
    default void updateCourseMaterialBox(com.zhijiejiaoyu.glory_api.course.UpdateCourseMaterialBoxRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateCourseMaterialBoxResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateCourseMaterialBoxMethod(), responseObserver);
    }

    /**
     * <pre>
     * 画板列表
     * </pre>
     */
    default void listCourseMaterialBox(com.zhijiejiaoyu.glory_api.course.ListCourseMaterialBoxRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListCourseMaterialBoxResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListCourseMaterialBoxMethod(), responseObserver);
    }

    /**
     * <pre>
     * 删除画板
     * </pre>
     */
    default void deleteCourseMaterialBox(com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialBoxRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialBoxResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteCourseMaterialBoxMethod(), responseObserver);
    }

    /**
     * <pre>
     * 上传素材
     * </pre>
     */
    default void uploadCourseMaterial(com.zhijiejiaoyu.glory_api.course.UploadCourseMaterialRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UploadCourseMaterialResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUploadCourseMaterialMethod(), responseObserver);
    }

    /**
     * <pre>
     * 素材列表
     * </pre>
     */
    default void listCourseMaterial(com.zhijiejiaoyu.glory_api.course.ListCourseMaterialRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListCourseMaterialResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListCourseMaterialMethod(), responseObserver);
    }

    /**
     * <pre>
     * 删除素材
     * </pre>
     */
    default void deleteCourseMaterial(com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteCourseMaterialMethod(), responseObserver);
    }

    /**
     * <pre>
     * 资源库
     * 获取课程类型树
     * </pre>
     */
    default void getCourseTypeTree(com.zhijiejiaoyu.glory_api.course.GetCourseTypeTreeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetCourseTypeTreeResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetCourseTypeTreeMethod(), responseObserver);
    }

    /**
     * <pre>
     * 获取课程类型列表
     * </pre>
     */
    default void getCourseTypeList(com.zhijiejiaoyu.glory_api.course.GetCourseTypeListRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetCourseTypeListResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetCourseTypeListMethod(), responseObserver);
    }

    /**
     * <pre>
     * 获取能力指标编码
     * </pre>
     */
    default void getCourseModuleCode(com.zhijiejiaoyu.glory_api.course.GetCourseModuleCodeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetCourseModuleCodeResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetCourseModuleCodeMethod(), responseObserver);
    }

    /**
     * <pre>
     * 获取课程内容编码
     * </pre>
     */
    default void getCourseChapterCode(com.zhijiejiaoyu.glory_api.course.GetCourseChapterCodeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetCourseChapterCodeResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetCourseChapterCodeMethod(), responseObserver);
    }

    /**
     * <pre>
     * 创建能力指标
     * </pre>
     */
    default void createCourseModule(com.zhijiejiaoyu.glory_api.course.CreateCourseModuleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateCourseModuleResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateCourseModuleMethod(), responseObserver);
    }

    /**
     * <pre>
     * 获取能力指标
     * </pre>
     */
    default void getCourseModule(com.zhijiejiaoyu.glory_api.course.GetCourseModuleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetCourseModuleResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetCourseModuleMethod(), responseObserver);
    }

    /**
     * <pre>
     * 更新能力指标
     * </pre>
     */
    default void updateCourseModule(com.zhijiejiaoyu.glory_api.course.UpdateCourseModuleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateCourseModuleResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateCourseModuleMethod(), responseObserver);
    }

    /**
     * <pre>
     * 删除能力指标
     * </pre>
     */
    default void deleteCourseModule(com.zhijiejiaoyu.glory_api.course.DeleteCourseModuleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteCourseModuleResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteCourseModuleMethod(), responseObserver);
    }

    /**
     * <pre>
     * 能力指标列表
     * </pre>
     */
    default void listCourseModule(com.zhijiejiaoyu.glory_api.course.ListCourseModuleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListCourseModuleResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListCourseModuleMethod(), responseObserver);
    }

    /**
     * <pre>
     * 课程列表
     * </pre>
     */
    default void listLatestCourse(com.zhijiejiaoyu.glory_api.course.ListLatestCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListLatestCourseResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListLatestCourseMethod(), responseObserver);
    }

    /**
     */
    default void listHottestCourse(com.zhijiejiaoyu.glory_api.course.ListHottestCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListHottestCourseResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListHottestCourseMethod(), responseObserver);
    }

    /**
     * <pre>
     * 自定义课程
     * 新建课程
     * </pre>
     */
    default void createCmCourse(com.zhijiejiaoyu.glory_api.course.CreateCmCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateCmCourseResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateCmCourseMethod(), responseObserver);
    }

    /**
     * <pre>
     * 预览课程
     * </pre>
     */
    default void previewCmCourse(com.zhijiejiaoyu.glory_api.course.PreviewCmCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.PreviewCmCourseResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getPreviewCmCourseMethod(), responseObserver);
    }

    /**
     * <pre>
     * 非模块化课程
     * 新建资源
     * </pre>
     */
    default void createNmCourseResource(com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResourceRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResourceResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateNmCourseResourceMethod(), responseObserver);
    }

    /**
     * <pre>
     * 新建章节
     * </pre>
     */
    default void createNmCourseChapter(com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateNmCourseChapterMethod(), responseObserver);
    }

    /**
     * <pre>
     * 新建课程
     * </pre>
     */
    default void createNmCourse(com.zhijiejiaoyu.glory_api.course.CreateNmCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateNmCourseResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateNmCourseMethod(), responseObserver);
    }

    /**
     * <pre>
     * 更新课程
     * </pre>
     */
    default void updateNmCourse(com.zhijiejiaoyu.glory_api.course.UpdateNmCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateNmCourseResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateNmCourseMethod(), responseObserver);
    }

    /**
     * <pre>
     * 课程列表
     * </pre>
     */
    default void listNmCourse(com.zhijiejiaoyu.glory_api.course.ListNmCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListNmCourseResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListNmCourseMethod(), responseObserver);
    }

    /**
     * <pre>
     * 课程详情
     * </pre>
     */
    default void nmCourseDetail(com.zhijiejiaoyu.glory_api.course.NmCourseDetailRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.NmCourseDetailResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getNmCourseDetailMethod(), responseObserver);
    }

    /**
     * <pre>
     * 删除课程
     * </pre>
     */
    default void deleteNmCourse(com.zhijiejiaoyu.glory_api.course.DeleteNmCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteNmCourseResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteNmCourseMethod(), responseObserver);
    }

    /**
     * <pre>
     * 模块化课程
     * 创建模块化课程
     * </pre>
     */
    default void createCourse(com.zhijiejiaoyu.glory_api.course.CreateCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateCourseResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateCourseMethod(), responseObserver);
    }

    /**
     * <pre>
     * 获取模块化课程
     * </pre>
     */
    default void getCourse(com.zhijiejiaoyu.glory_api.course.GetCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetCourseResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetCourseMethod(), responseObserver);
    }

    /**
     * <pre>
     * 更新模块化课程
     * </pre>
     */
    default void updateCourse(com.zhijiejiaoyu.glory_api.course.UpdateCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateCourseResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateCourseMethod(), responseObserver);
    }

    /**
     * <pre>
     * 删除模块化课程
     * </pre>
     */
    default void deleteCourse(com.zhijiejiaoyu.glory_api.course.DeleteCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteCourseResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteCourseMethod(), responseObserver);
    }

    /**
     * <pre>
     * 模块化课程列表
     * </pre>
     */
    default void listCourse(com.zhijiejiaoyu.glory_api.course.ListCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListCourseResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListCourseMethod(), responseObserver);
    }

    /**
     * <pre>
     * 知识图谱
     * </pre>
     */
    default void createKnowledgeGraph(com.zhijiejiaoyu.glory_api.course.CreateKnowledgeGraphRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateKnowledgeGraphResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateKnowledgeGraphMethod(), responseObserver);
    }

    /**
     */
    default void getKnowledgeGraph(com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetKnowledgeGraphMethod(), responseObserver);
    }

    /**
     */
    default void getKnowledgeGraphNode(com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphNodeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphNodeResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetKnowledgeGraphNodeMethod(), responseObserver);
    }

    /**
     */
    default void getCourseIds(com.zhijiejiaoyu.glory_api.course.GetCourseIdsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetCourseIdsResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetCourseIdsMethod(), responseObserver);
    }

    /**
     * <pre>
     * 我的课程
     * 加入课程
     * </pre>
     */
    default void enrollCourse(com.zhijiejiaoyu.glory_api.course.EnrollCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.EnrollCourseResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getEnrollCourseMethod(), responseObserver);
    }

    /**
     * <pre>
     * 删除我的课程
     * </pre>
     */
    default void deleteMyCourse(com.zhijiejiaoyu.glory_api.course.DeleteMyCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteMyCourseResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteMyCourseMethod(), responseObserver);
    }

    /**
     * <pre>
     * 上报课程进度
     * </pre>
     */
    default void updateCourseProgress(com.zhijiejiaoyu.glory_api.course.UpdateCourseProgressRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateCourseProgressResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateCourseProgressMethod(), responseObserver);
    }

    /**
     * <pre>
     * 我的课程列表
     * </pre>
     */
    default void listMyCourse(com.zhijiejiaoyu.glory_api.course.ListMyCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListMyCourseResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListMyCourseMethod(), responseObserver);
    }

    /**
     * <pre>
     * 教案管理
     * </pre>
     */
    default void listTeachingPlan(com.zhijiejiaoyu.glory_api.course.ListTeachingPlanRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListTeachingPlanResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListTeachingPlanMethod(), responseObserver);
    }

    /**
     */
    default void createTeachingPlan(com.zhijiejiaoyu.glory_api.course.CreateTeachingPlanRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateTeachingPlanResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateTeachingPlanMethod(), responseObserver);
    }

    /**
     */
    default void updateTeachingPlan(com.zhijiejiaoyu.glory_api.course.UpdateTeachingPlanRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateTeachingPlanResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateTeachingPlanMethod(), responseObserver);
    }

    /**
     */
    default void deleteTeachingPlan(com.zhijiejiaoyu.glory_api.course.DeleteTeachingPlanRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteTeachingPlanResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteTeachingPlanMethod(), responseObserver);
    }

    /**
     * <pre>
     * 上报老师授课课程进度
     * </pre>
     */
    default void updateTeachingCourseProgress(com.zhijiejiaoyu.glory_api.course.UpdateTeachingCourseProgressRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateTeachingCourseProgressResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateTeachingCourseProgressMethod(), responseObserver);
    }

    /**
     * <pre>
     * 培养方案
     * </pre>
     */
    default void createEduScheme(com.zhijiejiaoyu.glory_api.course.CreateEduSchemeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateEduSchemeResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateEduSchemeMethod(), responseObserver);
    }

    /**
     */
    default void updateEduScheme(com.zhijiejiaoyu.glory_api.course.UpdateEduSchemeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateEduSchemeResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateEduSchemeMethod(), responseObserver);
    }

    /**
     */
    default void listEduScheme(com.zhijiejiaoyu.glory_api.course.ListEduSchemeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListEduSchemeResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListEduSchemeMethod(), responseObserver);
    }

    /**
     */
    default void eduSchemeDetail(com.zhijiejiaoyu.glory_api.course.EduSchemeDetailRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.EduSchemeDetailResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getEduSchemeDetailMethod(), responseObserver);
    }

    /**
     */
    default void deleteEduScheme(com.zhijiejiaoyu.glory_api.course.DeleteEduSchemeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteEduSchemeResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteEduSchemeMethod(), responseObserver);
    }

    /**
     */
    default void distributeEduScheme(com.zhijiejiaoyu.glory_api.course.DistributeEduSchemeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DistributeEduSchemeResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDistributeEduSchemeMethod(), responseObserver);
    }

    /**
     * <pre>
     * 获取培养方案，但返回结果和获取模块化结果一样
     * </pre>
     */
    default void getEduSchemeLikeCourse(com.zhijiejiaoyu.glory_api.course.GetEduSchemeLikeCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetEduSchemeLikeCourseResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetEduSchemeLikeCourseMethod(), responseObserver);
    }

    /**
     * <pre>
     * app下载
     * </pre>
     */
    default void getAndroidQRcode(com.zhijiejiaoyu.glory_api.course.GetAndroidQRCodeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetAndroidQRCodeResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetAndroidQRcodeMethod(), responseObserver);
    }

    /**
     * <pre>
     * 工作岗位
     * </pre>
     */
    default void createJob(com.zhijiejiaoyu.glory_api.course.CreateJobRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateJobResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateJobMethod(), responseObserver);
    }

    /**
     */
    default void updateJob(com.zhijiejiaoyu.glory_api.course.UpdateJobRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateJobResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateJobMethod(), responseObserver);
    }

    /**
     */
    default void deleteJob(com.zhijiejiaoyu.glory_api.course.DeleteJobRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteJobResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteJobMethod(), responseObserver);
    }

    /**
     */
    default void listJob(com.zhijiejiaoyu.glory_api.course.ListJobRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListJobResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListJobMethod(), responseObserver);
    }

    /**
     * <pre>
     * 流量统计
     * </pre>
     */
    default void getSchooLiveChart(com.zhijiejiaoyu.glory_api.traffic.GetSchoolLiveTrafficChartRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.traffic.GetSchoolLiveTrafficChartResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetSchooLiveChartMethod(), responseObserver);
    }

    /**
     */
    default void listSchooLiveTraffic(com.zhijiejiaoyu.glory_api.traffic.ListSchoolLiveTrafficRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.traffic.ListSchoolLiveTrafficResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListSchooLiveTrafficMethod(), responseObserver);
    }

    /**
     */
    default void getLiveAllTraffic(com.zhijiejiaoyu.glory_api.traffic.GetAllLiveTrafficRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.traffic.GetAllLiveTrafficResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetLiveAllTrafficMethod(), responseObserver);
    }

    /**
     */
    default void getSchooLiveTraffic(com.zhijiejiaoyu.glory_api.traffic.GetSchooLiveTrafficRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.traffic.GetSchooLiveTrafficResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetSchooLiveTrafficMethod(), responseObserver);
    }

    /**
     */
    default void listTenantTrafficConfig(com.zhijiejiaoyu.glory_api.traffic.ListTenantLiveTrafficConfigRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.traffic.ListTenantLiveTrafficConfigResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListTenantTrafficConfigMethod(), responseObserver);
    }

    /**
     */
    default void updateTenantTrafficConfig(com.zhijiejiaoyu.glory_api.traffic.UpdateTenantLiveTrafficConfigRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.traffic.UpdateTenantLiveTrafficConfigResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateTenantTrafficConfigMethod(), responseObserver);
    }

    /**
     * <pre>
     * 流量告警
     * </pre>
     */
    default void listTrafficWarning(com.zhijiejiaoyu.glory_api.traffic.ListTrafficWarningRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.traffic.ListTrafficWarningResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListTrafficWarningMethod(), responseObserver);
    }

    /**
     */
    default void deleteTrafficWarning(com.zhijiejiaoyu.glory_api.traffic.DeleteTrafficWarningRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.traffic.DeleteTrafficWarningResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteTrafficWarningMethod(), responseObserver);
    }

    /**
     * <pre>
     * 直播管控
     * </pre>
     */
    default void createLiveControl(com.zhijiejiaoyu.glory_api.live.CreateLiveControlRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateLiveControlResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateLiveControlMethod(), responseObserver);
    }

    /**
     */
    default void updateLiveControl(com.zhijiejiaoyu.glory_api.live.UpdateLiveControlRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UpdateLiveControlResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateLiveControlMethod(), responseObserver);
    }

    /**
     */
    default void listLiveControl(com.zhijiejiaoyu.glory_api.live.ListLiveControlRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListLiveControlResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListLiveControlMethod(), responseObserver);
    }

    /**
     */
    default void deleteLiveControl(com.zhijiejiaoyu.glory_api.live.DeleteLiveControlRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.DeleteLiveControlResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteLiveControlMethod(), responseObserver);
    }

    /**
     * <pre>
     * 快速评价模版
     * </pre>
     */
    default void createQuickEvaluationStandard(com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateQuickEvaluationStandardMethod(), responseObserver);
    }

    /**
     */
    default void updateQuickEvaluationStandard(com.zhijiejiaoyu.glory_api.live.UpdateQuickEvaluationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UpdateQuickEvaluationResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateQuickEvaluationStandardMethod(), responseObserver);
    }

    /**
     */
    default void deleteQuickEvaluationStandard(com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteQuickEvaluationStandardMethod(), responseObserver);
    }

    /**
     */
    default void listQuickEvaluationStandard(com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListQuickEvaluationStandardMethod(), responseObserver);
    }

    /**
     * <pre>
     *获取直播回放链接
     * </pre>
     */
    default void getLiveReplay(com.zhijiejiaoyu.glory_api.live.GetLiveReplayRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetLiveReplayResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetLiveReplayMethod(), responseObserver);
    }

    /**
     * <pre>
     * 快速评价报告
     * </pre>
     */
    default void createQuickEvaluationReport(com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationReportRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationReportResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateQuickEvaluationReportMethod(), responseObserver);
    }

    /**
     */
    default void listQuickEvaluationReport(com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationReportRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationReportResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListQuickEvaluationReportMethod(), responseObserver);
    }

    /**
     */
    default void getQuickEvaluationReport(com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationReportRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationReportResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetQuickEvaluationReportMethod(), responseObserver);
    }

    /**
     */
    default void deleteQuickEvaluationReport(com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationReportRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationReportResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteQuickEvaluationReportMethod(), responseObserver);
    }

    /**
     */
    default void getQuickEvaluationDetail(com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationDetailRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationDetailResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetQuickEvaluationDetailMethod(), responseObserver);
    }

    /**
     * <pre>
     * App 版本管理
     * </pre>
     */
    default void createVersionLog(com.zhijiejiaoyu.glory_api.course.CreateVersionLogRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateVersionLogResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateVersionLogMethod(), responseObserver);
    }

    /**
     */
    default void updateVersionLog(com.zhijiejiaoyu.glory_api.course.UpdateVersionLogRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateVersionLogResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateVersionLogMethod(), responseObserver);
    }

    /**
     */
    default void listVersionLog(com.zhijiejiaoyu.glory_api.course.ListVersionLogRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListVersionLogResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListVersionLogMethod(), responseObserver);
    }

    /**
     */
    default void deleteVersionLog(com.zhijiejiaoyu.glory_api.course.DeleteVersionLogRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteVersionLogResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteVersionLogMethod(), responseObserver);
    }

    /**
     */
    default void getLatestVersion(com.zhijiejiaoyu.glory_api.course.GetLatestVersionRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetLatestVersionResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetLatestVersionMethod(), responseObserver);
    }

    /**
     * <pre>
     * 系统预置任务管理
     * </pre>
     */
    default void getTaskConfig(com.zhijiejiaoyu.glory_api.task.GetTaskConfigRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.GetTaskConfigResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetTaskConfigMethod(), responseObserver);
    }

    /**
     */
    default void createSystemTask(com.zhijiejiaoyu.glory_api.task.CreateSystemTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CreateSystemTaskResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateSystemTaskMethod(), responseObserver);
    }

    /**
     */
    default void listSystemTask(com.zhijiejiaoyu.glory_api.task.ListSystemTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.ListSystemTaskResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListSystemTaskMethod(), responseObserver);
    }

    /**
     */
    default void getSystemTask(com.zhijiejiaoyu.glory_api.task.GetSystemTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.GetSystemTaskResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetSystemTaskMethod(), responseObserver);
    }

    /**
     */
    default void updateSystemTask(com.zhijiejiaoyu.glory_api.task.UpdateSystemTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.UpdateSystemTaskResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateSystemTaskMethod(), responseObserver);
    }

    /**
     */
    default void deleteSystemTask(com.zhijiejiaoyu.glory_api.task.DeleteSystemTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.DeleteSystemTaskResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteSystemTaskMethod(), responseObserver);
    }

    /**
     * <pre>
     * 教师任务模板
     * </pre>
     */
    default void createTeacherTaskTemplate(com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskTemplateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskTemplateResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateTeacherTaskTemplateMethod(), responseObserver);
    }

    /**
     */
    default void updateTeacherTaskTemplate(com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskTemplateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskTemplateResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateTeacherTaskTemplateMethod(), responseObserver);
    }

    /**
     */
    default void listTeacherTaskTemplate(com.zhijiejiaoyu.glory_api.task.ListTeacherTaskTemplateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.ListTeacherTaskTemplateResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListTeacherTaskTemplateMethod(), responseObserver);
    }

    /**
     */
    default void getTeacherTaskTemplate(com.zhijiejiaoyu.glory_api.task.GetTeacherTaskTemplateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.GetTeacherTaskTemplateResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetTeacherTaskTemplateMethod(), responseObserver);
    }

    /**
     */
    default void deleteTeacherTaskTemplate(com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskTemplateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskTemplateResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteTeacherTaskTemplateMethod(), responseObserver);
    }

    /**
     * <pre>
     * 教师任务管理
     * </pre>
     */
    default void createTeacherTask(com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateTeacherTaskMethod(), responseObserver);
    }

    /**
     */
    default void updateTeacherTask(com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateTeacherTaskMethod(), responseObserver);
    }

    /**
     */
    default void listTeacherTask(com.zhijiejiaoyu.glory_api.task.ListTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.ListTeacherTaskResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListTeacherTaskMethod(), responseObserver);
    }

    /**
     */
    default void getTeacherTask(com.zhijiejiaoyu.glory_api.task.GetTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.GetTeacherTaskResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetTeacherTaskMethod(), responseObserver);
    }

    /**
     */
    default void getTeacherTaskProgress(com.zhijiejiaoyu.glory_api.task.GetTeacherTaskProgressRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.GetTeacherTaskProgressResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetTeacherTaskProgressMethod(), responseObserver);
    }

    /**
     */
    default void deleteTeacherTask(com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteTeacherTaskMethod(), responseObserver);
    }

    /**
     */
    default void teacherTaskStats(com.zhijiejiaoyu.glory_api.task.TeacherTaskStatsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.TeacherTaskStatsResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getTeacherTaskStatsMethod(), responseObserver);
    }

    /**
     */
    default void teacherTaskStudents(com.zhijiejiaoyu.glory_api.task.ListTaskStudentRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.ListTaskStudentResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getTeacherTaskStudentsMethod(), responseObserver);
    }

    /**
     * <pre>
     * 教师任务统计
     * </pre>
     */
    default void countClassSubmit(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountClassSubmitResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCountClassSubmitMethod(), responseObserver);
    }

    /**
     */
    default void countClassSubmitList(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountClassSubmitListResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCountClassSubmitListMethod(), responseObserver);
    }

    /**
     */
    default void countPositiveList(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountPositiveListResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCountPositiveListMethod(), responseObserver);
    }

    /**
     */
    default void countPotentialList(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountPotentialListResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCountPotentialListMethod(), responseObserver);
    }

    /**
     */
    default void countSubmitList(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountSubmitListResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCountSubmitListMethod(), responseObserver);
    }

    /**
     */
    default void countClassPass(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountClassPassResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCountClassPassMethod(), responseObserver);
    }

    /**
     */
    default void countClassPassList(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountClassPassListResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCountClassPassListMethod(), responseObserver);
    }

    /**
     */
    default void countSuperStudentList(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountSuperStudentListResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCountSuperStudentListMethod(), responseObserver);
    }

    /**
     */
    default void countLaggingStudentList(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountLaggingStudentListResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCountLaggingStudentListMethod(), responseObserver);
    }

    /**
     */
    default void countPassList(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountPassListResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCountPassListMethod(), responseObserver);
    }

    /**
     */
    default void countHistoryTask(com.zhijiejiaoyu.glory_api.task.CountHistoryTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountHistoryTaskResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCountHistoryTaskMethod(), responseObserver);
    }

    /**
     * <pre>
     * 学生任务
     * </pre>
     */
    default void listStudentTask(com.zhijiejiaoyu.glory_api.task.ListStudentTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.ListStudentTaskResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListStudentTaskMethod(), responseObserver);
    }

    /**
     */
    default void submitStudentTask(com.zhijiejiaoyu.glory_api.task.SubmitStudentTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.SubmitStudentTaskResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getSubmitStudentTaskMethod(), responseObserver);
    }

    /**
     */
    default void getStudentTask(com.zhijiejiaoyu.glory_api.task.GetStudentTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.GetStudentTaskResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetStudentTaskMethod(), responseObserver);
    }

    /**
     */
    default void teacherListStudentTask(com.zhijiejiaoyu.glory_api.task.TeacherListStudentTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.TeacherListStudentTaskResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getTeacherListStudentTaskMethod(), responseObserver);
    }

    /**
     */
    default void teacherEvaluateStudentTask(com.zhijiejiaoyu.glory_api.task.TeacherEvaluateStudentTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.TeacherEvaluateStudentTaskResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getTeacherEvaluateStudentTaskMethod(), responseObserver);
    }

    /**
     */
    default void studentTaskStats(com.zhijiejiaoyu.glory_api.task.StudentTaskStatsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.StudentTaskStatsResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getStudentTaskStatsMethod(), responseObserver);
    }

    /**
     */
    default void studentTaskEvaluateStats(com.zhijiejiaoyu.glory_api.task.StudentTaskEvaluateStatsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.StudentTaskEvaluateStatsResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getStudentTaskEvaluateStatsMethod(), responseObserver);
    }

    /**
     */
    default void startStudentTaskTime(com.zhijiejiaoyu.glory_api.task.StartStudentTaskTimeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.StartStudentTaskTimeResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getStartStudentTaskTimeMethod(), responseObserver);
    }

    /**
     */
    default void downloadTeacherTask(com.zhijiejiaoyu.glory_api.task.DownloadTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.DownloadTeacherTaskResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDownloadTeacherTaskMethod(), responseObserver);
    }

    /**
     * <pre>
     * 通知模块
     * </pre>
     */
    default void listNotification(com.zhijiejiaoyu.glory_api.notification.ListNotificationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.notification.ListNotificationResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListNotificationMethod(), responseObserver);
    }

    /**
     */
    default void countNotification(com.zhijiejiaoyu.glory_api.notification.CountNotificationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.notification.CountNotificationResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCountNotificationMethod(), responseObserver);
    }

    /**
     */
    default void readNotification(com.zhijiejiaoyu.glory_api.notification.ReadNotificationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.notification.ReadNotificationResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getReadNotificationMethod(), responseObserver);
    }

    /**
     */
    default void testNotification(com.zhijiejiaoyu.glory_api.notification.TestNotificationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.notification.TestNotificationResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getTestNotificationMethod(), responseObserver);
    }

    /**
     */
    default void deleteNotification(com.zhijiejiaoyu.glory_api.notification.DeleteNotificationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.notification.DeleteNotificationResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteNotificationMethod(), responseObserver);
    }

    /**
     * <pre>
     * 直播大屏
     * 获取专业和班级
     * </pre>
     */
    default void listUserMajorAndClass(com.zhijiejiaoyu.glory_api.live.ListUserMajorAndClasRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListUserMajorAndClasResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListUserMajorAndClassMethod(), responseObserver);
    }

    /**
     */
    default void getAggregationLiveUrl(com.zhijiejiaoyu.glory_api.live.GetAggregationLiveUrlRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetAggregationLiveUrlResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetAggregationLiveUrlMethod(), responseObserver);
    }

    /**
     */
    default void getLiveBoardData(com.zhijiejiaoyu.glory_api.live.GetLiveBoardDataRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetLiveBoardDataResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetLiveBoardDataMethod(), responseObserver);
    }

    /**
     */
    default void getLiveBoardComments(com.zhijiejiaoyu.glory_api.live.GetLiveBoardCommentsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetLiveBoardCommentsResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetLiveBoardCommentsMethod(), responseObserver);
    }

    /**
     */
    default void listBoardLivingUser(com.zhijiejiaoyu.glory_api.live.ListLivingUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListLivingUserResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListBoardLivingUserMethod(), responseObserver);
    }

    /**
     */
    default void closeCaster(com.zhijiejiaoyu.glory_api.live.CloseCasterRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CloseCasterResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCloseCasterMethod(), responseObserver);
    }

    /**
     * <pre>
     * 智能文案
     * </pre>
     */
    default void createArticleCreation(com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateArticleCreationMethod(), responseObserver);
    }

    /**
     */
    default void listMyArticleCreation(com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListMyArticleCreationMethod(), responseObserver);
    }

    /**
     */
    default void createArticleCreationDraft(com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationDraftRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationDraftResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateArticleCreationDraftMethod(), responseObserver);
    }

    /**
     */
    default void listMyDraftArticleCreation(com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationDraftRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationDraftResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListMyDraftArticleCreationMethod(), responseObserver);
    }

    /**
     */
    default void draftArticleCreationDetail(com.zhijiejiaoyu.glory_api.short_video.ArticleCreationDraftDetailRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ArticleCreationDraftDetailResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDraftArticleCreationDetailMethod(), responseObserver);
    }

    /**
     */
    default void deleteDraftArticleCreation(com.zhijiejiaoyu.glory_api.short_video.DeleteArticleCreationDraftRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.DeleteArticleCreationDraftResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteDraftArticleCreationMethod(), responseObserver);
    }

    /**
     */
    default void articleCreationStatistics(com.zhijiejiaoyu.glory_api.short_video.ArticleCreationStatisticsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ArticleCreationStatisticsResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getArticleCreationStatisticsMethod(), responseObserver);
    }

    /**
     */
    default void getExampleArticle(com.zhijiejiaoyu.glory_api.short_video.GetExampleArticleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetExampleArticleResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetExampleArticleMethod(), responseObserver);
    }

    /**
     */
    default void getEvaluationStandard(com.zhijiejiaoyu.glory_api.short_video.GetEvaluationStandardRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetEvaluationStandardResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetEvaluationStandardMethod(), responseObserver);
    }

    /**
     */
    default void createEvaluationConfig(com.zhijiejiaoyu.glory_api.short_video.CreateEvaluationConfigRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.CreateEvaluationConfigResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateEvaluationConfigMethod(), responseObserver);
    }

    /**
     */
    default void listEvaluationConfig(com.zhijiejiaoyu.glory_api.short_video.ListEvaluationConfigRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListEvaluationConfigResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListEvaluationConfigMethod(), responseObserver);
    }

    /**
     */
    default void batchEvaluateArticleCreation(com.zhijiejiaoyu.glory_api.short_video.BatchEvaluateArticleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.BatchEvaluateArticleResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getBatchEvaluateArticleCreationMethod(), responseObserver);
    }

    /**
     */
    default void listStudentArticleCreation(com.zhijiejiaoyu.glory_api.short_video.ListStudentArticleCreationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListStudentArticleCreationResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListStudentArticleCreationMethod(), responseObserver);
    }

    /**
     */
    default void studentArticleCreationEvaluationDetail(com.zhijiejiaoyu.glory_api.short_video.StudentArticleCreationEvaluationDetailRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.StudentArticleCreationEvaluationDetailResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getStudentArticleCreationEvaluationDetailMethod(), responseObserver);
    }

    /**
     * <pre>
     * 文案纠错
     * </pre>
     */
    default void correctSentence(com.zhijiejiaoyu.glory_api.short_video.CorrectSentenceRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.CorrectSentenceResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCorrectSentenceMethod(), responseObserver);
    }

    /**
     * <pre>
     * 生成AI评价
     * </pre>
     */
    default void genArticleAiEvaluation(com.zhijiejiaoyu.glory_api.short_video.GenArticleAIEvaluationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GenArticleAIEvaluationResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGenArticleAiEvaluationMethod(), responseObserver);
    }

    /**
     * <pre>
     * 获取AI评价
     * </pre>
     */
    default void getArticleAiEvaluation(com.zhijiejiaoyu.glory_api.short_video.GetArticleAIEvaluationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetArticleAIEvaluationResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetArticleAiEvaluationMethod(), responseObserver);
    }

    /**
     * <pre>
     * 文案AI问答
     * </pre>
     */
    default void articleAiChat(com.zhijiejiaoyu.glory_api.short_video.ArticleAIChatRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ArticleAIChatResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getArticleAiChatMethod(), responseObserver);
    }

    /**
     * <pre>
     * 获取AI聊天配置
     * </pre>
     */
    default void getChatConfig(com.zhijiejiaoyu.glory_api.short_video.GetChatConfigRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetChatConfigResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetChatConfigMethod(), responseObserver);
    }

    /**
     */
    default void updateModelPrice(com.zhijiejiaoyu.glory_api.short_video.UpdateModelPriceRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.UpdateModelPriceResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateModelPriceMethod(), responseObserver);
    }

    /**
     */
    default void updateArticleCreationTenantCourse(com.zhijiejiaoyu.glory_api.short_video.UpdateTenantCourseDataRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.UpdateTenantCourseDataResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getUpdateArticleCreationTenantCourseMethod(), responseObserver);
    }

    /**
     */
    default void getArticleCreationTenant(com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetArticleCreationTenantMethod(), responseObserver);
    }

    /**
     */
    default void listArticleCreationTenant(com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListArticleCreationTenantMethod(), responseObserver);
    }

    /**
     */
    default void listArticleCreationTenantCost(com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantCostRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantCostResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListArticleCreationTenantCostMethod(), responseObserver);
    }

    /**
     */
    default void getArticleCreationTenantCost(com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantCostRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantCostResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetArticleCreationTenantCostMethod(), responseObserver);
    }

    /**
     */
    default void getSubTopicAiResult(com.zhijiejiaoyu.glory_api.short_video.GetSubTopicAiResultRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetSubTopicAiResultResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetSubTopicAiResultMethod(), responseObserver);
    }

    /**
     * <pre>
     * 数字人合成视频接口
     * </pre>
     */
    default void createDigitalVideo(com.zhijiejiaoyu.glory_api.short_video.CreateDigitalVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.CreateDigitalVideoResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getCreateDigitalVideoMethod(), responseObserver);
    }

    /**
     * <pre>
     * 查询数字人视频合成任务进度接口
     * </pre>
     */
    default void listDigitalVideo(com.zhijiejiaoyu.glory_api.short_video.ListDigitalVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListDigitalVideoResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListDigitalVideoMethod(), responseObserver);
    }

    /**
     * <pre>
     * 查询任务进度接口
     * </pre>
     */
    default void getDigitalVideo(com.zhijiejiaoyu.glory_api.short_video.GetDigitalVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetDigitalVideoResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getGetDigitalVideoMethod(), responseObserver);
    }

    /**
     * <pre>
     * 数字人模型列表接口
     * </pre>
     */
    default void listDigitalCode(com.zhijiejiaoyu.glory_api.short_video.ListDigitalCodeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListDigitalCodeResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListDigitalCodeMethod(), responseObserver);
    }

    /**
     * <pre>
     * 删除数字人视频接口
     * </pre>
     */
    default void deleteDigitalVideo(com.zhijiejiaoyu.glory_api.short_video.DeleteDigitalVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.DeleteDigitalVideoResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getDeleteDigitalVideoMethod(), responseObserver);
    }

    /**
     * <pre>
     * 数字人资产列表接口
     * </pre>
     */
    default void listDigitalAvatar(com.zhijiejiaoyu.glory_api.short_video.ListDigitalAvatarRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListDigitalAvatarResponse> responseObserver) {
      io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall(getListDigitalAvatarMethod(), responseObserver);
    }
  }

  /**
   * Base class for the server implementation of the service glory_api.
   */
  public static abstract class glory_apiImplBase
      implements io.grpc.BindableService, AsyncService {

    @java.lang.Override public final io.grpc.ServerServiceDefinition bindService() {
      return glory_apiGrpc.bindService(this);
    }
  }

  /**
   * A stub to allow clients to do asynchronous rpc calls to service glory_api.
   */
  public static final class glory_apiStub
      extends io.grpc.stub.AbstractAsyncStub<glory_apiStub> {
    private glory_apiStub(
        io.grpc.Channel channel, io.grpc.CallOptions callOptions) {
      super(channel, callOptions);
    }

    @java.lang.Override
    protected glory_apiStub build(
        io.grpc.Channel channel, io.grpc.CallOptions callOptions) {
      return new glory_apiStub(channel, callOptions);
    }

    /**
     * <pre>
     * endpoint /api/example/create_example, create example
     * </pre>
     */
    public void createExample(com.zhijiejiaoyu.glory_api.example.CreateExampleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.example.CreateExampleResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateExampleMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * endpoint /api/example/get_example, get_example
     * </pre>
     */
    public void getExample(com.zhijiejiaoyu.glory_api.example.GetExampleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.example.GetExampleResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetExampleMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * endpoint /api/example/update_example, update_example
     * </pre>
     */
    public void updateExample(com.zhijiejiaoyu.glory_api.example.UpdateExampleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.example.UpdateExampleResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateExampleMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * endpoint /api/example/list_example, list example
     * </pre>
     */
    public void listExample(com.zhijiejiaoyu.glory_api.example.ListExampleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.example.ListExampleResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListExampleMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * endpoint /api/example/delete_example, delete example
     * </pre>
     */
    public void deleteExample(com.zhijiejiaoyu.glory_api.example.DeleteExampleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.example.DeleteExampleResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteExampleMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     *user
     * </pre>
     */
    public void login(com.zhijiejiaoyu.glory_api.user.LoginRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.LoginResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getLoginMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void logout(com.zhijiejiaoyu.glory_api.user.LogoutRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.LogoutResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getLogoutMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteUser(com.zhijiejiaoyu.glory_api.user.DeleteUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.DeleteUserResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteUserMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listOwnAccess(com.zhijiejiaoyu.glory_api.user.ListOwnAccessRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListOwnAccessResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListOwnAccessMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getVerifyCode(com.zhijiejiaoyu.glory_api.user.GetVerifyCodeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GetVerifyCodeResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetVerifyCodeMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void checkVerifyCode(com.zhijiejiaoyu.glory_api.user.CheckVerifyCodeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.CheckVerifyCodeResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCheckVerifyCodeMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getUser(com.zhijiejiaoyu.glory_api.user.GetUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GetUserResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetUserMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getUserByPhone(com.zhijiejiaoyu.glory_api.user.GetUserByPhoneRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GetUserByPhoneResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetUserByPhoneMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void loginWithPassword(com.zhijiejiaoyu.glory_api.user.LoginWithPasswordRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.LoginWithPasswordResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getLoginWithPasswordMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updatePassword(com.zhijiejiaoyu.glory_api.user.UpdatePasswordRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.UpdatePasswordResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdatePasswordMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateUser(com.zhijiejiaoyu.glory_api.user.UpdateUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.UpdateUserResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateUserMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updatePhone(com.zhijiejiaoyu.glory_api.user.UpdatePhoneRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.UpdatePhoneResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdatePhoneMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 获取用户的所有专业[select]
     * </pre>
     */
    public void getUserMajor(com.zhijiejiaoyu.glory_api.user.GetUserMajorRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GetUserMajorResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetUserMajorMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateUserTenant(com.zhijiejiaoyu.glory_api.user.UpdateUserTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.UpdateUserTenantResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateUserTenantMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 用户列表[用户名+头像]
     * </pre>
     */
    public void listUser(com.zhijiejiaoyu.glory_api.user.ListUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListUserResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListUserMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 绑定微信接口
     * </pre>
     */
    public void userBindWechat(com.zhijiejiaoyu.glory_api.user.UserBindWechatRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.UserBindWechatResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUserBindWechatMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 微信解绑接口
     * </pre>
     */
    public void userUnbindWechat(com.zhijiejiaoyu.glory_api.user.UserUnbindWechatRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.UserUnbindWechatResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUserUnbindWechatMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 关注用户
     * </pre>
     */
    public void followUser(com.zhijiejiaoyu.glory_api.user.FollowUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.FollowUserResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getFollowUserMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 我的关注列表
     * </pre>
     */
    public void listMyFollowing(com.zhijiejiaoyu.glory_api.user.ListMyFollowingRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListMyFollowingResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListMyFollowingMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 我的粉丝列表
     * </pre>
     */
    public void listMyFollower(com.zhijiejiaoyu.glory_api.user.ListMyFollowerRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListMyFollowerResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListMyFollowerMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 我的朋友列表
     * </pre>
     */
    public void listMyFriend(com.zhijiejiaoyu.glory_api.user.ListMyFriendRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListMyFriendResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListMyFriendMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 我的社交信息
     * </pre>
     */
    public void getMySocialSummary(com.zhijiejiaoyu.glory_api.user.GetMySocialSummaryRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GetMySocialSummaryResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetMySocialSummaryMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * page permission
     * </pre>
     */
    public void getUserPagePermission(com.zhijiejiaoyu.glory_api.user.GetUserPagePermissionRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GetUserPagePermissionResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetUserPagePermissionMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void createRolePagePermission(com.zhijiejiaoyu.glory_api.user.CreateRolePagePermissionRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.CreateRolePagePermissionResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateRolePagePermissionMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateRolePagePermission(com.zhijiejiaoyu.glory_api.user.UpdateRolePagePermissionRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.UpdateRolePagePermissionResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateRolePagePermissionMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getRolePagePermission(com.zhijiejiaoyu.glory_api.user.GetRolePagePermissionRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GetRolePagePermissionResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetRolePagePermissionMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * address
     * </pre>
     */
    public void addAddress(com.zhijiejiaoyu.glory_api.user.AddAddressRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.AddAddressResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getAddAddressMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteAddress(com.zhijiejiaoyu.glory_api.user.DeleteAddressRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.DeleteAddressResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteAddressMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateAddress(com.zhijiejiaoyu.glory_api.user.UpdateAddressRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.UpdateAddressResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateAddressMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getAddress(com.zhijiejiaoyu.glory_api.user.GetAddressRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GetAddressResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetAddressMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listAddress(com.zhijiejiaoyu.glory_api.user.ListAddressRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListAddressResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListAddressMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listUserByRole(com.zhijiejiaoyu.glory_api.user.ListUserByRoleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListUserByRoleResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListUserByRoleMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * user permission
     *list the permissions that supported
     * </pre>
     */
    public void listPermission(com.zhijiejiaoyu.glory_api.user.ListPermissionRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListPermissionResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListPermissionMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listRole(com.zhijiejiaoyu.glory_api.user.ListRoleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListRoleResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListRoleMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void giveRolePermission(com.zhijiejiaoyu.glory_api.user.GiveRolePermissionRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GiveRolePermissionResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGiveRolePermissionMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void removeRolePermission(com.zhijiejiaoyu.glory_api.user.RemoveRolePermissionRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.RemoveRolePermissionResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getRemoveRolePermissionMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void createRole(com.zhijiejiaoyu.glory_api.user.CreateRoleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.CreateRoleResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateRoleMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteRole(com.zhijiejiaoyu.glory_api.user.DeleteRoleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.DeleteRoleResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteRoleMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listResource(com.zhijiejiaoyu.glory_api.user.ListResourceRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListResourceResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListResourceMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getRoleType(com.zhijiejiaoyu.glory_api.user.GetRoleTypeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GetRoleTypeResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetRoleTypeMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getRoleTemplate(com.zhijiejiaoyu.glory_api.role.GetRoleTemplateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.role.GetRoleTemplateResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetRoleTemplateMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateRoleTemplate(com.zhijiejiaoyu.glory_api.role.UpdateRoleTemplateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.role.UpdateRoleTemplateResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateRoleTemplateMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * shop
     * </pre>
     */
    public void createShop(com.zhijiejiaoyu.glory_api.shop.CreateShopRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CreateShopResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateShopMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getShop(com.zhijiejiaoyu.glory_api.shop.GetShopRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetShopResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetShopMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateShop(com.zhijiejiaoyu.glory_api.shop.UpdateShopRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateShopResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateShopMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listShop(com.zhijiejiaoyu.glory_api.shop.ListShopRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListShopResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListShopMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteShop(com.zhijiejiaoyu.glory_api.shop.DeleteShopRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteShopResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteShopMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listOperationMetrics(com.zhijiejiaoyu.glory_api.shop.ListOperationMetricsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListOperationMetricsResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListOperationMetricsMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getShopQrcode(com.zhijiejiaoyu.glory_api.shop.GetShopQrcodeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetShopQrcodeResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetShopQrcodeMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateShopManager(com.zhijiejiaoyu.glory_api.shop.UpdateShopManagerRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateShopManagerResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateShopManagerMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getShopBusinessData(com.zhijiejiaoyu.glory_api.shop.GetShopBusinessDataRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetShopBusinessDataResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetShopBusinessDataMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void addShopAccess(com.zhijiejiaoyu.glory_api.shop.AddShopAccessRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.AddShopAccessResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getAddShopAccessMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void removeShopAccess(com.zhijiejiaoyu.glory_api.shop.RemoveShopAccessRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.RemoveShopAccessResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getRemoveShopAccessMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void verifyField(com.zhijiejiaoyu.glory_api.shop.VerifyFieldRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.VerifyFieldResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getVerifyFieldMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listShopAccess(com.zhijiejiaoyu.glory_api.shop.ListShopAccessRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListShopAccessResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListShopAccessMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void addShopCategory(com.zhijiejiaoyu.glory_api.shop.AddShopCategoryRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.AddShopCategoryResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getAddShopCategoryMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getShopCategory(com.zhijiejiaoyu.glory_api.shop.GetShopCategoryRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetShopCategoryResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetShopCategoryMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void removeShopCategory(com.zhijiejiaoyu.glory_api.shop.RemoveShopCategoryRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.RemoveShopCategoryResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getRemoveShopCategoryMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void addFreightTemplate(com.zhijiejiaoyu.glory_api.shop.CreateTemplateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CreateTemplateResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getAddFreightTemplateMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getFreightTemplate(com.zhijiejiaoyu.glory_api.shop.GetTemplateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetTemplateResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetFreightTemplateMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateFreightTemplate(com.zhijiejiaoyu.glory_api.shop.UpdateTemplateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateTemplateResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateFreightTemplateMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteFreightTemplate(com.zhijiejiaoyu.glory_api.shop.DeleteTemplateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteTemplateResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteFreightTemplateMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listFreightTemplate(com.zhijiejiaoyu.glory_api.shop.ListTemplateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListTemplateResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListFreightTemplateMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listQualification(com.zhijiejiaoyu.glory_api.shop.ListShopQualificationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListShopQualificationResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListQualificationMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     *mall
     * </pre>
     */
    public void getMallIndex(com.zhijiejiaoyu.glory_api.mall.MallIndexRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.mall.MallIndexResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetMallIndexMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * product category
     * </pre>
     */
    public void createCategory(com.zhijiejiaoyu.glory_api.shop.CreateCategoryRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CreateCategoryResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateCategoryMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getCategory(com.zhijiejiaoyu.glory_api.shop.GetCategoryRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetCategoryResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetCategoryMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateCategory(com.zhijiejiaoyu.glory_api.shop.UpdateCategoryRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateCategoryResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateCategoryMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listCategory(com.zhijiejiaoyu.glory_api.shop.ListCategoryRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListCategoryResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListCategoryMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteCategory(com.zhijiejiaoyu.glory_api.shop.DeleteCategoryRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteCategoryResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteCategoryMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     *category qualification
     * </pre>
     */
    public void listCategoryQualification(com.zhijiejiaoyu.glory_api.shop.ListCategoryQualificationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListCategoryQualificationResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListCategoryQualificationMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * product product
     * </pre>
     */
    public void createProduct(com.zhijiejiaoyu.glory_api.shop.CreateProductRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CreateProductResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateProductMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getProduct(com.zhijiejiaoyu.glory_api.shop.GetProductRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetProductResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetProductMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateProduct(com.zhijiejiaoyu.glory_api.shop.UpdateProductRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateProductResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateProductMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listProduct(com.zhijiejiaoyu.glory_api.shop.ListProductRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListProductResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListProductMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listProductByIDs(com.zhijiejiaoyu.glory_api.shop.ListProductByProductIDsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListProductByProductIDsResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListProductByIDsMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteProduct(com.zhijiejiaoyu.glory_api.shop.DeleteProductRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteProductResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteProductMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void uploadMultiImage(com.zhijiejiaoyu.glory_api.shop.UploadMultiImageRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UploadMultiImageResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUploadMultiImageMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteImageById(com.zhijiejiaoyu.glory_api.shop.DeleteImageRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteImageResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteImageByIdMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void bindAttribute(com.zhijiejiaoyu.glory_api.shop.BindAttributeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.BindAttributeResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getBindAttributeMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void publishProduct(com.zhijiejiaoyu.glory_api.shop.PublishProductRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.PublishProductResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getPublishProductMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void offShelfProductInBatches(com.zhijiejiaoyu.glory_api.shop.OffSelfProductsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.OffSelfProductsResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getOffShelfProductInBatchesMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteProductInBatches(com.zhijiejiaoyu.glory_api.shop.DeleteProductsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteProductsResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteProductInBatchesMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void changeProductsState(com.zhijiejiaoyu.glory_api.shop.ChangeProductStateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ChangeProductStateResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getChangeProductsStateMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void saveProductImageInfo(com.zhijiejiaoyu.glory_api.shop.SaveImageInfoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.SaveImageInfoResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getSaveProductImageInfoMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * sku sku
     * </pre>
     */
    public void createSku(com.zhijiejiaoyu.glory_api.shop.CreateSkuRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CreateSkuResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateSkuMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getSku(com.zhijiejiaoyu.glory_api.shop.GetSkuRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetSkuResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetSkuMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateSku(com.zhijiejiaoyu.glory_api.shop.UpdateSkuRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateSkuResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateSkuMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listSku(com.zhijiejiaoyu.glory_api.shop.ListSkuRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListSkuResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListSkuMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteSku(com.zhijiejiaoyu.glory_api.shop.DeleteSkuRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteSkuResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteSkuMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * attribute
     * </pre>
     */
    public void createAttribute(com.zhijiejiaoyu.glory_api.shop.CreateAttributeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CreateAttributeResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateAttributeMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getAttribute(com.zhijiejiaoyu.glory_api.shop.GetAttributeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetAttributeResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetAttributeMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listAttribute(com.zhijiejiaoyu.glory_api.shop.ListAttributeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListAttributeResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListAttributeMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteAttribute(com.zhijiejiaoyu.glory_api.shop.DeleteAttributeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteAttributeResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteAttributeMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void addAttributeValue(com.zhijiejiaoyu.glory_api.shop.AddAttributeValueRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.AddAttributeValueResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getAddAttributeValueMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteAttributeValue(com.zhijiejiaoyu.glory_api.shop.DeleteAttributeValueRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteAttributeValueResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteAttributeValueMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * order
     * </pre>
     */
    public void createOrder(com.zhijiejiaoyu.glory_api.shop.CreateOrderRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CreateOrderResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateOrderMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getOrder(com.zhijiejiaoyu.glory_api.shop.GetOrderRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetOrderResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetOrderMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateOrder(com.zhijiejiaoyu.glory_api.shop.UpdateOrderRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateOrderResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateOrderMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listOrder(com.zhijiejiaoyu.glory_api.shop.ListOrderRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListOrderResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListOrderMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteOrder(com.zhijiejiaoyu.glory_api.shop.DeleteOrderRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteOrderResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteOrderMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void shipGoods(com.zhijiejiaoyu.glory_api.shop.ShipGoodsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ShipGoodsResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getShipGoodsMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void confirmReceiptGoods(com.zhijiejiaoyu.glory_api.shop.ConfirmReceiptGoodsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ConfirmReceiptGoodsResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getConfirmReceiptGoodsMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getOrderStatus(com.zhijiejiaoyu.glory_api.shop.GetOrderStatusRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetOrderStatusResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetOrderStatusMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void cancelOrder(com.zhijiejiaoyu.glory_api.shop.CancelOrderRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CancelOrderResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCancelOrderMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void shipGoodsInBatches(com.zhijiejiaoyu.glory_api.shop.ShipGoodsInBatchesRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ShipGoodsInBatchesResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getShipGoodsInBatchesMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void freeShippingInBatches(com.zhijiejiaoyu.glory_api.shop.FreeShippingInBatchesRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.FreeShippingInBatchesResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getFreeShippingInBatchesMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listShopSummary(com.zhijiejiaoyu.glory_api.shop.ListShopSummaryRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListShopSummaryResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListShopSummaryMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listShopBySellerID(com.zhijiejiaoyu.glory_api.shop.ListShopBySellerIDRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListShopBySellerIDResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListShopBySellerIDMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * cart
     * </pre>
     */
    public void createCart(com.zhijiejiaoyu.glory_api.shop.AddCartRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.AddCartResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateCartMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getCart(com.zhijiejiaoyu.glory_api.shop.GetCartRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetCartResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetCartMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateCart(com.zhijiejiaoyu.glory_api.shop.UpdateCartRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateCartResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateCartMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteCart(com.zhijiejiaoyu.glory_api.shop.DeleteCartRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteCartResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteCartMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * seller
     * </pre>
     */
    public void uploadAttachment(com.zhijiejiaoyu.glory_api.seller.UploadAttachmentRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.seller.UploadAttachmentResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUploadAttachmentMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void saveAttachment(com.zhijiejiaoyu.glory_api.seller.SaveAttachmentRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.seller.SaveAttachmentResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getSaveAttachmentMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listAttachment(com.zhijiejiaoyu.glory_api.seller.ListAttachmentRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.seller.ListAttachmentResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListAttachmentMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteAttachment(com.zhijiejiaoyu.glory_api.seller.DeleteAttachmentRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.seller.DeleteAttachmentResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteAttachmentMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void createSeller(com.zhijiejiaoyu.glory_api.seller.CreateSellerRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.seller.CreateSellerResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateSellerMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * payment
     * </pre>
     */
    public void createPayment(com.zhijiejiaoyu.glory_api.payment.CreatePaymentRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.payment.CreatePaymentResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreatePaymentMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getPayment(com.zhijiejiaoyu.glory_api.payment.GetPaymentRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.payment.GetPaymentResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetPaymentMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updatePayment(com.zhijiejiaoyu.glory_api.payment.UpdatePaymentRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.payment.UpdatePaymentResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdatePaymentMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deletePayment(com.zhijiejiaoyu.glory_api.payment.DeletePaymentRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.payment.DeletePaymentResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeletePaymentMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void wechatPaymentNotify(com.zhijiejiaoyu.glory_api.payment.WechatPaymentNotifyRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.payment.WechatPaymentNotifyResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getWechatPaymentNotifyMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     *admin_config
     * </pre>
     */
    public void createConfig(com.zhijiejiaoyu.glory_api.admin.CreateConfigRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.CreateConfigResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateConfigMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateConfig(com.zhijiejiaoyu.glory_api.admin.UpdateConfigRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.UpdateConfigResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateConfigMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteConfig(com.zhijiejiaoyu.glory_api.admin.DeleteConfigRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.DeleteConfigResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteConfigMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getConfig(com.zhijiejiaoyu.glory_api.admin.GetConfigRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.GetConfigResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetConfigMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     *admin_other
     * </pre>
     */
    public void getSTS(com.zhijiejiaoyu.glory_api.admin.GetSTSRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.GetSTSResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetSTSMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void generateWebofficeToken(com.zhijiejiaoyu.glory_api.admin.GenerateWebofficeTokenRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.GenerateWebofficeTokenResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGenerateWebofficeTokenMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void refreshWebofficeToken(com.zhijiejiaoyu.glory_api.admin.RefreshWebofficeTokenRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.RefreshWebofficeTokenResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getRefreshWebofficeTokenMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listTenantOrg(com.zhijiejiaoyu.glory_api.admin.ListTenantOrgRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.ListTenantOrgResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListTenantOrgMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     *admin_user
     * </pre>
     */
    public void getAdminTenant(com.zhijiejiaoyu.glory_api.admin.GetAdminTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.GetAdminTenantResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetAdminTenantMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listAdminUser(com.zhijiejiaoyu.glory_api.admin.ListAdminUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.ListAdminUserResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListAdminUserMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void createAdminUser(com.zhijiejiaoyu.glory_api.admin.CreateAdminUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.CreateAdminUserResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateAdminUserMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateAdminUser(com.zhijiejiaoyu.glory_api.admin.UpdateAdminUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.UpdateAdminUserResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateAdminUserMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteAdminUser(com.zhijiejiaoyu.glory_api.admin.DeleteAdminUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.DeleteAdminUserResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteAdminUserMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * wxpay
     * </pre>
     */
    public void wxPrepay(com.zhijiejiaoyu.glory_api.wxpay.PrepayRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.wxpay.PrepayResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getWxPrepayMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void closeOrder(com.zhijiejiaoyu.glory_api.wxpay.CloseOrderRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.wxpay.CloseOrderResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCloseOrderMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void queryOrderById(com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByIdRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByIdResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getQueryOrderByIdMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void queryOrderByOutTrade(com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByOutTradeNoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByOutTradeNoResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getQueryOrderByOutTradeMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     *virtual currency  虚拟币（成长币）
     * </pre>
     */
    public void addVCurrency(com.zhijiejiaoyu.glory_api.currency.AddVirtualCurrencyRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.currency.AddVirtualCurrencyResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getAddVCurrencyMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void rechargeCurrency(com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getRechargeCurrencyMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void rechargeCurrencyInBatches(com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyInBatchesRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyInBatchesResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getRechargeCurrencyInBatchesMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getVCurrency(com.zhijiejiaoyu.glory_api.currency.GetVirtualCurrencyRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.currency.GetVirtualCurrencyResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetVCurrencyMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listVCurrency(com.zhijiejiaoyu.glory_api.currency.ListVirtualCurrencyRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.currency.ListVirtualCurrencyResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListVCurrencyMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listAccountOperation(com.zhijiejiaoyu.glory_api.account.ListAccountOperationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.account.ListAccountOperationResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListAccountOperationMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * live
     * </pre>
     */
    public void createRoom(com.zhijiejiaoyu.glory_api.live.CreateRoomRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateRoomResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateRoomMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getRoom(com.zhijiejiaoyu.glory_api.live.GetRoomRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetRoomResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetRoomMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateRoom(com.zhijiejiaoyu.glory_api.live.UpdateRoomRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UpdateRoomResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateRoomMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listRoom(com.zhijiejiaoyu.glory_api.live.ListRoomRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListRoomResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListRoomMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteRoom(com.zhijiejiaoyu.glory_api.live.DeleteRoomRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.DeleteRoomResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteRoomMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listFinishedRoom(com.zhijiejiaoyu.glory_api.live.ListFinishedRoomRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListFinishedRoomResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListFinishedRoomMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getFinishedRoom(com.zhijiejiaoyu.glory_api.live.GetFinishedRoomRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetFinishedRoomResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetFinishedRoomMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void record(com.zhijiejiaoyu.glory_api.live.LiveRecordRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.LiveRecordResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getRecordMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void createLiveUserToken(com.zhijiejiaoyu.glory_api.live.CreateLiveUserTokenRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateLiveUserTokenResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateLiveUserTokenMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void createNewLiveUserToken(com.zhijiejiaoyu.glory_api.live.CreateNewMessageTokenRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateNewMessageTokenResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateNewLiveUserTokenMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void userEnterRoom(com.zhijiejiaoyu.glory_api.live.UserEnterRoomRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UserEnterRoomResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUserEnterRoomMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void userExitRoom(com.zhijiejiaoyu.glory_api.live.UserExitRoomRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UserExitRoomResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUserExitRoomMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listActiveRoomUser(com.zhijiejiaoyu.glory_api.live.ListActiveRoomUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.seller.ListAttachmentResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListActiveRoomUserMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void liveSSE(com.zhijiejiaoyu.glory_api.live.LiveSSERequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.LiveSSEResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getLiveSSEMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void closeShopAllLive(com.zhijiejiaoyu.glory_api.live.CloseShopAllLiveRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CloseShopAllLiveResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCloseShopAllLiveMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateLiveCommentCount(com.zhijiejiaoyu.glory_api.live.UpdateLiveCommentCountRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UpdateLiveCommentCountResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateLiveCommentCountMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * live plan
     * live plan crud
     * </pre>
     */
    public void createLivePlan(com.zhijiejiaoyu.glory_api.live.CreateLivePlanRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateLivePlanResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateLivePlanMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getLivePlan(com.zhijiejiaoyu.glory_api.live.GetLivePlanRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetLivePlanResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetLivePlanMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateLivePlan(com.zhijiejiaoyu.glory_api.live.UpdateLivePlanRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UpdateLivePlanResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateLivePlanMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listLivePlan(com.zhijiejiaoyu.glory_api.live.ListLivePlanRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListLivePlanResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListLivePlanMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteLivePlan(com.zhijiejiaoyu.glory_api.live.DeleteLivePlanRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.DeleteLivePlanResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteLivePlanMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * live plan prod crud
     * CreateLivePlanProduct create live plan product
     * </pre>
     */
    public void createLivePlanProduct(com.zhijiejiaoyu.glory_api.live.CreateLivePlanProductRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateLivePlanProductResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateLivePlanProductMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateLivePlanProduct(com.zhijiejiaoyu.glory_api.live.UpdateLivePlanProductRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UpdateLivePlanProductResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateLivePlanProductMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listLivePlanProduct(com.zhijiejiaoyu.glory_api.live.ListLivePlanProductRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListLivePlanProductResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListLivePlanProductMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteLivePlanProduct(com.zhijiejiaoyu.glory_api.live.DeleteLivePlanProductRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.DeleteLivePlanProductResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteLivePlanProductMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void loadLivePlanProduct(com.zhijiejiaoyu.glory_api.live.LoadLivePlanProductRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.LoadLivePlanProductResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getLoadLivePlanProductMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateLiveProductStatus(com.zhijiejiaoyu.glory_api.live.UpdateLiveProductStatusRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UpdateLiveProductStatusResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateLiveProductStatusMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listLiveProductStatus(com.zhijiejiaoyu.glory_api.live.ListLiveProductStatusRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListLiveProductStatusResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListLiveProductStatusMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteLiveProductStatus(com.zhijiejiaoyu.glory_api.live.DeleteLiveProductStatusRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.DeleteLiveProductStatusResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteLiveProductStatusMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void createLiveProductStatus(com.zhijiejiaoyu.glory_api.live.CreateLiveProductStatusRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateLiveProductStatusResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateLiveProductStatusMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getLivingProductStatus(com.zhijiejiaoyu.glory_api.live.GetLivingProductStatusRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetLivingProductStatusResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetLivingProductStatusMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateLiveProductIntroductStatus(com.zhijiejiaoyu.glory_api.live.UpdateLiveProductIntroductStatusRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UpdateLiveProductIntroductStatusResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateLiveProductIntroductStatusMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * live text crud
     * </pre>
     */
    public void createLiveText(com.zhijiejiaoyu.glory_api.live.CreateLiveTextRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateLiveTextResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateLiveTextMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateLiveText(com.zhijiejiaoyu.glory_api.live.UpdateLiveTextRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UpdateLiveTextResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateLiveTextMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listLiveText(com.zhijiejiaoyu.glory_api.live.ListLiveTextRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListLiveTextResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListLiveTextMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getLiveText(com.zhijiejiaoyu.glory_api.live.GetLiveTextRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetLiveTextResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetLiveTextMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteLiveTexts(com.zhijiejiaoyu.glory_api.live.DeleteLiveTextsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.DeleteLiveTextsResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteLiveTextsMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void teacherListStudentShortVideoText(com.zhijiejiaoyu.glory_api.live.TeacherListStudentShortVideoTextRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.TeacherListStudentShortVideoTextResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getTeacherListStudentShortVideoTextMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * live chart
     * </pre>
     */
    public void getLiveChartData(com.zhijiejiaoyu.glory_api.live.GetLiveChartDataRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetLiveChartDataResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetLiveChartDataMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * live evaluate
     * </pre>
     */
    public void getEvaluateSelector(com.zhijiejiaoyu.glory_api.live.GetEvaluateSelectorRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetEvaluateSelectorResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetEvaluateSelectorMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listPersonalEvaluate(com.zhijiejiaoyu.glory_api.live.ListPersonalEvaluateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListPersonalEvaluateResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListPersonalEvaluateMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getEvaluateDetail(com.zhijiejiaoyu.glory_api.live.GetEvaluateDetailRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetEvaluateDetailResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetEvaluateDetailMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void submitEvaluate(com.zhijiejiaoyu.glory_api.live.SubmitEvaluateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.SubmitEvaluateResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getSubmitEvaluateMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listUnevaluatedRoom(com.zhijiejiaoyu.glory_api.live.ListUnevaluatedRoomRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListUnevaluatedRoomResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListUnevaluatedRoomMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listStudentEvaluations(com.zhijiejiaoyu.glory_api.live.ListStudentEvalutionsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListStudentEvalutionsResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListStudentEvaluationsMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void ignoreEvaluation(com.zhijiejiaoyu.glory_api.live.IgnoreLiveEvaluationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.IgnoreLiveEvaluationResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getIgnoreEvaluationMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getRank(com.zhijiejiaoyu.glory_api.live.GetRankRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetRankResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetRankMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void recordLiveCallback(com.zhijiejiaoyu.glory_api.live.RecordLiveCallbackRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.RecordLiveCallbackResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getRecordLiveCallbackMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void videoToTextCallback(com.zhijiejiaoyu.glory_api.live.VideoToTextCallbackRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.VideoToTextCallbackResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getVideoToTextCallbackMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void liveStreamCallback(com.zhijiejiaoyu.glory_api.live.LiveStreamCallbackRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.LiveStreamCallbackResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getLiveStreamCallbackMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void regenerationAiFeedback(com.zhijiejiaoyu.glory_api.live.RegenerationAiFeedbackRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.RegenerationAiFeedbackResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getRegenerationAiFeedbackMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void submitUserAttitudeForAiResult(com.zhijiejiaoyu.glory_api.live.SubmitUserAttitudeForAIResultRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.SubmitUserAttitudeForAIResultResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getSubmitUserAttitudeForAiResultMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void preheatProduct(com.zhijiejiaoyu.glory_api.live.PreheatRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.PreheatResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getPreheatProductMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void publicPrice(com.zhijiejiaoyu.glory_api.live.PublicPriceRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.PublicPriceResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getPublicPriceMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     *tenant
     * </pre>
     */
    public void listTenantSystem(com.zhijiejiaoyu.glory_api.tenant.ListTenantSystemRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.ListTenantSystemResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListTenantSystemMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void createTenant(com.zhijiejiaoyu.glory_api.tenant.CreateTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.CreateTenantResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateTenantMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getTenant(com.zhijiejiaoyu.glory_api.tenant.GetTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.GetTenantResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetTenantMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateTenant(com.zhijiejiaoyu.glory_api.tenant.UpdateTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateTenantMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteTenant(com.zhijiejiaoyu.glory_api.tenant.DeleteTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.DeleteTenantResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteTenantMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listTenant(com.zhijiejiaoyu.glory_api.tenant.ListTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.ListTenantResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListTenantMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getTenantOrg(com.zhijiejiaoyu.glory_api.tenant.GetTenantOrgRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.GetTenantOrgResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetTenantOrgMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void enterTenant(com.zhijiejiaoyu.glory_api.tenant.EnterTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.EnterTenantResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getEnterTenantMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void exitTenant(com.zhijiejiaoyu.glory_api.tenant.ExitTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.ExitTenantResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getExitTenantMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void isEnterTenant(com.zhijiejiaoyu.glory_api.tenant.IsEnterTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.IsTenantResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getIsEnterTenantMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void initTenant(com.zhijiejiaoyu.glory_api.tenant.InitTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.InitTenantResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getInitTenantMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void createTenantCourse(com.zhijiejiaoyu.glory_api.tenant.CreateTenantCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.CreateTenantCourseResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateTenantCourseMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listTenantCourse(com.zhijiejiaoyu.glory_api.tenant.ListTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.ListTenantResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListTenantCourseMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     *tenant_dept
     * </pre>
     */
    public void createTenantDept(com.zhijiejiaoyu.glory_api.tenant.CreateTenantDeptRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.CreateTenantDeptResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateTenantDeptMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateTenantDept(com.zhijiejiaoyu.glory_api.tenant.UpdateTenantDeptRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantDeptResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateTenantDeptMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteTenantDept(com.zhijiejiaoyu.glory_api.tenant.DeleteTenantDeptRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.DeleteTenantDeptResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteTenantDeptMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getTenantDept(com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetTenantDeptMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 获取所有部门类型[select]
     * </pre>
     */
    public void getTenantDeptType(com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptTypeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptTypeResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetTenantDeptTypeMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listTenantDept(com.zhijiejiaoyu.glory_api.tenant.ListTenantDeptRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.ListTenantDeptResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListTenantDeptMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * tenant_user
     * </pre>
     */
    public void createTenantUser(com.zhijiejiaoyu.glory_api.tenant.CreateTenantUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.CreateTenantUserResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateTenantUserMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteTenantUser(com.zhijiejiaoyu.glory_api.tenant.DeleteTenantUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.DeleteTenantUserResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteTenantUserMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateTenantUser(com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateTenantUserMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getTenantUser(com.zhijiejiaoyu.glory_api.tenant.GetTenantUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.GetTenantUserResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetTenantUserMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listTenantUser(com.zhijiejiaoyu.glory_api.tenant.ListTenantUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.ListTenantUserResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListTenantUserMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listTenantStudent(com.zhijiejiaoyu.glory_api.tenant.ListTenantStudentRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.ListTenantStudentResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListTenantStudentMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateTenantUserPassword(com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserPasswordRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserPasswordResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateTenantUserPasswordMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     *tenant_config
     * </pre>
     */
    public void updateTenantConfig(com.zhijiejiaoyu.glory_api.tenant.UpdateTenantConfigRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantConfigResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateTenantConfigMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listTenantConfig(com.zhijiejiaoyu.glory_api.tenant.ListTenantConfigRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.ListTenantConfigResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListTenantConfigMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * short_video
     * </pre>
     */
    public void createShortVideo(com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateShortVideoMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void stageShortVideo(com.zhijiejiaoyu.glory_api.short_video.StageShortVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.StageShortVideoResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getStageShortVideoMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 我的短视频列表
     * </pre>
     */
    public void listMyShortVideo(com.zhijiejiaoyu.glory_api.short_video.ListMyShortVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListMyShortVideoResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListMyShortVideoMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 我的暂存视频列表
     * </pre>
     */
    public void listMyStageVideo(com.zhijiejiaoyu.glory_api.short_video.ListMyStageVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListMyStageVideoResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListMyStageVideoMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 我的喜欢视频列表
     * </pre>
     */
    public void listMyLikeVideo(com.zhijiejiaoyu.glory_api.short_video.ListMyLikeVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListMyLikeVideoResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListMyLikeVideoMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 我的收藏视频列表
     * </pre>
     */
    public void listMyFavoriteVideo(com.zhijiejiaoyu.glory_api.short_video.ListMyFavoriteVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListMyFavoriteVideoResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListMyFavoriteVideoMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 获取短视频详情
     * </pre>
     */
    public void getShortVideo(com.zhijiejiaoyu.glory_api.short_video.GetShortVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetShortVideoResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetShortVideoMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 更新短视频详情
     * </pre>
     */
    public void updateShortVideo(com.zhijiejiaoyu.glory_api.short_video.UpdateShortVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.UpdateShortVideoResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateShortVideoMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 删除短视频
     * </pre>
     */
    public void deleteShortVideo(com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteShortVideoMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 获取暂存视频详情
     * </pre>
     */
    public void getStageVideo(com.zhijiejiaoyu.glory_api.short_video.GetStageVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetStageVideoResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetStageVideoMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 删除暂存视频
     * </pre>
     */
    public void deleteStageVideo(com.zhijiejiaoyu.glory_api.short_video.DeleteStageVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.DeleteStageVideoResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteStageVideoMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateStageVideo(com.zhijiejiaoyu.glory_api.short_video.UpdateStageVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.UpdateStageVideoResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateStageVideoMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 平台短短视频列表
     * </pre>
     */
    public void managementListShortVideo(com.zhijiejiaoyu.glory_api.short_video.ManagementListShortVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ManagementListShortVideoResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getManagementListShortVideoMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 平台审核短视频
     * </pre>
     */
    public void managementCensorShortVideo(com.zhijiejiaoyu.glory_api.short_video.ManagementCensorShortVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ManagementCensorShortVideoResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getManagementCensorShortVideoMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 平台删除短视频
     * </pre>
     */
    public void managementDeleteShortVideo(com.zhijiejiaoyu.glory_api.short_video.ManagementDeleteShortVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ManagementDeleteShortVideoResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getManagementDeleteShortVideoMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * APP首页短视频列表
     * </pre>
     */
    public void listShortVideo(com.zhijiejiaoyu.glory_api.short_video.ListShortVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListShortVideoResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListShortVideoMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 点赞短视频
     * </pre>
     */
    public void likeShortVideo(com.zhijiejiaoyu.glory_api.short_video.LikeShortVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.LikeShortVideoResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getLikeShortVideoMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 收藏短视频
     * </pre>
     */
    public void favoriteShortVideo(com.zhijiejiaoyu.glory_api.short_video.FavoriteShortVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.FavoriteShortVideoResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getFavoriteShortVideoMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 发布短视频评论
     * </pre>
     */
    public void createShortVideoComment(com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoCommentRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoCommentResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateShortVideoCommentMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 删除短视频评论
     * </pre>
     */
    public void deleteShortVideoComment(com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoCommentRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoCommentResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteShortVideoCommentMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 短视频评论列表
     * </pre>
     */
    public void listShortVideoComment(com.zhijiejiaoyu.glory_api.short_video.ListShortVideoCommentRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListShortVideoCommentResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListShortVideoCommentMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void teacherListStudentShortVideo(com.zhijiejiaoyu.glory_api.short_video.TeacherListStudentShortVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.TeacherListStudentShortVideoResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getTeacherListStudentShortVideoMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * coupon
     * </pre>
     */
    public void createCoupon(com.zhijiejiaoyu.glory_api.shop.CreateCouponRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CreateCouponResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateCouponMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listCoupon(com.zhijiejiaoyu.glory_api.shop.ListCouponRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListCouponResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListCouponMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void couponDetail(com.zhijiejiaoyu.glory_api.shop.GetCouponDetailRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetCouponDetailResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCouponDetailMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateCoupon(com.zhijiejiaoyu.glory_api.shop.UpdateCouponRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateCouponResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateCouponMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteCoupon(com.zhijiejiaoyu.glory_api.shop.DeleteCouponRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteCouponResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteCouponMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void abolishCoupon(com.zhijiejiaoyu.glory_api.shop.AbolishCouponRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.AbolishCouponResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getAbolishCouponMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateCouponDistributionStatus(com.zhijiejiaoyu.glory_api.shop.UpdateCouponDistributionStatusRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateCouponDistributionStatusResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateCouponDistributionStatusMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void claimCoupon(com.zhijiejiaoyu.glory_api.shop.ClaimCouponRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ClaimCouponResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getClaimCouponMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listMyCoupon(com.zhijiejiaoyu.glory_api.shop.ListMyCouponRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListMyCouponResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListMyCouponMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * activity
     * </pre>
     */
    public void createActivity(com.zhijiejiaoyu.glory_api.shop.CreateActivityRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CreateActivityResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateActivityMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listActivity(com.zhijiejiaoyu.glory_api.shop.ListActivityRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListActivityResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListActivityMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void activityDetail(com.zhijiejiaoyu.glory_api.shop.GetActivityDetailRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetActivityDetailResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getActivityDetailMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateActivity(com.zhijiejiaoyu.glory_api.shop.UpdateActivityRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateActivityResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateActivityMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteActivity(com.zhijiejiaoyu.glory_api.shop.DeleteActivityRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteActivityResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteActivityMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void disableActivity(com.zhijiejiaoyu.glory_api.shop.DisableActivityRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DisableActivityResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDisableActivityMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 获取正在讲解的商品和发放中的优惠券
     * </pre>
     */
    public void getCouponAndIntroducingProduct(com.zhijiejiaoyu.glory_api.live.GetCouponAndIntroducingProductRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetCouponAndIntroducingProductResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetCouponAndIntroducingProductMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 素材库
     * 创建画板
     * </pre>
     */
    public void createCourseMaterialBox(com.zhijiejiaoyu.glory_api.course.CreateCourseMaterialBoxRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateCourseMaterialBoxResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateCourseMaterialBoxMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 编辑画板
     * </pre>
     */
    public void updateCourseMaterialBox(com.zhijiejiaoyu.glory_api.course.UpdateCourseMaterialBoxRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateCourseMaterialBoxResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateCourseMaterialBoxMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 画板列表
     * </pre>
     */
    public void listCourseMaterialBox(com.zhijiejiaoyu.glory_api.course.ListCourseMaterialBoxRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListCourseMaterialBoxResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListCourseMaterialBoxMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 删除画板
     * </pre>
     */
    public void deleteCourseMaterialBox(com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialBoxRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialBoxResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteCourseMaterialBoxMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 上传素材
     * </pre>
     */
    public void uploadCourseMaterial(com.zhijiejiaoyu.glory_api.course.UploadCourseMaterialRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UploadCourseMaterialResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUploadCourseMaterialMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 素材列表
     * </pre>
     */
    public void listCourseMaterial(com.zhijiejiaoyu.glory_api.course.ListCourseMaterialRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListCourseMaterialResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListCourseMaterialMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 删除素材
     * </pre>
     */
    public void deleteCourseMaterial(com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteCourseMaterialMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 资源库
     * 获取课程类型树
     * </pre>
     */
    public void getCourseTypeTree(com.zhijiejiaoyu.glory_api.course.GetCourseTypeTreeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetCourseTypeTreeResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetCourseTypeTreeMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 获取课程类型列表
     * </pre>
     */
    public void getCourseTypeList(com.zhijiejiaoyu.glory_api.course.GetCourseTypeListRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetCourseTypeListResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetCourseTypeListMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 获取能力指标编码
     * </pre>
     */
    public void getCourseModuleCode(com.zhijiejiaoyu.glory_api.course.GetCourseModuleCodeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetCourseModuleCodeResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetCourseModuleCodeMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 获取课程内容编码
     * </pre>
     */
    public void getCourseChapterCode(com.zhijiejiaoyu.glory_api.course.GetCourseChapterCodeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetCourseChapterCodeResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetCourseChapterCodeMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 创建能力指标
     * </pre>
     */
    public void createCourseModule(com.zhijiejiaoyu.glory_api.course.CreateCourseModuleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateCourseModuleResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateCourseModuleMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 获取能力指标
     * </pre>
     */
    public void getCourseModule(com.zhijiejiaoyu.glory_api.course.GetCourseModuleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetCourseModuleResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetCourseModuleMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 更新能力指标
     * </pre>
     */
    public void updateCourseModule(com.zhijiejiaoyu.glory_api.course.UpdateCourseModuleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateCourseModuleResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateCourseModuleMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 删除能力指标
     * </pre>
     */
    public void deleteCourseModule(com.zhijiejiaoyu.glory_api.course.DeleteCourseModuleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteCourseModuleResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteCourseModuleMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 能力指标列表
     * </pre>
     */
    public void listCourseModule(com.zhijiejiaoyu.glory_api.course.ListCourseModuleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListCourseModuleResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListCourseModuleMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 课程列表
     * </pre>
     */
    public void listLatestCourse(com.zhijiejiaoyu.glory_api.course.ListLatestCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListLatestCourseResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListLatestCourseMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listHottestCourse(com.zhijiejiaoyu.glory_api.course.ListHottestCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListHottestCourseResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListHottestCourseMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 自定义课程
     * 新建课程
     * </pre>
     */
    public void createCmCourse(com.zhijiejiaoyu.glory_api.course.CreateCmCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateCmCourseResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateCmCourseMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 预览课程
     * </pre>
     */
    public void previewCmCourse(com.zhijiejiaoyu.glory_api.course.PreviewCmCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.PreviewCmCourseResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getPreviewCmCourseMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 非模块化课程
     * 新建资源
     * </pre>
     */
    public void createNmCourseResource(com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResourceRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResourceResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateNmCourseResourceMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 新建章节
     * </pre>
     */
    public void createNmCourseChapter(com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateNmCourseChapterMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 新建课程
     * </pre>
     */
    public void createNmCourse(com.zhijiejiaoyu.glory_api.course.CreateNmCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateNmCourseResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateNmCourseMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 更新课程
     * </pre>
     */
    public void updateNmCourse(com.zhijiejiaoyu.glory_api.course.UpdateNmCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateNmCourseResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateNmCourseMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 课程列表
     * </pre>
     */
    public void listNmCourse(com.zhijiejiaoyu.glory_api.course.ListNmCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListNmCourseResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListNmCourseMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 课程详情
     * </pre>
     */
    public void nmCourseDetail(com.zhijiejiaoyu.glory_api.course.NmCourseDetailRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.NmCourseDetailResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getNmCourseDetailMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 删除课程
     * </pre>
     */
    public void deleteNmCourse(com.zhijiejiaoyu.glory_api.course.DeleteNmCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteNmCourseResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteNmCourseMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 模块化课程
     * 创建模块化课程
     * </pre>
     */
    public void createCourse(com.zhijiejiaoyu.glory_api.course.CreateCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateCourseResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateCourseMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 获取模块化课程
     * </pre>
     */
    public void getCourse(com.zhijiejiaoyu.glory_api.course.GetCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetCourseResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetCourseMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 更新模块化课程
     * </pre>
     */
    public void updateCourse(com.zhijiejiaoyu.glory_api.course.UpdateCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateCourseResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateCourseMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 删除模块化课程
     * </pre>
     */
    public void deleteCourse(com.zhijiejiaoyu.glory_api.course.DeleteCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteCourseResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteCourseMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 模块化课程列表
     * </pre>
     */
    public void listCourse(com.zhijiejiaoyu.glory_api.course.ListCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListCourseResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListCourseMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 知识图谱
     * </pre>
     */
    public void createKnowledgeGraph(com.zhijiejiaoyu.glory_api.course.CreateKnowledgeGraphRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateKnowledgeGraphResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateKnowledgeGraphMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getKnowledgeGraph(com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetKnowledgeGraphMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getKnowledgeGraphNode(com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphNodeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphNodeResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetKnowledgeGraphNodeMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getCourseIds(com.zhijiejiaoyu.glory_api.course.GetCourseIdsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetCourseIdsResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetCourseIdsMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 我的课程
     * 加入课程
     * </pre>
     */
    public void enrollCourse(com.zhijiejiaoyu.glory_api.course.EnrollCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.EnrollCourseResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getEnrollCourseMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 删除我的课程
     * </pre>
     */
    public void deleteMyCourse(com.zhijiejiaoyu.glory_api.course.DeleteMyCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteMyCourseResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteMyCourseMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 上报课程进度
     * </pre>
     */
    public void updateCourseProgress(com.zhijiejiaoyu.glory_api.course.UpdateCourseProgressRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateCourseProgressResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateCourseProgressMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 我的课程列表
     * </pre>
     */
    public void listMyCourse(com.zhijiejiaoyu.glory_api.course.ListMyCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListMyCourseResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListMyCourseMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 教案管理
     * </pre>
     */
    public void listTeachingPlan(com.zhijiejiaoyu.glory_api.course.ListTeachingPlanRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListTeachingPlanResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListTeachingPlanMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void createTeachingPlan(com.zhijiejiaoyu.glory_api.course.CreateTeachingPlanRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateTeachingPlanResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateTeachingPlanMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateTeachingPlan(com.zhijiejiaoyu.glory_api.course.UpdateTeachingPlanRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateTeachingPlanResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateTeachingPlanMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteTeachingPlan(com.zhijiejiaoyu.glory_api.course.DeleteTeachingPlanRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteTeachingPlanResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteTeachingPlanMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 上报老师授课课程进度
     * </pre>
     */
    public void updateTeachingCourseProgress(com.zhijiejiaoyu.glory_api.course.UpdateTeachingCourseProgressRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateTeachingCourseProgressResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateTeachingCourseProgressMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 培养方案
     * </pre>
     */
    public void createEduScheme(com.zhijiejiaoyu.glory_api.course.CreateEduSchemeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateEduSchemeResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateEduSchemeMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateEduScheme(com.zhijiejiaoyu.glory_api.course.UpdateEduSchemeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateEduSchemeResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateEduSchemeMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listEduScheme(com.zhijiejiaoyu.glory_api.course.ListEduSchemeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListEduSchemeResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListEduSchemeMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void eduSchemeDetail(com.zhijiejiaoyu.glory_api.course.EduSchemeDetailRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.EduSchemeDetailResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getEduSchemeDetailMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteEduScheme(com.zhijiejiaoyu.glory_api.course.DeleteEduSchemeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteEduSchemeResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteEduSchemeMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void distributeEduScheme(com.zhijiejiaoyu.glory_api.course.DistributeEduSchemeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DistributeEduSchemeResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDistributeEduSchemeMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 获取培养方案，但返回结果和获取模块化结果一样
     * </pre>
     */
    public void getEduSchemeLikeCourse(com.zhijiejiaoyu.glory_api.course.GetEduSchemeLikeCourseRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetEduSchemeLikeCourseResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetEduSchemeLikeCourseMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * app下载
     * </pre>
     */
    public void getAndroidQRcode(com.zhijiejiaoyu.glory_api.course.GetAndroidQRCodeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetAndroidQRCodeResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetAndroidQRcodeMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 工作岗位
     * </pre>
     */
    public void createJob(com.zhijiejiaoyu.glory_api.course.CreateJobRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateJobResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateJobMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateJob(com.zhijiejiaoyu.glory_api.course.UpdateJobRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateJobResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateJobMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteJob(com.zhijiejiaoyu.glory_api.course.DeleteJobRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteJobResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteJobMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listJob(com.zhijiejiaoyu.glory_api.course.ListJobRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListJobResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListJobMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 流量统计
     * </pre>
     */
    public void getSchooLiveChart(com.zhijiejiaoyu.glory_api.traffic.GetSchoolLiveTrafficChartRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.traffic.GetSchoolLiveTrafficChartResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetSchooLiveChartMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listSchooLiveTraffic(com.zhijiejiaoyu.glory_api.traffic.ListSchoolLiveTrafficRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.traffic.ListSchoolLiveTrafficResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListSchooLiveTrafficMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getLiveAllTraffic(com.zhijiejiaoyu.glory_api.traffic.GetAllLiveTrafficRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.traffic.GetAllLiveTrafficResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetLiveAllTrafficMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getSchooLiveTraffic(com.zhijiejiaoyu.glory_api.traffic.GetSchooLiveTrafficRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.traffic.GetSchooLiveTrafficResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetSchooLiveTrafficMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listTenantTrafficConfig(com.zhijiejiaoyu.glory_api.traffic.ListTenantLiveTrafficConfigRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.traffic.ListTenantLiveTrafficConfigResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListTenantTrafficConfigMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateTenantTrafficConfig(com.zhijiejiaoyu.glory_api.traffic.UpdateTenantLiveTrafficConfigRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.traffic.UpdateTenantLiveTrafficConfigResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateTenantTrafficConfigMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 流量告警
     * </pre>
     */
    public void listTrafficWarning(com.zhijiejiaoyu.glory_api.traffic.ListTrafficWarningRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.traffic.ListTrafficWarningResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListTrafficWarningMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteTrafficWarning(com.zhijiejiaoyu.glory_api.traffic.DeleteTrafficWarningRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.traffic.DeleteTrafficWarningResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteTrafficWarningMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 直播管控
     * </pre>
     */
    public void createLiveControl(com.zhijiejiaoyu.glory_api.live.CreateLiveControlRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateLiveControlResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateLiveControlMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateLiveControl(com.zhijiejiaoyu.glory_api.live.UpdateLiveControlRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UpdateLiveControlResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateLiveControlMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listLiveControl(com.zhijiejiaoyu.glory_api.live.ListLiveControlRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListLiveControlResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListLiveControlMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteLiveControl(com.zhijiejiaoyu.glory_api.live.DeleteLiveControlRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.DeleteLiveControlResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteLiveControlMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 快速评价模版
     * </pre>
     */
    public void createQuickEvaluationStandard(com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateQuickEvaluationStandardMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateQuickEvaluationStandard(com.zhijiejiaoyu.glory_api.live.UpdateQuickEvaluationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UpdateQuickEvaluationResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateQuickEvaluationStandardMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteQuickEvaluationStandard(com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteQuickEvaluationStandardMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listQuickEvaluationStandard(com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListQuickEvaluationStandardMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     *获取直播回放链接
     * </pre>
     */
    public void getLiveReplay(com.zhijiejiaoyu.glory_api.live.GetLiveReplayRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetLiveReplayResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetLiveReplayMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 快速评价报告
     * </pre>
     */
    public void createQuickEvaluationReport(com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationReportRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationReportResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateQuickEvaluationReportMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listQuickEvaluationReport(com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationReportRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationReportResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListQuickEvaluationReportMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getQuickEvaluationReport(com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationReportRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationReportResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetQuickEvaluationReportMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteQuickEvaluationReport(com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationReportRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationReportResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteQuickEvaluationReportMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getQuickEvaluationDetail(com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationDetailRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationDetailResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetQuickEvaluationDetailMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * App 版本管理
     * </pre>
     */
    public void createVersionLog(com.zhijiejiaoyu.glory_api.course.CreateVersionLogRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateVersionLogResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateVersionLogMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateVersionLog(com.zhijiejiaoyu.glory_api.course.UpdateVersionLogRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateVersionLogResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateVersionLogMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listVersionLog(com.zhijiejiaoyu.glory_api.course.ListVersionLogRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListVersionLogResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListVersionLogMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteVersionLog(com.zhijiejiaoyu.glory_api.course.DeleteVersionLogRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteVersionLogResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteVersionLogMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getLatestVersion(com.zhijiejiaoyu.glory_api.course.GetLatestVersionRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetLatestVersionResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetLatestVersionMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 系统预置任务管理
     * </pre>
     */
    public void getTaskConfig(com.zhijiejiaoyu.glory_api.task.GetTaskConfigRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.GetTaskConfigResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetTaskConfigMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void createSystemTask(com.zhijiejiaoyu.glory_api.task.CreateSystemTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CreateSystemTaskResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateSystemTaskMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listSystemTask(com.zhijiejiaoyu.glory_api.task.ListSystemTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.ListSystemTaskResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListSystemTaskMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getSystemTask(com.zhijiejiaoyu.glory_api.task.GetSystemTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.GetSystemTaskResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetSystemTaskMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateSystemTask(com.zhijiejiaoyu.glory_api.task.UpdateSystemTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.UpdateSystemTaskResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateSystemTaskMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteSystemTask(com.zhijiejiaoyu.glory_api.task.DeleteSystemTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.DeleteSystemTaskResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteSystemTaskMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 教师任务模板
     * </pre>
     */
    public void createTeacherTaskTemplate(com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskTemplateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskTemplateResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateTeacherTaskTemplateMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateTeacherTaskTemplate(com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskTemplateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskTemplateResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateTeacherTaskTemplateMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listTeacherTaskTemplate(com.zhijiejiaoyu.glory_api.task.ListTeacherTaskTemplateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.ListTeacherTaskTemplateResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListTeacherTaskTemplateMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getTeacherTaskTemplate(com.zhijiejiaoyu.glory_api.task.GetTeacherTaskTemplateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.GetTeacherTaskTemplateResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetTeacherTaskTemplateMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteTeacherTaskTemplate(com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskTemplateRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskTemplateResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteTeacherTaskTemplateMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 教师任务管理
     * </pre>
     */
    public void createTeacherTask(com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateTeacherTaskMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateTeacherTask(com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateTeacherTaskMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listTeacherTask(com.zhijiejiaoyu.glory_api.task.ListTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.ListTeacherTaskResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListTeacherTaskMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getTeacherTask(com.zhijiejiaoyu.glory_api.task.GetTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.GetTeacherTaskResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetTeacherTaskMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getTeacherTaskProgress(com.zhijiejiaoyu.glory_api.task.GetTeacherTaskProgressRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.GetTeacherTaskProgressResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetTeacherTaskProgressMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteTeacherTask(com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteTeacherTaskMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void teacherTaskStats(com.zhijiejiaoyu.glory_api.task.TeacherTaskStatsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.TeacherTaskStatsResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getTeacherTaskStatsMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void teacherTaskStudents(com.zhijiejiaoyu.glory_api.task.ListTaskStudentRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.ListTaskStudentResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getTeacherTaskStudentsMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 教师任务统计
     * </pre>
     */
    public void countClassSubmit(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountClassSubmitResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCountClassSubmitMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void countClassSubmitList(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountClassSubmitListResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCountClassSubmitListMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void countPositiveList(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountPositiveListResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCountPositiveListMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void countPotentialList(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountPotentialListResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCountPotentialListMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void countSubmitList(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountSubmitListResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCountSubmitListMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void countClassPass(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountClassPassResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCountClassPassMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void countClassPassList(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountClassPassListResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCountClassPassListMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void countSuperStudentList(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountSuperStudentListResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCountSuperStudentListMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void countLaggingStudentList(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountLaggingStudentListResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCountLaggingStudentListMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void countPassList(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountPassListResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCountPassListMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void countHistoryTask(com.zhijiejiaoyu.glory_api.task.CountHistoryTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountHistoryTaskResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCountHistoryTaskMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 学生任务
     * </pre>
     */
    public void listStudentTask(com.zhijiejiaoyu.glory_api.task.ListStudentTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.ListStudentTaskResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListStudentTaskMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void submitStudentTask(com.zhijiejiaoyu.glory_api.task.SubmitStudentTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.SubmitStudentTaskResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getSubmitStudentTaskMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getStudentTask(com.zhijiejiaoyu.glory_api.task.GetStudentTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.GetStudentTaskResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetStudentTaskMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void teacherListStudentTask(com.zhijiejiaoyu.glory_api.task.TeacherListStudentTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.TeacherListStudentTaskResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getTeacherListStudentTaskMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void teacherEvaluateStudentTask(com.zhijiejiaoyu.glory_api.task.TeacherEvaluateStudentTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.TeacherEvaluateStudentTaskResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getTeacherEvaluateStudentTaskMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void studentTaskStats(com.zhijiejiaoyu.glory_api.task.StudentTaskStatsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.StudentTaskStatsResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getStudentTaskStatsMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void studentTaskEvaluateStats(com.zhijiejiaoyu.glory_api.task.StudentTaskEvaluateStatsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.StudentTaskEvaluateStatsResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getStudentTaskEvaluateStatsMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void startStudentTaskTime(com.zhijiejiaoyu.glory_api.task.StartStudentTaskTimeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.StartStudentTaskTimeResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getStartStudentTaskTimeMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void downloadTeacherTask(com.zhijiejiaoyu.glory_api.task.DownloadTeacherTaskRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.DownloadTeacherTaskResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDownloadTeacherTaskMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 通知模块
     * </pre>
     */
    public void listNotification(com.zhijiejiaoyu.glory_api.notification.ListNotificationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.notification.ListNotificationResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListNotificationMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void countNotification(com.zhijiejiaoyu.glory_api.notification.CountNotificationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.notification.CountNotificationResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCountNotificationMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void readNotification(com.zhijiejiaoyu.glory_api.notification.ReadNotificationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.notification.ReadNotificationResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getReadNotificationMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void testNotification(com.zhijiejiaoyu.glory_api.notification.TestNotificationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.notification.TestNotificationResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getTestNotificationMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteNotification(com.zhijiejiaoyu.glory_api.notification.DeleteNotificationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.notification.DeleteNotificationResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteNotificationMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 直播大屏
     * 获取专业和班级
     * </pre>
     */
    public void listUserMajorAndClass(com.zhijiejiaoyu.glory_api.live.ListUserMajorAndClasRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListUserMajorAndClasResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListUserMajorAndClassMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getAggregationLiveUrl(com.zhijiejiaoyu.glory_api.live.GetAggregationLiveUrlRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetAggregationLiveUrlResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetAggregationLiveUrlMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getLiveBoardData(com.zhijiejiaoyu.glory_api.live.GetLiveBoardDataRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetLiveBoardDataResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetLiveBoardDataMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getLiveBoardComments(com.zhijiejiaoyu.glory_api.live.GetLiveBoardCommentsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetLiveBoardCommentsResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetLiveBoardCommentsMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listBoardLivingUser(com.zhijiejiaoyu.glory_api.live.ListLivingUserRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListLivingUserResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListBoardLivingUserMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void closeCaster(com.zhijiejiaoyu.glory_api.live.CloseCasterRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CloseCasterResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCloseCasterMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 智能文案
     * </pre>
     */
    public void createArticleCreation(com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateArticleCreationMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listMyArticleCreation(com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListMyArticleCreationMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void createArticleCreationDraft(com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationDraftRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationDraftResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateArticleCreationDraftMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listMyDraftArticleCreation(com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationDraftRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationDraftResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListMyDraftArticleCreationMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void draftArticleCreationDetail(com.zhijiejiaoyu.glory_api.short_video.ArticleCreationDraftDetailRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ArticleCreationDraftDetailResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDraftArticleCreationDetailMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void deleteDraftArticleCreation(com.zhijiejiaoyu.glory_api.short_video.DeleteArticleCreationDraftRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.DeleteArticleCreationDraftResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteDraftArticleCreationMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void articleCreationStatistics(com.zhijiejiaoyu.glory_api.short_video.ArticleCreationStatisticsRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ArticleCreationStatisticsResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getArticleCreationStatisticsMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getExampleArticle(com.zhijiejiaoyu.glory_api.short_video.GetExampleArticleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetExampleArticleResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetExampleArticleMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getEvaluationStandard(com.zhijiejiaoyu.glory_api.short_video.GetEvaluationStandardRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetEvaluationStandardResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetEvaluationStandardMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void createEvaluationConfig(com.zhijiejiaoyu.glory_api.short_video.CreateEvaluationConfigRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.CreateEvaluationConfigResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateEvaluationConfigMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listEvaluationConfig(com.zhijiejiaoyu.glory_api.short_video.ListEvaluationConfigRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListEvaluationConfigResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListEvaluationConfigMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void batchEvaluateArticleCreation(com.zhijiejiaoyu.glory_api.short_video.BatchEvaluateArticleRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.BatchEvaluateArticleResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getBatchEvaluateArticleCreationMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listStudentArticleCreation(com.zhijiejiaoyu.glory_api.short_video.ListStudentArticleCreationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListStudentArticleCreationResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListStudentArticleCreationMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void studentArticleCreationEvaluationDetail(com.zhijiejiaoyu.glory_api.short_video.StudentArticleCreationEvaluationDetailRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.StudentArticleCreationEvaluationDetailResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getStudentArticleCreationEvaluationDetailMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 文案纠错
     * </pre>
     */
    public void correctSentence(com.zhijiejiaoyu.glory_api.short_video.CorrectSentenceRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.CorrectSentenceResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCorrectSentenceMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 生成AI评价
     * </pre>
     */
    public void genArticleAiEvaluation(com.zhijiejiaoyu.glory_api.short_video.GenArticleAIEvaluationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GenArticleAIEvaluationResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGenArticleAiEvaluationMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 获取AI评价
     * </pre>
     */
    public void getArticleAiEvaluation(com.zhijiejiaoyu.glory_api.short_video.GetArticleAIEvaluationRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetArticleAIEvaluationResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetArticleAiEvaluationMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 文案AI问答
     * </pre>
     */
    public void articleAiChat(com.zhijiejiaoyu.glory_api.short_video.ArticleAIChatRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ArticleAIChatResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getArticleAiChatMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 获取AI聊天配置
     * </pre>
     */
    public void getChatConfig(com.zhijiejiaoyu.glory_api.short_video.GetChatConfigRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetChatConfigResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetChatConfigMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateModelPrice(com.zhijiejiaoyu.glory_api.short_video.UpdateModelPriceRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.UpdateModelPriceResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateModelPriceMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void updateArticleCreationTenantCourse(com.zhijiejiaoyu.glory_api.short_video.UpdateTenantCourseDataRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.UpdateTenantCourseDataResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getUpdateArticleCreationTenantCourseMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getArticleCreationTenant(com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetArticleCreationTenantMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listArticleCreationTenant(com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListArticleCreationTenantMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void listArticleCreationTenantCost(com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantCostRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantCostResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListArticleCreationTenantCostMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getArticleCreationTenantCost(com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantCostRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantCostResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetArticleCreationTenantCostMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void getSubTopicAiResult(com.zhijiejiaoyu.glory_api.short_video.GetSubTopicAiResultRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetSubTopicAiResultResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetSubTopicAiResultMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 数字人合成视频接口
     * </pre>
     */
    public void createDigitalVideo(com.zhijiejiaoyu.glory_api.short_video.CreateDigitalVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.CreateDigitalVideoResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getCreateDigitalVideoMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 查询数字人视频合成任务进度接口
     * </pre>
     */
    public void listDigitalVideo(com.zhijiejiaoyu.glory_api.short_video.ListDigitalVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListDigitalVideoResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListDigitalVideoMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 查询任务进度接口
     * </pre>
     */
    public void getDigitalVideo(com.zhijiejiaoyu.glory_api.short_video.GetDigitalVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetDigitalVideoResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getGetDigitalVideoMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 数字人模型列表接口
     * </pre>
     */
    public void listDigitalCode(com.zhijiejiaoyu.glory_api.short_video.ListDigitalCodeRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListDigitalCodeResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListDigitalCodeMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 删除数字人视频接口
     * </pre>
     */
    public void deleteDigitalVideo(com.zhijiejiaoyu.glory_api.short_video.DeleteDigitalVideoRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.DeleteDigitalVideoResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getDeleteDigitalVideoMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     * <pre>
     * 数字人资产列表接口
     * </pre>
     */
    public void listDigitalAvatar(com.zhijiejiaoyu.glory_api.short_video.ListDigitalAvatarRequest request,
        io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListDigitalAvatarResponse> responseObserver) {
      io.grpc.stub.ClientCalls.asyncUnaryCall(
          getChannel().newCall(getListDigitalAvatarMethod(), getCallOptions()), request, responseObserver);
    }
  }

  /**
   * A stub to allow clients to do synchronous rpc calls to service glory_api.
   */
  public static final class glory_apiBlockingStub
      extends io.grpc.stub.AbstractBlockingStub<glory_apiBlockingStub> {
    private glory_apiBlockingStub(
        io.grpc.Channel channel, io.grpc.CallOptions callOptions) {
      super(channel, callOptions);
    }

    @java.lang.Override
    protected glory_apiBlockingStub build(
        io.grpc.Channel channel, io.grpc.CallOptions callOptions) {
      return new glory_apiBlockingStub(channel, callOptions);
    }

    /**
     * <pre>
     * endpoint /api/example/create_example, create example
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.example.CreateExampleResponse createExample(com.zhijiejiaoyu.glory_api.example.CreateExampleRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateExampleMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * endpoint /api/example/get_example, get_example
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.example.GetExampleResponse getExample(com.zhijiejiaoyu.glory_api.example.GetExampleRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetExampleMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * endpoint /api/example/update_example, update_example
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.example.UpdateExampleResponse updateExample(com.zhijiejiaoyu.glory_api.example.UpdateExampleRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateExampleMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * endpoint /api/example/list_example, list example
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.example.ListExampleResponse listExample(com.zhijiejiaoyu.glory_api.example.ListExampleRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListExampleMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * endpoint /api/example/delete_example, delete example
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.example.DeleteExampleResponse deleteExample(com.zhijiejiaoyu.glory_api.example.DeleteExampleRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteExampleMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     *user
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.user.LoginResponse login(com.zhijiejiaoyu.glory_api.user.LoginRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getLoginMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.user.LogoutResponse logout(com.zhijiejiaoyu.glory_api.user.LogoutRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getLogoutMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.user.DeleteUserResponse deleteUser(com.zhijiejiaoyu.glory_api.user.DeleteUserRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteUserMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.user.ListOwnAccessResponse listOwnAccess(com.zhijiejiaoyu.glory_api.user.ListOwnAccessRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListOwnAccessMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.user.GetVerifyCodeResponse getVerifyCode(com.zhijiejiaoyu.glory_api.user.GetVerifyCodeRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetVerifyCodeMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.user.CheckVerifyCodeResponse checkVerifyCode(com.zhijiejiaoyu.glory_api.user.CheckVerifyCodeRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCheckVerifyCodeMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.user.GetUserResponse getUser(com.zhijiejiaoyu.glory_api.user.GetUserRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetUserMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.user.GetUserByPhoneResponse getUserByPhone(com.zhijiejiaoyu.glory_api.user.GetUserByPhoneRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetUserByPhoneMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.user.LoginWithPasswordResponse loginWithPassword(com.zhijiejiaoyu.glory_api.user.LoginWithPasswordRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getLoginWithPasswordMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.user.UpdatePasswordResponse updatePassword(com.zhijiejiaoyu.glory_api.user.UpdatePasswordRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdatePasswordMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.user.UpdateUserResponse updateUser(com.zhijiejiaoyu.glory_api.user.UpdateUserRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateUserMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.user.UpdatePhoneResponse updatePhone(com.zhijiejiaoyu.glory_api.user.UpdatePhoneRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdatePhoneMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 获取用户的所有专业[select]
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.user.GetUserMajorResponse getUserMajor(com.zhijiejiaoyu.glory_api.user.GetUserMajorRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetUserMajorMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.user.UpdateUserTenantResponse updateUserTenant(com.zhijiejiaoyu.glory_api.user.UpdateUserTenantRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateUserTenantMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 用户列表[用户名+头像]
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.user.ListUserResponse listUser(com.zhijiejiaoyu.glory_api.user.ListUserRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListUserMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 绑定微信接口
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.user.UserBindWechatResponse userBindWechat(com.zhijiejiaoyu.glory_api.user.UserBindWechatRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUserBindWechatMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 微信解绑接口
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.user.UserUnbindWechatResponse userUnbindWechat(com.zhijiejiaoyu.glory_api.user.UserUnbindWechatRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUserUnbindWechatMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 关注用户
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.user.FollowUserResponse followUser(com.zhijiejiaoyu.glory_api.user.FollowUserRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getFollowUserMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 我的关注列表
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.user.ListMyFollowingResponse listMyFollowing(com.zhijiejiaoyu.glory_api.user.ListMyFollowingRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListMyFollowingMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 我的粉丝列表
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.user.ListMyFollowerResponse listMyFollower(com.zhijiejiaoyu.glory_api.user.ListMyFollowerRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListMyFollowerMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 我的朋友列表
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.user.ListMyFriendResponse listMyFriend(com.zhijiejiaoyu.glory_api.user.ListMyFriendRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListMyFriendMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 我的社交信息
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.user.GetMySocialSummaryResponse getMySocialSummary(com.zhijiejiaoyu.glory_api.user.GetMySocialSummaryRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetMySocialSummaryMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * page permission
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.user.GetUserPagePermissionResponse getUserPagePermission(com.zhijiejiaoyu.glory_api.user.GetUserPagePermissionRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetUserPagePermissionMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.user.CreateRolePagePermissionResponse createRolePagePermission(com.zhijiejiaoyu.glory_api.user.CreateRolePagePermissionRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateRolePagePermissionMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.user.UpdateRolePagePermissionResponse updateRolePagePermission(com.zhijiejiaoyu.glory_api.user.UpdateRolePagePermissionRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateRolePagePermissionMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.user.GetRolePagePermissionResponse getRolePagePermission(com.zhijiejiaoyu.glory_api.user.GetRolePagePermissionRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetRolePagePermissionMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * address
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.user.AddAddressResponse addAddress(com.zhijiejiaoyu.glory_api.user.AddAddressRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getAddAddressMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.user.DeleteAddressResponse deleteAddress(com.zhijiejiaoyu.glory_api.user.DeleteAddressRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteAddressMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.user.UpdateAddressResponse updateAddress(com.zhijiejiaoyu.glory_api.user.UpdateAddressRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateAddressMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.user.GetAddressResponse getAddress(com.zhijiejiaoyu.glory_api.user.GetAddressRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetAddressMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.user.ListAddressResponse listAddress(com.zhijiejiaoyu.glory_api.user.ListAddressRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListAddressMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.user.ListUserByRoleResponse listUserByRole(com.zhijiejiaoyu.glory_api.user.ListUserByRoleRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListUserByRoleMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * user permission
     *list the permissions that supported
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.user.ListPermissionResponse listPermission(com.zhijiejiaoyu.glory_api.user.ListPermissionRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListPermissionMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.user.ListRoleResponse listRole(com.zhijiejiaoyu.glory_api.user.ListRoleRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListRoleMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.user.GiveRolePermissionResponse giveRolePermission(com.zhijiejiaoyu.glory_api.user.GiveRolePermissionRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGiveRolePermissionMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.user.RemoveRolePermissionResponse removeRolePermission(com.zhijiejiaoyu.glory_api.user.RemoveRolePermissionRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getRemoveRolePermissionMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.user.CreateRoleResponse createRole(com.zhijiejiaoyu.glory_api.user.CreateRoleRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateRoleMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.user.DeleteRoleResponse deleteRole(com.zhijiejiaoyu.glory_api.user.DeleteRoleRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteRoleMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.user.ListResourceResponse listResource(com.zhijiejiaoyu.glory_api.user.ListResourceRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListResourceMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.user.GetRoleTypeResponse getRoleType(com.zhijiejiaoyu.glory_api.user.GetRoleTypeRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetRoleTypeMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.role.GetRoleTemplateResponse getRoleTemplate(com.zhijiejiaoyu.glory_api.role.GetRoleTemplateRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetRoleTemplateMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.role.UpdateRoleTemplateResponse updateRoleTemplate(com.zhijiejiaoyu.glory_api.role.UpdateRoleTemplateRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateRoleTemplateMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * shop
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.shop.CreateShopResponse createShop(com.zhijiejiaoyu.glory_api.shop.CreateShopRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateShopMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.GetShopResponse getShop(com.zhijiejiaoyu.glory_api.shop.GetShopRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetShopMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.UpdateShopResponse updateShop(com.zhijiejiaoyu.glory_api.shop.UpdateShopRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateShopMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.ListShopResponse listShop(com.zhijiejiaoyu.glory_api.shop.ListShopRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListShopMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.DeleteShopResponse deleteShop(com.zhijiejiaoyu.glory_api.shop.DeleteShopRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteShopMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.ListOperationMetricsResponse listOperationMetrics(com.zhijiejiaoyu.glory_api.shop.ListOperationMetricsRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListOperationMetricsMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.GetShopQrcodeResponse getShopQrcode(com.zhijiejiaoyu.glory_api.shop.GetShopQrcodeRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetShopQrcodeMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.UpdateShopManagerResponse updateShopManager(com.zhijiejiaoyu.glory_api.shop.UpdateShopManagerRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateShopManagerMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.GetShopBusinessDataResponse getShopBusinessData(com.zhijiejiaoyu.glory_api.shop.GetShopBusinessDataRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetShopBusinessDataMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.AddShopAccessResponse addShopAccess(com.zhijiejiaoyu.glory_api.shop.AddShopAccessRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getAddShopAccessMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.RemoveShopAccessResponse removeShopAccess(com.zhijiejiaoyu.glory_api.shop.RemoveShopAccessRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getRemoveShopAccessMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.VerifyFieldResponse verifyField(com.zhijiejiaoyu.glory_api.shop.VerifyFieldRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getVerifyFieldMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.ListShopAccessResponse listShopAccess(com.zhijiejiaoyu.glory_api.shop.ListShopAccessRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListShopAccessMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.AddShopCategoryResponse addShopCategory(com.zhijiejiaoyu.glory_api.shop.AddShopCategoryRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getAddShopCategoryMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.GetShopCategoryResponse getShopCategory(com.zhijiejiaoyu.glory_api.shop.GetShopCategoryRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetShopCategoryMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.RemoveShopCategoryResponse removeShopCategory(com.zhijiejiaoyu.glory_api.shop.RemoveShopCategoryRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getRemoveShopCategoryMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.CreateTemplateResponse addFreightTemplate(com.zhijiejiaoyu.glory_api.shop.CreateTemplateRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getAddFreightTemplateMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.GetTemplateResponse getFreightTemplate(com.zhijiejiaoyu.glory_api.shop.GetTemplateRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetFreightTemplateMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.UpdateTemplateResponse updateFreightTemplate(com.zhijiejiaoyu.glory_api.shop.UpdateTemplateRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateFreightTemplateMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.DeleteTemplateResponse deleteFreightTemplate(com.zhijiejiaoyu.glory_api.shop.DeleteTemplateRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteFreightTemplateMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.ListTemplateResponse listFreightTemplate(com.zhijiejiaoyu.glory_api.shop.ListTemplateRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListFreightTemplateMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.ListShopQualificationResponse listQualification(com.zhijiejiaoyu.glory_api.shop.ListShopQualificationRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListQualificationMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     *mall
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.mall.MallIndexResponse getMallIndex(com.zhijiejiaoyu.glory_api.mall.MallIndexRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetMallIndexMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * product category
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.shop.CreateCategoryResponse createCategory(com.zhijiejiaoyu.glory_api.shop.CreateCategoryRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateCategoryMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.GetCategoryResponse getCategory(com.zhijiejiaoyu.glory_api.shop.GetCategoryRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetCategoryMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.UpdateCategoryResponse updateCategory(com.zhijiejiaoyu.glory_api.shop.UpdateCategoryRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateCategoryMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.ListCategoryResponse listCategory(com.zhijiejiaoyu.glory_api.shop.ListCategoryRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListCategoryMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.DeleteCategoryResponse deleteCategory(com.zhijiejiaoyu.glory_api.shop.DeleteCategoryRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteCategoryMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     *category qualification
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.shop.ListCategoryQualificationResponse listCategoryQualification(com.zhijiejiaoyu.glory_api.shop.ListCategoryQualificationRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListCategoryQualificationMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * product product
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.shop.CreateProductResponse createProduct(com.zhijiejiaoyu.glory_api.shop.CreateProductRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateProductMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.GetProductResponse getProduct(com.zhijiejiaoyu.glory_api.shop.GetProductRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetProductMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.UpdateProductResponse updateProduct(com.zhijiejiaoyu.glory_api.shop.UpdateProductRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateProductMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.ListProductResponse listProduct(com.zhijiejiaoyu.glory_api.shop.ListProductRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListProductMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.ListProductByProductIDsResponse listProductByIDs(com.zhijiejiaoyu.glory_api.shop.ListProductByProductIDsRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListProductByIDsMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.DeleteProductResponse deleteProduct(com.zhijiejiaoyu.glory_api.shop.DeleteProductRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteProductMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.UploadMultiImageResponse uploadMultiImage(com.zhijiejiaoyu.glory_api.shop.UploadMultiImageRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUploadMultiImageMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.DeleteImageResponse deleteImageById(com.zhijiejiaoyu.glory_api.shop.DeleteImageRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteImageByIdMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.BindAttributeResponse bindAttribute(com.zhijiejiaoyu.glory_api.shop.BindAttributeRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getBindAttributeMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.PublishProductResponse publishProduct(com.zhijiejiaoyu.glory_api.shop.PublishProductRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getPublishProductMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.OffSelfProductsResponse offShelfProductInBatches(com.zhijiejiaoyu.glory_api.shop.OffSelfProductsRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getOffShelfProductInBatchesMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.DeleteProductsResponse deleteProductInBatches(com.zhijiejiaoyu.glory_api.shop.DeleteProductsRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteProductInBatchesMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.ChangeProductStateResponse changeProductsState(com.zhijiejiaoyu.glory_api.shop.ChangeProductStateRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getChangeProductsStateMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.SaveImageInfoResponse saveProductImageInfo(com.zhijiejiaoyu.glory_api.shop.SaveImageInfoRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getSaveProductImageInfoMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * sku sku
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.shop.CreateSkuResponse createSku(com.zhijiejiaoyu.glory_api.shop.CreateSkuRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateSkuMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.GetSkuResponse getSku(com.zhijiejiaoyu.glory_api.shop.GetSkuRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetSkuMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.UpdateSkuResponse updateSku(com.zhijiejiaoyu.glory_api.shop.UpdateSkuRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateSkuMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.ListSkuResponse listSku(com.zhijiejiaoyu.glory_api.shop.ListSkuRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListSkuMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.DeleteSkuResponse deleteSku(com.zhijiejiaoyu.glory_api.shop.DeleteSkuRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteSkuMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * attribute
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.shop.CreateAttributeResponse createAttribute(com.zhijiejiaoyu.glory_api.shop.CreateAttributeRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateAttributeMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.GetAttributeResponse getAttribute(com.zhijiejiaoyu.glory_api.shop.GetAttributeRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetAttributeMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.ListAttributeResponse listAttribute(com.zhijiejiaoyu.glory_api.shop.ListAttributeRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListAttributeMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.DeleteAttributeResponse deleteAttribute(com.zhijiejiaoyu.glory_api.shop.DeleteAttributeRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteAttributeMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.AddAttributeValueResponse addAttributeValue(com.zhijiejiaoyu.glory_api.shop.AddAttributeValueRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getAddAttributeValueMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.DeleteAttributeValueResponse deleteAttributeValue(com.zhijiejiaoyu.glory_api.shop.DeleteAttributeValueRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteAttributeValueMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * order
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.shop.CreateOrderResponse createOrder(com.zhijiejiaoyu.glory_api.shop.CreateOrderRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateOrderMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.GetOrderResponse getOrder(com.zhijiejiaoyu.glory_api.shop.GetOrderRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetOrderMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.UpdateOrderResponse updateOrder(com.zhijiejiaoyu.glory_api.shop.UpdateOrderRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateOrderMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.ListOrderResponse listOrder(com.zhijiejiaoyu.glory_api.shop.ListOrderRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListOrderMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.DeleteOrderResponse deleteOrder(com.zhijiejiaoyu.glory_api.shop.DeleteOrderRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteOrderMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.ShipGoodsResponse shipGoods(com.zhijiejiaoyu.glory_api.shop.ShipGoodsRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getShipGoodsMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.ConfirmReceiptGoodsResponse confirmReceiptGoods(com.zhijiejiaoyu.glory_api.shop.ConfirmReceiptGoodsRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getConfirmReceiptGoodsMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.GetOrderStatusResponse getOrderStatus(com.zhijiejiaoyu.glory_api.shop.GetOrderStatusRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetOrderStatusMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.CancelOrderResponse cancelOrder(com.zhijiejiaoyu.glory_api.shop.CancelOrderRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCancelOrderMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.ShipGoodsInBatchesResponse shipGoodsInBatches(com.zhijiejiaoyu.glory_api.shop.ShipGoodsInBatchesRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getShipGoodsInBatchesMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.FreeShippingInBatchesResponse freeShippingInBatches(com.zhijiejiaoyu.glory_api.shop.FreeShippingInBatchesRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getFreeShippingInBatchesMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.ListShopSummaryResponse listShopSummary(com.zhijiejiaoyu.glory_api.shop.ListShopSummaryRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListShopSummaryMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.ListShopBySellerIDResponse listShopBySellerID(com.zhijiejiaoyu.glory_api.shop.ListShopBySellerIDRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListShopBySellerIDMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * cart
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.shop.AddCartResponse createCart(com.zhijiejiaoyu.glory_api.shop.AddCartRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateCartMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.GetCartResponse getCart(com.zhijiejiaoyu.glory_api.shop.GetCartRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetCartMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.UpdateCartResponse updateCart(com.zhijiejiaoyu.glory_api.shop.UpdateCartRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateCartMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.DeleteCartResponse deleteCart(com.zhijiejiaoyu.glory_api.shop.DeleteCartRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteCartMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * seller
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.seller.UploadAttachmentResponse uploadAttachment(com.zhijiejiaoyu.glory_api.seller.UploadAttachmentRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUploadAttachmentMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.seller.SaveAttachmentResponse saveAttachment(com.zhijiejiaoyu.glory_api.seller.SaveAttachmentRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getSaveAttachmentMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.seller.ListAttachmentResponse listAttachment(com.zhijiejiaoyu.glory_api.seller.ListAttachmentRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListAttachmentMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.seller.DeleteAttachmentResponse deleteAttachment(com.zhijiejiaoyu.glory_api.seller.DeleteAttachmentRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteAttachmentMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.seller.CreateSellerResponse createSeller(com.zhijiejiaoyu.glory_api.seller.CreateSellerRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateSellerMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * payment
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.payment.CreatePaymentResponse createPayment(com.zhijiejiaoyu.glory_api.payment.CreatePaymentRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreatePaymentMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.payment.GetPaymentResponse getPayment(com.zhijiejiaoyu.glory_api.payment.GetPaymentRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetPaymentMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.payment.UpdatePaymentResponse updatePayment(com.zhijiejiaoyu.glory_api.payment.UpdatePaymentRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdatePaymentMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.payment.DeletePaymentResponse deletePayment(com.zhijiejiaoyu.glory_api.payment.DeletePaymentRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeletePaymentMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.payment.WechatPaymentNotifyResponse wechatPaymentNotify(com.zhijiejiaoyu.glory_api.payment.WechatPaymentNotifyRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getWechatPaymentNotifyMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     *admin_config
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.admin.CreateConfigResponse createConfig(com.zhijiejiaoyu.glory_api.admin.CreateConfigRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateConfigMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.admin.UpdateConfigResponse updateConfig(com.zhijiejiaoyu.glory_api.admin.UpdateConfigRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateConfigMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.admin.DeleteConfigResponse deleteConfig(com.zhijiejiaoyu.glory_api.admin.DeleteConfigRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteConfigMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.admin.GetConfigResponse getConfig(com.zhijiejiaoyu.glory_api.admin.GetConfigRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetConfigMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     *admin_other
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.admin.GetSTSResponse getSTS(com.zhijiejiaoyu.glory_api.admin.GetSTSRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetSTSMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.admin.GenerateWebofficeTokenResponse generateWebofficeToken(com.zhijiejiaoyu.glory_api.admin.GenerateWebofficeTokenRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGenerateWebofficeTokenMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.admin.RefreshWebofficeTokenResponse refreshWebofficeToken(com.zhijiejiaoyu.glory_api.admin.RefreshWebofficeTokenRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getRefreshWebofficeTokenMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.admin.ListTenantOrgResponse listTenantOrg(com.zhijiejiaoyu.glory_api.admin.ListTenantOrgRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListTenantOrgMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     *admin_user
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.admin.GetAdminTenantResponse getAdminTenant(com.zhijiejiaoyu.glory_api.admin.GetAdminTenantRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetAdminTenantMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.admin.ListAdminUserResponse listAdminUser(com.zhijiejiaoyu.glory_api.admin.ListAdminUserRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListAdminUserMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.admin.CreateAdminUserResponse createAdminUser(com.zhijiejiaoyu.glory_api.admin.CreateAdminUserRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateAdminUserMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.admin.UpdateAdminUserResponse updateAdminUser(com.zhijiejiaoyu.glory_api.admin.UpdateAdminUserRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateAdminUserMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.admin.DeleteAdminUserResponse deleteAdminUser(com.zhijiejiaoyu.glory_api.admin.DeleteAdminUserRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteAdminUserMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * wxpay
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.wxpay.PrepayResponse wxPrepay(com.zhijiejiaoyu.glory_api.wxpay.PrepayRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getWxPrepayMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.wxpay.CloseOrderResponse closeOrder(com.zhijiejiaoyu.glory_api.wxpay.CloseOrderRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCloseOrderMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByIdResponse queryOrderById(com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByIdRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getQueryOrderByIdMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByOutTradeNoResponse queryOrderByOutTrade(com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByOutTradeNoRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getQueryOrderByOutTradeMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     *virtual currency  虚拟币（成长币）
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.currency.AddVirtualCurrencyResponse addVCurrency(com.zhijiejiaoyu.glory_api.currency.AddVirtualCurrencyRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getAddVCurrencyMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyResponse rechargeCurrency(com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getRechargeCurrencyMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyInBatchesResponse rechargeCurrencyInBatches(com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyInBatchesRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getRechargeCurrencyInBatchesMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.currency.GetVirtualCurrencyResponse getVCurrency(com.zhijiejiaoyu.glory_api.currency.GetVirtualCurrencyRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetVCurrencyMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.currency.ListVirtualCurrencyResponse listVCurrency(com.zhijiejiaoyu.glory_api.currency.ListVirtualCurrencyRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListVCurrencyMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.account.ListAccountOperationResponse listAccountOperation(com.zhijiejiaoyu.glory_api.account.ListAccountOperationRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListAccountOperationMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * live
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.live.CreateRoomResponse createRoom(com.zhijiejiaoyu.glory_api.live.CreateRoomRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateRoomMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.GetRoomResponse getRoom(com.zhijiejiaoyu.glory_api.live.GetRoomRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetRoomMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.UpdateRoomResponse updateRoom(com.zhijiejiaoyu.glory_api.live.UpdateRoomRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateRoomMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.ListRoomResponse listRoom(com.zhijiejiaoyu.glory_api.live.ListRoomRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListRoomMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.DeleteRoomResponse deleteRoom(com.zhijiejiaoyu.glory_api.live.DeleteRoomRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteRoomMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.ListFinishedRoomResponse listFinishedRoom(com.zhijiejiaoyu.glory_api.live.ListFinishedRoomRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListFinishedRoomMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.GetFinishedRoomResponse getFinishedRoom(com.zhijiejiaoyu.glory_api.live.GetFinishedRoomRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetFinishedRoomMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.LiveRecordResponse record(com.zhijiejiaoyu.glory_api.live.LiveRecordRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getRecordMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.CreateLiveUserTokenResponse createLiveUserToken(com.zhijiejiaoyu.glory_api.live.CreateLiveUserTokenRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateLiveUserTokenMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.CreateNewMessageTokenResponse createNewLiveUserToken(com.zhijiejiaoyu.glory_api.live.CreateNewMessageTokenRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateNewLiveUserTokenMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.UserEnterRoomResponse userEnterRoom(com.zhijiejiaoyu.glory_api.live.UserEnterRoomRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUserEnterRoomMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.UserExitRoomResponse userExitRoom(com.zhijiejiaoyu.glory_api.live.UserExitRoomRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUserExitRoomMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.seller.ListAttachmentResponse listActiveRoomUser(com.zhijiejiaoyu.glory_api.live.ListActiveRoomUserRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListActiveRoomUserMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.LiveSSEResponse liveSSE(com.zhijiejiaoyu.glory_api.live.LiveSSERequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getLiveSSEMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.CloseShopAllLiveResponse closeShopAllLive(com.zhijiejiaoyu.glory_api.live.CloseShopAllLiveRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCloseShopAllLiveMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.UpdateLiveCommentCountResponse updateLiveCommentCount(com.zhijiejiaoyu.glory_api.live.UpdateLiveCommentCountRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateLiveCommentCountMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * live plan
     * live plan crud
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.live.CreateLivePlanResponse createLivePlan(com.zhijiejiaoyu.glory_api.live.CreateLivePlanRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateLivePlanMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.GetLivePlanResponse getLivePlan(com.zhijiejiaoyu.glory_api.live.GetLivePlanRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetLivePlanMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.UpdateLivePlanResponse updateLivePlan(com.zhijiejiaoyu.glory_api.live.UpdateLivePlanRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateLivePlanMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.ListLivePlanResponse listLivePlan(com.zhijiejiaoyu.glory_api.live.ListLivePlanRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListLivePlanMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.DeleteLivePlanResponse deleteLivePlan(com.zhijiejiaoyu.glory_api.live.DeleteLivePlanRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteLivePlanMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * live plan prod crud
     * CreateLivePlanProduct create live plan product
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.live.CreateLivePlanProductResponse createLivePlanProduct(com.zhijiejiaoyu.glory_api.live.CreateLivePlanProductRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateLivePlanProductMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.UpdateLivePlanProductResponse updateLivePlanProduct(com.zhijiejiaoyu.glory_api.live.UpdateLivePlanProductRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateLivePlanProductMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.ListLivePlanProductResponse listLivePlanProduct(com.zhijiejiaoyu.glory_api.live.ListLivePlanProductRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListLivePlanProductMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.DeleteLivePlanProductResponse deleteLivePlanProduct(com.zhijiejiaoyu.glory_api.live.DeleteLivePlanProductRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteLivePlanProductMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.LoadLivePlanProductResponse loadLivePlanProduct(com.zhijiejiaoyu.glory_api.live.LoadLivePlanProductRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getLoadLivePlanProductMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.UpdateLiveProductStatusResponse updateLiveProductStatus(com.zhijiejiaoyu.glory_api.live.UpdateLiveProductStatusRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateLiveProductStatusMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.ListLiveProductStatusResponse listLiveProductStatus(com.zhijiejiaoyu.glory_api.live.ListLiveProductStatusRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListLiveProductStatusMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.DeleteLiveProductStatusResponse deleteLiveProductStatus(com.zhijiejiaoyu.glory_api.live.DeleteLiveProductStatusRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteLiveProductStatusMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.CreateLiveProductStatusResponse createLiveProductStatus(com.zhijiejiaoyu.glory_api.live.CreateLiveProductStatusRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateLiveProductStatusMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.GetLivingProductStatusResponse getLivingProductStatus(com.zhijiejiaoyu.glory_api.live.GetLivingProductStatusRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetLivingProductStatusMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.UpdateLiveProductIntroductStatusResponse updateLiveProductIntroductStatus(com.zhijiejiaoyu.glory_api.live.UpdateLiveProductIntroductStatusRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateLiveProductIntroductStatusMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * live text crud
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.live.CreateLiveTextResponse createLiveText(com.zhijiejiaoyu.glory_api.live.CreateLiveTextRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateLiveTextMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.UpdateLiveTextResponse updateLiveText(com.zhijiejiaoyu.glory_api.live.UpdateLiveTextRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateLiveTextMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.ListLiveTextResponse listLiveText(com.zhijiejiaoyu.glory_api.live.ListLiveTextRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListLiveTextMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.GetLiveTextResponse getLiveText(com.zhijiejiaoyu.glory_api.live.GetLiveTextRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetLiveTextMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.DeleteLiveTextsResponse deleteLiveTexts(com.zhijiejiaoyu.glory_api.live.DeleteLiveTextsRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteLiveTextsMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.TeacherListStudentShortVideoTextResponse teacherListStudentShortVideoText(com.zhijiejiaoyu.glory_api.live.TeacherListStudentShortVideoTextRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getTeacherListStudentShortVideoTextMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * live chart
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.live.GetLiveChartDataResponse getLiveChartData(com.zhijiejiaoyu.glory_api.live.GetLiveChartDataRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetLiveChartDataMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * live evaluate
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.live.GetEvaluateSelectorResponse getEvaluateSelector(com.zhijiejiaoyu.glory_api.live.GetEvaluateSelectorRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetEvaluateSelectorMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.ListPersonalEvaluateResponse listPersonalEvaluate(com.zhijiejiaoyu.glory_api.live.ListPersonalEvaluateRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListPersonalEvaluateMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.GetEvaluateDetailResponse getEvaluateDetail(com.zhijiejiaoyu.glory_api.live.GetEvaluateDetailRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetEvaluateDetailMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.SubmitEvaluateResponse submitEvaluate(com.zhijiejiaoyu.glory_api.live.SubmitEvaluateRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getSubmitEvaluateMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.ListUnevaluatedRoomResponse listUnevaluatedRoom(com.zhijiejiaoyu.glory_api.live.ListUnevaluatedRoomRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListUnevaluatedRoomMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.ListStudentEvalutionsResponse listStudentEvaluations(com.zhijiejiaoyu.glory_api.live.ListStudentEvalutionsRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListStudentEvaluationsMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.IgnoreLiveEvaluationResponse ignoreEvaluation(com.zhijiejiaoyu.glory_api.live.IgnoreLiveEvaluationRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getIgnoreEvaluationMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.GetRankResponse getRank(com.zhijiejiaoyu.glory_api.live.GetRankRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetRankMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.RecordLiveCallbackResponse recordLiveCallback(com.zhijiejiaoyu.glory_api.live.RecordLiveCallbackRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getRecordLiveCallbackMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.VideoToTextCallbackResponse videoToTextCallback(com.zhijiejiaoyu.glory_api.live.VideoToTextCallbackRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getVideoToTextCallbackMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.LiveStreamCallbackResponse liveStreamCallback(com.zhijiejiaoyu.glory_api.live.LiveStreamCallbackRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getLiveStreamCallbackMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.RegenerationAiFeedbackResponse regenerationAiFeedback(com.zhijiejiaoyu.glory_api.live.RegenerationAiFeedbackRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getRegenerationAiFeedbackMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.SubmitUserAttitudeForAIResultResponse submitUserAttitudeForAiResult(com.zhijiejiaoyu.glory_api.live.SubmitUserAttitudeForAIResultRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getSubmitUserAttitudeForAiResultMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.PreheatResponse preheatProduct(com.zhijiejiaoyu.glory_api.live.PreheatRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getPreheatProductMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.PublicPriceResponse publicPrice(com.zhijiejiaoyu.glory_api.live.PublicPriceRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getPublicPriceMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     *tenant
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.tenant.ListTenantSystemResponse listTenantSystem(com.zhijiejiaoyu.glory_api.tenant.ListTenantSystemRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListTenantSystemMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.tenant.CreateTenantResponse createTenant(com.zhijiejiaoyu.glory_api.tenant.CreateTenantRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateTenantMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.tenant.GetTenantResponse getTenant(com.zhijiejiaoyu.glory_api.tenant.GetTenantRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetTenantMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.tenant.UpdateTenantResponse updateTenant(com.zhijiejiaoyu.glory_api.tenant.UpdateTenantRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateTenantMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.tenant.DeleteTenantResponse deleteTenant(com.zhijiejiaoyu.glory_api.tenant.DeleteTenantRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteTenantMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.tenant.ListTenantResponse listTenant(com.zhijiejiaoyu.glory_api.tenant.ListTenantRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListTenantMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.tenant.GetTenantOrgResponse getTenantOrg(com.zhijiejiaoyu.glory_api.tenant.GetTenantOrgRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetTenantOrgMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.tenant.EnterTenantResponse enterTenant(com.zhijiejiaoyu.glory_api.tenant.EnterTenantRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getEnterTenantMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.tenant.ExitTenantResponse exitTenant(com.zhijiejiaoyu.glory_api.tenant.ExitTenantRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getExitTenantMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.tenant.IsTenantResponse isEnterTenant(com.zhijiejiaoyu.glory_api.tenant.IsEnterTenantRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getIsEnterTenantMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.tenant.InitTenantResponse initTenant(com.zhijiejiaoyu.glory_api.tenant.InitTenantRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getInitTenantMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.tenant.CreateTenantCourseResponse createTenantCourse(com.zhijiejiaoyu.glory_api.tenant.CreateTenantCourseRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateTenantCourseMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.tenant.ListTenantResponse listTenantCourse(com.zhijiejiaoyu.glory_api.tenant.ListTenantRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListTenantCourseMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     *tenant_dept
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.tenant.CreateTenantDeptResponse createTenantDept(com.zhijiejiaoyu.glory_api.tenant.CreateTenantDeptRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateTenantDeptMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.tenant.UpdateTenantDeptResponse updateTenantDept(com.zhijiejiaoyu.glory_api.tenant.UpdateTenantDeptRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateTenantDeptMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.tenant.DeleteTenantDeptResponse deleteTenantDept(com.zhijiejiaoyu.glory_api.tenant.DeleteTenantDeptRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteTenantDeptMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptResponse getTenantDept(com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetTenantDeptMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 获取所有部门类型[select]
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptTypeResponse getTenantDeptType(com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptTypeRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetTenantDeptTypeMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.tenant.ListTenantDeptResponse listTenantDept(com.zhijiejiaoyu.glory_api.tenant.ListTenantDeptRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListTenantDeptMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * tenant_user
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.tenant.CreateTenantUserResponse createTenantUser(com.zhijiejiaoyu.glory_api.tenant.CreateTenantUserRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateTenantUserMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.tenant.DeleteTenantUserResponse deleteTenantUser(com.zhijiejiaoyu.glory_api.tenant.DeleteTenantUserRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteTenantUserMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserResponse updateTenantUser(com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateTenantUserMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.tenant.GetTenantUserResponse getTenantUser(com.zhijiejiaoyu.glory_api.tenant.GetTenantUserRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetTenantUserMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.tenant.ListTenantUserResponse listTenantUser(com.zhijiejiaoyu.glory_api.tenant.ListTenantUserRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListTenantUserMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.tenant.ListTenantStudentResponse listTenantStudent(com.zhijiejiaoyu.glory_api.tenant.ListTenantStudentRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListTenantStudentMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserPasswordResponse updateTenantUserPassword(com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserPasswordRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateTenantUserPasswordMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     *tenant_config
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.tenant.UpdateTenantConfigResponse updateTenantConfig(com.zhijiejiaoyu.glory_api.tenant.UpdateTenantConfigRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateTenantConfigMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.tenant.ListTenantConfigResponse listTenantConfig(com.zhijiejiaoyu.glory_api.tenant.ListTenantConfigRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListTenantConfigMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * short_video
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoResponse createShortVideo(com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateShortVideoMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.short_video.StageShortVideoResponse stageShortVideo(com.zhijiejiaoyu.glory_api.short_video.StageShortVideoRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getStageShortVideoMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 我的短视频列表
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.ListMyShortVideoResponse listMyShortVideo(com.zhijiejiaoyu.glory_api.short_video.ListMyShortVideoRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListMyShortVideoMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 我的暂存视频列表
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.ListMyStageVideoResponse listMyStageVideo(com.zhijiejiaoyu.glory_api.short_video.ListMyStageVideoRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListMyStageVideoMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 我的喜欢视频列表
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.ListMyLikeVideoResponse listMyLikeVideo(com.zhijiejiaoyu.glory_api.short_video.ListMyLikeVideoRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListMyLikeVideoMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 我的收藏视频列表
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.ListMyFavoriteVideoResponse listMyFavoriteVideo(com.zhijiejiaoyu.glory_api.short_video.ListMyFavoriteVideoRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListMyFavoriteVideoMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 获取短视频详情
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.GetShortVideoResponse getShortVideo(com.zhijiejiaoyu.glory_api.short_video.GetShortVideoRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetShortVideoMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 更新短视频详情
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.UpdateShortVideoResponse updateShortVideo(com.zhijiejiaoyu.glory_api.short_video.UpdateShortVideoRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateShortVideoMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 删除短视频
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoResponse deleteShortVideo(com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteShortVideoMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 获取暂存视频详情
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.GetStageVideoResponse getStageVideo(com.zhijiejiaoyu.glory_api.short_video.GetStageVideoRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetStageVideoMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 删除暂存视频
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.DeleteStageVideoResponse deleteStageVideo(com.zhijiejiaoyu.glory_api.short_video.DeleteStageVideoRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteStageVideoMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.short_video.UpdateStageVideoResponse updateStageVideo(com.zhijiejiaoyu.glory_api.short_video.UpdateStageVideoRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateStageVideoMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 平台短短视频列表
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.ManagementListShortVideoResponse managementListShortVideo(com.zhijiejiaoyu.glory_api.short_video.ManagementListShortVideoRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getManagementListShortVideoMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 平台审核短视频
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.ManagementCensorShortVideoResponse managementCensorShortVideo(com.zhijiejiaoyu.glory_api.short_video.ManagementCensorShortVideoRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getManagementCensorShortVideoMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 平台删除短视频
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.ManagementDeleteShortVideoResponse managementDeleteShortVideo(com.zhijiejiaoyu.glory_api.short_video.ManagementDeleteShortVideoRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getManagementDeleteShortVideoMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * APP首页短视频列表
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.ListShortVideoResponse listShortVideo(com.zhijiejiaoyu.glory_api.short_video.ListShortVideoRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListShortVideoMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 点赞短视频
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.LikeShortVideoResponse likeShortVideo(com.zhijiejiaoyu.glory_api.short_video.LikeShortVideoRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getLikeShortVideoMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 收藏短视频
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.FavoriteShortVideoResponse favoriteShortVideo(com.zhijiejiaoyu.glory_api.short_video.FavoriteShortVideoRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getFavoriteShortVideoMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 发布短视频评论
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoCommentResponse createShortVideoComment(com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoCommentRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateShortVideoCommentMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 删除短视频评论
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoCommentResponse deleteShortVideoComment(com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoCommentRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteShortVideoCommentMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 短视频评论列表
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.ListShortVideoCommentResponse listShortVideoComment(com.zhijiejiaoyu.glory_api.short_video.ListShortVideoCommentRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListShortVideoCommentMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.short_video.TeacherListStudentShortVideoResponse teacherListStudentShortVideo(com.zhijiejiaoyu.glory_api.short_video.TeacherListStudentShortVideoRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getTeacherListStudentShortVideoMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * coupon
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.shop.CreateCouponResponse createCoupon(com.zhijiejiaoyu.glory_api.shop.CreateCouponRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateCouponMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.ListCouponResponse listCoupon(com.zhijiejiaoyu.glory_api.shop.ListCouponRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListCouponMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.GetCouponDetailResponse couponDetail(com.zhijiejiaoyu.glory_api.shop.GetCouponDetailRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCouponDetailMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.UpdateCouponResponse updateCoupon(com.zhijiejiaoyu.glory_api.shop.UpdateCouponRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateCouponMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.DeleteCouponResponse deleteCoupon(com.zhijiejiaoyu.glory_api.shop.DeleteCouponRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteCouponMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.AbolishCouponResponse abolishCoupon(com.zhijiejiaoyu.glory_api.shop.AbolishCouponRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getAbolishCouponMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.UpdateCouponDistributionStatusResponse updateCouponDistributionStatus(com.zhijiejiaoyu.glory_api.shop.UpdateCouponDistributionStatusRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateCouponDistributionStatusMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.ClaimCouponResponse claimCoupon(com.zhijiejiaoyu.glory_api.shop.ClaimCouponRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getClaimCouponMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.ListMyCouponResponse listMyCoupon(com.zhijiejiaoyu.glory_api.shop.ListMyCouponRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListMyCouponMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * activity
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.shop.CreateActivityResponse createActivity(com.zhijiejiaoyu.glory_api.shop.CreateActivityRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateActivityMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.ListActivityResponse listActivity(com.zhijiejiaoyu.glory_api.shop.ListActivityRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListActivityMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.GetActivityDetailResponse activityDetail(com.zhijiejiaoyu.glory_api.shop.GetActivityDetailRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getActivityDetailMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.UpdateActivityResponse updateActivity(com.zhijiejiaoyu.glory_api.shop.UpdateActivityRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateActivityMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.DeleteActivityResponse deleteActivity(com.zhijiejiaoyu.glory_api.shop.DeleteActivityRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteActivityMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.shop.DisableActivityResponse disableActivity(com.zhijiejiaoyu.glory_api.shop.DisableActivityRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDisableActivityMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 获取正在讲解的商品和发放中的优惠券
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.live.GetCouponAndIntroducingProductResponse getCouponAndIntroducingProduct(com.zhijiejiaoyu.glory_api.live.GetCouponAndIntroducingProductRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetCouponAndIntroducingProductMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 素材库
     * 创建画板
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.CreateCourseMaterialBoxResponse createCourseMaterialBox(com.zhijiejiaoyu.glory_api.course.CreateCourseMaterialBoxRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateCourseMaterialBoxMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 编辑画板
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.UpdateCourseMaterialBoxResponse updateCourseMaterialBox(com.zhijiejiaoyu.glory_api.course.UpdateCourseMaterialBoxRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateCourseMaterialBoxMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 画板列表
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.ListCourseMaterialBoxResponse listCourseMaterialBox(com.zhijiejiaoyu.glory_api.course.ListCourseMaterialBoxRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListCourseMaterialBoxMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 删除画板
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialBoxResponse deleteCourseMaterialBox(com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialBoxRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteCourseMaterialBoxMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 上传素材
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.UploadCourseMaterialResponse uploadCourseMaterial(com.zhijiejiaoyu.glory_api.course.UploadCourseMaterialRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUploadCourseMaterialMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 素材列表
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.ListCourseMaterialResponse listCourseMaterial(com.zhijiejiaoyu.glory_api.course.ListCourseMaterialRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListCourseMaterialMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 删除素材
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialResponse deleteCourseMaterial(com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteCourseMaterialMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 资源库
     * 获取课程类型树
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.GetCourseTypeTreeResponse getCourseTypeTree(com.zhijiejiaoyu.glory_api.course.GetCourseTypeTreeRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetCourseTypeTreeMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 获取课程类型列表
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.GetCourseTypeListResponse getCourseTypeList(com.zhijiejiaoyu.glory_api.course.GetCourseTypeListRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetCourseTypeListMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 获取能力指标编码
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.GetCourseModuleCodeResponse getCourseModuleCode(com.zhijiejiaoyu.glory_api.course.GetCourseModuleCodeRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetCourseModuleCodeMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 获取课程内容编码
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.GetCourseChapterCodeResponse getCourseChapterCode(com.zhijiejiaoyu.glory_api.course.GetCourseChapterCodeRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetCourseChapterCodeMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 创建能力指标
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.CreateCourseModuleResponse createCourseModule(com.zhijiejiaoyu.glory_api.course.CreateCourseModuleRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateCourseModuleMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 获取能力指标
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.GetCourseModuleResponse getCourseModule(com.zhijiejiaoyu.glory_api.course.GetCourseModuleRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetCourseModuleMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 更新能力指标
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.UpdateCourseModuleResponse updateCourseModule(com.zhijiejiaoyu.glory_api.course.UpdateCourseModuleRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateCourseModuleMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 删除能力指标
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.DeleteCourseModuleResponse deleteCourseModule(com.zhijiejiaoyu.glory_api.course.DeleteCourseModuleRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteCourseModuleMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 能力指标列表
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.ListCourseModuleResponse listCourseModule(com.zhijiejiaoyu.glory_api.course.ListCourseModuleRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListCourseModuleMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 课程列表
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.ListLatestCourseResponse listLatestCourse(com.zhijiejiaoyu.glory_api.course.ListLatestCourseRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListLatestCourseMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.course.ListHottestCourseResponse listHottestCourse(com.zhijiejiaoyu.glory_api.course.ListHottestCourseRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListHottestCourseMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 自定义课程
     * 新建课程
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.CreateCmCourseResponse createCmCourse(com.zhijiejiaoyu.glory_api.course.CreateCmCourseRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateCmCourseMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 预览课程
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.PreviewCmCourseResponse previewCmCourse(com.zhijiejiaoyu.glory_api.course.PreviewCmCourseRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getPreviewCmCourseMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 非模块化课程
     * 新建资源
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResourceResponse createNmCourseResource(com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResourceRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateNmCourseResourceMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 新建章节
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResponse createNmCourseChapter(com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateNmCourseChapterMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 新建课程
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.CreateNmCourseResponse createNmCourse(com.zhijiejiaoyu.glory_api.course.CreateNmCourseRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateNmCourseMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 更新课程
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.UpdateNmCourseResponse updateNmCourse(com.zhijiejiaoyu.glory_api.course.UpdateNmCourseRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateNmCourseMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 课程列表
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.ListNmCourseResponse listNmCourse(com.zhijiejiaoyu.glory_api.course.ListNmCourseRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListNmCourseMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 课程详情
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.NmCourseDetailResponse nmCourseDetail(com.zhijiejiaoyu.glory_api.course.NmCourseDetailRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getNmCourseDetailMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 删除课程
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.DeleteNmCourseResponse deleteNmCourse(com.zhijiejiaoyu.glory_api.course.DeleteNmCourseRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteNmCourseMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 模块化课程
     * 创建模块化课程
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.CreateCourseResponse createCourse(com.zhijiejiaoyu.glory_api.course.CreateCourseRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateCourseMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 获取模块化课程
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.GetCourseResponse getCourse(com.zhijiejiaoyu.glory_api.course.GetCourseRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetCourseMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 更新模块化课程
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.UpdateCourseResponse updateCourse(com.zhijiejiaoyu.glory_api.course.UpdateCourseRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateCourseMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 删除模块化课程
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.DeleteCourseResponse deleteCourse(com.zhijiejiaoyu.glory_api.course.DeleteCourseRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteCourseMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 模块化课程列表
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.ListCourseResponse listCourse(com.zhijiejiaoyu.glory_api.course.ListCourseRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListCourseMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 知识图谱
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.CreateKnowledgeGraphResponse createKnowledgeGraph(com.zhijiejiaoyu.glory_api.course.CreateKnowledgeGraphRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateKnowledgeGraphMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphResponse getKnowledgeGraph(com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetKnowledgeGraphMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphNodeResponse getKnowledgeGraphNode(com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphNodeRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetKnowledgeGraphNodeMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.course.GetCourseIdsResponse getCourseIds(com.zhijiejiaoyu.glory_api.course.GetCourseIdsRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetCourseIdsMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 我的课程
     * 加入课程
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.EnrollCourseResponse enrollCourse(com.zhijiejiaoyu.glory_api.course.EnrollCourseRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getEnrollCourseMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 删除我的课程
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.DeleteMyCourseResponse deleteMyCourse(com.zhijiejiaoyu.glory_api.course.DeleteMyCourseRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteMyCourseMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 上报课程进度
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.UpdateCourseProgressResponse updateCourseProgress(com.zhijiejiaoyu.glory_api.course.UpdateCourseProgressRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateCourseProgressMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 我的课程列表
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.ListMyCourseResponse listMyCourse(com.zhijiejiaoyu.glory_api.course.ListMyCourseRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListMyCourseMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 教案管理
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.ListTeachingPlanResponse listTeachingPlan(com.zhijiejiaoyu.glory_api.course.ListTeachingPlanRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListTeachingPlanMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.course.CreateTeachingPlanResponse createTeachingPlan(com.zhijiejiaoyu.glory_api.course.CreateTeachingPlanRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateTeachingPlanMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.course.UpdateTeachingPlanResponse updateTeachingPlan(com.zhijiejiaoyu.glory_api.course.UpdateTeachingPlanRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateTeachingPlanMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.course.DeleteTeachingPlanResponse deleteTeachingPlan(com.zhijiejiaoyu.glory_api.course.DeleteTeachingPlanRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteTeachingPlanMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 上报老师授课课程进度
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.UpdateTeachingCourseProgressResponse updateTeachingCourseProgress(com.zhijiejiaoyu.glory_api.course.UpdateTeachingCourseProgressRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateTeachingCourseProgressMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 培养方案
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.CreateEduSchemeResponse createEduScheme(com.zhijiejiaoyu.glory_api.course.CreateEduSchemeRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateEduSchemeMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.course.UpdateEduSchemeResponse updateEduScheme(com.zhijiejiaoyu.glory_api.course.UpdateEduSchemeRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateEduSchemeMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.course.ListEduSchemeResponse listEduScheme(com.zhijiejiaoyu.glory_api.course.ListEduSchemeRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListEduSchemeMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.course.EduSchemeDetailResponse eduSchemeDetail(com.zhijiejiaoyu.glory_api.course.EduSchemeDetailRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getEduSchemeDetailMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.course.DeleteEduSchemeResponse deleteEduScheme(com.zhijiejiaoyu.glory_api.course.DeleteEduSchemeRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteEduSchemeMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.course.DistributeEduSchemeResponse distributeEduScheme(com.zhijiejiaoyu.glory_api.course.DistributeEduSchemeRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDistributeEduSchemeMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 获取培养方案，但返回结果和获取模块化结果一样
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.GetEduSchemeLikeCourseResponse getEduSchemeLikeCourse(com.zhijiejiaoyu.glory_api.course.GetEduSchemeLikeCourseRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetEduSchemeLikeCourseMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * app下载
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.GetAndroidQRCodeResponse getAndroidQRcode(com.zhijiejiaoyu.glory_api.course.GetAndroidQRCodeRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetAndroidQRcodeMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 工作岗位
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.CreateJobResponse createJob(com.zhijiejiaoyu.glory_api.course.CreateJobRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateJobMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.course.UpdateJobResponse updateJob(com.zhijiejiaoyu.glory_api.course.UpdateJobRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateJobMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.course.DeleteJobResponse deleteJob(com.zhijiejiaoyu.glory_api.course.DeleteJobRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteJobMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.course.ListJobResponse listJob(com.zhijiejiaoyu.glory_api.course.ListJobRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListJobMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 流量统计
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.traffic.GetSchoolLiveTrafficChartResponse getSchooLiveChart(com.zhijiejiaoyu.glory_api.traffic.GetSchoolLiveTrafficChartRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetSchooLiveChartMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.traffic.ListSchoolLiveTrafficResponse listSchooLiveTraffic(com.zhijiejiaoyu.glory_api.traffic.ListSchoolLiveTrafficRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListSchooLiveTrafficMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.traffic.GetAllLiveTrafficResponse getLiveAllTraffic(com.zhijiejiaoyu.glory_api.traffic.GetAllLiveTrafficRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetLiveAllTrafficMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.traffic.GetSchooLiveTrafficResponse getSchooLiveTraffic(com.zhijiejiaoyu.glory_api.traffic.GetSchooLiveTrafficRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetSchooLiveTrafficMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.traffic.ListTenantLiveTrafficConfigResponse listTenantTrafficConfig(com.zhijiejiaoyu.glory_api.traffic.ListTenantLiveTrafficConfigRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListTenantTrafficConfigMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.traffic.UpdateTenantLiveTrafficConfigResponse updateTenantTrafficConfig(com.zhijiejiaoyu.glory_api.traffic.UpdateTenantLiveTrafficConfigRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateTenantTrafficConfigMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 流量告警
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.traffic.ListTrafficWarningResponse listTrafficWarning(com.zhijiejiaoyu.glory_api.traffic.ListTrafficWarningRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListTrafficWarningMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.traffic.DeleteTrafficWarningResponse deleteTrafficWarning(com.zhijiejiaoyu.glory_api.traffic.DeleteTrafficWarningRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteTrafficWarningMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 直播管控
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.live.CreateLiveControlResponse createLiveControl(com.zhijiejiaoyu.glory_api.live.CreateLiveControlRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateLiveControlMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.UpdateLiveControlResponse updateLiveControl(com.zhijiejiaoyu.glory_api.live.UpdateLiveControlRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateLiveControlMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.ListLiveControlResponse listLiveControl(com.zhijiejiaoyu.glory_api.live.ListLiveControlRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListLiveControlMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.DeleteLiveControlResponse deleteLiveControl(com.zhijiejiaoyu.glory_api.live.DeleteLiveControlRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteLiveControlMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 快速评价模版
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationResponse createQuickEvaluationStandard(com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateQuickEvaluationStandardMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.UpdateQuickEvaluationResponse updateQuickEvaluationStandard(com.zhijiejiaoyu.glory_api.live.UpdateQuickEvaluationRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateQuickEvaluationStandardMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationResponse deleteQuickEvaluationStandard(com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteQuickEvaluationStandardMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationResponse listQuickEvaluationStandard(com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListQuickEvaluationStandardMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     *获取直播回放链接
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.live.GetLiveReplayResponse getLiveReplay(com.zhijiejiaoyu.glory_api.live.GetLiveReplayRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetLiveReplayMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 快速评价报告
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationReportResponse createQuickEvaluationReport(com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationReportRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateQuickEvaluationReportMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationReportResponse listQuickEvaluationReport(com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationReportRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListQuickEvaluationReportMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationReportResponse getQuickEvaluationReport(com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationReportRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetQuickEvaluationReportMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationReportResponse deleteQuickEvaluationReport(com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationReportRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteQuickEvaluationReportMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationDetailResponse getQuickEvaluationDetail(com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationDetailRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetQuickEvaluationDetailMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * App 版本管理
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.course.CreateVersionLogResponse createVersionLog(com.zhijiejiaoyu.glory_api.course.CreateVersionLogRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateVersionLogMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.course.UpdateVersionLogResponse updateVersionLog(com.zhijiejiaoyu.glory_api.course.UpdateVersionLogRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateVersionLogMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.course.ListVersionLogResponse listVersionLog(com.zhijiejiaoyu.glory_api.course.ListVersionLogRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListVersionLogMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.course.DeleteVersionLogResponse deleteVersionLog(com.zhijiejiaoyu.glory_api.course.DeleteVersionLogRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteVersionLogMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.course.GetLatestVersionResponse getLatestVersion(com.zhijiejiaoyu.glory_api.course.GetLatestVersionRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetLatestVersionMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 系统预置任务管理
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.task.GetTaskConfigResponse getTaskConfig(com.zhijiejiaoyu.glory_api.task.GetTaskConfigRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetTaskConfigMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.CreateSystemTaskResponse createSystemTask(com.zhijiejiaoyu.glory_api.task.CreateSystemTaskRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateSystemTaskMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.ListSystemTaskResponse listSystemTask(com.zhijiejiaoyu.glory_api.task.ListSystemTaskRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListSystemTaskMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.GetSystemTaskResponse getSystemTask(com.zhijiejiaoyu.glory_api.task.GetSystemTaskRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetSystemTaskMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.UpdateSystemTaskResponse updateSystemTask(com.zhijiejiaoyu.glory_api.task.UpdateSystemTaskRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateSystemTaskMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.DeleteSystemTaskResponse deleteSystemTask(com.zhijiejiaoyu.glory_api.task.DeleteSystemTaskRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteSystemTaskMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 教师任务模板
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskTemplateResponse createTeacherTaskTemplate(com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskTemplateRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateTeacherTaskTemplateMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskTemplateResponse updateTeacherTaskTemplate(com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskTemplateRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateTeacherTaskTemplateMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.ListTeacherTaskTemplateResponse listTeacherTaskTemplate(com.zhijiejiaoyu.glory_api.task.ListTeacherTaskTemplateRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListTeacherTaskTemplateMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.GetTeacherTaskTemplateResponse getTeacherTaskTemplate(com.zhijiejiaoyu.glory_api.task.GetTeacherTaskTemplateRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetTeacherTaskTemplateMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskTemplateResponse deleteTeacherTaskTemplate(com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskTemplateRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteTeacherTaskTemplateMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 教师任务管理
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskResponse createTeacherTask(com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateTeacherTaskMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskResponse updateTeacherTask(com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateTeacherTaskMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.ListTeacherTaskResponse listTeacherTask(com.zhijiejiaoyu.glory_api.task.ListTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListTeacherTaskMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.GetTeacherTaskResponse getTeacherTask(com.zhijiejiaoyu.glory_api.task.GetTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetTeacherTaskMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.GetTeacherTaskProgressResponse getTeacherTaskProgress(com.zhijiejiaoyu.glory_api.task.GetTeacherTaskProgressRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetTeacherTaskProgressMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskResponse deleteTeacherTask(com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteTeacherTaskMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.TeacherTaskStatsResponse teacherTaskStats(com.zhijiejiaoyu.glory_api.task.TeacherTaskStatsRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getTeacherTaskStatsMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.ListTaskStudentResponse teacherTaskStudents(com.zhijiejiaoyu.glory_api.task.ListTaskStudentRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getTeacherTaskStudentsMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 教师任务统计
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.task.CountClassSubmitResponse countClassSubmit(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCountClassSubmitMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.CountClassSubmitListResponse countClassSubmitList(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCountClassSubmitListMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.CountPositiveListResponse countPositiveList(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCountPositiveListMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.CountPotentialListResponse countPotentialList(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCountPotentialListMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.CountSubmitListResponse countSubmitList(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCountSubmitListMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.CountClassPassResponse countClassPass(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCountClassPassMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.CountClassPassListResponse countClassPassList(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCountClassPassListMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.CountSuperStudentListResponse countSuperStudentList(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCountSuperStudentListMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.CountLaggingStudentListResponse countLaggingStudentList(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCountLaggingStudentListMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.CountPassListResponse countPassList(com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCountPassListMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.CountHistoryTaskResponse countHistoryTask(com.zhijiejiaoyu.glory_api.task.CountHistoryTaskRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCountHistoryTaskMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 学生任务
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.task.ListStudentTaskResponse listStudentTask(com.zhijiejiaoyu.glory_api.task.ListStudentTaskRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListStudentTaskMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.SubmitStudentTaskResponse submitStudentTask(com.zhijiejiaoyu.glory_api.task.SubmitStudentTaskRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getSubmitStudentTaskMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.GetStudentTaskResponse getStudentTask(com.zhijiejiaoyu.glory_api.task.GetStudentTaskRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetStudentTaskMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.TeacherListStudentTaskResponse teacherListStudentTask(com.zhijiejiaoyu.glory_api.task.TeacherListStudentTaskRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getTeacherListStudentTaskMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.TeacherEvaluateStudentTaskResponse teacherEvaluateStudentTask(com.zhijiejiaoyu.glory_api.task.TeacherEvaluateStudentTaskRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getTeacherEvaluateStudentTaskMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.StudentTaskStatsResponse studentTaskStats(com.zhijiejiaoyu.glory_api.task.StudentTaskStatsRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getStudentTaskStatsMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.StudentTaskEvaluateStatsResponse studentTaskEvaluateStats(com.zhijiejiaoyu.glory_api.task.StudentTaskEvaluateStatsRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getStudentTaskEvaluateStatsMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.StartStudentTaskTimeResponse startStudentTaskTime(com.zhijiejiaoyu.glory_api.task.StartStudentTaskTimeRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getStartStudentTaskTimeMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.task.DownloadTeacherTaskResponse downloadTeacherTask(com.zhijiejiaoyu.glory_api.task.DownloadTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDownloadTeacherTaskMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 通知模块
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.notification.ListNotificationResponse listNotification(com.zhijiejiaoyu.glory_api.notification.ListNotificationRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListNotificationMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.notification.CountNotificationResponse countNotification(com.zhijiejiaoyu.glory_api.notification.CountNotificationRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCountNotificationMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.notification.ReadNotificationResponse readNotification(com.zhijiejiaoyu.glory_api.notification.ReadNotificationRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getReadNotificationMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.notification.TestNotificationResponse testNotification(com.zhijiejiaoyu.glory_api.notification.TestNotificationRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getTestNotificationMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.notification.DeleteNotificationResponse deleteNotification(com.zhijiejiaoyu.glory_api.notification.DeleteNotificationRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteNotificationMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 直播大屏
     * 获取专业和班级
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.live.ListUserMajorAndClasResponse listUserMajorAndClass(com.zhijiejiaoyu.glory_api.live.ListUserMajorAndClasRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListUserMajorAndClassMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.GetAggregationLiveUrlResponse getAggregationLiveUrl(com.zhijiejiaoyu.glory_api.live.GetAggregationLiveUrlRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetAggregationLiveUrlMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.GetLiveBoardDataResponse getLiveBoardData(com.zhijiejiaoyu.glory_api.live.GetLiveBoardDataRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetLiveBoardDataMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.GetLiveBoardCommentsResponse getLiveBoardComments(com.zhijiejiaoyu.glory_api.live.GetLiveBoardCommentsRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetLiveBoardCommentsMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.ListLivingUserResponse listBoardLivingUser(com.zhijiejiaoyu.glory_api.live.ListLivingUserRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListBoardLivingUserMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.live.CloseCasterResponse closeCaster(com.zhijiejiaoyu.glory_api.live.CloseCasterRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCloseCasterMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 智能文案
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationResponse createArticleCreation(com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateArticleCreationMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationResponse listMyArticleCreation(com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListMyArticleCreationMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationDraftResponse createArticleCreationDraft(com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationDraftRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateArticleCreationDraftMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationDraftResponse listMyDraftArticleCreation(com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationDraftRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListMyDraftArticleCreationMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.short_video.ArticleCreationDraftDetailResponse draftArticleCreationDetail(com.zhijiejiaoyu.glory_api.short_video.ArticleCreationDraftDetailRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDraftArticleCreationDetailMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.short_video.DeleteArticleCreationDraftResponse deleteDraftArticleCreation(com.zhijiejiaoyu.glory_api.short_video.DeleteArticleCreationDraftRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteDraftArticleCreationMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.short_video.ArticleCreationStatisticsResponse articleCreationStatistics(com.zhijiejiaoyu.glory_api.short_video.ArticleCreationStatisticsRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getArticleCreationStatisticsMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.short_video.GetExampleArticleResponse getExampleArticle(com.zhijiejiaoyu.glory_api.short_video.GetExampleArticleRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetExampleArticleMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.short_video.GetEvaluationStandardResponse getEvaluationStandard(com.zhijiejiaoyu.glory_api.short_video.GetEvaluationStandardRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetEvaluationStandardMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.short_video.CreateEvaluationConfigResponse createEvaluationConfig(com.zhijiejiaoyu.glory_api.short_video.CreateEvaluationConfigRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateEvaluationConfigMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.short_video.ListEvaluationConfigResponse listEvaluationConfig(com.zhijiejiaoyu.glory_api.short_video.ListEvaluationConfigRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListEvaluationConfigMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.short_video.BatchEvaluateArticleResponse batchEvaluateArticleCreation(com.zhijiejiaoyu.glory_api.short_video.BatchEvaluateArticleRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getBatchEvaluateArticleCreationMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.short_video.ListStudentArticleCreationResponse listStudentArticleCreation(com.zhijiejiaoyu.glory_api.short_video.ListStudentArticleCreationRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListStudentArticleCreationMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.short_video.StudentArticleCreationEvaluationDetailResponse studentArticleCreationEvaluationDetail(com.zhijiejiaoyu.glory_api.short_video.StudentArticleCreationEvaluationDetailRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getStudentArticleCreationEvaluationDetailMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 文案纠错
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.CorrectSentenceResponse correctSentence(com.zhijiejiaoyu.glory_api.short_video.CorrectSentenceRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCorrectSentenceMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 生成AI评价
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.GenArticleAIEvaluationResponse genArticleAiEvaluation(com.zhijiejiaoyu.glory_api.short_video.GenArticleAIEvaluationRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGenArticleAiEvaluationMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 获取AI评价
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.GetArticleAIEvaluationResponse getArticleAiEvaluation(com.zhijiejiaoyu.glory_api.short_video.GetArticleAIEvaluationRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetArticleAiEvaluationMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 文案AI问答
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.ArticleAIChatResponse articleAiChat(com.zhijiejiaoyu.glory_api.short_video.ArticleAIChatRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getArticleAiChatMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 获取AI聊天配置
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.GetChatConfigResponse getChatConfig(com.zhijiejiaoyu.glory_api.short_video.GetChatConfigRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetChatConfigMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.short_video.UpdateModelPriceResponse updateModelPrice(com.zhijiejiaoyu.glory_api.short_video.UpdateModelPriceRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateModelPriceMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.short_video.UpdateTenantCourseDataResponse updateArticleCreationTenantCourse(com.zhijiejiaoyu.glory_api.short_video.UpdateTenantCourseDataRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getUpdateArticleCreationTenantCourseMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantResponse getArticleCreationTenant(com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetArticleCreationTenantMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantResponse listArticleCreationTenant(com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListArticleCreationTenantMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantCostResponse listArticleCreationTenantCost(com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantCostRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListArticleCreationTenantCostMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantCostResponse getArticleCreationTenantCost(com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantCostRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetArticleCreationTenantCostMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.zhijiejiaoyu.glory_api.short_video.GetSubTopicAiResultResponse getSubTopicAiResult(com.zhijiejiaoyu.glory_api.short_video.GetSubTopicAiResultRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetSubTopicAiResultMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 数字人合成视频接口
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.CreateDigitalVideoResponse createDigitalVideo(com.zhijiejiaoyu.glory_api.short_video.CreateDigitalVideoRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getCreateDigitalVideoMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 查询数字人视频合成任务进度接口
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.ListDigitalVideoResponse listDigitalVideo(com.zhijiejiaoyu.glory_api.short_video.ListDigitalVideoRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListDigitalVideoMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 查询任务进度接口
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.GetDigitalVideoResponse getDigitalVideo(com.zhijiejiaoyu.glory_api.short_video.GetDigitalVideoRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getGetDigitalVideoMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 数字人模型列表接口
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.ListDigitalCodeResponse listDigitalCode(com.zhijiejiaoyu.glory_api.short_video.ListDigitalCodeRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListDigitalCodeMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 删除数字人视频接口
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.DeleteDigitalVideoResponse deleteDigitalVideo(com.zhijiejiaoyu.glory_api.short_video.DeleteDigitalVideoRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getDeleteDigitalVideoMethod(), getCallOptions(), request);
    }

    /**
     * <pre>
     * 数字人资产列表接口
     * </pre>
     */
    public com.zhijiejiaoyu.glory_api.short_video.ListDigitalAvatarResponse listDigitalAvatar(com.zhijiejiaoyu.glory_api.short_video.ListDigitalAvatarRequest request) {
      return io.grpc.stub.ClientCalls.blockingUnaryCall(
          getChannel(), getListDigitalAvatarMethod(), getCallOptions(), request);
    }
  }

  /**
   * A stub to allow clients to do ListenableFuture-style rpc calls to service glory_api.
   */
  public static final class glory_apiFutureStub
      extends io.grpc.stub.AbstractFutureStub<glory_apiFutureStub> {
    private glory_apiFutureStub(
        io.grpc.Channel channel, io.grpc.CallOptions callOptions) {
      super(channel, callOptions);
    }

    @java.lang.Override
    protected glory_apiFutureStub build(
        io.grpc.Channel channel, io.grpc.CallOptions callOptions) {
      return new glory_apiFutureStub(channel, callOptions);
    }

    /**
     * <pre>
     * endpoint /api/example/create_example, create example
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.example.CreateExampleResponse> createExample(
        com.zhijiejiaoyu.glory_api.example.CreateExampleRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateExampleMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * endpoint /api/example/get_example, get_example
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.example.GetExampleResponse> getExample(
        com.zhijiejiaoyu.glory_api.example.GetExampleRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetExampleMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * endpoint /api/example/update_example, update_example
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.example.UpdateExampleResponse> updateExample(
        com.zhijiejiaoyu.glory_api.example.UpdateExampleRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateExampleMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * endpoint /api/example/list_example, list example
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.example.ListExampleResponse> listExample(
        com.zhijiejiaoyu.glory_api.example.ListExampleRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListExampleMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * endpoint /api/example/delete_example, delete example
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.example.DeleteExampleResponse> deleteExample(
        com.zhijiejiaoyu.glory_api.example.DeleteExampleRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteExampleMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     *user
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.LoginResponse> login(
        com.zhijiejiaoyu.glory_api.user.LoginRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getLoginMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.LogoutResponse> logout(
        com.zhijiejiaoyu.glory_api.user.LogoutRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getLogoutMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.DeleteUserResponse> deleteUser(
        com.zhijiejiaoyu.glory_api.user.DeleteUserRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteUserMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.ListOwnAccessResponse> listOwnAccess(
        com.zhijiejiaoyu.glory_api.user.ListOwnAccessRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListOwnAccessMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.GetVerifyCodeResponse> getVerifyCode(
        com.zhijiejiaoyu.glory_api.user.GetVerifyCodeRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetVerifyCodeMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.CheckVerifyCodeResponse> checkVerifyCode(
        com.zhijiejiaoyu.glory_api.user.CheckVerifyCodeRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCheckVerifyCodeMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.GetUserResponse> getUser(
        com.zhijiejiaoyu.glory_api.user.GetUserRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetUserMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.GetUserByPhoneResponse> getUserByPhone(
        com.zhijiejiaoyu.glory_api.user.GetUserByPhoneRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetUserByPhoneMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.LoginWithPasswordResponse> loginWithPassword(
        com.zhijiejiaoyu.glory_api.user.LoginWithPasswordRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getLoginWithPasswordMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.UpdatePasswordResponse> updatePassword(
        com.zhijiejiaoyu.glory_api.user.UpdatePasswordRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdatePasswordMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.UpdateUserResponse> updateUser(
        com.zhijiejiaoyu.glory_api.user.UpdateUserRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateUserMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.UpdatePhoneResponse> updatePhone(
        com.zhijiejiaoyu.glory_api.user.UpdatePhoneRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdatePhoneMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 获取用户的所有专业[select]
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.GetUserMajorResponse> getUserMajor(
        com.zhijiejiaoyu.glory_api.user.GetUserMajorRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetUserMajorMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.UpdateUserTenantResponse> updateUserTenant(
        com.zhijiejiaoyu.glory_api.user.UpdateUserTenantRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateUserTenantMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 用户列表[用户名+头像]
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.ListUserResponse> listUser(
        com.zhijiejiaoyu.glory_api.user.ListUserRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListUserMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 绑定微信接口
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.UserBindWechatResponse> userBindWechat(
        com.zhijiejiaoyu.glory_api.user.UserBindWechatRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUserBindWechatMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 微信解绑接口
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.UserUnbindWechatResponse> userUnbindWechat(
        com.zhijiejiaoyu.glory_api.user.UserUnbindWechatRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUserUnbindWechatMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 关注用户
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.FollowUserResponse> followUser(
        com.zhijiejiaoyu.glory_api.user.FollowUserRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getFollowUserMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 我的关注列表
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.ListMyFollowingResponse> listMyFollowing(
        com.zhijiejiaoyu.glory_api.user.ListMyFollowingRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListMyFollowingMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 我的粉丝列表
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.ListMyFollowerResponse> listMyFollower(
        com.zhijiejiaoyu.glory_api.user.ListMyFollowerRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListMyFollowerMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 我的朋友列表
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.ListMyFriendResponse> listMyFriend(
        com.zhijiejiaoyu.glory_api.user.ListMyFriendRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListMyFriendMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 我的社交信息
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.GetMySocialSummaryResponse> getMySocialSummary(
        com.zhijiejiaoyu.glory_api.user.GetMySocialSummaryRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetMySocialSummaryMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * page permission
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.GetUserPagePermissionResponse> getUserPagePermission(
        com.zhijiejiaoyu.glory_api.user.GetUserPagePermissionRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetUserPagePermissionMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.CreateRolePagePermissionResponse> createRolePagePermission(
        com.zhijiejiaoyu.glory_api.user.CreateRolePagePermissionRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateRolePagePermissionMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.UpdateRolePagePermissionResponse> updateRolePagePermission(
        com.zhijiejiaoyu.glory_api.user.UpdateRolePagePermissionRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateRolePagePermissionMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.GetRolePagePermissionResponse> getRolePagePermission(
        com.zhijiejiaoyu.glory_api.user.GetRolePagePermissionRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetRolePagePermissionMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * address
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.AddAddressResponse> addAddress(
        com.zhijiejiaoyu.glory_api.user.AddAddressRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getAddAddressMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.DeleteAddressResponse> deleteAddress(
        com.zhijiejiaoyu.glory_api.user.DeleteAddressRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteAddressMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.UpdateAddressResponse> updateAddress(
        com.zhijiejiaoyu.glory_api.user.UpdateAddressRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateAddressMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.GetAddressResponse> getAddress(
        com.zhijiejiaoyu.glory_api.user.GetAddressRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetAddressMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.ListAddressResponse> listAddress(
        com.zhijiejiaoyu.glory_api.user.ListAddressRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListAddressMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.ListUserByRoleResponse> listUserByRole(
        com.zhijiejiaoyu.glory_api.user.ListUserByRoleRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListUserByRoleMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * user permission
     *list the permissions that supported
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.ListPermissionResponse> listPermission(
        com.zhijiejiaoyu.glory_api.user.ListPermissionRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListPermissionMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.ListRoleResponse> listRole(
        com.zhijiejiaoyu.glory_api.user.ListRoleRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListRoleMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.GiveRolePermissionResponse> giveRolePermission(
        com.zhijiejiaoyu.glory_api.user.GiveRolePermissionRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGiveRolePermissionMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.RemoveRolePermissionResponse> removeRolePermission(
        com.zhijiejiaoyu.glory_api.user.RemoveRolePermissionRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getRemoveRolePermissionMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.CreateRoleResponse> createRole(
        com.zhijiejiaoyu.glory_api.user.CreateRoleRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateRoleMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.DeleteRoleResponse> deleteRole(
        com.zhijiejiaoyu.glory_api.user.DeleteRoleRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteRoleMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.ListResourceResponse> listResource(
        com.zhijiejiaoyu.glory_api.user.ListResourceRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListResourceMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.user.GetRoleTypeResponse> getRoleType(
        com.zhijiejiaoyu.glory_api.user.GetRoleTypeRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetRoleTypeMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.role.GetRoleTemplateResponse> getRoleTemplate(
        com.zhijiejiaoyu.glory_api.role.GetRoleTemplateRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetRoleTemplateMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.role.UpdateRoleTemplateResponse> updateRoleTemplate(
        com.zhijiejiaoyu.glory_api.role.UpdateRoleTemplateRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateRoleTemplateMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * shop
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.CreateShopResponse> createShop(
        com.zhijiejiaoyu.glory_api.shop.CreateShopRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateShopMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.GetShopResponse> getShop(
        com.zhijiejiaoyu.glory_api.shop.GetShopRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetShopMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.UpdateShopResponse> updateShop(
        com.zhijiejiaoyu.glory_api.shop.UpdateShopRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateShopMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.ListShopResponse> listShop(
        com.zhijiejiaoyu.glory_api.shop.ListShopRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListShopMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.DeleteShopResponse> deleteShop(
        com.zhijiejiaoyu.glory_api.shop.DeleteShopRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteShopMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.ListOperationMetricsResponse> listOperationMetrics(
        com.zhijiejiaoyu.glory_api.shop.ListOperationMetricsRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListOperationMetricsMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.GetShopQrcodeResponse> getShopQrcode(
        com.zhijiejiaoyu.glory_api.shop.GetShopQrcodeRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetShopQrcodeMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.UpdateShopManagerResponse> updateShopManager(
        com.zhijiejiaoyu.glory_api.shop.UpdateShopManagerRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateShopManagerMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.GetShopBusinessDataResponse> getShopBusinessData(
        com.zhijiejiaoyu.glory_api.shop.GetShopBusinessDataRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetShopBusinessDataMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.AddShopAccessResponse> addShopAccess(
        com.zhijiejiaoyu.glory_api.shop.AddShopAccessRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getAddShopAccessMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.RemoveShopAccessResponse> removeShopAccess(
        com.zhijiejiaoyu.glory_api.shop.RemoveShopAccessRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getRemoveShopAccessMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.VerifyFieldResponse> verifyField(
        com.zhijiejiaoyu.glory_api.shop.VerifyFieldRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getVerifyFieldMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.ListShopAccessResponse> listShopAccess(
        com.zhijiejiaoyu.glory_api.shop.ListShopAccessRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListShopAccessMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.AddShopCategoryResponse> addShopCategory(
        com.zhijiejiaoyu.glory_api.shop.AddShopCategoryRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getAddShopCategoryMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.GetShopCategoryResponse> getShopCategory(
        com.zhijiejiaoyu.glory_api.shop.GetShopCategoryRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetShopCategoryMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.RemoveShopCategoryResponse> removeShopCategory(
        com.zhijiejiaoyu.glory_api.shop.RemoveShopCategoryRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getRemoveShopCategoryMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.CreateTemplateResponse> addFreightTemplate(
        com.zhijiejiaoyu.glory_api.shop.CreateTemplateRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getAddFreightTemplateMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.GetTemplateResponse> getFreightTemplate(
        com.zhijiejiaoyu.glory_api.shop.GetTemplateRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetFreightTemplateMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.UpdateTemplateResponse> updateFreightTemplate(
        com.zhijiejiaoyu.glory_api.shop.UpdateTemplateRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateFreightTemplateMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.DeleteTemplateResponse> deleteFreightTemplate(
        com.zhijiejiaoyu.glory_api.shop.DeleteTemplateRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteFreightTemplateMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.ListTemplateResponse> listFreightTemplate(
        com.zhijiejiaoyu.glory_api.shop.ListTemplateRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListFreightTemplateMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.ListShopQualificationResponse> listQualification(
        com.zhijiejiaoyu.glory_api.shop.ListShopQualificationRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListQualificationMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     *mall
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.mall.MallIndexResponse> getMallIndex(
        com.zhijiejiaoyu.glory_api.mall.MallIndexRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetMallIndexMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * product category
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.CreateCategoryResponse> createCategory(
        com.zhijiejiaoyu.glory_api.shop.CreateCategoryRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateCategoryMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.GetCategoryResponse> getCategory(
        com.zhijiejiaoyu.glory_api.shop.GetCategoryRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetCategoryMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.UpdateCategoryResponse> updateCategory(
        com.zhijiejiaoyu.glory_api.shop.UpdateCategoryRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateCategoryMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.ListCategoryResponse> listCategory(
        com.zhijiejiaoyu.glory_api.shop.ListCategoryRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListCategoryMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.DeleteCategoryResponse> deleteCategory(
        com.zhijiejiaoyu.glory_api.shop.DeleteCategoryRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteCategoryMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     *category qualification
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.ListCategoryQualificationResponse> listCategoryQualification(
        com.zhijiejiaoyu.glory_api.shop.ListCategoryQualificationRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListCategoryQualificationMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * product product
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.CreateProductResponse> createProduct(
        com.zhijiejiaoyu.glory_api.shop.CreateProductRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateProductMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.GetProductResponse> getProduct(
        com.zhijiejiaoyu.glory_api.shop.GetProductRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetProductMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.UpdateProductResponse> updateProduct(
        com.zhijiejiaoyu.glory_api.shop.UpdateProductRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateProductMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.ListProductResponse> listProduct(
        com.zhijiejiaoyu.glory_api.shop.ListProductRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListProductMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.ListProductByProductIDsResponse> listProductByIDs(
        com.zhijiejiaoyu.glory_api.shop.ListProductByProductIDsRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListProductByIDsMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.DeleteProductResponse> deleteProduct(
        com.zhijiejiaoyu.glory_api.shop.DeleteProductRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteProductMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.UploadMultiImageResponse> uploadMultiImage(
        com.zhijiejiaoyu.glory_api.shop.UploadMultiImageRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUploadMultiImageMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.DeleteImageResponse> deleteImageById(
        com.zhijiejiaoyu.glory_api.shop.DeleteImageRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteImageByIdMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.BindAttributeResponse> bindAttribute(
        com.zhijiejiaoyu.glory_api.shop.BindAttributeRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getBindAttributeMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.PublishProductResponse> publishProduct(
        com.zhijiejiaoyu.glory_api.shop.PublishProductRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getPublishProductMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.OffSelfProductsResponse> offShelfProductInBatches(
        com.zhijiejiaoyu.glory_api.shop.OffSelfProductsRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getOffShelfProductInBatchesMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.DeleteProductsResponse> deleteProductInBatches(
        com.zhijiejiaoyu.glory_api.shop.DeleteProductsRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteProductInBatchesMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.ChangeProductStateResponse> changeProductsState(
        com.zhijiejiaoyu.glory_api.shop.ChangeProductStateRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getChangeProductsStateMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.SaveImageInfoResponse> saveProductImageInfo(
        com.zhijiejiaoyu.glory_api.shop.SaveImageInfoRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getSaveProductImageInfoMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * sku sku
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.CreateSkuResponse> createSku(
        com.zhijiejiaoyu.glory_api.shop.CreateSkuRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateSkuMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.GetSkuResponse> getSku(
        com.zhijiejiaoyu.glory_api.shop.GetSkuRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetSkuMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.UpdateSkuResponse> updateSku(
        com.zhijiejiaoyu.glory_api.shop.UpdateSkuRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateSkuMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.ListSkuResponse> listSku(
        com.zhijiejiaoyu.glory_api.shop.ListSkuRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListSkuMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.DeleteSkuResponse> deleteSku(
        com.zhijiejiaoyu.glory_api.shop.DeleteSkuRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteSkuMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * attribute
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.CreateAttributeResponse> createAttribute(
        com.zhijiejiaoyu.glory_api.shop.CreateAttributeRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateAttributeMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.GetAttributeResponse> getAttribute(
        com.zhijiejiaoyu.glory_api.shop.GetAttributeRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetAttributeMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.ListAttributeResponse> listAttribute(
        com.zhijiejiaoyu.glory_api.shop.ListAttributeRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListAttributeMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.DeleteAttributeResponse> deleteAttribute(
        com.zhijiejiaoyu.glory_api.shop.DeleteAttributeRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteAttributeMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.AddAttributeValueResponse> addAttributeValue(
        com.zhijiejiaoyu.glory_api.shop.AddAttributeValueRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getAddAttributeValueMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.DeleteAttributeValueResponse> deleteAttributeValue(
        com.zhijiejiaoyu.glory_api.shop.DeleteAttributeValueRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteAttributeValueMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * order
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.CreateOrderResponse> createOrder(
        com.zhijiejiaoyu.glory_api.shop.CreateOrderRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateOrderMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.GetOrderResponse> getOrder(
        com.zhijiejiaoyu.glory_api.shop.GetOrderRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetOrderMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.UpdateOrderResponse> updateOrder(
        com.zhijiejiaoyu.glory_api.shop.UpdateOrderRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateOrderMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.ListOrderResponse> listOrder(
        com.zhijiejiaoyu.glory_api.shop.ListOrderRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListOrderMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.DeleteOrderResponse> deleteOrder(
        com.zhijiejiaoyu.glory_api.shop.DeleteOrderRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteOrderMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.ShipGoodsResponse> shipGoods(
        com.zhijiejiaoyu.glory_api.shop.ShipGoodsRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getShipGoodsMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.ConfirmReceiptGoodsResponse> confirmReceiptGoods(
        com.zhijiejiaoyu.glory_api.shop.ConfirmReceiptGoodsRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getConfirmReceiptGoodsMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.GetOrderStatusResponse> getOrderStatus(
        com.zhijiejiaoyu.glory_api.shop.GetOrderStatusRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetOrderStatusMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.CancelOrderResponse> cancelOrder(
        com.zhijiejiaoyu.glory_api.shop.CancelOrderRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCancelOrderMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.ShipGoodsInBatchesResponse> shipGoodsInBatches(
        com.zhijiejiaoyu.glory_api.shop.ShipGoodsInBatchesRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getShipGoodsInBatchesMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.FreeShippingInBatchesResponse> freeShippingInBatches(
        com.zhijiejiaoyu.glory_api.shop.FreeShippingInBatchesRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getFreeShippingInBatchesMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.ListShopSummaryResponse> listShopSummary(
        com.zhijiejiaoyu.glory_api.shop.ListShopSummaryRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListShopSummaryMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.ListShopBySellerIDResponse> listShopBySellerID(
        com.zhijiejiaoyu.glory_api.shop.ListShopBySellerIDRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListShopBySellerIDMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * cart
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.AddCartResponse> createCart(
        com.zhijiejiaoyu.glory_api.shop.AddCartRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateCartMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.GetCartResponse> getCart(
        com.zhijiejiaoyu.glory_api.shop.GetCartRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetCartMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.UpdateCartResponse> updateCart(
        com.zhijiejiaoyu.glory_api.shop.UpdateCartRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateCartMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.DeleteCartResponse> deleteCart(
        com.zhijiejiaoyu.glory_api.shop.DeleteCartRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteCartMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * seller
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.seller.UploadAttachmentResponse> uploadAttachment(
        com.zhijiejiaoyu.glory_api.seller.UploadAttachmentRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUploadAttachmentMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.seller.SaveAttachmentResponse> saveAttachment(
        com.zhijiejiaoyu.glory_api.seller.SaveAttachmentRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getSaveAttachmentMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.seller.ListAttachmentResponse> listAttachment(
        com.zhijiejiaoyu.glory_api.seller.ListAttachmentRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListAttachmentMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.seller.DeleteAttachmentResponse> deleteAttachment(
        com.zhijiejiaoyu.glory_api.seller.DeleteAttachmentRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteAttachmentMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.seller.CreateSellerResponse> createSeller(
        com.zhijiejiaoyu.glory_api.seller.CreateSellerRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateSellerMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * payment
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.payment.CreatePaymentResponse> createPayment(
        com.zhijiejiaoyu.glory_api.payment.CreatePaymentRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreatePaymentMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.payment.GetPaymentResponse> getPayment(
        com.zhijiejiaoyu.glory_api.payment.GetPaymentRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetPaymentMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.payment.UpdatePaymentResponse> updatePayment(
        com.zhijiejiaoyu.glory_api.payment.UpdatePaymentRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdatePaymentMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.payment.DeletePaymentResponse> deletePayment(
        com.zhijiejiaoyu.glory_api.payment.DeletePaymentRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeletePaymentMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.payment.WechatPaymentNotifyResponse> wechatPaymentNotify(
        com.zhijiejiaoyu.glory_api.payment.WechatPaymentNotifyRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getWechatPaymentNotifyMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     *admin_config
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.admin.CreateConfigResponse> createConfig(
        com.zhijiejiaoyu.glory_api.admin.CreateConfigRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateConfigMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.admin.UpdateConfigResponse> updateConfig(
        com.zhijiejiaoyu.glory_api.admin.UpdateConfigRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateConfigMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.admin.DeleteConfigResponse> deleteConfig(
        com.zhijiejiaoyu.glory_api.admin.DeleteConfigRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteConfigMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.admin.GetConfigResponse> getConfig(
        com.zhijiejiaoyu.glory_api.admin.GetConfigRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetConfigMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     *admin_other
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.admin.GetSTSResponse> getSTS(
        com.zhijiejiaoyu.glory_api.admin.GetSTSRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetSTSMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.admin.GenerateWebofficeTokenResponse> generateWebofficeToken(
        com.zhijiejiaoyu.glory_api.admin.GenerateWebofficeTokenRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGenerateWebofficeTokenMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.admin.RefreshWebofficeTokenResponse> refreshWebofficeToken(
        com.zhijiejiaoyu.glory_api.admin.RefreshWebofficeTokenRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getRefreshWebofficeTokenMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.admin.ListTenantOrgResponse> listTenantOrg(
        com.zhijiejiaoyu.glory_api.admin.ListTenantOrgRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListTenantOrgMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     *admin_user
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.admin.GetAdminTenantResponse> getAdminTenant(
        com.zhijiejiaoyu.glory_api.admin.GetAdminTenantRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetAdminTenantMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.admin.ListAdminUserResponse> listAdminUser(
        com.zhijiejiaoyu.glory_api.admin.ListAdminUserRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListAdminUserMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.admin.CreateAdminUserResponse> createAdminUser(
        com.zhijiejiaoyu.glory_api.admin.CreateAdminUserRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateAdminUserMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.admin.UpdateAdminUserResponse> updateAdminUser(
        com.zhijiejiaoyu.glory_api.admin.UpdateAdminUserRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateAdminUserMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.admin.DeleteAdminUserResponse> deleteAdminUser(
        com.zhijiejiaoyu.glory_api.admin.DeleteAdminUserRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteAdminUserMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * wxpay
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.wxpay.PrepayResponse> wxPrepay(
        com.zhijiejiaoyu.glory_api.wxpay.PrepayRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getWxPrepayMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.wxpay.CloseOrderResponse> closeOrder(
        com.zhijiejiaoyu.glory_api.wxpay.CloseOrderRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCloseOrderMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByIdResponse> queryOrderById(
        com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByIdRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getQueryOrderByIdMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByOutTradeNoResponse> queryOrderByOutTrade(
        com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByOutTradeNoRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getQueryOrderByOutTradeMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     *virtual currency  虚拟币（成长币）
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.currency.AddVirtualCurrencyResponse> addVCurrency(
        com.zhijiejiaoyu.glory_api.currency.AddVirtualCurrencyRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getAddVCurrencyMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyResponse> rechargeCurrency(
        com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getRechargeCurrencyMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyInBatchesResponse> rechargeCurrencyInBatches(
        com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyInBatchesRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getRechargeCurrencyInBatchesMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.currency.GetVirtualCurrencyResponse> getVCurrency(
        com.zhijiejiaoyu.glory_api.currency.GetVirtualCurrencyRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetVCurrencyMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.currency.ListVirtualCurrencyResponse> listVCurrency(
        com.zhijiejiaoyu.glory_api.currency.ListVirtualCurrencyRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListVCurrencyMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.account.ListAccountOperationResponse> listAccountOperation(
        com.zhijiejiaoyu.glory_api.account.ListAccountOperationRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListAccountOperationMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * live
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.CreateRoomResponse> createRoom(
        com.zhijiejiaoyu.glory_api.live.CreateRoomRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateRoomMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.GetRoomResponse> getRoom(
        com.zhijiejiaoyu.glory_api.live.GetRoomRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetRoomMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.UpdateRoomResponse> updateRoom(
        com.zhijiejiaoyu.glory_api.live.UpdateRoomRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateRoomMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.ListRoomResponse> listRoom(
        com.zhijiejiaoyu.glory_api.live.ListRoomRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListRoomMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.DeleteRoomResponse> deleteRoom(
        com.zhijiejiaoyu.glory_api.live.DeleteRoomRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteRoomMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.ListFinishedRoomResponse> listFinishedRoom(
        com.zhijiejiaoyu.glory_api.live.ListFinishedRoomRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListFinishedRoomMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.GetFinishedRoomResponse> getFinishedRoom(
        com.zhijiejiaoyu.glory_api.live.GetFinishedRoomRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetFinishedRoomMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.LiveRecordResponse> record(
        com.zhijiejiaoyu.glory_api.live.LiveRecordRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getRecordMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.CreateLiveUserTokenResponse> createLiveUserToken(
        com.zhijiejiaoyu.glory_api.live.CreateLiveUserTokenRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateLiveUserTokenMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.CreateNewMessageTokenResponse> createNewLiveUserToken(
        com.zhijiejiaoyu.glory_api.live.CreateNewMessageTokenRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateNewLiveUserTokenMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.UserEnterRoomResponse> userEnterRoom(
        com.zhijiejiaoyu.glory_api.live.UserEnterRoomRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUserEnterRoomMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.UserExitRoomResponse> userExitRoom(
        com.zhijiejiaoyu.glory_api.live.UserExitRoomRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUserExitRoomMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.seller.ListAttachmentResponse> listActiveRoomUser(
        com.zhijiejiaoyu.glory_api.live.ListActiveRoomUserRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListActiveRoomUserMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.LiveSSEResponse> liveSSE(
        com.zhijiejiaoyu.glory_api.live.LiveSSERequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getLiveSSEMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.CloseShopAllLiveResponse> closeShopAllLive(
        com.zhijiejiaoyu.glory_api.live.CloseShopAllLiveRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCloseShopAllLiveMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.UpdateLiveCommentCountResponse> updateLiveCommentCount(
        com.zhijiejiaoyu.glory_api.live.UpdateLiveCommentCountRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateLiveCommentCountMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * live plan
     * live plan crud
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.CreateLivePlanResponse> createLivePlan(
        com.zhijiejiaoyu.glory_api.live.CreateLivePlanRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateLivePlanMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.GetLivePlanResponse> getLivePlan(
        com.zhijiejiaoyu.glory_api.live.GetLivePlanRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetLivePlanMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.UpdateLivePlanResponse> updateLivePlan(
        com.zhijiejiaoyu.glory_api.live.UpdateLivePlanRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateLivePlanMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.ListLivePlanResponse> listLivePlan(
        com.zhijiejiaoyu.glory_api.live.ListLivePlanRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListLivePlanMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.DeleteLivePlanResponse> deleteLivePlan(
        com.zhijiejiaoyu.glory_api.live.DeleteLivePlanRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteLivePlanMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * live plan prod crud
     * CreateLivePlanProduct create live plan product
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.CreateLivePlanProductResponse> createLivePlanProduct(
        com.zhijiejiaoyu.glory_api.live.CreateLivePlanProductRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateLivePlanProductMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.UpdateLivePlanProductResponse> updateLivePlanProduct(
        com.zhijiejiaoyu.glory_api.live.UpdateLivePlanProductRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateLivePlanProductMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.ListLivePlanProductResponse> listLivePlanProduct(
        com.zhijiejiaoyu.glory_api.live.ListLivePlanProductRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListLivePlanProductMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.DeleteLivePlanProductResponse> deleteLivePlanProduct(
        com.zhijiejiaoyu.glory_api.live.DeleteLivePlanProductRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteLivePlanProductMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.LoadLivePlanProductResponse> loadLivePlanProduct(
        com.zhijiejiaoyu.glory_api.live.LoadLivePlanProductRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getLoadLivePlanProductMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.UpdateLiveProductStatusResponse> updateLiveProductStatus(
        com.zhijiejiaoyu.glory_api.live.UpdateLiveProductStatusRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateLiveProductStatusMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.ListLiveProductStatusResponse> listLiveProductStatus(
        com.zhijiejiaoyu.glory_api.live.ListLiveProductStatusRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListLiveProductStatusMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.DeleteLiveProductStatusResponse> deleteLiveProductStatus(
        com.zhijiejiaoyu.glory_api.live.DeleteLiveProductStatusRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteLiveProductStatusMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.CreateLiveProductStatusResponse> createLiveProductStatus(
        com.zhijiejiaoyu.glory_api.live.CreateLiveProductStatusRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateLiveProductStatusMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.GetLivingProductStatusResponse> getLivingProductStatus(
        com.zhijiejiaoyu.glory_api.live.GetLivingProductStatusRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetLivingProductStatusMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.UpdateLiveProductIntroductStatusResponse> updateLiveProductIntroductStatus(
        com.zhijiejiaoyu.glory_api.live.UpdateLiveProductIntroductStatusRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateLiveProductIntroductStatusMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * live text crud
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.CreateLiveTextResponse> createLiveText(
        com.zhijiejiaoyu.glory_api.live.CreateLiveTextRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateLiveTextMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.UpdateLiveTextResponse> updateLiveText(
        com.zhijiejiaoyu.glory_api.live.UpdateLiveTextRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateLiveTextMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.ListLiveTextResponse> listLiveText(
        com.zhijiejiaoyu.glory_api.live.ListLiveTextRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListLiveTextMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.GetLiveTextResponse> getLiveText(
        com.zhijiejiaoyu.glory_api.live.GetLiveTextRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetLiveTextMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.DeleteLiveTextsResponse> deleteLiveTexts(
        com.zhijiejiaoyu.glory_api.live.DeleteLiveTextsRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteLiveTextsMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.TeacherListStudentShortVideoTextResponse> teacherListStudentShortVideoText(
        com.zhijiejiaoyu.glory_api.live.TeacherListStudentShortVideoTextRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getTeacherListStudentShortVideoTextMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * live chart
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.GetLiveChartDataResponse> getLiveChartData(
        com.zhijiejiaoyu.glory_api.live.GetLiveChartDataRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetLiveChartDataMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * live evaluate
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.GetEvaluateSelectorResponse> getEvaluateSelector(
        com.zhijiejiaoyu.glory_api.live.GetEvaluateSelectorRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetEvaluateSelectorMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.ListPersonalEvaluateResponse> listPersonalEvaluate(
        com.zhijiejiaoyu.glory_api.live.ListPersonalEvaluateRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListPersonalEvaluateMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.GetEvaluateDetailResponse> getEvaluateDetail(
        com.zhijiejiaoyu.glory_api.live.GetEvaluateDetailRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetEvaluateDetailMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.SubmitEvaluateResponse> submitEvaluate(
        com.zhijiejiaoyu.glory_api.live.SubmitEvaluateRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getSubmitEvaluateMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.ListUnevaluatedRoomResponse> listUnevaluatedRoom(
        com.zhijiejiaoyu.glory_api.live.ListUnevaluatedRoomRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListUnevaluatedRoomMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.ListStudentEvalutionsResponse> listStudentEvaluations(
        com.zhijiejiaoyu.glory_api.live.ListStudentEvalutionsRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListStudentEvaluationsMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.IgnoreLiveEvaluationResponse> ignoreEvaluation(
        com.zhijiejiaoyu.glory_api.live.IgnoreLiveEvaluationRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getIgnoreEvaluationMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.GetRankResponse> getRank(
        com.zhijiejiaoyu.glory_api.live.GetRankRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetRankMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.RecordLiveCallbackResponse> recordLiveCallback(
        com.zhijiejiaoyu.glory_api.live.RecordLiveCallbackRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getRecordLiveCallbackMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.VideoToTextCallbackResponse> videoToTextCallback(
        com.zhijiejiaoyu.glory_api.live.VideoToTextCallbackRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getVideoToTextCallbackMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.LiveStreamCallbackResponse> liveStreamCallback(
        com.zhijiejiaoyu.glory_api.live.LiveStreamCallbackRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getLiveStreamCallbackMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.RegenerationAiFeedbackResponse> regenerationAiFeedback(
        com.zhijiejiaoyu.glory_api.live.RegenerationAiFeedbackRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getRegenerationAiFeedbackMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.SubmitUserAttitudeForAIResultResponse> submitUserAttitudeForAiResult(
        com.zhijiejiaoyu.glory_api.live.SubmitUserAttitudeForAIResultRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getSubmitUserAttitudeForAiResultMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.PreheatResponse> preheatProduct(
        com.zhijiejiaoyu.glory_api.live.PreheatRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getPreheatProductMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.PublicPriceResponse> publicPrice(
        com.zhijiejiaoyu.glory_api.live.PublicPriceRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getPublicPriceMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     *tenant
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.ListTenantSystemResponse> listTenantSystem(
        com.zhijiejiaoyu.glory_api.tenant.ListTenantSystemRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListTenantSystemMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.CreateTenantResponse> createTenant(
        com.zhijiejiaoyu.glory_api.tenant.CreateTenantRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateTenantMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.GetTenantResponse> getTenant(
        com.zhijiejiaoyu.glory_api.tenant.GetTenantRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetTenantMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantResponse> updateTenant(
        com.zhijiejiaoyu.glory_api.tenant.UpdateTenantRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateTenantMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.DeleteTenantResponse> deleteTenant(
        com.zhijiejiaoyu.glory_api.tenant.DeleteTenantRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteTenantMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.ListTenantResponse> listTenant(
        com.zhijiejiaoyu.glory_api.tenant.ListTenantRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListTenantMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.GetTenantOrgResponse> getTenantOrg(
        com.zhijiejiaoyu.glory_api.tenant.GetTenantOrgRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetTenantOrgMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.EnterTenantResponse> enterTenant(
        com.zhijiejiaoyu.glory_api.tenant.EnterTenantRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getEnterTenantMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.ExitTenantResponse> exitTenant(
        com.zhijiejiaoyu.glory_api.tenant.ExitTenantRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getExitTenantMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.IsTenantResponse> isEnterTenant(
        com.zhijiejiaoyu.glory_api.tenant.IsEnterTenantRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getIsEnterTenantMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.InitTenantResponse> initTenant(
        com.zhijiejiaoyu.glory_api.tenant.InitTenantRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getInitTenantMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.CreateTenantCourseResponse> createTenantCourse(
        com.zhijiejiaoyu.glory_api.tenant.CreateTenantCourseRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateTenantCourseMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.ListTenantResponse> listTenantCourse(
        com.zhijiejiaoyu.glory_api.tenant.ListTenantRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListTenantCourseMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     *tenant_dept
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.CreateTenantDeptResponse> createTenantDept(
        com.zhijiejiaoyu.glory_api.tenant.CreateTenantDeptRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateTenantDeptMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantDeptResponse> updateTenantDept(
        com.zhijiejiaoyu.glory_api.tenant.UpdateTenantDeptRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateTenantDeptMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.DeleteTenantDeptResponse> deleteTenantDept(
        com.zhijiejiaoyu.glory_api.tenant.DeleteTenantDeptRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteTenantDeptMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptResponse> getTenantDept(
        com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetTenantDeptMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 获取所有部门类型[select]
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptTypeResponse> getTenantDeptType(
        com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptTypeRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetTenantDeptTypeMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.ListTenantDeptResponse> listTenantDept(
        com.zhijiejiaoyu.glory_api.tenant.ListTenantDeptRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListTenantDeptMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * tenant_user
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.CreateTenantUserResponse> createTenantUser(
        com.zhijiejiaoyu.glory_api.tenant.CreateTenantUserRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateTenantUserMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.DeleteTenantUserResponse> deleteTenantUser(
        com.zhijiejiaoyu.glory_api.tenant.DeleteTenantUserRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteTenantUserMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserResponse> updateTenantUser(
        com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateTenantUserMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.GetTenantUserResponse> getTenantUser(
        com.zhijiejiaoyu.glory_api.tenant.GetTenantUserRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetTenantUserMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.ListTenantUserResponse> listTenantUser(
        com.zhijiejiaoyu.glory_api.tenant.ListTenantUserRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListTenantUserMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.ListTenantStudentResponse> listTenantStudent(
        com.zhijiejiaoyu.glory_api.tenant.ListTenantStudentRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListTenantStudentMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserPasswordResponse> updateTenantUserPassword(
        com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserPasswordRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateTenantUserPasswordMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     *tenant_config
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantConfigResponse> updateTenantConfig(
        com.zhijiejiaoyu.glory_api.tenant.UpdateTenantConfigRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateTenantConfigMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.tenant.ListTenantConfigResponse> listTenantConfig(
        com.zhijiejiaoyu.glory_api.tenant.ListTenantConfigRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListTenantConfigMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * short_video
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoResponse> createShortVideo(
        com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateShortVideoMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.StageShortVideoResponse> stageShortVideo(
        com.zhijiejiaoyu.glory_api.short_video.StageShortVideoRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getStageShortVideoMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 我的短视频列表
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.ListMyShortVideoResponse> listMyShortVideo(
        com.zhijiejiaoyu.glory_api.short_video.ListMyShortVideoRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListMyShortVideoMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 我的暂存视频列表
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.ListMyStageVideoResponse> listMyStageVideo(
        com.zhijiejiaoyu.glory_api.short_video.ListMyStageVideoRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListMyStageVideoMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 我的喜欢视频列表
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.ListMyLikeVideoResponse> listMyLikeVideo(
        com.zhijiejiaoyu.glory_api.short_video.ListMyLikeVideoRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListMyLikeVideoMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 我的收藏视频列表
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.ListMyFavoriteVideoResponse> listMyFavoriteVideo(
        com.zhijiejiaoyu.glory_api.short_video.ListMyFavoriteVideoRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListMyFavoriteVideoMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 获取短视频详情
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.GetShortVideoResponse> getShortVideo(
        com.zhijiejiaoyu.glory_api.short_video.GetShortVideoRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetShortVideoMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 更新短视频详情
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.UpdateShortVideoResponse> updateShortVideo(
        com.zhijiejiaoyu.glory_api.short_video.UpdateShortVideoRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateShortVideoMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 删除短视频
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoResponse> deleteShortVideo(
        com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteShortVideoMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 获取暂存视频详情
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.GetStageVideoResponse> getStageVideo(
        com.zhijiejiaoyu.glory_api.short_video.GetStageVideoRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetStageVideoMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 删除暂存视频
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.DeleteStageVideoResponse> deleteStageVideo(
        com.zhijiejiaoyu.glory_api.short_video.DeleteStageVideoRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteStageVideoMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.UpdateStageVideoResponse> updateStageVideo(
        com.zhijiejiaoyu.glory_api.short_video.UpdateStageVideoRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateStageVideoMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 平台短短视频列表
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.ManagementListShortVideoResponse> managementListShortVideo(
        com.zhijiejiaoyu.glory_api.short_video.ManagementListShortVideoRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getManagementListShortVideoMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 平台审核短视频
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.ManagementCensorShortVideoResponse> managementCensorShortVideo(
        com.zhijiejiaoyu.glory_api.short_video.ManagementCensorShortVideoRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getManagementCensorShortVideoMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 平台删除短视频
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.ManagementDeleteShortVideoResponse> managementDeleteShortVideo(
        com.zhijiejiaoyu.glory_api.short_video.ManagementDeleteShortVideoRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getManagementDeleteShortVideoMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * APP首页短视频列表
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.ListShortVideoResponse> listShortVideo(
        com.zhijiejiaoyu.glory_api.short_video.ListShortVideoRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListShortVideoMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 点赞短视频
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.LikeShortVideoResponse> likeShortVideo(
        com.zhijiejiaoyu.glory_api.short_video.LikeShortVideoRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getLikeShortVideoMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 收藏短视频
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.FavoriteShortVideoResponse> favoriteShortVideo(
        com.zhijiejiaoyu.glory_api.short_video.FavoriteShortVideoRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getFavoriteShortVideoMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 发布短视频评论
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoCommentResponse> createShortVideoComment(
        com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoCommentRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateShortVideoCommentMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 删除短视频评论
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoCommentResponse> deleteShortVideoComment(
        com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoCommentRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteShortVideoCommentMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 短视频评论列表
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.ListShortVideoCommentResponse> listShortVideoComment(
        com.zhijiejiaoyu.glory_api.short_video.ListShortVideoCommentRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListShortVideoCommentMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.TeacherListStudentShortVideoResponse> teacherListStudentShortVideo(
        com.zhijiejiaoyu.glory_api.short_video.TeacherListStudentShortVideoRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getTeacherListStudentShortVideoMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * coupon
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.CreateCouponResponse> createCoupon(
        com.zhijiejiaoyu.glory_api.shop.CreateCouponRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateCouponMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.ListCouponResponse> listCoupon(
        com.zhijiejiaoyu.glory_api.shop.ListCouponRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListCouponMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.GetCouponDetailResponse> couponDetail(
        com.zhijiejiaoyu.glory_api.shop.GetCouponDetailRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCouponDetailMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.UpdateCouponResponse> updateCoupon(
        com.zhijiejiaoyu.glory_api.shop.UpdateCouponRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateCouponMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.DeleteCouponResponse> deleteCoupon(
        com.zhijiejiaoyu.glory_api.shop.DeleteCouponRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteCouponMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.AbolishCouponResponse> abolishCoupon(
        com.zhijiejiaoyu.glory_api.shop.AbolishCouponRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getAbolishCouponMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.UpdateCouponDistributionStatusResponse> updateCouponDistributionStatus(
        com.zhijiejiaoyu.glory_api.shop.UpdateCouponDistributionStatusRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateCouponDistributionStatusMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.ClaimCouponResponse> claimCoupon(
        com.zhijiejiaoyu.glory_api.shop.ClaimCouponRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getClaimCouponMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.ListMyCouponResponse> listMyCoupon(
        com.zhijiejiaoyu.glory_api.shop.ListMyCouponRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListMyCouponMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * activity
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.CreateActivityResponse> createActivity(
        com.zhijiejiaoyu.glory_api.shop.CreateActivityRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateActivityMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.ListActivityResponse> listActivity(
        com.zhijiejiaoyu.glory_api.shop.ListActivityRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListActivityMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.GetActivityDetailResponse> activityDetail(
        com.zhijiejiaoyu.glory_api.shop.GetActivityDetailRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getActivityDetailMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.UpdateActivityResponse> updateActivity(
        com.zhijiejiaoyu.glory_api.shop.UpdateActivityRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateActivityMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.DeleteActivityResponse> deleteActivity(
        com.zhijiejiaoyu.glory_api.shop.DeleteActivityRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteActivityMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.shop.DisableActivityResponse> disableActivity(
        com.zhijiejiaoyu.glory_api.shop.DisableActivityRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDisableActivityMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 获取正在讲解的商品和发放中的优惠券
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.GetCouponAndIntroducingProductResponse> getCouponAndIntroducingProduct(
        com.zhijiejiaoyu.glory_api.live.GetCouponAndIntroducingProductRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetCouponAndIntroducingProductMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 素材库
     * 创建画板
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.CreateCourseMaterialBoxResponse> createCourseMaterialBox(
        com.zhijiejiaoyu.glory_api.course.CreateCourseMaterialBoxRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateCourseMaterialBoxMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 编辑画板
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.UpdateCourseMaterialBoxResponse> updateCourseMaterialBox(
        com.zhijiejiaoyu.glory_api.course.UpdateCourseMaterialBoxRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateCourseMaterialBoxMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 画板列表
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.ListCourseMaterialBoxResponse> listCourseMaterialBox(
        com.zhijiejiaoyu.glory_api.course.ListCourseMaterialBoxRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListCourseMaterialBoxMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 删除画板
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialBoxResponse> deleteCourseMaterialBox(
        com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialBoxRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteCourseMaterialBoxMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 上传素材
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.UploadCourseMaterialResponse> uploadCourseMaterial(
        com.zhijiejiaoyu.glory_api.course.UploadCourseMaterialRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUploadCourseMaterialMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 素材列表
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.ListCourseMaterialResponse> listCourseMaterial(
        com.zhijiejiaoyu.glory_api.course.ListCourseMaterialRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListCourseMaterialMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 删除素材
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialResponse> deleteCourseMaterial(
        com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteCourseMaterialMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 资源库
     * 获取课程类型树
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.GetCourseTypeTreeResponse> getCourseTypeTree(
        com.zhijiejiaoyu.glory_api.course.GetCourseTypeTreeRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetCourseTypeTreeMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 获取课程类型列表
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.GetCourseTypeListResponse> getCourseTypeList(
        com.zhijiejiaoyu.glory_api.course.GetCourseTypeListRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetCourseTypeListMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 获取能力指标编码
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.GetCourseModuleCodeResponse> getCourseModuleCode(
        com.zhijiejiaoyu.glory_api.course.GetCourseModuleCodeRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetCourseModuleCodeMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 获取课程内容编码
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.GetCourseChapterCodeResponse> getCourseChapterCode(
        com.zhijiejiaoyu.glory_api.course.GetCourseChapterCodeRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetCourseChapterCodeMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 创建能力指标
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.CreateCourseModuleResponse> createCourseModule(
        com.zhijiejiaoyu.glory_api.course.CreateCourseModuleRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateCourseModuleMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 获取能力指标
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.GetCourseModuleResponse> getCourseModule(
        com.zhijiejiaoyu.glory_api.course.GetCourseModuleRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetCourseModuleMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 更新能力指标
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.UpdateCourseModuleResponse> updateCourseModule(
        com.zhijiejiaoyu.glory_api.course.UpdateCourseModuleRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateCourseModuleMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 删除能力指标
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.DeleteCourseModuleResponse> deleteCourseModule(
        com.zhijiejiaoyu.glory_api.course.DeleteCourseModuleRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteCourseModuleMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 能力指标列表
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.ListCourseModuleResponse> listCourseModule(
        com.zhijiejiaoyu.glory_api.course.ListCourseModuleRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListCourseModuleMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 课程列表
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.ListLatestCourseResponse> listLatestCourse(
        com.zhijiejiaoyu.glory_api.course.ListLatestCourseRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListLatestCourseMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.ListHottestCourseResponse> listHottestCourse(
        com.zhijiejiaoyu.glory_api.course.ListHottestCourseRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListHottestCourseMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 自定义课程
     * 新建课程
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.CreateCmCourseResponse> createCmCourse(
        com.zhijiejiaoyu.glory_api.course.CreateCmCourseRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateCmCourseMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 预览课程
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.PreviewCmCourseResponse> previewCmCourse(
        com.zhijiejiaoyu.glory_api.course.PreviewCmCourseRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getPreviewCmCourseMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 非模块化课程
     * 新建资源
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResourceResponse> createNmCourseResource(
        com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResourceRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateNmCourseResourceMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 新建章节
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResponse> createNmCourseChapter(
        com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateNmCourseChapterMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 新建课程
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.CreateNmCourseResponse> createNmCourse(
        com.zhijiejiaoyu.glory_api.course.CreateNmCourseRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateNmCourseMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 更新课程
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.UpdateNmCourseResponse> updateNmCourse(
        com.zhijiejiaoyu.glory_api.course.UpdateNmCourseRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateNmCourseMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 课程列表
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.ListNmCourseResponse> listNmCourse(
        com.zhijiejiaoyu.glory_api.course.ListNmCourseRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListNmCourseMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 课程详情
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.NmCourseDetailResponse> nmCourseDetail(
        com.zhijiejiaoyu.glory_api.course.NmCourseDetailRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getNmCourseDetailMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 删除课程
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.DeleteNmCourseResponse> deleteNmCourse(
        com.zhijiejiaoyu.glory_api.course.DeleteNmCourseRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteNmCourseMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 模块化课程
     * 创建模块化课程
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.CreateCourseResponse> createCourse(
        com.zhijiejiaoyu.glory_api.course.CreateCourseRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateCourseMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 获取模块化课程
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.GetCourseResponse> getCourse(
        com.zhijiejiaoyu.glory_api.course.GetCourseRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetCourseMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 更新模块化课程
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.UpdateCourseResponse> updateCourse(
        com.zhijiejiaoyu.glory_api.course.UpdateCourseRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateCourseMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 删除模块化课程
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.DeleteCourseResponse> deleteCourse(
        com.zhijiejiaoyu.glory_api.course.DeleteCourseRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteCourseMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 模块化课程列表
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.ListCourseResponse> listCourse(
        com.zhijiejiaoyu.glory_api.course.ListCourseRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListCourseMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 知识图谱
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.CreateKnowledgeGraphResponse> createKnowledgeGraph(
        com.zhijiejiaoyu.glory_api.course.CreateKnowledgeGraphRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateKnowledgeGraphMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphResponse> getKnowledgeGraph(
        com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetKnowledgeGraphMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphNodeResponse> getKnowledgeGraphNode(
        com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphNodeRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetKnowledgeGraphNodeMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.GetCourseIdsResponse> getCourseIds(
        com.zhijiejiaoyu.glory_api.course.GetCourseIdsRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetCourseIdsMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 我的课程
     * 加入课程
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.EnrollCourseResponse> enrollCourse(
        com.zhijiejiaoyu.glory_api.course.EnrollCourseRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getEnrollCourseMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 删除我的课程
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.DeleteMyCourseResponse> deleteMyCourse(
        com.zhijiejiaoyu.glory_api.course.DeleteMyCourseRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteMyCourseMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 上报课程进度
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.UpdateCourseProgressResponse> updateCourseProgress(
        com.zhijiejiaoyu.glory_api.course.UpdateCourseProgressRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateCourseProgressMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 我的课程列表
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.ListMyCourseResponse> listMyCourse(
        com.zhijiejiaoyu.glory_api.course.ListMyCourseRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListMyCourseMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 教案管理
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.ListTeachingPlanResponse> listTeachingPlan(
        com.zhijiejiaoyu.glory_api.course.ListTeachingPlanRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListTeachingPlanMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.CreateTeachingPlanResponse> createTeachingPlan(
        com.zhijiejiaoyu.glory_api.course.CreateTeachingPlanRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateTeachingPlanMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.UpdateTeachingPlanResponse> updateTeachingPlan(
        com.zhijiejiaoyu.glory_api.course.UpdateTeachingPlanRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateTeachingPlanMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.DeleteTeachingPlanResponse> deleteTeachingPlan(
        com.zhijiejiaoyu.glory_api.course.DeleteTeachingPlanRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteTeachingPlanMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 上报老师授课课程进度
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.UpdateTeachingCourseProgressResponse> updateTeachingCourseProgress(
        com.zhijiejiaoyu.glory_api.course.UpdateTeachingCourseProgressRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateTeachingCourseProgressMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 培养方案
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.CreateEduSchemeResponse> createEduScheme(
        com.zhijiejiaoyu.glory_api.course.CreateEduSchemeRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateEduSchemeMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.UpdateEduSchemeResponse> updateEduScheme(
        com.zhijiejiaoyu.glory_api.course.UpdateEduSchemeRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateEduSchemeMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.ListEduSchemeResponse> listEduScheme(
        com.zhijiejiaoyu.glory_api.course.ListEduSchemeRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListEduSchemeMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.EduSchemeDetailResponse> eduSchemeDetail(
        com.zhijiejiaoyu.glory_api.course.EduSchemeDetailRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getEduSchemeDetailMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.DeleteEduSchemeResponse> deleteEduScheme(
        com.zhijiejiaoyu.glory_api.course.DeleteEduSchemeRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteEduSchemeMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.DistributeEduSchemeResponse> distributeEduScheme(
        com.zhijiejiaoyu.glory_api.course.DistributeEduSchemeRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDistributeEduSchemeMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 获取培养方案，但返回结果和获取模块化结果一样
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.GetEduSchemeLikeCourseResponse> getEduSchemeLikeCourse(
        com.zhijiejiaoyu.glory_api.course.GetEduSchemeLikeCourseRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetEduSchemeLikeCourseMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * app下载
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.GetAndroidQRCodeResponse> getAndroidQRcode(
        com.zhijiejiaoyu.glory_api.course.GetAndroidQRCodeRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetAndroidQRcodeMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 工作岗位
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.CreateJobResponse> createJob(
        com.zhijiejiaoyu.glory_api.course.CreateJobRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateJobMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.UpdateJobResponse> updateJob(
        com.zhijiejiaoyu.glory_api.course.UpdateJobRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateJobMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.DeleteJobResponse> deleteJob(
        com.zhijiejiaoyu.glory_api.course.DeleteJobRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteJobMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.ListJobResponse> listJob(
        com.zhijiejiaoyu.glory_api.course.ListJobRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListJobMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 流量统计
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.traffic.GetSchoolLiveTrafficChartResponse> getSchooLiveChart(
        com.zhijiejiaoyu.glory_api.traffic.GetSchoolLiveTrafficChartRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetSchooLiveChartMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.traffic.ListSchoolLiveTrafficResponse> listSchooLiveTraffic(
        com.zhijiejiaoyu.glory_api.traffic.ListSchoolLiveTrafficRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListSchooLiveTrafficMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.traffic.GetAllLiveTrafficResponse> getLiveAllTraffic(
        com.zhijiejiaoyu.glory_api.traffic.GetAllLiveTrafficRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetLiveAllTrafficMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.traffic.GetSchooLiveTrafficResponse> getSchooLiveTraffic(
        com.zhijiejiaoyu.glory_api.traffic.GetSchooLiveTrafficRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetSchooLiveTrafficMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.traffic.ListTenantLiveTrafficConfigResponse> listTenantTrafficConfig(
        com.zhijiejiaoyu.glory_api.traffic.ListTenantLiveTrafficConfigRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListTenantTrafficConfigMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.traffic.UpdateTenantLiveTrafficConfigResponse> updateTenantTrafficConfig(
        com.zhijiejiaoyu.glory_api.traffic.UpdateTenantLiveTrafficConfigRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateTenantTrafficConfigMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 流量告警
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.traffic.ListTrafficWarningResponse> listTrafficWarning(
        com.zhijiejiaoyu.glory_api.traffic.ListTrafficWarningRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListTrafficWarningMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.traffic.DeleteTrafficWarningResponse> deleteTrafficWarning(
        com.zhijiejiaoyu.glory_api.traffic.DeleteTrafficWarningRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteTrafficWarningMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 直播管控
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.CreateLiveControlResponse> createLiveControl(
        com.zhijiejiaoyu.glory_api.live.CreateLiveControlRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateLiveControlMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.UpdateLiveControlResponse> updateLiveControl(
        com.zhijiejiaoyu.glory_api.live.UpdateLiveControlRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateLiveControlMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.ListLiveControlResponse> listLiveControl(
        com.zhijiejiaoyu.glory_api.live.ListLiveControlRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListLiveControlMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.DeleteLiveControlResponse> deleteLiveControl(
        com.zhijiejiaoyu.glory_api.live.DeleteLiveControlRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteLiveControlMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 快速评价模版
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationResponse> createQuickEvaluationStandard(
        com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateQuickEvaluationStandardMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.UpdateQuickEvaluationResponse> updateQuickEvaluationStandard(
        com.zhijiejiaoyu.glory_api.live.UpdateQuickEvaluationRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateQuickEvaluationStandardMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationResponse> deleteQuickEvaluationStandard(
        com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteQuickEvaluationStandardMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationResponse> listQuickEvaluationStandard(
        com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListQuickEvaluationStandardMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     *获取直播回放链接
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.GetLiveReplayResponse> getLiveReplay(
        com.zhijiejiaoyu.glory_api.live.GetLiveReplayRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetLiveReplayMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 快速评价报告
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationReportResponse> createQuickEvaluationReport(
        com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationReportRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateQuickEvaluationReportMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationReportResponse> listQuickEvaluationReport(
        com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationReportRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListQuickEvaluationReportMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationReportResponse> getQuickEvaluationReport(
        com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationReportRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetQuickEvaluationReportMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationReportResponse> deleteQuickEvaluationReport(
        com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationReportRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteQuickEvaluationReportMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationDetailResponse> getQuickEvaluationDetail(
        com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationDetailRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetQuickEvaluationDetailMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * App 版本管理
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.CreateVersionLogResponse> createVersionLog(
        com.zhijiejiaoyu.glory_api.course.CreateVersionLogRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateVersionLogMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.UpdateVersionLogResponse> updateVersionLog(
        com.zhijiejiaoyu.glory_api.course.UpdateVersionLogRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateVersionLogMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.ListVersionLogResponse> listVersionLog(
        com.zhijiejiaoyu.glory_api.course.ListVersionLogRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListVersionLogMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.DeleteVersionLogResponse> deleteVersionLog(
        com.zhijiejiaoyu.glory_api.course.DeleteVersionLogRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteVersionLogMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.course.GetLatestVersionResponse> getLatestVersion(
        com.zhijiejiaoyu.glory_api.course.GetLatestVersionRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetLatestVersionMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 系统预置任务管理
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.GetTaskConfigResponse> getTaskConfig(
        com.zhijiejiaoyu.glory_api.task.GetTaskConfigRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetTaskConfigMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.CreateSystemTaskResponse> createSystemTask(
        com.zhijiejiaoyu.glory_api.task.CreateSystemTaskRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateSystemTaskMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.ListSystemTaskResponse> listSystemTask(
        com.zhijiejiaoyu.glory_api.task.ListSystemTaskRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListSystemTaskMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.GetSystemTaskResponse> getSystemTask(
        com.zhijiejiaoyu.glory_api.task.GetSystemTaskRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetSystemTaskMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.UpdateSystemTaskResponse> updateSystemTask(
        com.zhijiejiaoyu.glory_api.task.UpdateSystemTaskRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateSystemTaskMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.DeleteSystemTaskResponse> deleteSystemTask(
        com.zhijiejiaoyu.glory_api.task.DeleteSystemTaskRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteSystemTaskMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 教师任务模板
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskTemplateResponse> createTeacherTaskTemplate(
        com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskTemplateRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateTeacherTaskTemplateMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskTemplateResponse> updateTeacherTaskTemplate(
        com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskTemplateRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateTeacherTaskTemplateMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.ListTeacherTaskTemplateResponse> listTeacherTaskTemplate(
        com.zhijiejiaoyu.glory_api.task.ListTeacherTaskTemplateRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListTeacherTaskTemplateMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.GetTeacherTaskTemplateResponse> getTeacherTaskTemplate(
        com.zhijiejiaoyu.glory_api.task.GetTeacherTaskTemplateRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetTeacherTaskTemplateMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskTemplateResponse> deleteTeacherTaskTemplate(
        com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskTemplateRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteTeacherTaskTemplateMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 教师任务管理
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskResponse> createTeacherTask(
        com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateTeacherTaskMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskResponse> updateTeacherTask(
        com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateTeacherTaskMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.ListTeacherTaskResponse> listTeacherTask(
        com.zhijiejiaoyu.glory_api.task.ListTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListTeacherTaskMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.GetTeacherTaskResponse> getTeacherTask(
        com.zhijiejiaoyu.glory_api.task.GetTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetTeacherTaskMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.GetTeacherTaskProgressResponse> getTeacherTaskProgress(
        com.zhijiejiaoyu.glory_api.task.GetTeacherTaskProgressRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetTeacherTaskProgressMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskResponse> deleteTeacherTask(
        com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteTeacherTaskMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.TeacherTaskStatsResponse> teacherTaskStats(
        com.zhijiejiaoyu.glory_api.task.TeacherTaskStatsRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getTeacherTaskStatsMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.ListTaskStudentResponse> teacherTaskStudents(
        com.zhijiejiaoyu.glory_api.task.ListTaskStudentRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getTeacherTaskStudentsMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 教师任务统计
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.CountClassSubmitResponse> countClassSubmit(
        com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCountClassSubmitMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.CountClassSubmitListResponse> countClassSubmitList(
        com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCountClassSubmitListMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.CountPositiveListResponse> countPositiveList(
        com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCountPositiveListMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.CountPotentialListResponse> countPotentialList(
        com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCountPotentialListMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.CountSubmitListResponse> countSubmitList(
        com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCountSubmitListMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.CountClassPassResponse> countClassPass(
        com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCountClassPassMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.CountClassPassListResponse> countClassPassList(
        com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCountClassPassListMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.CountSuperStudentListResponse> countSuperStudentList(
        com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCountSuperStudentListMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.CountLaggingStudentListResponse> countLaggingStudentList(
        com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCountLaggingStudentListMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.CountPassListResponse> countPassList(
        com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCountPassListMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.CountHistoryTaskResponse> countHistoryTask(
        com.zhijiejiaoyu.glory_api.task.CountHistoryTaskRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCountHistoryTaskMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 学生任务
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.ListStudentTaskResponse> listStudentTask(
        com.zhijiejiaoyu.glory_api.task.ListStudentTaskRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListStudentTaskMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.SubmitStudentTaskResponse> submitStudentTask(
        com.zhijiejiaoyu.glory_api.task.SubmitStudentTaskRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getSubmitStudentTaskMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.GetStudentTaskResponse> getStudentTask(
        com.zhijiejiaoyu.glory_api.task.GetStudentTaskRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetStudentTaskMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.TeacherListStudentTaskResponse> teacherListStudentTask(
        com.zhijiejiaoyu.glory_api.task.TeacherListStudentTaskRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getTeacherListStudentTaskMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.TeacherEvaluateStudentTaskResponse> teacherEvaluateStudentTask(
        com.zhijiejiaoyu.glory_api.task.TeacherEvaluateStudentTaskRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getTeacherEvaluateStudentTaskMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.StudentTaskStatsResponse> studentTaskStats(
        com.zhijiejiaoyu.glory_api.task.StudentTaskStatsRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getStudentTaskStatsMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.StudentTaskEvaluateStatsResponse> studentTaskEvaluateStats(
        com.zhijiejiaoyu.glory_api.task.StudentTaskEvaluateStatsRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getStudentTaskEvaluateStatsMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.StartStudentTaskTimeResponse> startStudentTaskTime(
        com.zhijiejiaoyu.glory_api.task.StartStudentTaskTimeRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getStartStudentTaskTimeMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.task.DownloadTeacherTaskResponse> downloadTeacherTask(
        com.zhijiejiaoyu.glory_api.task.DownloadTeacherTaskRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDownloadTeacherTaskMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 通知模块
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.notification.ListNotificationResponse> listNotification(
        com.zhijiejiaoyu.glory_api.notification.ListNotificationRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListNotificationMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.notification.CountNotificationResponse> countNotification(
        com.zhijiejiaoyu.glory_api.notification.CountNotificationRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCountNotificationMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.notification.ReadNotificationResponse> readNotification(
        com.zhijiejiaoyu.glory_api.notification.ReadNotificationRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getReadNotificationMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.notification.TestNotificationResponse> testNotification(
        com.zhijiejiaoyu.glory_api.notification.TestNotificationRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getTestNotificationMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.notification.DeleteNotificationResponse> deleteNotification(
        com.zhijiejiaoyu.glory_api.notification.DeleteNotificationRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteNotificationMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 直播大屏
     * 获取专业和班级
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.ListUserMajorAndClasResponse> listUserMajorAndClass(
        com.zhijiejiaoyu.glory_api.live.ListUserMajorAndClasRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListUserMajorAndClassMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.GetAggregationLiveUrlResponse> getAggregationLiveUrl(
        com.zhijiejiaoyu.glory_api.live.GetAggregationLiveUrlRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetAggregationLiveUrlMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.GetLiveBoardDataResponse> getLiveBoardData(
        com.zhijiejiaoyu.glory_api.live.GetLiveBoardDataRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetLiveBoardDataMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.GetLiveBoardCommentsResponse> getLiveBoardComments(
        com.zhijiejiaoyu.glory_api.live.GetLiveBoardCommentsRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetLiveBoardCommentsMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.ListLivingUserResponse> listBoardLivingUser(
        com.zhijiejiaoyu.glory_api.live.ListLivingUserRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListBoardLivingUserMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.live.CloseCasterResponse> closeCaster(
        com.zhijiejiaoyu.glory_api.live.CloseCasterRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCloseCasterMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 智能文案
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationResponse> createArticleCreation(
        com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateArticleCreationMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationResponse> listMyArticleCreation(
        com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListMyArticleCreationMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationDraftResponse> createArticleCreationDraft(
        com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationDraftRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateArticleCreationDraftMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationDraftResponse> listMyDraftArticleCreation(
        com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationDraftRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListMyDraftArticleCreationMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.ArticleCreationDraftDetailResponse> draftArticleCreationDetail(
        com.zhijiejiaoyu.glory_api.short_video.ArticleCreationDraftDetailRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDraftArticleCreationDetailMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.DeleteArticleCreationDraftResponse> deleteDraftArticleCreation(
        com.zhijiejiaoyu.glory_api.short_video.DeleteArticleCreationDraftRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteDraftArticleCreationMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.ArticleCreationStatisticsResponse> articleCreationStatistics(
        com.zhijiejiaoyu.glory_api.short_video.ArticleCreationStatisticsRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getArticleCreationStatisticsMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.GetExampleArticleResponse> getExampleArticle(
        com.zhijiejiaoyu.glory_api.short_video.GetExampleArticleRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetExampleArticleMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.GetEvaluationStandardResponse> getEvaluationStandard(
        com.zhijiejiaoyu.glory_api.short_video.GetEvaluationStandardRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetEvaluationStandardMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.CreateEvaluationConfigResponse> createEvaluationConfig(
        com.zhijiejiaoyu.glory_api.short_video.CreateEvaluationConfigRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateEvaluationConfigMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.ListEvaluationConfigResponse> listEvaluationConfig(
        com.zhijiejiaoyu.glory_api.short_video.ListEvaluationConfigRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListEvaluationConfigMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.BatchEvaluateArticleResponse> batchEvaluateArticleCreation(
        com.zhijiejiaoyu.glory_api.short_video.BatchEvaluateArticleRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getBatchEvaluateArticleCreationMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.ListStudentArticleCreationResponse> listStudentArticleCreation(
        com.zhijiejiaoyu.glory_api.short_video.ListStudentArticleCreationRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListStudentArticleCreationMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.StudentArticleCreationEvaluationDetailResponse> studentArticleCreationEvaluationDetail(
        com.zhijiejiaoyu.glory_api.short_video.StudentArticleCreationEvaluationDetailRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getStudentArticleCreationEvaluationDetailMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 文案纠错
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.CorrectSentenceResponse> correctSentence(
        com.zhijiejiaoyu.glory_api.short_video.CorrectSentenceRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCorrectSentenceMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 生成AI评价
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.GenArticleAIEvaluationResponse> genArticleAiEvaluation(
        com.zhijiejiaoyu.glory_api.short_video.GenArticleAIEvaluationRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGenArticleAiEvaluationMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 获取AI评价
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.GetArticleAIEvaluationResponse> getArticleAiEvaluation(
        com.zhijiejiaoyu.glory_api.short_video.GetArticleAIEvaluationRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetArticleAiEvaluationMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 文案AI问答
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.ArticleAIChatResponse> articleAiChat(
        com.zhijiejiaoyu.glory_api.short_video.ArticleAIChatRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getArticleAiChatMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 获取AI聊天配置
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.GetChatConfigResponse> getChatConfig(
        com.zhijiejiaoyu.glory_api.short_video.GetChatConfigRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetChatConfigMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.UpdateModelPriceResponse> updateModelPrice(
        com.zhijiejiaoyu.glory_api.short_video.UpdateModelPriceRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateModelPriceMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.UpdateTenantCourseDataResponse> updateArticleCreationTenantCourse(
        com.zhijiejiaoyu.glory_api.short_video.UpdateTenantCourseDataRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getUpdateArticleCreationTenantCourseMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantResponse> getArticleCreationTenant(
        com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetArticleCreationTenantMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantResponse> listArticleCreationTenant(
        com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListArticleCreationTenantMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantCostResponse> listArticleCreationTenantCost(
        com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantCostRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListArticleCreationTenantCostMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantCostResponse> getArticleCreationTenantCost(
        com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantCostRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetArticleCreationTenantCostMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.GetSubTopicAiResultResponse> getSubTopicAiResult(
        com.zhijiejiaoyu.glory_api.short_video.GetSubTopicAiResultRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetSubTopicAiResultMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 数字人合成视频接口
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.CreateDigitalVideoResponse> createDigitalVideo(
        com.zhijiejiaoyu.glory_api.short_video.CreateDigitalVideoRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getCreateDigitalVideoMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 查询数字人视频合成任务进度接口
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.ListDigitalVideoResponse> listDigitalVideo(
        com.zhijiejiaoyu.glory_api.short_video.ListDigitalVideoRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListDigitalVideoMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 查询任务进度接口
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.GetDigitalVideoResponse> getDigitalVideo(
        com.zhijiejiaoyu.glory_api.short_video.GetDigitalVideoRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getGetDigitalVideoMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 数字人模型列表接口
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.ListDigitalCodeResponse> listDigitalCode(
        com.zhijiejiaoyu.glory_api.short_video.ListDigitalCodeRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListDigitalCodeMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 删除数字人视频接口
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.DeleteDigitalVideoResponse> deleteDigitalVideo(
        com.zhijiejiaoyu.glory_api.short_video.DeleteDigitalVideoRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getDeleteDigitalVideoMethod(), getCallOptions()), request);
    }

    /**
     * <pre>
     * 数字人资产列表接口
     * </pre>
     */
    public com.google.common.util.concurrent.ListenableFuture<com.zhijiejiaoyu.glory_api.short_video.ListDigitalAvatarResponse> listDigitalAvatar(
        com.zhijiejiaoyu.glory_api.short_video.ListDigitalAvatarRequest request) {
      return io.grpc.stub.ClientCalls.futureUnaryCall(
          getChannel().newCall(getListDigitalAvatarMethod(), getCallOptions()), request);
    }
  }

  private static final int METHODID_CREATE_EXAMPLE = 0;
  private static final int METHODID_GET_EXAMPLE = 1;
  private static final int METHODID_UPDATE_EXAMPLE = 2;
  private static final int METHODID_LIST_EXAMPLE = 3;
  private static final int METHODID_DELETE_EXAMPLE = 4;
  private static final int METHODID_LOGIN = 5;
  private static final int METHODID_LOGOUT = 6;
  private static final int METHODID_DELETE_USER = 7;
  private static final int METHODID_LIST_OWN_ACCESS = 8;
  private static final int METHODID_GET_VERIFY_CODE = 9;
  private static final int METHODID_CHECK_VERIFY_CODE = 10;
  private static final int METHODID_GET_USER = 11;
  private static final int METHODID_GET_USER_BY_PHONE = 12;
  private static final int METHODID_LOGIN_WITH_PASSWORD = 13;
  private static final int METHODID_UPDATE_PASSWORD = 14;
  private static final int METHODID_UPDATE_USER = 15;
  private static final int METHODID_UPDATE_PHONE = 16;
  private static final int METHODID_GET_USER_MAJOR = 17;
  private static final int METHODID_UPDATE_USER_TENANT = 18;
  private static final int METHODID_LIST_USER = 19;
  private static final int METHODID_USER_BIND_WECHAT = 20;
  private static final int METHODID_USER_UNBIND_WECHAT = 21;
  private static final int METHODID_FOLLOW_USER = 22;
  private static final int METHODID_LIST_MY_FOLLOWING = 23;
  private static final int METHODID_LIST_MY_FOLLOWER = 24;
  private static final int METHODID_LIST_MY_FRIEND = 25;
  private static final int METHODID_GET_MY_SOCIAL_SUMMARY = 26;
  private static final int METHODID_GET_USER_PAGE_PERMISSION = 27;
  private static final int METHODID_CREATE_ROLE_PAGE_PERMISSION = 28;
  private static final int METHODID_UPDATE_ROLE_PAGE_PERMISSION = 29;
  private static final int METHODID_GET_ROLE_PAGE_PERMISSION = 30;
  private static final int METHODID_ADD_ADDRESS = 31;
  private static final int METHODID_DELETE_ADDRESS = 32;
  private static final int METHODID_UPDATE_ADDRESS = 33;
  private static final int METHODID_GET_ADDRESS = 34;
  private static final int METHODID_LIST_ADDRESS = 35;
  private static final int METHODID_LIST_USER_BY_ROLE = 36;
  private static final int METHODID_LIST_PERMISSION = 37;
  private static final int METHODID_LIST_ROLE = 38;
  private static final int METHODID_GIVE_ROLE_PERMISSION = 39;
  private static final int METHODID_REMOVE_ROLE_PERMISSION = 40;
  private static final int METHODID_CREATE_ROLE = 41;
  private static final int METHODID_DELETE_ROLE = 42;
  private static final int METHODID_LIST_RESOURCE = 43;
  private static final int METHODID_GET_ROLE_TYPE = 44;
  private static final int METHODID_GET_ROLE_TEMPLATE = 45;
  private static final int METHODID_UPDATE_ROLE_TEMPLATE = 46;
  private static final int METHODID_CREATE_SHOP = 47;
  private static final int METHODID_GET_SHOP = 48;
  private static final int METHODID_UPDATE_SHOP = 49;
  private static final int METHODID_LIST_SHOP = 50;
  private static final int METHODID_DELETE_SHOP = 51;
  private static final int METHODID_LIST_OPERATION_METRICS = 52;
  private static final int METHODID_GET_SHOP_QRCODE = 53;
  private static final int METHODID_UPDATE_SHOP_MANAGER = 54;
  private static final int METHODID_GET_SHOP_BUSINESS_DATA = 55;
  private static final int METHODID_ADD_SHOP_ACCESS = 56;
  private static final int METHODID_REMOVE_SHOP_ACCESS = 57;
  private static final int METHODID_VERIFY_FIELD = 58;
  private static final int METHODID_LIST_SHOP_ACCESS = 59;
  private static final int METHODID_ADD_SHOP_CATEGORY = 60;
  private static final int METHODID_GET_SHOP_CATEGORY = 61;
  private static final int METHODID_REMOVE_SHOP_CATEGORY = 62;
  private static final int METHODID_ADD_FREIGHT_TEMPLATE = 63;
  private static final int METHODID_GET_FREIGHT_TEMPLATE = 64;
  private static final int METHODID_UPDATE_FREIGHT_TEMPLATE = 65;
  private static final int METHODID_DELETE_FREIGHT_TEMPLATE = 66;
  private static final int METHODID_LIST_FREIGHT_TEMPLATE = 67;
  private static final int METHODID_LIST_QUALIFICATION = 68;
  private static final int METHODID_GET_MALL_INDEX = 69;
  private static final int METHODID_CREATE_CATEGORY = 70;
  private static final int METHODID_GET_CATEGORY = 71;
  private static final int METHODID_UPDATE_CATEGORY = 72;
  private static final int METHODID_LIST_CATEGORY = 73;
  private static final int METHODID_DELETE_CATEGORY = 74;
  private static final int METHODID_LIST_CATEGORY_QUALIFICATION = 75;
  private static final int METHODID_CREATE_PRODUCT = 76;
  private static final int METHODID_GET_PRODUCT = 77;
  private static final int METHODID_UPDATE_PRODUCT = 78;
  private static final int METHODID_LIST_PRODUCT = 79;
  private static final int METHODID_LIST_PRODUCT_BY_IDS = 80;
  private static final int METHODID_DELETE_PRODUCT = 81;
  private static final int METHODID_UPLOAD_MULTI_IMAGE = 82;
  private static final int METHODID_DELETE_IMAGE_BY_ID = 83;
  private static final int METHODID_BIND_ATTRIBUTE = 84;
  private static final int METHODID_PUBLISH_PRODUCT = 85;
  private static final int METHODID_OFF_SHELF_PRODUCT_IN_BATCHES = 86;
  private static final int METHODID_DELETE_PRODUCT_IN_BATCHES = 87;
  private static final int METHODID_CHANGE_PRODUCTS_STATE = 88;
  private static final int METHODID_SAVE_PRODUCT_IMAGE_INFO = 89;
  private static final int METHODID_CREATE_SKU = 90;
  private static final int METHODID_GET_SKU = 91;
  private static final int METHODID_UPDATE_SKU = 92;
  private static final int METHODID_LIST_SKU = 93;
  private static final int METHODID_DELETE_SKU = 94;
  private static final int METHODID_CREATE_ATTRIBUTE = 95;
  private static final int METHODID_GET_ATTRIBUTE = 96;
  private static final int METHODID_LIST_ATTRIBUTE = 97;
  private static final int METHODID_DELETE_ATTRIBUTE = 98;
  private static final int METHODID_ADD_ATTRIBUTE_VALUE = 99;
  private static final int METHODID_DELETE_ATTRIBUTE_VALUE = 100;
  private static final int METHODID_CREATE_ORDER = 101;
  private static final int METHODID_GET_ORDER = 102;
  private static final int METHODID_UPDATE_ORDER = 103;
  private static final int METHODID_LIST_ORDER = 104;
  private static final int METHODID_DELETE_ORDER = 105;
  private static final int METHODID_SHIP_GOODS = 106;
  private static final int METHODID_CONFIRM_RECEIPT_GOODS = 107;
  private static final int METHODID_GET_ORDER_STATUS = 108;
  private static final int METHODID_CANCEL_ORDER = 109;
  private static final int METHODID_SHIP_GOODS_IN_BATCHES = 110;
  private static final int METHODID_FREE_SHIPPING_IN_BATCHES = 111;
  private static final int METHODID_LIST_SHOP_SUMMARY = 112;
  private static final int METHODID_LIST_SHOP_BY_SELLER_ID = 113;
  private static final int METHODID_CREATE_CART = 114;
  private static final int METHODID_GET_CART = 115;
  private static final int METHODID_UPDATE_CART = 116;
  private static final int METHODID_DELETE_CART = 117;
  private static final int METHODID_UPLOAD_ATTACHMENT = 118;
  private static final int METHODID_SAVE_ATTACHMENT = 119;
  private static final int METHODID_LIST_ATTACHMENT = 120;
  private static final int METHODID_DELETE_ATTACHMENT = 121;
  private static final int METHODID_CREATE_SELLER = 122;
  private static final int METHODID_CREATE_PAYMENT = 123;
  private static final int METHODID_GET_PAYMENT = 124;
  private static final int METHODID_UPDATE_PAYMENT = 125;
  private static final int METHODID_DELETE_PAYMENT = 126;
  private static final int METHODID_WECHAT_PAYMENT_NOTIFY = 127;
  private static final int METHODID_CREATE_CONFIG = 128;
  private static final int METHODID_UPDATE_CONFIG = 129;
  private static final int METHODID_DELETE_CONFIG = 130;
  private static final int METHODID_GET_CONFIG = 131;
  private static final int METHODID_GET_STS = 132;
  private static final int METHODID_GENERATE_WEBOFFICE_TOKEN = 133;
  private static final int METHODID_REFRESH_WEBOFFICE_TOKEN = 134;
  private static final int METHODID_LIST_TENANT_ORG = 135;
  private static final int METHODID_GET_ADMIN_TENANT = 136;
  private static final int METHODID_LIST_ADMIN_USER = 137;
  private static final int METHODID_CREATE_ADMIN_USER = 138;
  private static final int METHODID_UPDATE_ADMIN_USER = 139;
  private static final int METHODID_DELETE_ADMIN_USER = 140;
  private static final int METHODID_WX_PREPAY = 141;
  private static final int METHODID_CLOSE_ORDER = 142;
  private static final int METHODID_QUERY_ORDER_BY_ID = 143;
  private static final int METHODID_QUERY_ORDER_BY_OUT_TRADE = 144;
  private static final int METHODID_ADD_VCURRENCY = 145;
  private static final int METHODID_RECHARGE_CURRENCY = 146;
  private static final int METHODID_RECHARGE_CURRENCY_IN_BATCHES = 147;
  private static final int METHODID_GET_VCURRENCY = 148;
  private static final int METHODID_LIST_VCURRENCY = 149;
  private static final int METHODID_LIST_ACCOUNT_OPERATION = 150;
  private static final int METHODID_CREATE_ROOM = 151;
  private static final int METHODID_GET_ROOM = 152;
  private static final int METHODID_UPDATE_ROOM = 153;
  private static final int METHODID_LIST_ROOM = 154;
  private static final int METHODID_DELETE_ROOM = 155;
  private static final int METHODID_LIST_FINISHED_ROOM = 156;
  private static final int METHODID_GET_FINISHED_ROOM = 157;
  private static final int METHODID_RECORD = 158;
  private static final int METHODID_CREATE_LIVE_USER_TOKEN = 159;
  private static final int METHODID_CREATE_NEW_LIVE_USER_TOKEN = 160;
  private static final int METHODID_USER_ENTER_ROOM = 161;
  private static final int METHODID_USER_EXIT_ROOM = 162;
  private static final int METHODID_LIST_ACTIVE_ROOM_USER = 163;
  private static final int METHODID_LIVE_SSE = 164;
  private static final int METHODID_CLOSE_SHOP_ALL_LIVE = 165;
  private static final int METHODID_UPDATE_LIVE_COMMENT_COUNT = 166;
  private static final int METHODID_CREATE_LIVE_PLAN = 167;
  private static final int METHODID_GET_LIVE_PLAN = 168;
  private static final int METHODID_UPDATE_LIVE_PLAN = 169;
  private static final int METHODID_LIST_LIVE_PLAN = 170;
  private static final int METHODID_DELETE_LIVE_PLAN = 171;
  private static final int METHODID_CREATE_LIVE_PLAN_PRODUCT = 172;
  private static final int METHODID_UPDATE_LIVE_PLAN_PRODUCT = 173;
  private static final int METHODID_LIST_LIVE_PLAN_PRODUCT = 174;
  private static final int METHODID_DELETE_LIVE_PLAN_PRODUCT = 175;
  private static final int METHODID_LOAD_LIVE_PLAN_PRODUCT = 176;
  private static final int METHODID_UPDATE_LIVE_PRODUCT_STATUS = 177;
  private static final int METHODID_LIST_LIVE_PRODUCT_STATUS = 178;
  private static final int METHODID_DELETE_LIVE_PRODUCT_STATUS = 179;
  private static final int METHODID_CREATE_LIVE_PRODUCT_STATUS = 180;
  private static final int METHODID_GET_LIVING_PRODUCT_STATUS = 181;
  private static final int METHODID_UPDATE_LIVE_PRODUCT_INTRODUCT_STATUS = 182;
  private static final int METHODID_CREATE_LIVE_TEXT = 183;
  private static final int METHODID_UPDATE_LIVE_TEXT = 184;
  private static final int METHODID_LIST_LIVE_TEXT = 185;
  private static final int METHODID_GET_LIVE_TEXT = 186;
  private static final int METHODID_DELETE_LIVE_TEXTS = 187;
  private static final int METHODID_TEACHER_LIST_STUDENT_SHORT_VIDEO_TEXT = 188;
  private static final int METHODID_GET_LIVE_CHART_DATA = 189;
  private static final int METHODID_GET_EVALUATE_SELECTOR = 190;
  private static final int METHODID_LIST_PERSONAL_EVALUATE = 191;
  private static final int METHODID_GET_EVALUATE_DETAIL = 192;
  private static final int METHODID_SUBMIT_EVALUATE = 193;
  private static final int METHODID_LIST_UNEVALUATED_ROOM = 194;
  private static final int METHODID_LIST_STUDENT_EVALUATIONS = 195;
  private static final int METHODID_IGNORE_EVALUATION = 196;
  private static final int METHODID_GET_RANK = 197;
  private static final int METHODID_RECORD_LIVE_CALLBACK = 198;
  private static final int METHODID_VIDEO_TO_TEXT_CALLBACK = 199;
  private static final int METHODID_LIVE_STREAM_CALLBACK = 200;
  private static final int METHODID_REGENERATION_AI_FEEDBACK = 201;
  private static final int METHODID_SUBMIT_USER_ATTITUDE_FOR_AI_RESULT = 202;
  private static final int METHODID_PREHEAT_PRODUCT = 203;
  private static final int METHODID_PUBLIC_PRICE = 204;
  private static final int METHODID_LIST_TENANT_SYSTEM = 205;
  private static final int METHODID_CREATE_TENANT = 206;
  private static final int METHODID_GET_TENANT = 207;
  private static final int METHODID_UPDATE_TENANT = 208;
  private static final int METHODID_DELETE_TENANT = 209;
  private static final int METHODID_LIST_TENANT = 210;
  private static final int METHODID_GET_TENANT_ORG = 211;
  private static final int METHODID_ENTER_TENANT = 212;
  private static final int METHODID_EXIT_TENANT = 213;
  private static final int METHODID_IS_ENTER_TENANT = 214;
  private static final int METHODID_INIT_TENANT = 215;
  private static final int METHODID_CREATE_TENANT_COURSE = 216;
  private static final int METHODID_LIST_TENANT_COURSE = 217;
  private static final int METHODID_CREATE_TENANT_DEPT = 218;
  private static final int METHODID_UPDATE_TENANT_DEPT = 219;
  private static final int METHODID_DELETE_TENANT_DEPT = 220;
  private static final int METHODID_GET_TENANT_DEPT = 221;
  private static final int METHODID_GET_TENANT_DEPT_TYPE = 222;
  private static final int METHODID_LIST_TENANT_DEPT = 223;
  private static final int METHODID_CREATE_TENANT_USER = 224;
  private static final int METHODID_DELETE_TENANT_USER = 225;
  private static final int METHODID_UPDATE_TENANT_USER = 226;
  private static final int METHODID_GET_TENANT_USER = 227;
  private static final int METHODID_LIST_TENANT_USER = 228;
  private static final int METHODID_LIST_TENANT_STUDENT = 229;
  private static final int METHODID_UPDATE_TENANT_USER_PASSWORD = 230;
  private static final int METHODID_UPDATE_TENANT_CONFIG = 231;
  private static final int METHODID_LIST_TENANT_CONFIG = 232;
  private static final int METHODID_CREATE_SHORT_VIDEO = 233;
  private static final int METHODID_STAGE_SHORT_VIDEO = 234;
  private static final int METHODID_LIST_MY_SHORT_VIDEO = 235;
  private static final int METHODID_LIST_MY_STAGE_VIDEO = 236;
  private static final int METHODID_LIST_MY_LIKE_VIDEO = 237;
  private static final int METHODID_LIST_MY_FAVORITE_VIDEO = 238;
  private static final int METHODID_GET_SHORT_VIDEO = 239;
  private static final int METHODID_UPDATE_SHORT_VIDEO = 240;
  private static final int METHODID_DELETE_SHORT_VIDEO = 241;
  private static final int METHODID_GET_STAGE_VIDEO = 242;
  private static final int METHODID_DELETE_STAGE_VIDEO = 243;
  private static final int METHODID_UPDATE_STAGE_VIDEO = 244;
  private static final int METHODID_MANAGEMENT_LIST_SHORT_VIDEO = 245;
  private static final int METHODID_MANAGEMENT_CENSOR_SHORT_VIDEO = 246;
  private static final int METHODID_MANAGEMENT_DELETE_SHORT_VIDEO = 247;
  private static final int METHODID_LIST_SHORT_VIDEO = 248;
  private static final int METHODID_LIKE_SHORT_VIDEO = 249;
  private static final int METHODID_FAVORITE_SHORT_VIDEO = 250;
  private static final int METHODID_CREATE_SHORT_VIDEO_COMMENT = 251;
  private static final int METHODID_DELETE_SHORT_VIDEO_COMMENT = 252;
  private static final int METHODID_LIST_SHORT_VIDEO_COMMENT = 253;
  private static final int METHODID_TEACHER_LIST_STUDENT_SHORT_VIDEO = 254;
  private static final int METHODID_CREATE_COUPON = 255;
  private static final int METHODID_LIST_COUPON = 256;
  private static final int METHODID_COUPON_DETAIL = 257;
  private static final int METHODID_UPDATE_COUPON = 258;
  private static final int METHODID_DELETE_COUPON = 259;
  private static final int METHODID_ABOLISH_COUPON = 260;
  private static final int METHODID_UPDATE_COUPON_DISTRIBUTION_STATUS = 261;
  private static final int METHODID_CLAIM_COUPON = 262;
  private static final int METHODID_LIST_MY_COUPON = 263;
  private static final int METHODID_CREATE_ACTIVITY = 264;
  private static final int METHODID_LIST_ACTIVITY = 265;
  private static final int METHODID_ACTIVITY_DETAIL = 266;
  private static final int METHODID_UPDATE_ACTIVITY = 267;
  private static final int METHODID_DELETE_ACTIVITY = 268;
  private static final int METHODID_DISABLE_ACTIVITY = 269;
  private static final int METHODID_GET_COUPON_AND_INTRODUCING_PRODUCT = 270;
  private static final int METHODID_CREATE_COURSE_MATERIAL_BOX = 271;
  private static final int METHODID_UPDATE_COURSE_MATERIAL_BOX = 272;
  private static final int METHODID_LIST_COURSE_MATERIAL_BOX = 273;
  private static final int METHODID_DELETE_COURSE_MATERIAL_BOX = 274;
  private static final int METHODID_UPLOAD_COURSE_MATERIAL = 275;
  private static final int METHODID_LIST_COURSE_MATERIAL = 276;
  private static final int METHODID_DELETE_COURSE_MATERIAL = 277;
  private static final int METHODID_GET_COURSE_TYPE_TREE = 278;
  private static final int METHODID_GET_COURSE_TYPE_LIST = 279;
  private static final int METHODID_GET_COURSE_MODULE_CODE = 280;
  private static final int METHODID_GET_COURSE_CHAPTER_CODE = 281;
  private static final int METHODID_CREATE_COURSE_MODULE = 282;
  private static final int METHODID_GET_COURSE_MODULE = 283;
  private static final int METHODID_UPDATE_COURSE_MODULE = 284;
  private static final int METHODID_DELETE_COURSE_MODULE = 285;
  private static final int METHODID_LIST_COURSE_MODULE = 286;
  private static final int METHODID_LIST_LATEST_COURSE = 287;
  private static final int METHODID_LIST_HOTTEST_COURSE = 288;
  private static final int METHODID_CREATE_CM_COURSE = 289;
  private static final int METHODID_PREVIEW_CM_COURSE = 290;
  private static final int METHODID_CREATE_NM_COURSE_RESOURCE = 291;
  private static final int METHODID_CREATE_NM_COURSE_CHAPTER = 292;
  private static final int METHODID_CREATE_NM_COURSE = 293;
  private static final int METHODID_UPDATE_NM_COURSE = 294;
  private static final int METHODID_LIST_NM_COURSE = 295;
  private static final int METHODID_NM_COURSE_DETAIL = 296;
  private static final int METHODID_DELETE_NM_COURSE = 297;
  private static final int METHODID_CREATE_COURSE = 298;
  private static final int METHODID_GET_COURSE = 299;
  private static final int METHODID_UPDATE_COURSE = 300;
  private static final int METHODID_DELETE_COURSE = 301;
  private static final int METHODID_LIST_COURSE = 302;
  private static final int METHODID_CREATE_KNOWLEDGE_GRAPH = 303;
  private static final int METHODID_GET_KNOWLEDGE_GRAPH = 304;
  private static final int METHODID_GET_KNOWLEDGE_GRAPH_NODE = 305;
  private static final int METHODID_GET_COURSE_IDS = 306;
  private static final int METHODID_ENROLL_COURSE = 307;
  private static final int METHODID_DELETE_MY_COURSE = 308;
  private static final int METHODID_UPDATE_COURSE_PROGRESS = 309;
  private static final int METHODID_LIST_MY_COURSE = 310;
  private static final int METHODID_LIST_TEACHING_PLAN = 311;
  private static final int METHODID_CREATE_TEACHING_PLAN = 312;
  private static final int METHODID_UPDATE_TEACHING_PLAN = 313;
  private static final int METHODID_DELETE_TEACHING_PLAN = 314;
  private static final int METHODID_UPDATE_TEACHING_COURSE_PROGRESS = 315;
  private static final int METHODID_CREATE_EDU_SCHEME = 316;
  private static final int METHODID_UPDATE_EDU_SCHEME = 317;
  private static final int METHODID_LIST_EDU_SCHEME = 318;
  private static final int METHODID_EDU_SCHEME_DETAIL = 319;
  private static final int METHODID_DELETE_EDU_SCHEME = 320;
  private static final int METHODID_DISTRIBUTE_EDU_SCHEME = 321;
  private static final int METHODID_GET_EDU_SCHEME_LIKE_COURSE = 322;
  private static final int METHODID_GET_ANDROID_QRCODE = 323;
  private static final int METHODID_CREATE_JOB = 324;
  private static final int METHODID_UPDATE_JOB = 325;
  private static final int METHODID_DELETE_JOB = 326;
  private static final int METHODID_LIST_JOB = 327;
  private static final int METHODID_GET_SCHOO_LIVE_CHART = 328;
  private static final int METHODID_LIST_SCHOO_LIVE_TRAFFIC = 329;
  private static final int METHODID_GET_LIVE_ALL_TRAFFIC = 330;
  private static final int METHODID_GET_SCHOO_LIVE_TRAFFIC = 331;
  private static final int METHODID_LIST_TENANT_TRAFFIC_CONFIG = 332;
  private static final int METHODID_UPDATE_TENANT_TRAFFIC_CONFIG = 333;
  private static final int METHODID_LIST_TRAFFIC_WARNING = 334;
  private static final int METHODID_DELETE_TRAFFIC_WARNING = 335;
  private static final int METHODID_CREATE_LIVE_CONTROL = 336;
  private static final int METHODID_UPDATE_LIVE_CONTROL = 337;
  private static final int METHODID_LIST_LIVE_CONTROL = 338;
  private static final int METHODID_DELETE_LIVE_CONTROL = 339;
  private static final int METHODID_CREATE_QUICK_EVALUATION_STANDARD = 340;
  private static final int METHODID_UPDATE_QUICK_EVALUATION_STANDARD = 341;
  private static final int METHODID_DELETE_QUICK_EVALUATION_STANDARD = 342;
  private static final int METHODID_LIST_QUICK_EVALUATION_STANDARD = 343;
  private static final int METHODID_GET_LIVE_REPLAY = 344;
  private static final int METHODID_CREATE_QUICK_EVALUATION_REPORT = 345;
  private static final int METHODID_LIST_QUICK_EVALUATION_REPORT = 346;
  private static final int METHODID_GET_QUICK_EVALUATION_REPORT = 347;
  private static final int METHODID_DELETE_QUICK_EVALUATION_REPORT = 348;
  private static final int METHODID_GET_QUICK_EVALUATION_DETAIL = 349;
  private static final int METHODID_CREATE_VERSION_LOG = 350;
  private static final int METHODID_UPDATE_VERSION_LOG = 351;
  private static final int METHODID_LIST_VERSION_LOG = 352;
  private static final int METHODID_DELETE_VERSION_LOG = 353;
  private static final int METHODID_GET_LATEST_VERSION = 354;
  private static final int METHODID_GET_TASK_CONFIG = 355;
  private static final int METHODID_CREATE_SYSTEM_TASK = 356;
  private static final int METHODID_LIST_SYSTEM_TASK = 357;
  private static final int METHODID_GET_SYSTEM_TASK = 358;
  private static final int METHODID_UPDATE_SYSTEM_TASK = 359;
  private static final int METHODID_DELETE_SYSTEM_TASK = 360;
  private static final int METHODID_CREATE_TEACHER_TASK_TEMPLATE = 361;
  private static final int METHODID_UPDATE_TEACHER_TASK_TEMPLATE = 362;
  private static final int METHODID_LIST_TEACHER_TASK_TEMPLATE = 363;
  private static final int METHODID_GET_TEACHER_TASK_TEMPLATE = 364;
  private static final int METHODID_DELETE_TEACHER_TASK_TEMPLATE = 365;
  private static final int METHODID_CREATE_TEACHER_TASK = 366;
  private static final int METHODID_UPDATE_TEACHER_TASK = 367;
  private static final int METHODID_LIST_TEACHER_TASK = 368;
  private static final int METHODID_GET_TEACHER_TASK = 369;
  private static final int METHODID_GET_TEACHER_TASK_PROGRESS = 370;
  private static final int METHODID_DELETE_TEACHER_TASK = 371;
  private static final int METHODID_TEACHER_TASK_STATS = 372;
  private static final int METHODID_TEACHER_TASK_STUDENTS = 373;
  private static final int METHODID_COUNT_CLASS_SUBMIT = 374;
  private static final int METHODID_COUNT_CLASS_SUBMIT_LIST = 375;
  private static final int METHODID_COUNT_POSITIVE_LIST = 376;
  private static final int METHODID_COUNT_POTENTIAL_LIST = 377;
  private static final int METHODID_COUNT_SUBMIT_LIST = 378;
  private static final int METHODID_COUNT_CLASS_PASS = 379;
  private static final int METHODID_COUNT_CLASS_PASS_LIST = 380;
  private static final int METHODID_COUNT_SUPER_STUDENT_LIST = 381;
  private static final int METHODID_COUNT_LAGGING_STUDENT_LIST = 382;
  private static final int METHODID_COUNT_PASS_LIST = 383;
  private static final int METHODID_COUNT_HISTORY_TASK = 384;
  private static final int METHODID_LIST_STUDENT_TASK = 385;
  private static final int METHODID_SUBMIT_STUDENT_TASK = 386;
  private static final int METHODID_GET_STUDENT_TASK = 387;
  private static final int METHODID_TEACHER_LIST_STUDENT_TASK = 388;
  private static final int METHODID_TEACHER_EVALUATE_STUDENT_TASK = 389;
  private static final int METHODID_STUDENT_TASK_STATS = 390;
  private static final int METHODID_STUDENT_TASK_EVALUATE_STATS = 391;
  private static final int METHODID_START_STUDENT_TASK_TIME = 392;
  private static final int METHODID_DOWNLOAD_TEACHER_TASK = 393;
  private static final int METHODID_LIST_NOTIFICATION = 394;
  private static final int METHODID_COUNT_NOTIFICATION = 395;
  private static final int METHODID_READ_NOTIFICATION = 396;
  private static final int METHODID_TEST_NOTIFICATION = 397;
  private static final int METHODID_DELETE_NOTIFICATION = 398;
  private static final int METHODID_LIST_USER_MAJOR_AND_CLASS = 399;
  private static final int METHODID_GET_AGGREGATION_LIVE_URL = 400;
  private static final int METHODID_GET_LIVE_BOARD_DATA = 401;
  private static final int METHODID_GET_LIVE_BOARD_COMMENTS = 402;
  private static final int METHODID_LIST_BOARD_LIVING_USER = 403;
  private static final int METHODID_CLOSE_CASTER = 404;
  private static final int METHODID_CREATE_ARTICLE_CREATION = 405;
  private static final int METHODID_LIST_MY_ARTICLE_CREATION = 406;
  private static final int METHODID_CREATE_ARTICLE_CREATION_DRAFT = 407;
  private static final int METHODID_LIST_MY_DRAFT_ARTICLE_CREATION = 408;
  private static final int METHODID_DRAFT_ARTICLE_CREATION_DETAIL = 409;
  private static final int METHODID_DELETE_DRAFT_ARTICLE_CREATION = 410;
  private static final int METHODID_ARTICLE_CREATION_STATISTICS = 411;
  private static final int METHODID_GET_EXAMPLE_ARTICLE = 412;
  private static final int METHODID_GET_EVALUATION_STANDARD = 413;
  private static final int METHODID_CREATE_EVALUATION_CONFIG = 414;
  private static final int METHODID_LIST_EVALUATION_CONFIG = 415;
  private static final int METHODID_BATCH_EVALUATE_ARTICLE_CREATION = 416;
  private static final int METHODID_LIST_STUDENT_ARTICLE_CREATION = 417;
  private static final int METHODID_STUDENT_ARTICLE_CREATION_EVALUATION_DETAIL = 418;
  private static final int METHODID_CORRECT_SENTENCE = 419;
  private static final int METHODID_GEN_ARTICLE_AI_EVALUATION = 420;
  private static final int METHODID_GET_ARTICLE_AI_EVALUATION = 421;
  private static final int METHODID_ARTICLE_AI_CHAT = 422;
  private static final int METHODID_GET_CHAT_CONFIG = 423;
  private static final int METHODID_UPDATE_MODEL_PRICE = 424;
  private static final int METHODID_UPDATE_ARTICLE_CREATION_TENANT_COURSE = 425;
  private static final int METHODID_GET_ARTICLE_CREATION_TENANT = 426;
  private static final int METHODID_LIST_ARTICLE_CREATION_TENANT = 427;
  private static final int METHODID_LIST_ARTICLE_CREATION_TENANT_COST = 428;
  private static final int METHODID_GET_ARTICLE_CREATION_TENANT_COST = 429;
  private static final int METHODID_GET_SUB_TOPIC_AI_RESULT = 430;
  private static final int METHODID_CREATE_DIGITAL_VIDEO = 431;
  private static final int METHODID_LIST_DIGITAL_VIDEO = 432;
  private static final int METHODID_GET_DIGITAL_VIDEO = 433;
  private static final int METHODID_LIST_DIGITAL_CODE = 434;
  private static final int METHODID_DELETE_DIGITAL_VIDEO = 435;
  private static final int METHODID_LIST_DIGITAL_AVATAR = 436;

  private static final class MethodHandlers<Req, Resp> implements
      io.grpc.stub.ServerCalls.UnaryMethod<Req, Resp>,
      io.grpc.stub.ServerCalls.ServerStreamingMethod<Req, Resp>,
      io.grpc.stub.ServerCalls.ClientStreamingMethod<Req, Resp>,
      io.grpc.stub.ServerCalls.BidiStreamingMethod<Req, Resp> {
    private final AsyncService serviceImpl;
    private final int methodId;

    MethodHandlers(AsyncService serviceImpl, int methodId) {
      this.serviceImpl = serviceImpl;
      this.methodId = methodId;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("unchecked")
    public void invoke(Req request, io.grpc.stub.StreamObserver<Resp> responseObserver) {
      switch (methodId) {
        case METHODID_CREATE_EXAMPLE:
          serviceImpl.createExample((com.zhijiejiaoyu.glory_api.example.CreateExampleRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.example.CreateExampleResponse>) responseObserver);
          break;
        case METHODID_GET_EXAMPLE:
          serviceImpl.getExample((com.zhijiejiaoyu.glory_api.example.GetExampleRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.example.GetExampleResponse>) responseObserver);
          break;
        case METHODID_UPDATE_EXAMPLE:
          serviceImpl.updateExample((com.zhijiejiaoyu.glory_api.example.UpdateExampleRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.example.UpdateExampleResponse>) responseObserver);
          break;
        case METHODID_LIST_EXAMPLE:
          serviceImpl.listExample((com.zhijiejiaoyu.glory_api.example.ListExampleRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.example.ListExampleResponse>) responseObserver);
          break;
        case METHODID_DELETE_EXAMPLE:
          serviceImpl.deleteExample((com.zhijiejiaoyu.glory_api.example.DeleteExampleRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.example.DeleteExampleResponse>) responseObserver);
          break;
        case METHODID_LOGIN:
          serviceImpl.login((com.zhijiejiaoyu.glory_api.user.LoginRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.LoginResponse>) responseObserver);
          break;
        case METHODID_LOGOUT:
          serviceImpl.logout((com.zhijiejiaoyu.glory_api.user.LogoutRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.LogoutResponse>) responseObserver);
          break;
        case METHODID_DELETE_USER:
          serviceImpl.deleteUser((com.zhijiejiaoyu.glory_api.user.DeleteUserRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.DeleteUserResponse>) responseObserver);
          break;
        case METHODID_LIST_OWN_ACCESS:
          serviceImpl.listOwnAccess((com.zhijiejiaoyu.glory_api.user.ListOwnAccessRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListOwnAccessResponse>) responseObserver);
          break;
        case METHODID_GET_VERIFY_CODE:
          serviceImpl.getVerifyCode((com.zhijiejiaoyu.glory_api.user.GetVerifyCodeRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GetVerifyCodeResponse>) responseObserver);
          break;
        case METHODID_CHECK_VERIFY_CODE:
          serviceImpl.checkVerifyCode((com.zhijiejiaoyu.glory_api.user.CheckVerifyCodeRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.CheckVerifyCodeResponse>) responseObserver);
          break;
        case METHODID_GET_USER:
          serviceImpl.getUser((com.zhijiejiaoyu.glory_api.user.GetUserRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GetUserResponse>) responseObserver);
          break;
        case METHODID_GET_USER_BY_PHONE:
          serviceImpl.getUserByPhone((com.zhijiejiaoyu.glory_api.user.GetUserByPhoneRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GetUserByPhoneResponse>) responseObserver);
          break;
        case METHODID_LOGIN_WITH_PASSWORD:
          serviceImpl.loginWithPassword((com.zhijiejiaoyu.glory_api.user.LoginWithPasswordRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.LoginWithPasswordResponse>) responseObserver);
          break;
        case METHODID_UPDATE_PASSWORD:
          serviceImpl.updatePassword((com.zhijiejiaoyu.glory_api.user.UpdatePasswordRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.UpdatePasswordResponse>) responseObserver);
          break;
        case METHODID_UPDATE_USER:
          serviceImpl.updateUser((com.zhijiejiaoyu.glory_api.user.UpdateUserRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.UpdateUserResponse>) responseObserver);
          break;
        case METHODID_UPDATE_PHONE:
          serviceImpl.updatePhone((com.zhijiejiaoyu.glory_api.user.UpdatePhoneRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.UpdatePhoneResponse>) responseObserver);
          break;
        case METHODID_GET_USER_MAJOR:
          serviceImpl.getUserMajor((com.zhijiejiaoyu.glory_api.user.GetUserMajorRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GetUserMajorResponse>) responseObserver);
          break;
        case METHODID_UPDATE_USER_TENANT:
          serviceImpl.updateUserTenant((com.zhijiejiaoyu.glory_api.user.UpdateUserTenantRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.UpdateUserTenantResponse>) responseObserver);
          break;
        case METHODID_LIST_USER:
          serviceImpl.listUser((com.zhijiejiaoyu.glory_api.user.ListUserRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListUserResponse>) responseObserver);
          break;
        case METHODID_USER_BIND_WECHAT:
          serviceImpl.userBindWechat((com.zhijiejiaoyu.glory_api.user.UserBindWechatRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.UserBindWechatResponse>) responseObserver);
          break;
        case METHODID_USER_UNBIND_WECHAT:
          serviceImpl.userUnbindWechat((com.zhijiejiaoyu.glory_api.user.UserUnbindWechatRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.UserUnbindWechatResponse>) responseObserver);
          break;
        case METHODID_FOLLOW_USER:
          serviceImpl.followUser((com.zhijiejiaoyu.glory_api.user.FollowUserRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.FollowUserResponse>) responseObserver);
          break;
        case METHODID_LIST_MY_FOLLOWING:
          serviceImpl.listMyFollowing((com.zhijiejiaoyu.glory_api.user.ListMyFollowingRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListMyFollowingResponse>) responseObserver);
          break;
        case METHODID_LIST_MY_FOLLOWER:
          serviceImpl.listMyFollower((com.zhijiejiaoyu.glory_api.user.ListMyFollowerRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListMyFollowerResponse>) responseObserver);
          break;
        case METHODID_LIST_MY_FRIEND:
          serviceImpl.listMyFriend((com.zhijiejiaoyu.glory_api.user.ListMyFriendRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListMyFriendResponse>) responseObserver);
          break;
        case METHODID_GET_MY_SOCIAL_SUMMARY:
          serviceImpl.getMySocialSummary((com.zhijiejiaoyu.glory_api.user.GetMySocialSummaryRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GetMySocialSummaryResponse>) responseObserver);
          break;
        case METHODID_GET_USER_PAGE_PERMISSION:
          serviceImpl.getUserPagePermission((com.zhijiejiaoyu.glory_api.user.GetUserPagePermissionRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GetUserPagePermissionResponse>) responseObserver);
          break;
        case METHODID_CREATE_ROLE_PAGE_PERMISSION:
          serviceImpl.createRolePagePermission((com.zhijiejiaoyu.glory_api.user.CreateRolePagePermissionRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.CreateRolePagePermissionResponse>) responseObserver);
          break;
        case METHODID_UPDATE_ROLE_PAGE_PERMISSION:
          serviceImpl.updateRolePagePermission((com.zhijiejiaoyu.glory_api.user.UpdateRolePagePermissionRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.UpdateRolePagePermissionResponse>) responseObserver);
          break;
        case METHODID_GET_ROLE_PAGE_PERMISSION:
          serviceImpl.getRolePagePermission((com.zhijiejiaoyu.glory_api.user.GetRolePagePermissionRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GetRolePagePermissionResponse>) responseObserver);
          break;
        case METHODID_ADD_ADDRESS:
          serviceImpl.addAddress((com.zhijiejiaoyu.glory_api.user.AddAddressRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.AddAddressResponse>) responseObserver);
          break;
        case METHODID_DELETE_ADDRESS:
          serviceImpl.deleteAddress((com.zhijiejiaoyu.glory_api.user.DeleteAddressRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.DeleteAddressResponse>) responseObserver);
          break;
        case METHODID_UPDATE_ADDRESS:
          serviceImpl.updateAddress((com.zhijiejiaoyu.glory_api.user.UpdateAddressRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.UpdateAddressResponse>) responseObserver);
          break;
        case METHODID_GET_ADDRESS:
          serviceImpl.getAddress((com.zhijiejiaoyu.glory_api.user.GetAddressRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GetAddressResponse>) responseObserver);
          break;
        case METHODID_LIST_ADDRESS:
          serviceImpl.listAddress((com.zhijiejiaoyu.glory_api.user.ListAddressRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListAddressResponse>) responseObserver);
          break;
        case METHODID_LIST_USER_BY_ROLE:
          serviceImpl.listUserByRole((com.zhijiejiaoyu.glory_api.user.ListUserByRoleRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListUserByRoleResponse>) responseObserver);
          break;
        case METHODID_LIST_PERMISSION:
          serviceImpl.listPermission((com.zhijiejiaoyu.glory_api.user.ListPermissionRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListPermissionResponse>) responseObserver);
          break;
        case METHODID_LIST_ROLE:
          serviceImpl.listRole((com.zhijiejiaoyu.glory_api.user.ListRoleRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListRoleResponse>) responseObserver);
          break;
        case METHODID_GIVE_ROLE_PERMISSION:
          serviceImpl.giveRolePermission((com.zhijiejiaoyu.glory_api.user.GiveRolePermissionRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GiveRolePermissionResponse>) responseObserver);
          break;
        case METHODID_REMOVE_ROLE_PERMISSION:
          serviceImpl.removeRolePermission((com.zhijiejiaoyu.glory_api.user.RemoveRolePermissionRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.RemoveRolePermissionResponse>) responseObserver);
          break;
        case METHODID_CREATE_ROLE:
          serviceImpl.createRole((com.zhijiejiaoyu.glory_api.user.CreateRoleRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.CreateRoleResponse>) responseObserver);
          break;
        case METHODID_DELETE_ROLE:
          serviceImpl.deleteRole((com.zhijiejiaoyu.glory_api.user.DeleteRoleRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.DeleteRoleResponse>) responseObserver);
          break;
        case METHODID_LIST_RESOURCE:
          serviceImpl.listResource((com.zhijiejiaoyu.glory_api.user.ListResourceRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.ListResourceResponse>) responseObserver);
          break;
        case METHODID_GET_ROLE_TYPE:
          serviceImpl.getRoleType((com.zhijiejiaoyu.glory_api.user.GetRoleTypeRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.user.GetRoleTypeResponse>) responseObserver);
          break;
        case METHODID_GET_ROLE_TEMPLATE:
          serviceImpl.getRoleTemplate((com.zhijiejiaoyu.glory_api.role.GetRoleTemplateRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.role.GetRoleTemplateResponse>) responseObserver);
          break;
        case METHODID_UPDATE_ROLE_TEMPLATE:
          serviceImpl.updateRoleTemplate((com.zhijiejiaoyu.glory_api.role.UpdateRoleTemplateRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.role.UpdateRoleTemplateResponse>) responseObserver);
          break;
        case METHODID_CREATE_SHOP:
          serviceImpl.createShop((com.zhijiejiaoyu.glory_api.shop.CreateShopRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CreateShopResponse>) responseObserver);
          break;
        case METHODID_GET_SHOP:
          serviceImpl.getShop((com.zhijiejiaoyu.glory_api.shop.GetShopRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetShopResponse>) responseObserver);
          break;
        case METHODID_UPDATE_SHOP:
          serviceImpl.updateShop((com.zhijiejiaoyu.glory_api.shop.UpdateShopRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateShopResponse>) responseObserver);
          break;
        case METHODID_LIST_SHOP:
          serviceImpl.listShop((com.zhijiejiaoyu.glory_api.shop.ListShopRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListShopResponse>) responseObserver);
          break;
        case METHODID_DELETE_SHOP:
          serviceImpl.deleteShop((com.zhijiejiaoyu.glory_api.shop.DeleteShopRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteShopResponse>) responseObserver);
          break;
        case METHODID_LIST_OPERATION_METRICS:
          serviceImpl.listOperationMetrics((com.zhijiejiaoyu.glory_api.shop.ListOperationMetricsRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListOperationMetricsResponse>) responseObserver);
          break;
        case METHODID_GET_SHOP_QRCODE:
          serviceImpl.getShopQrcode((com.zhijiejiaoyu.glory_api.shop.GetShopQrcodeRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetShopQrcodeResponse>) responseObserver);
          break;
        case METHODID_UPDATE_SHOP_MANAGER:
          serviceImpl.updateShopManager((com.zhijiejiaoyu.glory_api.shop.UpdateShopManagerRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateShopManagerResponse>) responseObserver);
          break;
        case METHODID_GET_SHOP_BUSINESS_DATA:
          serviceImpl.getShopBusinessData((com.zhijiejiaoyu.glory_api.shop.GetShopBusinessDataRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetShopBusinessDataResponse>) responseObserver);
          break;
        case METHODID_ADD_SHOP_ACCESS:
          serviceImpl.addShopAccess((com.zhijiejiaoyu.glory_api.shop.AddShopAccessRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.AddShopAccessResponse>) responseObserver);
          break;
        case METHODID_REMOVE_SHOP_ACCESS:
          serviceImpl.removeShopAccess((com.zhijiejiaoyu.glory_api.shop.RemoveShopAccessRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.RemoveShopAccessResponse>) responseObserver);
          break;
        case METHODID_VERIFY_FIELD:
          serviceImpl.verifyField((com.zhijiejiaoyu.glory_api.shop.VerifyFieldRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.VerifyFieldResponse>) responseObserver);
          break;
        case METHODID_LIST_SHOP_ACCESS:
          serviceImpl.listShopAccess((com.zhijiejiaoyu.glory_api.shop.ListShopAccessRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListShopAccessResponse>) responseObserver);
          break;
        case METHODID_ADD_SHOP_CATEGORY:
          serviceImpl.addShopCategory((com.zhijiejiaoyu.glory_api.shop.AddShopCategoryRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.AddShopCategoryResponse>) responseObserver);
          break;
        case METHODID_GET_SHOP_CATEGORY:
          serviceImpl.getShopCategory((com.zhijiejiaoyu.glory_api.shop.GetShopCategoryRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetShopCategoryResponse>) responseObserver);
          break;
        case METHODID_REMOVE_SHOP_CATEGORY:
          serviceImpl.removeShopCategory((com.zhijiejiaoyu.glory_api.shop.RemoveShopCategoryRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.RemoveShopCategoryResponse>) responseObserver);
          break;
        case METHODID_ADD_FREIGHT_TEMPLATE:
          serviceImpl.addFreightTemplate((com.zhijiejiaoyu.glory_api.shop.CreateTemplateRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CreateTemplateResponse>) responseObserver);
          break;
        case METHODID_GET_FREIGHT_TEMPLATE:
          serviceImpl.getFreightTemplate((com.zhijiejiaoyu.glory_api.shop.GetTemplateRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetTemplateResponse>) responseObserver);
          break;
        case METHODID_UPDATE_FREIGHT_TEMPLATE:
          serviceImpl.updateFreightTemplate((com.zhijiejiaoyu.glory_api.shop.UpdateTemplateRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateTemplateResponse>) responseObserver);
          break;
        case METHODID_DELETE_FREIGHT_TEMPLATE:
          serviceImpl.deleteFreightTemplate((com.zhijiejiaoyu.glory_api.shop.DeleteTemplateRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteTemplateResponse>) responseObserver);
          break;
        case METHODID_LIST_FREIGHT_TEMPLATE:
          serviceImpl.listFreightTemplate((com.zhijiejiaoyu.glory_api.shop.ListTemplateRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListTemplateResponse>) responseObserver);
          break;
        case METHODID_LIST_QUALIFICATION:
          serviceImpl.listQualification((com.zhijiejiaoyu.glory_api.shop.ListShopQualificationRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListShopQualificationResponse>) responseObserver);
          break;
        case METHODID_GET_MALL_INDEX:
          serviceImpl.getMallIndex((com.zhijiejiaoyu.glory_api.mall.MallIndexRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.mall.MallIndexResponse>) responseObserver);
          break;
        case METHODID_CREATE_CATEGORY:
          serviceImpl.createCategory((com.zhijiejiaoyu.glory_api.shop.CreateCategoryRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CreateCategoryResponse>) responseObserver);
          break;
        case METHODID_GET_CATEGORY:
          serviceImpl.getCategory((com.zhijiejiaoyu.glory_api.shop.GetCategoryRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetCategoryResponse>) responseObserver);
          break;
        case METHODID_UPDATE_CATEGORY:
          serviceImpl.updateCategory((com.zhijiejiaoyu.glory_api.shop.UpdateCategoryRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateCategoryResponse>) responseObserver);
          break;
        case METHODID_LIST_CATEGORY:
          serviceImpl.listCategory((com.zhijiejiaoyu.glory_api.shop.ListCategoryRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListCategoryResponse>) responseObserver);
          break;
        case METHODID_DELETE_CATEGORY:
          serviceImpl.deleteCategory((com.zhijiejiaoyu.glory_api.shop.DeleteCategoryRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteCategoryResponse>) responseObserver);
          break;
        case METHODID_LIST_CATEGORY_QUALIFICATION:
          serviceImpl.listCategoryQualification((com.zhijiejiaoyu.glory_api.shop.ListCategoryQualificationRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListCategoryQualificationResponse>) responseObserver);
          break;
        case METHODID_CREATE_PRODUCT:
          serviceImpl.createProduct((com.zhijiejiaoyu.glory_api.shop.CreateProductRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CreateProductResponse>) responseObserver);
          break;
        case METHODID_GET_PRODUCT:
          serviceImpl.getProduct((com.zhijiejiaoyu.glory_api.shop.GetProductRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetProductResponse>) responseObserver);
          break;
        case METHODID_UPDATE_PRODUCT:
          serviceImpl.updateProduct((com.zhijiejiaoyu.glory_api.shop.UpdateProductRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateProductResponse>) responseObserver);
          break;
        case METHODID_LIST_PRODUCT:
          serviceImpl.listProduct((com.zhijiejiaoyu.glory_api.shop.ListProductRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListProductResponse>) responseObserver);
          break;
        case METHODID_LIST_PRODUCT_BY_IDS:
          serviceImpl.listProductByIDs((com.zhijiejiaoyu.glory_api.shop.ListProductByProductIDsRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListProductByProductIDsResponse>) responseObserver);
          break;
        case METHODID_DELETE_PRODUCT:
          serviceImpl.deleteProduct((com.zhijiejiaoyu.glory_api.shop.DeleteProductRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteProductResponse>) responseObserver);
          break;
        case METHODID_UPLOAD_MULTI_IMAGE:
          serviceImpl.uploadMultiImage((com.zhijiejiaoyu.glory_api.shop.UploadMultiImageRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UploadMultiImageResponse>) responseObserver);
          break;
        case METHODID_DELETE_IMAGE_BY_ID:
          serviceImpl.deleteImageById((com.zhijiejiaoyu.glory_api.shop.DeleteImageRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteImageResponse>) responseObserver);
          break;
        case METHODID_BIND_ATTRIBUTE:
          serviceImpl.bindAttribute((com.zhijiejiaoyu.glory_api.shop.BindAttributeRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.BindAttributeResponse>) responseObserver);
          break;
        case METHODID_PUBLISH_PRODUCT:
          serviceImpl.publishProduct((com.zhijiejiaoyu.glory_api.shop.PublishProductRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.PublishProductResponse>) responseObserver);
          break;
        case METHODID_OFF_SHELF_PRODUCT_IN_BATCHES:
          serviceImpl.offShelfProductInBatches((com.zhijiejiaoyu.glory_api.shop.OffSelfProductsRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.OffSelfProductsResponse>) responseObserver);
          break;
        case METHODID_DELETE_PRODUCT_IN_BATCHES:
          serviceImpl.deleteProductInBatches((com.zhijiejiaoyu.glory_api.shop.DeleteProductsRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteProductsResponse>) responseObserver);
          break;
        case METHODID_CHANGE_PRODUCTS_STATE:
          serviceImpl.changeProductsState((com.zhijiejiaoyu.glory_api.shop.ChangeProductStateRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ChangeProductStateResponse>) responseObserver);
          break;
        case METHODID_SAVE_PRODUCT_IMAGE_INFO:
          serviceImpl.saveProductImageInfo((com.zhijiejiaoyu.glory_api.shop.SaveImageInfoRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.SaveImageInfoResponse>) responseObserver);
          break;
        case METHODID_CREATE_SKU:
          serviceImpl.createSku((com.zhijiejiaoyu.glory_api.shop.CreateSkuRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CreateSkuResponse>) responseObserver);
          break;
        case METHODID_GET_SKU:
          serviceImpl.getSku((com.zhijiejiaoyu.glory_api.shop.GetSkuRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetSkuResponse>) responseObserver);
          break;
        case METHODID_UPDATE_SKU:
          serviceImpl.updateSku((com.zhijiejiaoyu.glory_api.shop.UpdateSkuRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateSkuResponse>) responseObserver);
          break;
        case METHODID_LIST_SKU:
          serviceImpl.listSku((com.zhijiejiaoyu.glory_api.shop.ListSkuRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListSkuResponse>) responseObserver);
          break;
        case METHODID_DELETE_SKU:
          serviceImpl.deleteSku((com.zhijiejiaoyu.glory_api.shop.DeleteSkuRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteSkuResponse>) responseObserver);
          break;
        case METHODID_CREATE_ATTRIBUTE:
          serviceImpl.createAttribute((com.zhijiejiaoyu.glory_api.shop.CreateAttributeRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CreateAttributeResponse>) responseObserver);
          break;
        case METHODID_GET_ATTRIBUTE:
          serviceImpl.getAttribute((com.zhijiejiaoyu.glory_api.shop.GetAttributeRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetAttributeResponse>) responseObserver);
          break;
        case METHODID_LIST_ATTRIBUTE:
          serviceImpl.listAttribute((com.zhijiejiaoyu.glory_api.shop.ListAttributeRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListAttributeResponse>) responseObserver);
          break;
        case METHODID_DELETE_ATTRIBUTE:
          serviceImpl.deleteAttribute((com.zhijiejiaoyu.glory_api.shop.DeleteAttributeRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteAttributeResponse>) responseObserver);
          break;
        case METHODID_ADD_ATTRIBUTE_VALUE:
          serviceImpl.addAttributeValue((com.zhijiejiaoyu.glory_api.shop.AddAttributeValueRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.AddAttributeValueResponse>) responseObserver);
          break;
        case METHODID_DELETE_ATTRIBUTE_VALUE:
          serviceImpl.deleteAttributeValue((com.zhijiejiaoyu.glory_api.shop.DeleteAttributeValueRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteAttributeValueResponse>) responseObserver);
          break;
        case METHODID_CREATE_ORDER:
          serviceImpl.createOrder((com.zhijiejiaoyu.glory_api.shop.CreateOrderRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CreateOrderResponse>) responseObserver);
          break;
        case METHODID_GET_ORDER:
          serviceImpl.getOrder((com.zhijiejiaoyu.glory_api.shop.GetOrderRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetOrderResponse>) responseObserver);
          break;
        case METHODID_UPDATE_ORDER:
          serviceImpl.updateOrder((com.zhijiejiaoyu.glory_api.shop.UpdateOrderRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateOrderResponse>) responseObserver);
          break;
        case METHODID_LIST_ORDER:
          serviceImpl.listOrder((com.zhijiejiaoyu.glory_api.shop.ListOrderRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListOrderResponse>) responseObserver);
          break;
        case METHODID_DELETE_ORDER:
          serviceImpl.deleteOrder((com.zhijiejiaoyu.glory_api.shop.DeleteOrderRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteOrderResponse>) responseObserver);
          break;
        case METHODID_SHIP_GOODS:
          serviceImpl.shipGoods((com.zhijiejiaoyu.glory_api.shop.ShipGoodsRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ShipGoodsResponse>) responseObserver);
          break;
        case METHODID_CONFIRM_RECEIPT_GOODS:
          serviceImpl.confirmReceiptGoods((com.zhijiejiaoyu.glory_api.shop.ConfirmReceiptGoodsRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ConfirmReceiptGoodsResponse>) responseObserver);
          break;
        case METHODID_GET_ORDER_STATUS:
          serviceImpl.getOrderStatus((com.zhijiejiaoyu.glory_api.shop.GetOrderStatusRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetOrderStatusResponse>) responseObserver);
          break;
        case METHODID_CANCEL_ORDER:
          serviceImpl.cancelOrder((com.zhijiejiaoyu.glory_api.shop.CancelOrderRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CancelOrderResponse>) responseObserver);
          break;
        case METHODID_SHIP_GOODS_IN_BATCHES:
          serviceImpl.shipGoodsInBatches((com.zhijiejiaoyu.glory_api.shop.ShipGoodsInBatchesRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ShipGoodsInBatchesResponse>) responseObserver);
          break;
        case METHODID_FREE_SHIPPING_IN_BATCHES:
          serviceImpl.freeShippingInBatches((com.zhijiejiaoyu.glory_api.shop.FreeShippingInBatchesRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.FreeShippingInBatchesResponse>) responseObserver);
          break;
        case METHODID_LIST_SHOP_SUMMARY:
          serviceImpl.listShopSummary((com.zhijiejiaoyu.glory_api.shop.ListShopSummaryRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListShopSummaryResponse>) responseObserver);
          break;
        case METHODID_LIST_SHOP_BY_SELLER_ID:
          serviceImpl.listShopBySellerID((com.zhijiejiaoyu.glory_api.shop.ListShopBySellerIDRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListShopBySellerIDResponse>) responseObserver);
          break;
        case METHODID_CREATE_CART:
          serviceImpl.createCart((com.zhijiejiaoyu.glory_api.shop.AddCartRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.AddCartResponse>) responseObserver);
          break;
        case METHODID_GET_CART:
          serviceImpl.getCart((com.zhijiejiaoyu.glory_api.shop.GetCartRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetCartResponse>) responseObserver);
          break;
        case METHODID_UPDATE_CART:
          serviceImpl.updateCart((com.zhijiejiaoyu.glory_api.shop.UpdateCartRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateCartResponse>) responseObserver);
          break;
        case METHODID_DELETE_CART:
          serviceImpl.deleteCart((com.zhijiejiaoyu.glory_api.shop.DeleteCartRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteCartResponse>) responseObserver);
          break;
        case METHODID_UPLOAD_ATTACHMENT:
          serviceImpl.uploadAttachment((com.zhijiejiaoyu.glory_api.seller.UploadAttachmentRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.seller.UploadAttachmentResponse>) responseObserver);
          break;
        case METHODID_SAVE_ATTACHMENT:
          serviceImpl.saveAttachment((com.zhijiejiaoyu.glory_api.seller.SaveAttachmentRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.seller.SaveAttachmentResponse>) responseObserver);
          break;
        case METHODID_LIST_ATTACHMENT:
          serviceImpl.listAttachment((com.zhijiejiaoyu.glory_api.seller.ListAttachmentRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.seller.ListAttachmentResponse>) responseObserver);
          break;
        case METHODID_DELETE_ATTACHMENT:
          serviceImpl.deleteAttachment((com.zhijiejiaoyu.glory_api.seller.DeleteAttachmentRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.seller.DeleteAttachmentResponse>) responseObserver);
          break;
        case METHODID_CREATE_SELLER:
          serviceImpl.createSeller((com.zhijiejiaoyu.glory_api.seller.CreateSellerRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.seller.CreateSellerResponse>) responseObserver);
          break;
        case METHODID_CREATE_PAYMENT:
          serviceImpl.createPayment((com.zhijiejiaoyu.glory_api.payment.CreatePaymentRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.payment.CreatePaymentResponse>) responseObserver);
          break;
        case METHODID_GET_PAYMENT:
          serviceImpl.getPayment((com.zhijiejiaoyu.glory_api.payment.GetPaymentRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.payment.GetPaymentResponse>) responseObserver);
          break;
        case METHODID_UPDATE_PAYMENT:
          serviceImpl.updatePayment((com.zhijiejiaoyu.glory_api.payment.UpdatePaymentRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.payment.UpdatePaymentResponse>) responseObserver);
          break;
        case METHODID_DELETE_PAYMENT:
          serviceImpl.deletePayment((com.zhijiejiaoyu.glory_api.payment.DeletePaymentRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.payment.DeletePaymentResponse>) responseObserver);
          break;
        case METHODID_WECHAT_PAYMENT_NOTIFY:
          serviceImpl.wechatPaymentNotify((com.zhijiejiaoyu.glory_api.payment.WechatPaymentNotifyRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.payment.WechatPaymentNotifyResponse>) responseObserver);
          break;
        case METHODID_CREATE_CONFIG:
          serviceImpl.createConfig((com.zhijiejiaoyu.glory_api.admin.CreateConfigRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.CreateConfigResponse>) responseObserver);
          break;
        case METHODID_UPDATE_CONFIG:
          serviceImpl.updateConfig((com.zhijiejiaoyu.glory_api.admin.UpdateConfigRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.UpdateConfigResponse>) responseObserver);
          break;
        case METHODID_DELETE_CONFIG:
          serviceImpl.deleteConfig((com.zhijiejiaoyu.glory_api.admin.DeleteConfigRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.DeleteConfigResponse>) responseObserver);
          break;
        case METHODID_GET_CONFIG:
          serviceImpl.getConfig((com.zhijiejiaoyu.glory_api.admin.GetConfigRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.GetConfigResponse>) responseObserver);
          break;
        case METHODID_GET_STS:
          serviceImpl.getSTS((com.zhijiejiaoyu.glory_api.admin.GetSTSRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.GetSTSResponse>) responseObserver);
          break;
        case METHODID_GENERATE_WEBOFFICE_TOKEN:
          serviceImpl.generateWebofficeToken((com.zhijiejiaoyu.glory_api.admin.GenerateWebofficeTokenRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.GenerateWebofficeTokenResponse>) responseObserver);
          break;
        case METHODID_REFRESH_WEBOFFICE_TOKEN:
          serviceImpl.refreshWebofficeToken((com.zhijiejiaoyu.glory_api.admin.RefreshWebofficeTokenRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.RefreshWebofficeTokenResponse>) responseObserver);
          break;
        case METHODID_LIST_TENANT_ORG:
          serviceImpl.listTenantOrg((com.zhijiejiaoyu.glory_api.admin.ListTenantOrgRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.ListTenantOrgResponse>) responseObserver);
          break;
        case METHODID_GET_ADMIN_TENANT:
          serviceImpl.getAdminTenant((com.zhijiejiaoyu.glory_api.admin.GetAdminTenantRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.GetAdminTenantResponse>) responseObserver);
          break;
        case METHODID_LIST_ADMIN_USER:
          serviceImpl.listAdminUser((com.zhijiejiaoyu.glory_api.admin.ListAdminUserRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.ListAdminUserResponse>) responseObserver);
          break;
        case METHODID_CREATE_ADMIN_USER:
          serviceImpl.createAdminUser((com.zhijiejiaoyu.glory_api.admin.CreateAdminUserRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.CreateAdminUserResponse>) responseObserver);
          break;
        case METHODID_UPDATE_ADMIN_USER:
          serviceImpl.updateAdminUser((com.zhijiejiaoyu.glory_api.admin.UpdateAdminUserRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.UpdateAdminUserResponse>) responseObserver);
          break;
        case METHODID_DELETE_ADMIN_USER:
          serviceImpl.deleteAdminUser((com.zhijiejiaoyu.glory_api.admin.DeleteAdminUserRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.admin.DeleteAdminUserResponse>) responseObserver);
          break;
        case METHODID_WX_PREPAY:
          serviceImpl.wxPrepay((com.zhijiejiaoyu.glory_api.wxpay.PrepayRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.wxpay.PrepayResponse>) responseObserver);
          break;
        case METHODID_CLOSE_ORDER:
          serviceImpl.closeOrder((com.zhijiejiaoyu.glory_api.wxpay.CloseOrderRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.wxpay.CloseOrderResponse>) responseObserver);
          break;
        case METHODID_QUERY_ORDER_BY_ID:
          serviceImpl.queryOrderById((com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByIdRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByIdResponse>) responseObserver);
          break;
        case METHODID_QUERY_ORDER_BY_OUT_TRADE:
          serviceImpl.queryOrderByOutTrade((com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByOutTradeNoRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByOutTradeNoResponse>) responseObserver);
          break;
        case METHODID_ADD_VCURRENCY:
          serviceImpl.addVCurrency((com.zhijiejiaoyu.glory_api.currency.AddVirtualCurrencyRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.currency.AddVirtualCurrencyResponse>) responseObserver);
          break;
        case METHODID_RECHARGE_CURRENCY:
          serviceImpl.rechargeCurrency((com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyResponse>) responseObserver);
          break;
        case METHODID_RECHARGE_CURRENCY_IN_BATCHES:
          serviceImpl.rechargeCurrencyInBatches((com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyInBatchesRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyInBatchesResponse>) responseObserver);
          break;
        case METHODID_GET_VCURRENCY:
          serviceImpl.getVCurrency((com.zhijiejiaoyu.glory_api.currency.GetVirtualCurrencyRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.currency.GetVirtualCurrencyResponse>) responseObserver);
          break;
        case METHODID_LIST_VCURRENCY:
          serviceImpl.listVCurrency((com.zhijiejiaoyu.glory_api.currency.ListVirtualCurrencyRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.currency.ListVirtualCurrencyResponse>) responseObserver);
          break;
        case METHODID_LIST_ACCOUNT_OPERATION:
          serviceImpl.listAccountOperation((com.zhijiejiaoyu.glory_api.account.ListAccountOperationRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.account.ListAccountOperationResponse>) responseObserver);
          break;
        case METHODID_CREATE_ROOM:
          serviceImpl.createRoom((com.zhijiejiaoyu.glory_api.live.CreateRoomRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateRoomResponse>) responseObserver);
          break;
        case METHODID_GET_ROOM:
          serviceImpl.getRoom((com.zhijiejiaoyu.glory_api.live.GetRoomRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetRoomResponse>) responseObserver);
          break;
        case METHODID_UPDATE_ROOM:
          serviceImpl.updateRoom((com.zhijiejiaoyu.glory_api.live.UpdateRoomRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UpdateRoomResponse>) responseObserver);
          break;
        case METHODID_LIST_ROOM:
          serviceImpl.listRoom((com.zhijiejiaoyu.glory_api.live.ListRoomRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListRoomResponse>) responseObserver);
          break;
        case METHODID_DELETE_ROOM:
          serviceImpl.deleteRoom((com.zhijiejiaoyu.glory_api.live.DeleteRoomRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.DeleteRoomResponse>) responseObserver);
          break;
        case METHODID_LIST_FINISHED_ROOM:
          serviceImpl.listFinishedRoom((com.zhijiejiaoyu.glory_api.live.ListFinishedRoomRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListFinishedRoomResponse>) responseObserver);
          break;
        case METHODID_GET_FINISHED_ROOM:
          serviceImpl.getFinishedRoom((com.zhijiejiaoyu.glory_api.live.GetFinishedRoomRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetFinishedRoomResponse>) responseObserver);
          break;
        case METHODID_RECORD:
          serviceImpl.record((com.zhijiejiaoyu.glory_api.live.LiveRecordRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.LiveRecordResponse>) responseObserver);
          break;
        case METHODID_CREATE_LIVE_USER_TOKEN:
          serviceImpl.createLiveUserToken((com.zhijiejiaoyu.glory_api.live.CreateLiveUserTokenRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateLiveUserTokenResponse>) responseObserver);
          break;
        case METHODID_CREATE_NEW_LIVE_USER_TOKEN:
          serviceImpl.createNewLiveUserToken((com.zhijiejiaoyu.glory_api.live.CreateNewMessageTokenRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateNewMessageTokenResponse>) responseObserver);
          break;
        case METHODID_USER_ENTER_ROOM:
          serviceImpl.userEnterRoom((com.zhijiejiaoyu.glory_api.live.UserEnterRoomRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UserEnterRoomResponse>) responseObserver);
          break;
        case METHODID_USER_EXIT_ROOM:
          serviceImpl.userExitRoom((com.zhijiejiaoyu.glory_api.live.UserExitRoomRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UserExitRoomResponse>) responseObserver);
          break;
        case METHODID_LIST_ACTIVE_ROOM_USER:
          serviceImpl.listActiveRoomUser((com.zhijiejiaoyu.glory_api.live.ListActiveRoomUserRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.seller.ListAttachmentResponse>) responseObserver);
          break;
        case METHODID_LIVE_SSE:
          serviceImpl.liveSSE((com.zhijiejiaoyu.glory_api.live.LiveSSERequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.LiveSSEResponse>) responseObserver);
          break;
        case METHODID_CLOSE_SHOP_ALL_LIVE:
          serviceImpl.closeShopAllLive((com.zhijiejiaoyu.glory_api.live.CloseShopAllLiveRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CloseShopAllLiveResponse>) responseObserver);
          break;
        case METHODID_UPDATE_LIVE_COMMENT_COUNT:
          serviceImpl.updateLiveCommentCount((com.zhijiejiaoyu.glory_api.live.UpdateLiveCommentCountRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UpdateLiveCommentCountResponse>) responseObserver);
          break;
        case METHODID_CREATE_LIVE_PLAN:
          serviceImpl.createLivePlan((com.zhijiejiaoyu.glory_api.live.CreateLivePlanRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateLivePlanResponse>) responseObserver);
          break;
        case METHODID_GET_LIVE_PLAN:
          serviceImpl.getLivePlan((com.zhijiejiaoyu.glory_api.live.GetLivePlanRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetLivePlanResponse>) responseObserver);
          break;
        case METHODID_UPDATE_LIVE_PLAN:
          serviceImpl.updateLivePlan((com.zhijiejiaoyu.glory_api.live.UpdateLivePlanRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UpdateLivePlanResponse>) responseObserver);
          break;
        case METHODID_LIST_LIVE_PLAN:
          serviceImpl.listLivePlan((com.zhijiejiaoyu.glory_api.live.ListLivePlanRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListLivePlanResponse>) responseObserver);
          break;
        case METHODID_DELETE_LIVE_PLAN:
          serviceImpl.deleteLivePlan((com.zhijiejiaoyu.glory_api.live.DeleteLivePlanRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.DeleteLivePlanResponse>) responseObserver);
          break;
        case METHODID_CREATE_LIVE_PLAN_PRODUCT:
          serviceImpl.createLivePlanProduct((com.zhijiejiaoyu.glory_api.live.CreateLivePlanProductRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateLivePlanProductResponse>) responseObserver);
          break;
        case METHODID_UPDATE_LIVE_PLAN_PRODUCT:
          serviceImpl.updateLivePlanProduct((com.zhijiejiaoyu.glory_api.live.UpdateLivePlanProductRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UpdateLivePlanProductResponse>) responseObserver);
          break;
        case METHODID_LIST_LIVE_PLAN_PRODUCT:
          serviceImpl.listLivePlanProduct((com.zhijiejiaoyu.glory_api.live.ListLivePlanProductRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListLivePlanProductResponse>) responseObserver);
          break;
        case METHODID_DELETE_LIVE_PLAN_PRODUCT:
          serviceImpl.deleteLivePlanProduct((com.zhijiejiaoyu.glory_api.live.DeleteLivePlanProductRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.DeleteLivePlanProductResponse>) responseObserver);
          break;
        case METHODID_LOAD_LIVE_PLAN_PRODUCT:
          serviceImpl.loadLivePlanProduct((com.zhijiejiaoyu.glory_api.live.LoadLivePlanProductRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.LoadLivePlanProductResponse>) responseObserver);
          break;
        case METHODID_UPDATE_LIVE_PRODUCT_STATUS:
          serviceImpl.updateLiveProductStatus((com.zhijiejiaoyu.glory_api.live.UpdateLiveProductStatusRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UpdateLiveProductStatusResponse>) responseObserver);
          break;
        case METHODID_LIST_LIVE_PRODUCT_STATUS:
          serviceImpl.listLiveProductStatus((com.zhijiejiaoyu.glory_api.live.ListLiveProductStatusRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListLiveProductStatusResponse>) responseObserver);
          break;
        case METHODID_DELETE_LIVE_PRODUCT_STATUS:
          serviceImpl.deleteLiveProductStatus((com.zhijiejiaoyu.glory_api.live.DeleteLiveProductStatusRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.DeleteLiveProductStatusResponse>) responseObserver);
          break;
        case METHODID_CREATE_LIVE_PRODUCT_STATUS:
          serviceImpl.createLiveProductStatus((com.zhijiejiaoyu.glory_api.live.CreateLiveProductStatusRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateLiveProductStatusResponse>) responseObserver);
          break;
        case METHODID_GET_LIVING_PRODUCT_STATUS:
          serviceImpl.getLivingProductStatus((com.zhijiejiaoyu.glory_api.live.GetLivingProductStatusRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetLivingProductStatusResponse>) responseObserver);
          break;
        case METHODID_UPDATE_LIVE_PRODUCT_INTRODUCT_STATUS:
          serviceImpl.updateLiveProductIntroductStatus((com.zhijiejiaoyu.glory_api.live.UpdateLiveProductIntroductStatusRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UpdateLiveProductIntroductStatusResponse>) responseObserver);
          break;
        case METHODID_CREATE_LIVE_TEXT:
          serviceImpl.createLiveText((com.zhijiejiaoyu.glory_api.live.CreateLiveTextRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateLiveTextResponse>) responseObserver);
          break;
        case METHODID_UPDATE_LIVE_TEXT:
          serviceImpl.updateLiveText((com.zhijiejiaoyu.glory_api.live.UpdateLiveTextRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UpdateLiveTextResponse>) responseObserver);
          break;
        case METHODID_LIST_LIVE_TEXT:
          serviceImpl.listLiveText((com.zhijiejiaoyu.glory_api.live.ListLiveTextRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListLiveTextResponse>) responseObserver);
          break;
        case METHODID_GET_LIVE_TEXT:
          serviceImpl.getLiveText((com.zhijiejiaoyu.glory_api.live.GetLiveTextRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetLiveTextResponse>) responseObserver);
          break;
        case METHODID_DELETE_LIVE_TEXTS:
          serviceImpl.deleteLiveTexts((com.zhijiejiaoyu.glory_api.live.DeleteLiveTextsRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.DeleteLiveTextsResponse>) responseObserver);
          break;
        case METHODID_TEACHER_LIST_STUDENT_SHORT_VIDEO_TEXT:
          serviceImpl.teacherListStudentShortVideoText((com.zhijiejiaoyu.glory_api.live.TeacherListStudentShortVideoTextRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.TeacherListStudentShortVideoTextResponse>) responseObserver);
          break;
        case METHODID_GET_LIVE_CHART_DATA:
          serviceImpl.getLiveChartData((com.zhijiejiaoyu.glory_api.live.GetLiveChartDataRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetLiveChartDataResponse>) responseObserver);
          break;
        case METHODID_GET_EVALUATE_SELECTOR:
          serviceImpl.getEvaluateSelector((com.zhijiejiaoyu.glory_api.live.GetEvaluateSelectorRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetEvaluateSelectorResponse>) responseObserver);
          break;
        case METHODID_LIST_PERSONAL_EVALUATE:
          serviceImpl.listPersonalEvaluate((com.zhijiejiaoyu.glory_api.live.ListPersonalEvaluateRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListPersonalEvaluateResponse>) responseObserver);
          break;
        case METHODID_GET_EVALUATE_DETAIL:
          serviceImpl.getEvaluateDetail((com.zhijiejiaoyu.glory_api.live.GetEvaluateDetailRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetEvaluateDetailResponse>) responseObserver);
          break;
        case METHODID_SUBMIT_EVALUATE:
          serviceImpl.submitEvaluate((com.zhijiejiaoyu.glory_api.live.SubmitEvaluateRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.SubmitEvaluateResponse>) responseObserver);
          break;
        case METHODID_LIST_UNEVALUATED_ROOM:
          serviceImpl.listUnevaluatedRoom((com.zhijiejiaoyu.glory_api.live.ListUnevaluatedRoomRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListUnevaluatedRoomResponse>) responseObserver);
          break;
        case METHODID_LIST_STUDENT_EVALUATIONS:
          serviceImpl.listStudentEvaluations((com.zhijiejiaoyu.glory_api.live.ListStudentEvalutionsRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListStudentEvalutionsResponse>) responseObserver);
          break;
        case METHODID_IGNORE_EVALUATION:
          serviceImpl.ignoreEvaluation((com.zhijiejiaoyu.glory_api.live.IgnoreLiveEvaluationRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.IgnoreLiveEvaluationResponse>) responseObserver);
          break;
        case METHODID_GET_RANK:
          serviceImpl.getRank((com.zhijiejiaoyu.glory_api.live.GetRankRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetRankResponse>) responseObserver);
          break;
        case METHODID_RECORD_LIVE_CALLBACK:
          serviceImpl.recordLiveCallback((com.zhijiejiaoyu.glory_api.live.RecordLiveCallbackRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.RecordLiveCallbackResponse>) responseObserver);
          break;
        case METHODID_VIDEO_TO_TEXT_CALLBACK:
          serviceImpl.videoToTextCallback((com.zhijiejiaoyu.glory_api.live.VideoToTextCallbackRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.VideoToTextCallbackResponse>) responseObserver);
          break;
        case METHODID_LIVE_STREAM_CALLBACK:
          serviceImpl.liveStreamCallback((com.zhijiejiaoyu.glory_api.live.LiveStreamCallbackRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.LiveStreamCallbackResponse>) responseObserver);
          break;
        case METHODID_REGENERATION_AI_FEEDBACK:
          serviceImpl.regenerationAiFeedback((com.zhijiejiaoyu.glory_api.live.RegenerationAiFeedbackRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.RegenerationAiFeedbackResponse>) responseObserver);
          break;
        case METHODID_SUBMIT_USER_ATTITUDE_FOR_AI_RESULT:
          serviceImpl.submitUserAttitudeForAiResult((com.zhijiejiaoyu.glory_api.live.SubmitUserAttitudeForAIResultRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.SubmitUserAttitudeForAIResultResponse>) responseObserver);
          break;
        case METHODID_PREHEAT_PRODUCT:
          serviceImpl.preheatProduct((com.zhijiejiaoyu.glory_api.live.PreheatRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.PreheatResponse>) responseObserver);
          break;
        case METHODID_PUBLIC_PRICE:
          serviceImpl.publicPrice((com.zhijiejiaoyu.glory_api.live.PublicPriceRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.PublicPriceResponse>) responseObserver);
          break;
        case METHODID_LIST_TENANT_SYSTEM:
          serviceImpl.listTenantSystem((com.zhijiejiaoyu.glory_api.tenant.ListTenantSystemRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.ListTenantSystemResponse>) responseObserver);
          break;
        case METHODID_CREATE_TENANT:
          serviceImpl.createTenant((com.zhijiejiaoyu.glory_api.tenant.CreateTenantRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.CreateTenantResponse>) responseObserver);
          break;
        case METHODID_GET_TENANT:
          serviceImpl.getTenant((com.zhijiejiaoyu.glory_api.tenant.GetTenantRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.GetTenantResponse>) responseObserver);
          break;
        case METHODID_UPDATE_TENANT:
          serviceImpl.updateTenant((com.zhijiejiaoyu.glory_api.tenant.UpdateTenantRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantResponse>) responseObserver);
          break;
        case METHODID_DELETE_TENANT:
          serviceImpl.deleteTenant((com.zhijiejiaoyu.glory_api.tenant.DeleteTenantRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.DeleteTenantResponse>) responseObserver);
          break;
        case METHODID_LIST_TENANT:
          serviceImpl.listTenant((com.zhijiejiaoyu.glory_api.tenant.ListTenantRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.ListTenantResponse>) responseObserver);
          break;
        case METHODID_GET_TENANT_ORG:
          serviceImpl.getTenantOrg((com.zhijiejiaoyu.glory_api.tenant.GetTenantOrgRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.GetTenantOrgResponse>) responseObserver);
          break;
        case METHODID_ENTER_TENANT:
          serviceImpl.enterTenant((com.zhijiejiaoyu.glory_api.tenant.EnterTenantRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.EnterTenantResponse>) responseObserver);
          break;
        case METHODID_EXIT_TENANT:
          serviceImpl.exitTenant((com.zhijiejiaoyu.glory_api.tenant.ExitTenantRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.ExitTenantResponse>) responseObserver);
          break;
        case METHODID_IS_ENTER_TENANT:
          serviceImpl.isEnterTenant((com.zhijiejiaoyu.glory_api.tenant.IsEnterTenantRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.IsTenantResponse>) responseObserver);
          break;
        case METHODID_INIT_TENANT:
          serviceImpl.initTenant((com.zhijiejiaoyu.glory_api.tenant.InitTenantRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.InitTenantResponse>) responseObserver);
          break;
        case METHODID_CREATE_TENANT_COURSE:
          serviceImpl.createTenantCourse((com.zhijiejiaoyu.glory_api.tenant.CreateTenantCourseRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.CreateTenantCourseResponse>) responseObserver);
          break;
        case METHODID_LIST_TENANT_COURSE:
          serviceImpl.listTenantCourse((com.zhijiejiaoyu.glory_api.tenant.ListTenantRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.ListTenantResponse>) responseObserver);
          break;
        case METHODID_CREATE_TENANT_DEPT:
          serviceImpl.createTenantDept((com.zhijiejiaoyu.glory_api.tenant.CreateTenantDeptRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.CreateTenantDeptResponse>) responseObserver);
          break;
        case METHODID_UPDATE_TENANT_DEPT:
          serviceImpl.updateTenantDept((com.zhijiejiaoyu.glory_api.tenant.UpdateTenantDeptRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantDeptResponse>) responseObserver);
          break;
        case METHODID_DELETE_TENANT_DEPT:
          serviceImpl.deleteTenantDept((com.zhijiejiaoyu.glory_api.tenant.DeleteTenantDeptRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.DeleteTenantDeptResponse>) responseObserver);
          break;
        case METHODID_GET_TENANT_DEPT:
          serviceImpl.getTenantDept((com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptResponse>) responseObserver);
          break;
        case METHODID_GET_TENANT_DEPT_TYPE:
          serviceImpl.getTenantDeptType((com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptTypeRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptTypeResponse>) responseObserver);
          break;
        case METHODID_LIST_TENANT_DEPT:
          serviceImpl.listTenantDept((com.zhijiejiaoyu.glory_api.tenant.ListTenantDeptRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.ListTenantDeptResponse>) responseObserver);
          break;
        case METHODID_CREATE_TENANT_USER:
          serviceImpl.createTenantUser((com.zhijiejiaoyu.glory_api.tenant.CreateTenantUserRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.CreateTenantUserResponse>) responseObserver);
          break;
        case METHODID_DELETE_TENANT_USER:
          serviceImpl.deleteTenantUser((com.zhijiejiaoyu.glory_api.tenant.DeleteTenantUserRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.DeleteTenantUserResponse>) responseObserver);
          break;
        case METHODID_UPDATE_TENANT_USER:
          serviceImpl.updateTenantUser((com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserResponse>) responseObserver);
          break;
        case METHODID_GET_TENANT_USER:
          serviceImpl.getTenantUser((com.zhijiejiaoyu.glory_api.tenant.GetTenantUserRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.GetTenantUserResponse>) responseObserver);
          break;
        case METHODID_LIST_TENANT_USER:
          serviceImpl.listTenantUser((com.zhijiejiaoyu.glory_api.tenant.ListTenantUserRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.ListTenantUserResponse>) responseObserver);
          break;
        case METHODID_LIST_TENANT_STUDENT:
          serviceImpl.listTenantStudent((com.zhijiejiaoyu.glory_api.tenant.ListTenantStudentRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.ListTenantStudentResponse>) responseObserver);
          break;
        case METHODID_UPDATE_TENANT_USER_PASSWORD:
          serviceImpl.updateTenantUserPassword((com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserPasswordRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserPasswordResponse>) responseObserver);
          break;
        case METHODID_UPDATE_TENANT_CONFIG:
          serviceImpl.updateTenantConfig((com.zhijiejiaoyu.glory_api.tenant.UpdateTenantConfigRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.UpdateTenantConfigResponse>) responseObserver);
          break;
        case METHODID_LIST_TENANT_CONFIG:
          serviceImpl.listTenantConfig((com.zhijiejiaoyu.glory_api.tenant.ListTenantConfigRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.tenant.ListTenantConfigResponse>) responseObserver);
          break;
        case METHODID_CREATE_SHORT_VIDEO:
          serviceImpl.createShortVideo((com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoResponse>) responseObserver);
          break;
        case METHODID_STAGE_SHORT_VIDEO:
          serviceImpl.stageShortVideo((com.zhijiejiaoyu.glory_api.short_video.StageShortVideoRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.StageShortVideoResponse>) responseObserver);
          break;
        case METHODID_LIST_MY_SHORT_VIDEO:
          serviceImpl.listMyShortVideo((com.zhijiejiaoyu.glory_api.short_video.ListMyShortVideoRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListMyShortVideoResponse>) responseObserver);
          break;
        case METHODID_LIST_MY_STAGE_VIDEO:
          serviceImpl.listMyStageVideo((com.zhijiejiaoyu.glory_api.short_video.ListMyStageVideoRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListMyStageVideoResponse>) responseObserver);
          break;
        case METHODID_LIST_MY_LIKE_VIDEO:
          serviceImpl.listMyLikeVideo((com.zhijiejiaoyu.glory_api.short_video.ListMyLikeVideoRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListMyLikeVideoResponse>) responseObserver);
          break;
        case METHODID_LIST_MY_FAVORITE_VIDEO:
          serviceImpl.listMyFavoriteVideo((com.zhijiejiaoyu.glory_api.short_video.ListMyFavoriteVideoRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListMyFavoriteVideoResponse>) responseObserver);
          break;
        case METHODID_GET_SHORT_VIDEO:
          serviceImpl.getShortVideo((com.zhijiejiaoyu.glory_api.short_video.GetShortVideoRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetShortVideoResponse>) responseObserver);
          break;
        case METHODID_UPDATE_SHORT_VIDEO:
          serviceImpl.updateShortVideo((com.zhijiejiaoyu.glory_api.short_video.UpdateShortVideoRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.UpdateShortVideoResponse>) responseObserver);
          break;
        case METHODID_DELETE_SHORT_VIDEO:
          serviceImpl.deleteShortVideo((com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoResponse>) responseObserver);
          break;
        case METHODID_GET_STAGE_VIDEO:
          serviceImpl.getStageVideo((com.zhijiejiaoyu.glory_api.short_video.GetStageVideoRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetStageVideoResponse>) responseObserver);
          break;
        case METHODID_DELETE_STAGE_VIDEO:
          serviceImpl.deleteStageVideo((com.zhijiejiaoyu.glory_api.short_video.DeleteStageVideoRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.DeleteStageVideoResponse>) responseObserver);
          break;
        case METHODID_UPDATE_STAGE_VIDEO:
          serviceImpl.updateStageVideo((com.zhijiejiaoyu.glory_api.short_video.UpdateStageVideoRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.UpdateStageVideoResponse>) responseObserver);
          break;
        case METHODID_MANAGEMENT_LIST_SHORT_VIDEO:
          serviceImpl.managementListShortVideo((com.zhijiejiaoyu.glory_api.short_video.ManagementListShortVideoRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ManagementListShortVideoResponse>) responseObserver);
          break;
        case METHODID_MANAGEMENT_CENSOR_SHORT_VIDEO:
          serviceImpl.managementCensorShortVideo((com.zhijiejiaoyu.glory_api.short_video.ManagementCensorShortVideoRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ManagementCensorShortVideoResponse>) responseObserver);
          break;
        case METHODID_MANAGEMENT_DELETE_SHORT_VIDEO:
          serviceImpl.managementDeleteShortVideo((com.zhijiejiaoyu.glory_api.short_video.ManagementDeleteShortVideoRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ManagementDeleteShortVideoResponse>) responseObserver);
          break;
        case METHODID_LIST_SHORT_VIDEO:
          serviceImpl.listShortVideo((com.zhijiejiaoyu.glory_api.short_video.ListShortVideoRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListShortVideoResponse>) responseObserver);
          break;
        case METHODID_LIKE_SHORT_VIDEO:
          serviceImpl.likeShortVideo((com.zhijiejiaoyu.glory_api.short_video.LikeShortVideoRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.LikeShortVideoResponse>) responseObserver);
          break;
        case METHODID_FAVORITE_SHORT_VIDEO:
          serviceImpl.favoriteShortVideo((com.zhijiejiaoyu.glory_api.short_video.FavoriteShortVideoRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.FavoriteShortVideoResponse>) responseObserver);
          break;
        case METHODID_CREATE_SHORT_VIDEO_COMMENT:
          serviceImpl.createShortVideoComment((com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoCommentRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoCommentResponse>) responseObserver);
          break;
        case METHODID_DELETE_SHORT_VIDEO_COMMENT:
          serviceImpl.deleteShortVideoComment((com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoCommentRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoCommentResponse>) responseObserver);
          break;
        case METHODID_LIST_SHORT_VIDEO_COMMENT:
          serviceImpl.listShortVideoComment((com.zhijiejiaoyu.glory_api.short_video.ListShortVideoCommentRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListShortVideoCommentResponse>) responseObserver);
          break;
        case METHODID_TEACHER_LIST_STUDENT_SHORT_VIDEO:
          serviceImpl.teacherListStudentShortVideo((com.zhijiejiaoyu.glory_api.short_video.TeacherListStudentShortVideoRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.TeacherListStudentShortVideoResponse>) responseObserver);
          break;
        case METHODID_CREATE_COUPON:
          serviceImpl.createCoupon((com.zhijiejiaoyu.glory_api.shop.CreateCouponRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CreateCouponResponse>) responseObserver);
          break;
        case METHODID_LIST_COUPON:
          serviceImpl.listCoupon((com.zhijiejiaoyu.glory_api.shop.ListCouponRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListCouponResponse>) responseObserver);
          break;
        case METHODID_COUPON_DETAIL:
          serviceImpl.couponDetail((com.zhijiejiaoyu.glory_api.shop.GetCouponDetailRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetCouponDetailResponse>) responseObserver);
          break;
        case METHODID_UPDATE_COUPON:
          serviceImpl.updateCoupon((com.zhijiejiaoyu.glory_api.shop.UpdateCouponRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateCouponResponse>) responseObserver);
          break;
        case METHODID_DELETE_COUPON:
          serviceImpl.deleteCoupon((com.zhijiejiaoyu.glory_api.shop.DeleteCouponRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteCouponResponse>) responseObserver);
          break;
        case METHODID_ABOLISH_COUPON:
          serviceImpl.abolishCoupon((com.zhijiejiaoyu.glory_api.shop.AbolishCouponRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.AbolishCouponResponse>) responseObserver);
          break;
        case METHODID_UPDATE_COUPON_DISTRIBUTION_STATUS:
          serviceImpl.updateCouponDistributionStatus((com.zhijiejiaoyu.glory_api.shop.UpdateCouponDistributionStatusRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateCouponDistributionStatusResponse>) responseObserver);
          break;
        case METHODID_CLAIM_COUPON:
          serviceImpl.claimCoupon((com.zhijiejiaoyu.glory_api.shop.ClaimCouponRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ClaimCouponResponse>) responseObserver);
          break;
        case METHODID_LIST_MY_COUPON:
          serviceImpl.listMyCoupon((com.zhijiejiaoyu.glory_api.shop.ListMyCouponRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListMyCouponResponse>) responseObserver);
          break;
        case METHODID_CREATE_ACTIVITY:
          serviceImpl.createActivity((com.zhijiejiaoyu.glory_api.shop.CreateActivityRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.CreateActivityResponse>) responseObserver);
          break;
        case METHODID_LIST_ACTIVITY:
          serviceImpl.listActivity((com.zhijiejiaoyu.glory_api.shop.ListActivityRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.ListActivityResponse>) responseObserver);
          break;
        case METHODID_ACTIVITY_DETAIL:
          serviceImpl.activityDetail((com.zhijiejiaoyu.glory_api.shop.GetActivityDetailRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.GetActivityDetailResponse>) responseObserver);
          break;
        case METHODID_UPDATE_ACTIVITY:
          serviceImpl.updateActivity((com.zhijiejiaoyu.glory_api.shop.UpdateActivityRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.UpdateActivityResponse>) responseObserver);
          break;
        case METHODID_DELETE_ACTIVITY:
          serviceImpl.deleteActivity((com.zhijiejiaoyu.glory_api.shop.DeleteActivityRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DeleteActivityResponse>) responseObserver);
          break;
        case METHODID_DISABLE_ACTIVITY:
          serviceImpl.disableActivity((com.zhijiejiaoyu.glory_api.shop.DisableActivityRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.shop.DisableActivityResponse>) responseObserver);
          break;
        case METHODID_GET_COUPON_AND_INTRODUCING_PRODUCT:
          serviceImpl.getCouponAndIntroducingProduct((com.zhijiejiaoyu.glory_api.live.GetCouponAndIntroducingProductRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetCouponAndIntroducingProductResponse>) responseObserver);
          break;
        case METHODID_CREATE_COURSE_MATERIAL_BOX:
          serviceImpl.createCourseMaterialBox((com.zhijiejiaoyu.glory_api.course.CreateCourseMaterialBoxRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateCourseMaterialBoxResponse>) responseObserver);
          break;
        case METHODID_UPDATE_COURSE_MATERIAL_BOX:
          serviceImpl.updateCourseMaterialBox((com.zhijiejiaoyu.glory_api.course.UpdateCourseMaterialBoxRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateCourseMaterialBoxResponse>) responseObserver);
          break;
        case METHODID_LIST_COURSE_MATERIAL_BOX:
          serviceImpl.listCourseMaterialBox((com.zhijiejiaoyu.glory_api.course.ListCourseMaterialBoxRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListCourseMaterialBoxResponse>) responseObserver);
          break;
        case METHODID_DELETE_COURSE_MATERIAL_BOX:
          serviceImpl.deleteCourseMaterialBox((com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialBoxRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialBoxResponse>) responseObserver);
          break;
        case METHODID_UPLOAD_COURSE_MATERIAL:
          serviceImpl.uploadCourseMaterial((com.zhijiejiaoyu.glory_api.course.UploadCourseMaterialRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UploadCourseMaterialResponse>) responseObserver);
          break;
        case METHODID_LIST_COURSE_MATERIAL:
          serviceImpl.listCourseMaterial((com.zhijiejiaoyu.glory_api.course.ListCourseMaterialRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListCourseMaterialResponse>) responseObserver);
          break;
        case METHODID_DELETE_COURSE_MATERIAL:
          serviceImpl.deleteCourseMaterial((com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialResponse>) responseObserver);
          break;
        case METHODID_GET_COURSE_TYPE_TREE:
          serviceImpl.getCourseTypeTree((com.zhijiejiaoyu.glory_api.course.GetCourseTypeTreeRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetCourseTypeTreeResponse>) responseObserver);
          break;
        case METHODID_GET_COURSE_TYPE_LIST:
          serviceImpl.getCourseTypeList((com.zhijiejiaoyu.glory_api.course.GetCourseTypeListRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetCourseTypeListResponse>) responseObserver);
          break;
        case METHODID_GET_COURSE_MODULE_CODE:
          serviceImpl.getCourseModuleCode((com.zhijiejiaoyu.glory_api.course.GetCourseModuleCodeRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetCourseModuleCodeResponse>) responseObserver);
          break;
        case METHODID_GET_COURSE_CHAPTER_CODE:
          serviceImpl.getCourseChapterCode((com.zhijiejiaoyu.glory_api.course.GetCourseChapterCodeRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetCourseChapterCodeResponse>) responseObserver);
          break;
        case METHODID_CREATE_COURSE_MODULE:
          serviceImpl.createCourseModule((com.zhijiejiaoyu.glory_api.course.CreateCourseModuleRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateCourseModuleResponse>) responseObserver);
          break;
        case METHODID_GET_COURSE_MODULE:
          serviceImpl.getCourseModule((com.zhijiejiaoyu.glory_api.course.GetCourseModuleRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetCourseModuleResponse>) responseObserver);
          break;
        case METHODID_UPDATE_COURSE_MODULE:
          serviceImpl.updateCourseModule((com.zhijiejiaoyu.glory_api.course.UpdateCourseModuleRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateCourseModuleResponse>) responseObserver);
          break;
        case METHODID_DELETE_COURSE_MODULE:
          serviceImpl.deleteCourseModule((com.zhijiejiaoyu.glory_api.course.DeleteCourseModuleRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteCourseModuleResponse>) responseObserver);
          break;
        case METHODID_LIST_COURSE_MODULE:
          serviceImpl.listCourseModule((com.zhijiejiaoyu.glory_api.course.ListCourseModuleRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListCourseModuleResponse>) responseObserver);
          break;
        case METHODID_LIST_LATEST_COURSE:
          serviceImpl.listLatestCourse((com.zhijiejiaoyu.glory_api.course.ListLatestCourseRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListLatestCourseResponse>) responseObserver);
          break;
        case METHODID_LIST_HOTTEST_COURSE:
          serviceImpl.listHottestCourse((com.zhijiejiaoyu.glory_api.course.ListHottestCourseRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListHottestCourseResponse>) responseObserver);
          break;
        case METHODID_CREATE_CM_COURSE:
          serviceImpl.createCmCourse((com.zhijiejiaoyu.glory_api.course.CreateCmCourseRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateCmCourseResponse>) responseObserver);
          break;
        case METHODID_PREVIEW_CM_COURSE:
          serviceImpl.previewCmCourse((com.zhijiejiaoyu.glory_api.course.PreviewCmCourseRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.PreviewCmCourseResponse>) responseObserver);
          break;
        case METHODID_CREATE_NM_COURSE_RESOURCE:
          serviceImpl.createNmCourseResource((com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResourceRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResourceResponse>) responseObserver);
          break;
        case METHODID_CREATE_NM_COURSE_CHAPTER:
          serviceImpl.createNmCourseChapter((com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResponse>) responseObserver);
          break;
        case METHODID_CREATE_NM_COURSE:
          serviceImpl.createNmCourse((com.zhijiejiaoyu.glory_api.course.CreateNmCourseRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateNmCourseResponse>) responseObserver);
          break;
        case METHODID_UPDATE_NM_COURSE:
          serviceImpl.updateNmCourse((com.zhijiejiaoyu.glory_api.course.UpdateNmCourseRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateNmCourseResponse>) responseObserver);
          break;
        case METHODID_LIST_NM_COURSE:
          serviceImpl.listNmCourse((com.zhijiejiaoyu.glory_api.course.ListNmCourseRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListNmCourseResponse>) responseObserver);
          break;
        case METHODID_NM_COURSE_DETAIL:
          serviceImpl.nmCourseDetail((com.zhijiejiaoyu.glory_api.course.NmCourseDetailRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.NmCourseDetailResponse>) responseObserver);
          break;
        case METHODID_DELETE_NM_COURSE:
          serviceImpl.deleteNmCourse((com.zhijiejiaoyu.glory_api.course.DeleteNmCourseRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteNmCourseResponse>) responseObserver);
          break;
        case METHODID_CREATE_COURSE:
          serviceImpl.createCourse((com.zhijiejiaoyu.glory_api.course.CreateCourseRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateCourseResponse>) responseObserver);
          break;
        case METHODID_GET_COURSE:
          serviceImpl.getCourse((com.zhijiejiaoyu.glory_api.course.GetCourseRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetCourseResponse>) responseObserver);
          break;
        case METHODID_UPDATE_COURSE:
          serviceImpl.updateCourse((com.zhijiejiaoyu.glory_api.course.UpdateCourseRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateCourseResponse>) responseObserver);
          break;
        case METHODID_DELETE_COURSE:
          serviceImpl.deleteCourse((com.zhijiejiaoyu.glory_api.course.DeleteCourseRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteCourseResponse>) responseObserver);
          break;
        case METHODID_LIST_COURSE:
          serviceImpl.listCourse((com.zhijiejiaoyu.glory_api.course.ListCourseRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListCourseResponse>) responseObserver);
          break;
        case METHODID_CREATE_KNOWLEDGE_GRAPH:
          serviceImpl.createKnowledgeGraph((com.zhijiejiaoyu.glory_api.course.CreateKnowledgeGraphRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateKnowledgeGraphResponse>) responseObserver);
          break;
        case METHODID_GET_KNOWLEDGE_GRAPH:
          serviceImpl.getKnowledgeGraph((com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphResponse>) responseObserver);
          break;
        case METHODID_GET_KNOWLEDGE_GRAPH_NODE:
          serviceImpl.getKnowledgeGraphNode((com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphNodeRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphNodeResponse>) responseObserver);
          break;
        case METHODID_GET_COURSE_IDS:
          serviceImpl.getCourseIds((com.zhijiejiaoyu.glory_api.course.GetCourseIdsRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetCourseIdsResponse>) responseObserver);
          break;
        case METHODID_ENROLL_COURSE:
          serviceImpl.enrollCourse((com.zhijiejiaoyu.glory_api.course.EnrollCourseRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.EnrollCourseResponse>) responseObserver);
          break;
        case METHODID_DELETE_MY_COURSE:
          serviceImpl.deleteMyCourse((com.zhijiejiaoyu.glory_api.course.DeleteMyCourseRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteMyCourseResponse>) responseObserver);
          break;
        case METHODID_UPDATE_COURSE_PROGRESS:
          serviceImpl.updateCourseProgress((com.zhijiejiaoyu.glory_api.course.UpdateCourseProgressRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateCourseProgressResponse>) responseObserver);
          break;
        case METHODID_LIST_MY_COURSE:
          serviceImpl.listMyCourse((com.zhijiejiaoyu.glory_api.course.ListMyCourseRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListMyCourseResponse>) responseObserver);
          break;
        case METHODID_LIST_TEACHING_PLAN:
          serviceImpl.listTeachingPlan((com.zhijiejiaoyu.glory_api.course.ListTeachingPlanRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListTeachingPlanResponse>) responseObserver);
          break;
        case METHODID_CREATE_TEACHING_PLAN:
          serviceImpl.createTeachingPlan((com.zhijiejiaoyu.glory_api.course.CreateTeachingPlanRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateTeachingPlanResponse>) responseObserver);
          break;
        case METHODID_UPDATE_TEACHING_PLAN:
          serviceImpl.updateTeachingPlan((com.zhijiejiaoyu.glory_api.course.UpdateTeachingPlanRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateTeachingPlanResponse>) responseObserver);
          break;
        case METHODID_DELETE_TEACHING_PLAN:
          serviceImpl.deleteTeachingPlan((com.zhijiejiaoyu.glory_api.course.DeleteTeachingPlanRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteTeachingPlanResponse>) responseObserver);
          break;
        case METHODID_UPDATE_TEACHING_COURSE_PROGRESS:
          serviceImpl.updateTeachingCourseProgress((com.zhijiejiaoyu.glory_api.course.UpdateTeachingCourseProgressRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateTeachingCourseProgressResponse>) responseObserver);
          break;
        case METHODID_CREATE_EDU_SCHEME:
          serviceImpl.createEduScheme((com.zhijiejiaoyu.glory_api.course.CreateEduSchemeRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateEduSchemeResponse>) responseObserver);
          break;
        case METHODID_UPDATE_EDU_SCHEME:
          serviceImpl.updateEduScheme((com.zhijiejiaoyu.glory_api.course.UpdateEduSchemeRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateEduSchemeResponse>) responseObserver);
          break;
        case METHODID_LIST_EDU_SCHEME:
          serviceImpl.listEduScheme((com.zhijiejiaoyu.glory_api.course.ListEduSchemeRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListEduSchemeResponse>) responseObserver);
          break;
        case METHODID_EDU_SCHEME_DETAIL:
          serviceImpl.eduSchemeDetail((com.zhijiejiaoyu.glory_api.course.EduSchemeDetailRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.EduSchemeDetailResponse>) responseObserver);
          break;
        case METHODID_DELETE_EDU_SCHEME:
          serviceImpl.deleteEduScheme((com.zhijiejiaoyu.glory_api.course.DeleteEduSchemeRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteEduSchemeResponse>) responseObserver);
          break;
        case METHODID_DISTRIBUTE_EDU_SCHEME:
          serviceImpl.distributeEduScheme((com.zhijiejiaoyu.glory_api.course.DistributeEduSchemeRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DistributeEduSchemeResponse>) responseObserver);
          break;
        case METHODID_GET_EDU_SCHEME_LIKE_COURSE:
          serviceImpl.getEduSchemeLikeCourse((com.zhijiejiaoyu.glory_api.course.GetEduSchemeLikeCourseRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetEduSchemeLikeCourseResponse>) responseObserver);
          break;
        case METHODID_GET_ANDROID_QRCODE:
          serviceImpl.getAndroidQRcode((com.zhijiejiaoyu.glory_api.course.GetAndroidQRCodeRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetAndroidQRCodeResponse>) responseObserver);
          break;
        case METHODID_CREATE_JOB:
          serviceImpl.createJob((com.zhijiejiaoyu.glory_api.course.CreateJobRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateJobResponse>) responseObserver);
          break;
        case METHODID_UPDATE_JOB:
          serviceImpl.updateJob((com.zhijiejiaoyu.glory_api.course.UpdateJobRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateJobResponse>) responseObserver);
          break;
        case METHODID_DELETE_JOB:
          serviceImpl.deleteJob((com.zhijiejiaoyu.glory_api.course.DeleteJobRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteJobResponse>) responseObserver);
          break;
        case METHODID_LIST_JOB:
          serviceImpl.listJob((com.zhijiejiaoyu.glory_api.course.ListJobRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListJobResponse>) responseObserver);
          break;
        case METHODID_GET_SCHOO_LIVE_CHART:
          serviceImpl.getSchooLiveChart((com.zhijiejiaoyu.glory_api.traffic.GetSchoolLiveTrafficChartRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.traffic.GetSchoolLiveTrafficChartResponse>) responseObserver);
          break;
        case METHODID_LIST_SCHOO_LIVE_TRAFFIC:
          serviceImpl.listSchooLiveTraffic((com.zhijiejiaoyu.glory_api.traffic.ListSchoolLiveTrafficRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.traffic.ListSchoolLiveTrafficResponse>) responseObserver);
          break;
        case METHODID_GET_LIVE_ALL_TRAFFIC:
          serviceImpl.getLiveAllTraffic((com.zhijiejiaoyu.glory_api.traffic.GetAllLiveTrafficRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.traffic.GetAllLiveTrafficResponse>) responseObserver);
          break;
        case METHODID_GET_SCHOO_LIVE_TRAFFIC:
          serviceImpl.getSchooLiveTraffic((com.zhijiejiaoyu.glory_api.traffic.GetSchooLiveTrafficRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.traffic.GetSchooLiveTrafficResponse>) responseObserver);
          break;
        case METHODID_LIST_TENANT_TRAFFIC_CONFIG:
          serviceImpl.listTenantTrafficConfig((com.zhijiejiaoyu.glory_api.traffic.ListTenantLiveTrafficConfigRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.traffic.ListTenantLiveTrafficConfigResponse>) responseObserver);
          break;
        case METHODID_UPDATE_TENANT_TRAFFIC_CONFIG:
          serviceImpl.updateTenantTrafficConfig((com.zhijiejiaoyu.glory_api.traffic.UpdateTenantLiveTrafficConfigRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.traffic.UpdateTenantLiveTrafficConfigResponse>) responseObserver);
          break;
        case METHODID_LIST_TRAFFIC_WARNING:
          serviceImpl.listTrafficWarning((com.zhijiejiaoyu.glory_api.traffic.ListTrafficWarningRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.traffic.ListTrafficWarningResponse>) responseObserver);
          break;
        case METHODID_DELETE_TRAFFIC_WARNING:
          serviceImpl.deleteTrafficWarning((com.zhijiejiaoyu.glory_api.traffic.DeleteTrafficWarningRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.traffic.DeleteTrafficWarningResponse>) responseObserver);
          break;
        case METHODID_CREATE_LIVE_CONTROL:
          serviceImpl.createLiveControl((com.zhijiejiaoyu.glory_api.live.CreateLiveControlRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateLiveControlResponse>) responseObserver);
          break;
        case METHODID_UPDATE_LIVE_CONTROL:
          serviceImpl.updateLiveControl((com.zhijiejiaoyu.glory_api.live.UpdateLiveControlRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UpdateLiveControlResponse>) responseObserver);
          break;
        case METHODID_LIST_LIVE_CONTROL:
          serviceImpl.listLiveControl((com.zhijiejiaoyu.glory_api.live.ListLiveControlRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListLiveControlResponse>) responseObserver);
          break;
        case METHODID_DELETE_LIVE_CONTROL:
          serviceImpl.deleteLiveControl((com.zhijiejiaoyu.glory_api.live.DeleteLiveControlRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.DeleteLiveControlResponse>) responseObserver);
          break;
        case METHODID_CREATE_QUICK_EVALUATION_STANDARD:
          serviceImpl.createQuickEvaluationStandard((com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationResponse>) responseObserver);
          break;
        case METHODID_UPDATE_QUICK_EVALUATION_STANDARD:
          serviceImpl.updateQuickEvaluationStandard((com.zhijiejiaoyu.glory_api.live.UpdateQuickEvaluationRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.UpdateQuickEvaluationResponse>) responseObserver);
          break;
        case METHODID_DELETE_QUICK_EVALUATION_STANDARD:
          serviceImpl.deleteQuickEvaluationStandard((com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationResponse>) responseObserver);
          break;
        case METHODID_LIST_QUICK_EVALUATION_STANDARD:
          serviceImpl.listQuickEvaluationStandard((com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationResponse>) responseObserver);
          break;
        case METHODID_GET_LIVE_REPLAY:
          serviceImpl.getLiveReplay((com.zhijiejiaoyu.glory_api.live.GetLiveReplayRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetLiveReplayResponse>) responseObserver);
          break;
        case METHODID_CREATE_QUICK_EVALUATION_REPORT:
          serviceImpl.createQuickEvaluationReport((com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationReportRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationReportResponse>) responseObserver);
          break;
        case METHODID_LIST_QUICK_EVALUATION_REPORT:
          serviceImpl.listQuickEvaluationReport((com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationReportRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationReportResponse>) responseObserver);
          break;
        case METHODID_GET_QUICK_EVALUATION_REPORT:
          serviceImpl.getQuickEvaluationReport((com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationReportRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationReportResponse>) responseObserver);
          break;
        case METHODID_DELETE_QUICK_EVALUATION_REPORT:
          serviceImpl.deleteQuickEvaluationReport((com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationReportRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationReportResponse>) responseObserver);
          break;
        case METHODID_GET_QUICK_EVALUATION_DETAIL:
          serviceImpl.getQuickEvaluationDetail((com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationDetailRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationDetailResponse>) responseObserver);
          break;
        case METHODID_CREATE_VERSION_LOG:
          serviceImpl.createVersionLog((com.zhijiejiaoyu.glory_api.course.CreateVersionLogRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.CreateVersionLogResponse>) responseObserver);
          break;
        case METHODID_UPDATE_VERSION_LOG:
          serviceImpl.updateVersionLog((com.zhijiejiaoyu.glory_api.course.UpdateVersionLogRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.UpdateVersionLogResponse>) responseObserver);
          break;
        case METHODID_LIST_VERSION_LOG:
          serviceImpl.listVersionLog((com.zhijiejiaoyu.glory_api.course.ListVersionLogRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.ListVersionLogResponse>) responseObserver);
          break;
        case METHODID_DELETE_VERSION_LOG:
          serviceImpl.deleteVersionLog((com.zhijiejiaoyu.glory_api.course.DeleteVersionLogRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.DeleteVersionLogResponse>) responseObserver);
          break;
        case METHODID_GET_LATEST_VERSION:
          serviceImpl.getLatestVersion((com.zhijiejiaoyu.glory_api.course.GetLatestVersionRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.course.GetLatestVersionResponse>) responseObserver);
          break;
        case METHODID_GET_TASK_CONFIG:
          serviceImpl.getTaskConfig((com.zhijiejiaoyu.glory_api.task.GetTaskConfigRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.GetTaskConfigResponse>) responseObserver);
          break;
        case METHODID_CREATE_SYSTEM_TASK:
          serviceImpl.createSystemTask((com.zhijiejiaoyu.glory_api.task.CreateSystemTaskRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CreateSystemTaskResponse>) responseObserver);
          break;
        case METHODID_LIST_SYSTEM_TASK:
          serviceImpl.listSystemTask((com.zhijiejiaoyu.glory_api.task.ListSystemTaskRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.ListSystemTaskResponse>) responseObserver);
          break;
        case METHODID_GET_SYSTEM_TASK:
          serviceImpl.getSystemTask((com.zhijiejiaoyu.glory_api.task.GetSystemTaskRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.GetSystemTaskResponse>) responseObserver);
          break;
        case METHODID_UPDATE_SYSTEM_TASK:
          serviceImpl.updateSystemTask((com.zhijiejiaoyu.glory_api.task.UpdateSystemTaskRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.UpdateSystemTaskResponse>) responseObserver);
          break;
        case METHODID_DELETE_SYSTEM_TASK:
          serviceImpl.deleteSystemTask((com.zhijiejiaoyu.glory_api.task.DeleteSystemTaskRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.DeleteSystemTaskResponse>) responseObserver);
          break;
        case METHODID_CREATE_TEACHER_TASK_TEMPLATE:
          serviceImpl.createTeacherTaskTemplate((com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskTemplateRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskTemplateResponse>) responseObserver);
          break;
        case METHODID_UPDATE_TEACHER_TASK_TEMPLATE:
          serviceImpl.updateTeacherTaskTemplate((com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskTemplateRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskTemplateResponse>) responseObserver);
          break;
        case METHODID_LIST_TEACHER_TASK_TEMPLATE:
          serviceImpl.listTeacherTaskTemplate((com.zhijiejiaoyu.glory_api.task.ListTeacherTaskTemplateRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.ListTeacherTaskTemplateResponse>) responseObserver);
          break;
        case METHODID_GET_TEACHER_TASK_TEMPLATE:
          serviceImpl.getTeacherTaskTemplate((com.zhijiejiaoyu.glory_api.task.GetTeacherTaskTemplateRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.GetTeacherTaskTemplateResponse>) responseObserver);
          break;
        case METHODID_DELETE_TEACHER_TASK_TEMPLATE:
          serviceImpl.deleteTeacherTaskTemplate((com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskTemplateRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskTemplateResponse>) responseObserver);
          break;
        case METHODID_CREATE_TEACHER_TASK:
          serviceImpl.createTeacherTask((com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskResponse>) responseObserver);
          break;
        case METHODID_UPDATE_TEACHER_TASK:
          serviceImpl.updateTeacherTask((com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskResponse>) responseObserver);
          break;
        case METHODID_LIST_TEACHER_TASK:
          serviceImpl.listTeacherTask((com.zhijiejiaoyu.glory_api.task.ListTeacherTaskRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.ListTeacherTaskResponse>) responseObserver);
          break;
        case METHODID_GET_TEACHER_TASK:
          serviceImpl.getTeacherTask((com.zhijiejiaoyu.glory_api.task.GetTeacherTaskRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.GetTeacherTaskResponse>) responseObserver);
          break;
        case METHODID_GET_TEACHER_TASK_PROGRESS:
          serviceImpl.getTeacherTaskProgress((com.zhijiejiaoyu.glory_api.task.GetTeacherTaskProgressRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.GetTeacherTaskProgressResponse>) responseObserver);
          break;
        case METHODID_DELETE_TEACHER_TASK:
          serviceImpl.deleteTeacherTask((com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskResponse>) responseObserver);
          break;
        case METHODID_TEACHER_TASK_STATS:
          serviceImpl.teacherTaskStats((com.zhijiejiaoyu.glory_api.task.TeacherTaskStatsRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.TeacherTaskStatsResponse>) responseObserver);
          break;
        case METHODID_TEACHER_TASK_STUDENTS:
          serviceImpl.teacherTaskStudents((com.zhijiejiaoyu.glory_api.task.ListTaskStudentRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.ListTaskStudentResponse>) responseObserver);
          break;
        case METHODID_COUNT_CLASS_SUBMIT:
          serviceImpl.countClassSubmit((com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountClassSubmitResponse>) responseObserver);
          break;
        case METHODID_COUNT_CLASS_SUBMIT_LIST:
          serviceImpl.countClassSubmitList((com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountClassSubmitListResponse>) responseObserver);
          break;
        case METHODID_COUNT_POSITIVE_LIST:
          serviceImpl.countPositiveList((com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountPositiveListResponse>) responseObserver);
          break;
        case METHODID_COUNT_POTENTIAL_LIST:
          serviceImpl.countPotentialList((com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountPotentialListResponse>) responseObserver);
          break;
        case METHODID_COUNT_SUBMIT_LIST:
          serviceImpl.countSubmitList((com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountSubmitListResponse>) responseObserver);
          break;
        case METHODID_COUNT_CLASS_PASS:
          serviceImpl.countClassPass((com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountClassPassResponse>) responseObserver);
          break;
        case METHODID_COUNT_CLASS_PASS_LIST:
          serviceImpl.countClassPassList((com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountClassPassListResponse>) responseObserver);
          break;
        case METHODID_COUNT_SUPER_STUDENT_LIST:
          serviceImpl.countSuperStudentList((com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountSuperStudentListResponse>) responseObserver);
          break;
        case METHODID_COUNT_LAGGING_STUDENT_LIST:
          serviceImpl.countLaggingStudentList((com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountLaggingStudentListResponse>) responseObserver);
          break;
        case METHODID_COUNT_PASS_LIST:
          serviceImpl.countPassList((com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountPassListResponse>) responseObserver);
          break;
        case METHODID_COUNT_HISTORY_TASK:
          serviceImpl.countHistoryTask((com.zhijiejiaoyu.glory_api.task.CountHistoryTaskRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.CountHistoryTaskResponse>) responseObserver);
          break;
        case METHODID_LIST_STUDENT_TASK:
          serviceImpl.listStudentTask((com.zhijiejiaoyu.glory_api.task.ListStudentTaskRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.ListStudentTaskResponse>) responseObserver);
          break;
        case METHODID_SUBMIT_STUDENT_TASK:
          serviceImpl.submitStudentTask((com.zhijiejiaoyu.glory_api.task.SubmitStudentTaskRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.SubmitStudentTaskResponse>) responseObserver);
          break;
        case METHODID_GET_STUDENT_TASK:
          serviceImpl.getStudentTask((com.zhijiejiaoyu.glory_api.task.GetStudentTaskRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.GetStudentTaskResponse>) responseObserver);
          break;
        case METHODID_TEACHER_LIST_STUDENT_TASK:
          serviceImpl.teacherListStudentTask((com.zhijiejiaoyu.glory_api.task.TeacherListStudentTaskRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.TeacherListStudentTaskResponse>) responseObserver);
          break;
        case METHODID_TEACHER_EVALUATE_STUDENT_TASK:
          serviceImpl.teacherEvaluateStudentTask((com.zhijiejiaoyu.glory_api.task.TeacherEvaluateStudentTaskRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.TeacherEvaluateStudentTaskResponse>) responseObserver);
          break;
        case METHODID_STUDENT_TASK_STATS:
          serviceImpl.studentTaskStats((com.zhijiejiaoyu.glory_api.task.StudentTaskStatsRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.StudentTaskStatsResponse>) responseObserver);
          break;
        case METHODID_STUDENT_TASK_EVALUATE_STATS:
          serviceImpl.studentTaskEvaluateStats((com.zhijiejiaoyu.glory_api.task.StudentTaskEvaluateStatsRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.StudentTaskEvaluateStatsResponse>) responseObserver);
          break;
        case METHODID_START_STUDENT_TASK_TIME:
          serviceImpl.startStudentTaskTime((com.zhijiejiaoyu.glory_api.task.StartStudentTaskTimeRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.StartStudentTaskTimeResponse>) responseObserver);
          break;
        case METHODID_DOWNLOAD_TEACHER_TASK:
          serviceImpl.downloadTeacherTask((com.zhijiejiaoyu.glory_api.task.DownloadTeacherTaskRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.task.DownloadTeacherTaskResponse>) responseObserver);
          break;
        case METHODID_LIST_NOTIFICATION:
          serviceImpl.listNotification((com.zhijiejiaoyu.glory_api.notification.ListNotificationRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.notification.ListNotificationResponse>) responseObserver);
          break;
        case METHODID_COUNT_NOTIFICATION:
          serviceImpl.countNotification((com.zhijiejiaoyu.glory_api.notification.CountNotificationRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.notification.CountNotificationResponse>) responseObserver);
          break;
        case METHODID_READ_NOTIFICATION:
          serviceImpl.readNotification((com.zhijiejiaoyu.glory_api.notification.ReadNotificationRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.notification.ReadNotificationResponse>) responseObserver);
          break;
        case METHODID_TEST_NOTIFICATION:
          serviceImpl.testNotification((com.zhijiejiaoyu.glory_api.notification.TestNotificationRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.notification.TestNotificationResponse>) responseObserver);
          break;
        case METHODID_DELETE_NOTIFICATION:
          serviceImpl.deleteNotification((com.zhijiejiaoyu.glory_api.notification.DeleteNotificationRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.notification.DeleteNotificationResponse>) responseObserver);
          break;
        case METHODID_LIST_USER_MAJOR_AND_CLASS:
          serviceImpl.listUserMajorAndClass((com.zhijiejiaoyu.glory_api.live.ListUserMajorAndClasRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListUserMajorAndClasResponse>) responseObserver);
          break;
        case METHODID_GET_AGGREGATION_LIVE_URL:
          serviceImpl.getAggregationLiveUrl((com.zhijiejiaoyu.glory_api.live.GetAggregationLiveUrlRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetAggregationLiveUrlResponse>) responseObserver);
          break;
        case METHODID_GET_LIVE_BOARD_DATA:
          serviceImpl.getLiveBoardData((com.zhijiejiaoyu.glory_api.live.GetLiveBoardDataRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetLiveBoardDataResponse>) responseObserver);
          break;
        case METHODID_GET_LIVE_BOARD_COMMENTS:
          serviceImpl.getLiveBoardComments((com.zhijiejiaoyu.glory_api.live.GetLiveBoardCommentsRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.GetLiveBoardCommentsResponse>) responseObserver);
          break;
        case METHODID_LIST_BOARD_LIVING_USER:
          serviceImpl.listBoardLivingUser((com.zhijiejiaoyu.glory_api.live.ListLivingUserRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.ListLivingUserResponse>) responseObserver);
          break;
        case METHODID_CLOSE_CASTER:
          serviceImpl.closeCaster((com.zhijiejiaoyu.glory_api.live.CloseCasterRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.live.CloseCasterResponse>) responseObserver);
          break;
        case METHODID_CREATE_ARTICLE_CREATION:
          serviceImpl.createArticleCreation((com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationResponse>) responseObserver);
          break;
        case METHODID_LIST_MY_ARTICLE_CREATION:
          serviceImpl.listMyArticleCreation((com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationResponse>) responseObserver);
          break;
        case METHODID_CREATE_ARTICLE_CREATION_DRAFT:
          serviceImpl.createArticleCreationDraft((com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationDraftRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationDraftResponse>) responseObserver);
          break;
        case METHODID_LIST_MY_DRAFT_ARTICLE_CREATION:
          serviceImpl.listMyDraftArticleCreation((com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationDraftRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationDraftResponse>) responseObserver);
          break;
        case METHODID_DRAFT_ARTICLE_CREATION_DETAIL:
          serviceImpl.draftArticleCreationDetail((com.zhijiejiaoyu.glory_api.short_video.ArticleCreationDraftDetailRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ArticleCreationDraftDetailResponse>) responseObserver);
          break;
        case METHODID_DELETE_DRAFT_ARTICLE_CREATION:
          serviceImpl.deleteDraftArticleCreation((com.zhijiejiaoyu.glory_api.short_video.DeleteArticleCreationDraftRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.DeleteArticleCreationDraftResponse>) responseObserver);
          break;
        case METHODID_ARTICLE_CREATION_STATISTICS:
          serviceImpl.articleCreationStatistics((com.zhijiejiaoyu.glory_api.short_video.ArticleCreationStatisticsRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ArticleCreationStatisticsResponse>) responseObserver);
          break;
        case METHODID_GET_EXAMPLE_ARTICLE:
          serviceImpl.getExampleArticle((com.zhijiejiaoyu.glory_api.short_video.GetExampleArticleRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetExampleArticleResponse>) responseObserver);
          break;
        case METHODID_GET_EVALUATION_STANDARD:
          serviceImpl.getEvaluationStandard((com.zhijiejiaoyu.glory_api.short_video.GetEvaluationStandardRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetEvaluationStandardResponse>) responseObserver);
          break;
        case METHODID_CREATE_EVALUATION_CONFIG:
          serviceImpl.createEvaluationConfig((com.zhijiejiaoyu.glory_api.short_video.CreateEvaluationConfigRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.CreateEvaluationConfigResponse>) responseObserver);
          break;
        case METHODID_LIST_EVALUATION_CONFIG:
          serviceImpl.listEvaluationConfig((com.zhijiejiaoyu.glory_api.short_video.ListEvaluationConfigRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListEvaluationConfigResponse>) responseObserver);
          break;
        case METHODID_BATCH_EVALUATE_ARTICLE_CREATION:
          serviceImpl.batchEvaluateArticleCreation((com.zhijiejiaoyu.glory_api.short_video.BatchEvaluateArticleRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.BatchEvaluateArticleResponse>) responseObserver);
          break;
        case METHODID_LIST_STUDENT_ARTICLE_CREATION:
          serviceImpl.listStudentArticleCreation((com.zhijiejiaoyu.glory_api.short_video.ListStudentArticleCreationRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListStudentArticleCreationResponse>) responseObserver);
          break;
        case METHODID_STUDENT_ARTICLE_CREATION_EVALUATION_DETAIL:
          serviceImpl.studentArticleCreationEvaluationDetail((com.zhijiejiaoyu.glory_api.short_video.StudentArticleCreationEvaluationDetailRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.StudentArticleCreationEvaluationDetailResponse>) responseObserver);
          break;
        case METHODID_CORRECT_SENTENCE:
          serviceImpl.correctSentence((com.zhijiejiaoyu.glory_api.short_video.CorrectSentenceRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.CorrectSentenceResponse>) responseObserver);
          break;
        case METHODID_GEN_ARTICLE_AI_EVALUATION:
          serviceImpl.genArticleAiEvaluation((com.zhijiejiaoyu.glory_api.short_video.GenArticleAIEvaluationRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GenArticleAIEvaluationResponse>) responseObserver);
          break;
        case METHODID_GET_ARTICLE_AI_EVALUATION:
          serviceImpl.getArticleAiEvaluation((com.zhijiejiaoyu.glory_api.short_video.GetArticleAIEvaluationRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetArticleAIEvaluationResponse>) responseObserver);
          break;
        case METHODID_ARTICLE_AI_CHAT:
          serviceImpl.articleAiChat((com.zhijiejiaoyu.glory_api.short_video.ArticleAIChatRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ArticleAIChatResponse>) responseObserver);
          break;
        case METHODID_GET_CHAT_CONFIG:
          serviceImpl.getChatConfig((com.zhijiejiaoyu.glory_api.short_video.GetChatConfigRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetChatConfigResponse>) responseObserver);
          break;
        case METHODID_UPDATE_MODEL_PRICE:
          serviceImpl.updateModelPrice((com.zhijiejiaoyu.glory_api.short_video.UpdateModelPriceRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.UpdateModelPriceResponse>) responseObserver);
          break;
        case METHODID_UPDATE_ARTICLE_CREATION_TENANT_COURSE:
          serviceImpl.updateArticleCreationTenantCourse((com.zhijiejiaoyu.glory_api.short_video.UpdateTenantCourseDataRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.UpdateTenantCourseDataResponse>) responseObserver);
          break;
        case METHODID_GET_ARTICLE_CREATION_TENANT:
          serviceImpl.getArticleCreationTenant((com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantResponse>) responseObserver);
          break;
        case METHODID_LIST_ARTICLE_CREATION_TENANT:
          serviceImpl.listArticleCreationTenant((com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantResponse>) responseObserver);
          break;
        case METHODID_LIST_ARTICLE_CREATION_TENANT_COST:
          serviceImpl.listArticleCreationTenantCost((com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantCostRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantCostResponse>) responseObserver);
          break;
        case METHODID_GET_ARTICLE_CREATION_TENANT_COST:
          serviceImpl.getArticleCreationTenantCost((com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantCostRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantCostResponse>) responseObserver);
          break;
        case METHODID_GET_SUB_TOPIC_AI_RESULT:
          serviceImpl.getSubTopicAiResult((com.zhijiejiaoyu.glory_api.short_video.GetSubTopicAiResultRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetSubTopicAiResultResponse>) responseObserver);
          break;
        case METHODID_CREATE_DIGITAL_VIDEO:
          serviceImpl.createDigitalVideo((com.zhijiejiaoyu.glory_api.short_video.CreateDigitalVideoRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.CreateDigitalVideoResponse>) responseObserver);
          break;
        case METHODID_LIST_DIGITAL_VIDEO:
          serviceImpl.listDigitalVideo((com.zhijiejiaoyu.glory_api.short_video.ListDigitalVideoRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListDigitalVideoResponse>) responseObserver);
          break;
        case METHODID_GET_DIGITAL_VIDEO:
          serviceImpl.getDigitalVideo((com.zhijiejiaoyu.glory_api.short_video.GetDigitalVideoRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.GetDigitalVideoResponse>) responseObserver);
          break;
        case METHODID_LIST_DIGITAL_CODE:
          serviceImpl.listDigitalCode((com.zhijiejiaoyu.glory_api.short_video.ListDigitalCodeRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListDigitalCodeResponse>) responseObserver);
          break;
        case METHODID_DELETE_DIGITAL_VIDEO:
          serviceImpl.deleteDigitalVideo((com.zhijiejiaoyu.glory_api.short_video.DeleteDigitalVideoRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.DeleteDigitalVideoResponse>) responseObserver);
          break;
        case METHODID_LIST_DIGITAL_AVATAR:
          serviceImpl.listDigitalAvatar((com.zhijiejiaoyu.glory_api.short_video.ListDigitalAvatarRequest) request,
              (io.grpc.stub.StreamObserver<com.zhijiejiaoyu.glory_api.short_video.ListDigitalAvatarResponse>) responseObserver);
          break;
        default:
          throw new AssertionError();
      }
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("unchecked")
    public io.grpc.stub.StreamObserver<Req> invoke(
        io.grpc.stub.StreamObserver<Resp> responseObserver) {
      switch (methodId) {
        default:
          throw new AssertionError();
      }
    }
  }

  public static final io.grpc.ServerServiceDefinition bindService(AsyncService service) {
    return io.grpc.ServerServiceDefinition.builder(getServiceDescriptor())
        .addMethod(
          getCreateExampleMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.example.CreateExampleRequest,
              com.zhijiejiaoyu.glory_api.example.CreateExampleResponse>(
                service, METHODID_CREATE_EXAMPLE)))
        .addMethod(
          getGetExampleMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.example.GetExampleRequest,
              com.zhijiejiaoyu.glory_api.example.GetExampleResponse>(
                service, METHODID_GET_EXAMPLE)))
        .addMethod(
          getUpdateExampleMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.example.UpdateExampleRequest,
              com.zhijiejiaoyu.glory_api.example.UpdateExampleResponse>(
                service, METHODID_UPDATE_EXAMPLE)))
        .addMethod(
          getListExampleMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.example.ListExampleRequest,
              com.zhijiejiaoyu.glory_api.example.ListExampleResponse>(
                service, METHODID_LIST_EXAMPLE)))
        .addMethod(
          getDeleteExampleMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.example.DeleteExampleRequest,
              com.zhijiejiaoyu.glory_api.example.DeleteExampleResponse>(
                service, METHODID_DELETE_EXAMPLE)))
        .addMethod(
          getLoginMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.LoginRequest,
              com.zhijiejiaoyu.glory_api.user.LoginResponse>(
                service, METHODID_LOGIN)))
        .addMethod(
          getLogoutMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.LogoutRequest,
              com.zhijiejiaoyu.glory_api.user.LogoutResponse>(
                service, METHODID_LOGOUT)))
        .addMethod(
          getDeleteUserMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.DeleteUserRequest,
              com.zhijiejiaoyu.glory_api.user.DeleteUserResponse>(
                service, METHODID_DELETE_USER)))
        .addMethod(
          getListOwnAccessMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.ListOwnAccessRequest,
              com.zhijiejiaoyu.glory_api.user.ListOwnAccessResponse>(
                service, METHODID_LIST_OWN_ACCESS)))
        .addMethod(
          getGetVerifyCodeMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.GetVerifyCodeRequest,
              com.zhijiejiaoyu.glory_api.user.GetVerifyCodeResponse>(
                service, METHODID_GET_VERIFY_CODE)))
        .addMethod(
          getCheckVerifyCodeMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.CheckVerifyCodeRequest,
              com.zhijiejiaoyu.glory_api.user.CheckVerifyCodeResponse>(
                service, METHODID_CHECK_VERIFY_CODE)))
        .addMethod(
          getGetUserMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.GetUserRequest,
              com.zhijiejiaoyu.glory_api.user.GetUserResponse>(
                service, METHODID_GET_USER)))
        .addMethod(
          getGetUserByPhoneMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.GetUserByPhoneRequest,
              com.zhijiejiaoyu.glory_api.user.GetUserByPhoneResponse>(
                service, METHODID_GET_USER_BY_PHONE)))
        .addMethod(
          getLoginWithPasswordMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.LoginWithPasswordRequest,
              com.zhijiejiaoyu.glory_api.user.LoginWithPasswordResponse>(
                service, METHODID_LOGIN_WITH_PASSWORD)))
        .addMethod(
          getUpdatePasswordMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.UpdatePasswordRequest,
              com.zhijiejiaoyu.glory_api.user.UpdatePasswordResponse>(
                service, METHODID_UPDATE_PASSWORD)))
        .addMethod(
          getUpdateUserMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.UpdateUserRequest,
              com.zhijiejiaoyu.glory_api.user.UpdateUserResponse>(
                service, METHODID_UPDATE_USER)))
        .addMethod(
          getUpdatePhoneMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.UpdatePhoneRequest,
              com.zhijiejiaoyu.glory_api.user.UpdatePhoneResponse>(
                service, METHODID_UPDATE_PHONE)))
        .addMethod(
          getGetUserMajorMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.GetUserMajorRequest,
              com.zhijiejiaoyu.glory_api.user.GetUserMajorResponse>(
                service, METHODID_GET_USER_MAJOR)))
        .addMethod(
          getUpdateUserTenantMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.UpdateUserTenantRequest,
              com.zhijiejiaoyu.glory_api.user.UpdateUserTenantResponse>(
                service, METHODID_UPDATE_USER_TENANT)))
        .addMethod(
          getListUserMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.ListUserRequest,
              com.zhijiejiaoyu.glory_api.user.ListUserResponse>(
                service, METHODID_LIST_USER)))
        .addMethod(
          getUserBindWechatMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.UserBindWechatRequest,
              com.zhijiejiaoyu.glory_api.user.UserBindWechatResponse>(
                service, METHODID_USER_BIND_WECHAT)))
        .addMethod(
          getUserUnbindWechatMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.UserUnbindWechatRequest,
              com.zhijiejiaoyu.glory_api.user.UserUnbindWechatResponse>(
                service, METHODID_USER_UNBIND_WECHAT)))
        .addMethod(
          getFollowUserMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.FollowUserRequest,
              com.zhijiejiaoyu.glory_api.user.FollowUserResponse>(
                service, METHODID_FOLLOW_USER)))
        .addMethod(
          getListMyFollowingMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.ListMyFollowingRequest,
              com.zhijiejiaoyu.glory_api.user.ListMyFollowingResponse>(
                service, METHODID_LIST_MY_FOLLOWING)))
        .addMethod(
          getListMyFollowerMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.ListMyFollowerRequest,
              com.zhijiejiaoyu.glory_api.user.ListMyFollowerResponse>(
                service, METHODID_LIST_MY_FOLLOWER)))
        .addMethod(
          getListMyFriendMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.ListMyFriendRequest,
              com.zhijiejiaoyu.glory_api.user.ListMyFriendResponse>(
                service, METHODID_LIST_MY_FRIEND)))
        .addMethod(
          getGetMySocialSummaryMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.GetMySocialSummaryRequest,
              com.zhijiejiaoyu.glory_api.user.GetMySocialSummaryResponse>(
                service, METHODID_GET_MY_SOCIAL_SUMMARY)))
        .addMethod(
          getGetUserPagePermissionMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.GetUserPagePermissionRequest,
              com.zhijiejiaoyu.glory_api.user.GetUserPagePermissionResponse>(
                service, METHODID_GET_USER_PAGE_PERMISSION)))
        .addMethod(
          getCreateRolePagePermissionMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.CreateRolePagePermissionRequest,
              com.zhijiejiaoyu.glory_api.user.CreateRolePagePermissionResponse>(
                service, METHODID_CREATE_ROLE_PAGE_PERMISSION)))
        .addMethod(
          getUpdateRolePagePermissionMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.UpdateRolePagePermissionRequest,
              com.zhijiejiaoyu.glory_api.user.UpdateRolePagePermissionResponse>(
                service, METHODID_UPDATE_ROLE_PAGE_PERMISSION)))
        .addMethod(
          getGetRolePagePermissionMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.GetRolePagePermissionRequest,
              com.zhijiejiaoyu.glory_api.user.GetRolePagePermissionResponse>(
                service, METHODID_GET_ROLE_PAGE_PERMISSION)))
        .addMethod(
          getAddAddressMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.AddAddressRequest,
              com.zhijiejiaoyu.glory_api.user.AddAddressResponse>(
                service, METHODID_ADD_ADDRESS)))
        .addMethod(
          getDeleteAddressMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.DeleteAddressRequest,
              com.zhijiejiaoyu.glory_api.user.DeleteAddressResponse>(
                service, METHODID_DELETE_ADDRESS)))
        .addMethod(
          getUpdateAddressMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.UpdateAddressRequest,
              com.zhijiejiaoyu.glory_api.user.UpdateAddressResponse>(
                service, METHODID_UPDATE_ADDRESS)))
        .addMethod(
          getGetAddressMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.GetAddressRequest,
              com.zhijiejiaoyu.glory_api.user.GetAddressResponse>(
                service, METHODID_GET_ADDRESS)))
        .addMethod(
          getListAddressMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.ListAddressRequest,
              com.zhijiejiaoyu.glory_api.user.ListAddressResponse>(
                service, METHODID_LIST_ADDRESS)))
        .addMethod(
          getListUserByRoleMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.ListUserByRoleRequest,
              com.zhijiejiaoyu.glory_api.user.ListUserByRoleResponse>(
                service, METHODID_LIST_USER_BY_ROLE)))
        .addMethod(
          getListPermissionMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.ListPermissionRequest,
              com.zhijiejiaoyu.glory_api.user.ListPermissionResponse>(
                service, METHODID_LIST_PERMISSION)))
        .addMethod(
          getListRoleMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.ListRoleRequest,
              com.zhijiejiaoyu.glory_api.user.ListRoleResponse>(
                service, METHODID_LIST_ROLE)))
        .addMethod(
          getGiveRolePermissionMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.GiveRolePermissionRequest,
              com.zhijiejiaoyu.glory_api.user.GiveRolePermissionResponse>(
                service, METHODID_GIVE_ROLE_PERMISSION)))
        .addMethod(
          getRemoveRolePermissionMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.RemoveRolePermissionRequest,
              com.zhijiejiaoyu.glory_api.user.RemoveRolePermissionResponse>(
                service, METHODID_REMOVE_ROLE_PERMISSION)))
        .addMethod(
          getCreateRoleMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.CreateRoleRequest,
              com.zhijiejiaoyu.glory_api.user.CreateRoleResponse>(
                service, METHODID_CREATE_ROLE)))
        .addMethod(
          getDeleteRoleMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.DeleteRoleRequest,
              com.zhijiejiaoyu.glory_api.user.DeleteRoleResponse>(
                service, METHODID_DELETE_ROLE)))
        .addMethod(
          getListResourceMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.ListResourceRequest,
              com.zhijiejiaoyu.glory_api.user.ListResourceResponse>(
                service, METHODID_LIST_RESOURCE)))
        .addMethod(
          getGetRoleTypeMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.user.GetRoleTypeRequest,
              com.zhijiejiaoyu.glory_api.user.GetRoleTypeResponse>(
                service, METHODID_GET_ROLE_TYPE)))
        .addMethod(
          getGetRoleTemplateMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.role.GetRoleTemplateRequest,
              com.zhijiejiaoyu.glory_api.role.GetRoleTemplateResponse>(
                service, METHODID_GET_ROLE_TEMPLATE)))
        .addMethod(
          getUpdateRoleTemplateMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.role.UpdateRoleTemplateRequest,
              com.zhijiejiaoyu.glory_api.role.UpdateRoleTemplateResponse>(
                service, METHODID_UPDATE_ROLE_TEMPLATE)))
        .addMethod(
          getCreateShopMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.CreateShopRequest,
              com.zhijiejiaoyu.glory_api.shop.CreateShopResponse>(
                service, METHODID_CREATE_SHOP)))
        .addMethod(
          getGetShopMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.GetShopRequest,
              com.zhijiejiaoyu.glory_api.shop.GetShopResponse>(
                service, METHODID_GET_SHOP)))
        .addMethod(
          getUpdateShopMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.UpdateShopRequest,
              com.zhijiejiaoyu.glory_api.shop.UpdateShopResponse>(
                service, METHODID_UPDATE_SHOP)))
        .addMethod(
          getListShopMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.ListShopRequest,
              com.zhijiejiaoyu.glory_api.shop.ListShopResponse>(
                service, METHODID_LIST_SHOP)))
        .addMethod(
          getDeleteShopMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.DeleteShopRequest,
              com.zhijiejiaoyu.glory_api.shop.DeleteShopResponse>(
                service, METHODID_DELETE_SHOP)))
        .addMethod(
          getListOperationMetricsMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.ListOperationMetricsRequest,
              com.zhijiejiaoyu.glory_api.shop.ListOperationMetricsResponse>(
                service, METHODID_LIST_OPERATION_METRICS)))
        .addMethod(
          getGetShopQrcodeMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.GetShopQrcodeRequest,
              com.zhijiejiaoyu.glory_api.shop.GetShopQrcodeResponse>(
                service, METHODID_GET_SHOP_QRCODE)))
        .addMethod(
          getUpdateShopManagerMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.UpdateShopManagerRequest,
              com.zhijiejiaoyu.glory_api.shop.UpdateShopManagerResponse>(
                service, METHODID_UPDATE_SHOP_MANAGER)))
        .addMethod(
          getGetShopBusinessDataMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.GetShopBusinessDataRequest,
              com.zhijiejiaoyu.glory_api.shop.GetShopBusinessDataResponse>(
                service, METHODID_GET_SHOP_BUSINESS_DATA)))
        .addMethod(
          getAddShopAccessMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.AddShopAccessRequest,
              com.zhijiejiaoyu.glory_api.shop.AddShopAccessResponse>(
                service, METHODID_ADD_SHOP_ACCESS)))
        .addMethod(
          getRemoveShopAccessMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.RemoveShopAccessRequest,
              com.zhijiejiaoyu.glory_api.shop.RemoveShopAccessResponse>(
                service, METHODID_REMOVE_SHOP_ACCESS)))
        .addMethod(
          getVerifyFieldMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.VerifyFieldRequest,
              com.zhijiejiaoyu.glory_api.shop.VerifyFieldResponse>(
                service, METHODID_VERIFY_FIELD)))
        .addMethod(
          getListShopAccessMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.ListShopAccessRequest,
              com.zhijiejiaoyu.glory_api.shop.ListShopAccessResponse>(
                service, METHODID_LIST_SHOP_ACCESS)))
        .addMethod(
          getAddShopCategoryMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.AddShopCategoryRequest,
              com.zhijiejiaoyu.glory_api.shop.AddShopCategoryResponse>(
                service, METHODID_ADD_SHOP_CATEGORY)))
        .addMethod(
          getGetShopCategoryMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.GetShopCategoryRequest,
              com.zhijiejiaoyu.glory_api.shop.GetShopCategoryResponse>(
                service, METHODID_GET_SHOP_CATEGORY)))
        .addMethod(
          getRemoveShopCategoryMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.RemoveShopCategoryRequest,
              com.zhijiejiaoyu.glory_api.shop.RemoveShopCategoryResponse>(
                service, METHODID_REMOVE_SHOP_CATEGORY)))
        .addMethod(
          getAddFreightTemplateMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.CreateTemplateRequest,
              com.zhijiejiaoyu.glory_api.shop.CreateTemplateResponse>(
                service, METHODID_ADD_FREIGHT_TEMPLATE)))
        .addMethod(
          getGetFreightTemplateMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.GetTemplateRequest,
              com.zhijiejiaoyu.glory_api.shop.GetTemplateResponse>(
                service, METHODID_GET_FREIGHT_TEMPLATE)))
        .addMethod(
          getUpdateFreightTemplateMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.UpdateTemplateRequest,
              com.zhijiejiaoyu.glory_api.shop.UpdateTemplateResponse>(
                service, METHODID_UPDATE_FREIGHT_TEMPLATE)))
        .addMethod(
          getDeleteFreightTemplateMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.DeleteTemplateRequest,
              com.zhijiejiaoyu.glory_api.shop.DeleteTemplateResponse>(
                service, METHODID_DELETE_FREIGHT_TEMPLATE)))
        .addMethod(
          getListFreightTemplateMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.ListTemplateRequest,
              com.zhijiejiaoyu.glory_api.shop.ListTemplateResponse>(
                service, METHODID_LIST_FREIGHT_TEMPLATE)))
        .addMethod(
          getListQualificationMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.ListShopQualificationRequest,
              com.zhijiejiaoyu.glory_api.shop.ListShopQualificationResponse>(
                service, METHODID_LIST_QUALIFICATION)))
        .addMethod(
          getGetMallIndexMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.mall.MallIndexRequest,
              com.zhijiejiaoyu.glory_api.mall.MallIndexResponse>(
                service, METHODID_GET_MALL_INDEX)))
        .addMethod(
          getCreateCategoryMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.CreateCategoryRequest,
              com.zhijiejiaoyu.glory_api.shop.CreateCategoryResponse>(
                service, METHODID_CREATE_CATEGORY)))
        .addMethod(
          getGetCategoryMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.GetCategoryRequest,
              com.zhijiejiaoyu.glory_api.shop.GetCategoryResponse>(
                service, METHODID_GET_CATEGORY)))
        .addMethod(
          getUpdateCategoryMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.UpdateCategoryRequest,
              com.zhijiejiaoyu.glory_api.shop.UpdateCategoryResponse>(
                service, METHODID_UPDATE_CATEGORY)))
        .addMethod(
          getListCategoryMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.ListCategoryRequest,
              com.zhijiejiaoyu.glory_api.shop.ListCategoryResponse>(
                service, METHODID_LIST_CATEGORY)))
        .addMethod(
          getDeleteCategoryMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.DeleteCategoryRequest,
              com.zhijiejiaoyu.glory_api.shop.DeleteCategoryResponse>(
                service, METHODID_DELETE_CATEGORY)))
        .addMethod(
          getListCategoryQualificationMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.ListCategoryQualificationRequest,
              com.zhijiejiaoyu.glory_api.shop.ListCategoryQualificationResponse>(
                service, METHODID_LIST_CATEGORY_QUALIFICATION)))
        .addMethod(
          getCreateProductMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.CreateProductRequest,
              com.zhijiejiaoyu.glory_api.shop.CreateProductResponse>(
                service, METHODID_CREATE_PRODUCT)))
        .addMethod(
          getGetProductMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.GetProductRequest,
              com.zhijiejiaoyu.glory_api.shop.GetProductResponse>(
                service, METHODID_GET_PRODUCT)))
        .addMethod(
          getUpdateProductMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.UpdateProductRequest,
              com.zhijiejiaoyu.glory_api.shop.UpdateProductResponse>(
                service, METHODID_UPDATE_PRODUCT)))
        .addMethod(
          getListProductMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.ListProductRequest,
              com.zhijiejiaoyu.glory_api.shop.ListProductResponse>(
                service, METHODID_LIST_PRODUCT)))
        .addMethod(
          getListProductByIDsMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.ListProductByProductIDsRequest,
              com.zhijiejiaoyu.glory_api.shop.ListProductByProductIDsResponse>(
                service, METHODID_LIST_PRODUCT_BY_IDS)))
        .addMethod(
          getDeleteProductMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.DeleteProductRequest,
              com.zhijiejiaoyu.glory_api.shop.DeleteProductResponse>(
                service, METHODID_DELETE_PRODUCT)))
        .addMethod(
          getUploadMultiImageMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.UploadMultiImageRequest,
              com.zhijiejiaoyu.glory_api.shop.UploadMultiImageResponse>(
                service, METHODID_UPLOAD_MULTI_IMAGE)))
        .addMethod(
          getDeleteImageByIdMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.DeleteImageRequest,
              com.zhijiejiaoyu.glory_api.shop.DeleteImageResponse>(
                service, METHODID_DELETE_IMAGE_BY_ID)))
        .addMethod(
          getBindAttributeMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.BindAttributeRequest,
              com.zhijiejiaoyu.glory_api.shop.BindAttributeResponse>(
                service, METHODID_BIND_ATTRIBUTE)))
        .addMethod(
          getPublishProductMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.PublishProductRequest,
              com.zhijiejiaoyu.glory_api.shop.PublishProductResponse>(
                service, METHODID_PUBLISH_PRODUCT)))
        .addMethod(
          getOffShelfProductInBatchesMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.OffSelfProductsRequest,
              com.zhijiejiaoyu.glory_api.shop.OffSelfProductsResponse>(
                service, METHODID_OFF_SHELF_PRODUCT_IN_BATCHES)))
        .addMethod(
          getDeleteProductInBatchesMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.DeleteProductsRequest,
              com.zhijiejiaoyu.glory_api.shop.DeleteProductsResponse>(
                service, METHODID_DELETE_PRODUCT_IN_BATCHES)))
        .addMethod(
          getChangeProductsStateMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.ChangeProductStateRequest,
              com.zhijiejiaoyu.glory_api.shop.ChangeProductStateResponse>(
                service, METHODID_CHANGE_PRODUCTS_STATE)))
        .addMethod(
          getSaveProductImageInfoMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.SaveImageInfoRequest,
              com.zhijiejiaoyu.glory_api.shop.SaveImageInfoResponse>(
                service, METHODID_SAVE_PRODUCT_IMAGE_INFO)))
        .addMethod(
          getCreateSkuMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.CreateSkuRequest,
              com.zhijiejiaoyu.glory_api.shop.CreateSkuResponse>(
                service, METHODID_CREATE_SKU)))
        .addMethod(
          getGetSkuMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.GetSkuRequest,
              com.zhijiejiaoyu.glory_api.shop.GetSkuResponse>(
                service, METHODID_GET_SKU)))
        .addMethod(
          getUpdateSkuMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.UpdateSkuRequest,
              com.zhijiejiaoyu.glory_api.shop.UpdateSkuResponse>(
                service, METHODID_UPDATE_SKU)))
        .addMethod(
          getListSkuMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.ListSkuRequest,
              com.zhijiejiaoyu.glory_api.shop.ListSkuResponse>(
                service, METHODID_LIST_SKU)))
        .addMethod(
          getDeleteSkuMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.DeleteSkuRequest,
              com.zhijiejiaoyu.glory_api.shop.DeleteSkuResponse>(
                service, METHODID_DELETE_SKU)))
        .addMethod(
          getCreateAttributeMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.CreateAttributeRequest,
              com.zhijiejiaoyu.glory_api.shop.CreateAttributeResponse>(
                service, METHODID_CREATE_ATTRIBUTE)))
        .addMethod(
          getGetAttributeMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.GetAttributeRequest,
              com.zhijiejiaoyu.glory_api.shop.GetAttributeResponse>(
                service, METHODID_GET_ATTRIBUTE)))
        .addMethod(
          getListAttributeMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.ListAttributeRequest,
              com.zhijiejiaoyu.glory_api.shop.ListAttributeResponse>(
                service, METHODID_LIST_ATTRIBUTE)))
        .addMethod(
          getDeleteAttributeMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.DeleteAttributeRequest,
              com.zhijiejiaoyu.glory_api.shop.DeleteAttributeResponse>(
                service, METHODID_DELETE_ATTRIBUTE)))
        .addMethod(
          getAddAttributeValueMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.AddAttributeValueRequest,
              com.zhijiejiaoyu.glory_api.shop.AddAttributeValueResponse>(
                service, METHODID_ADD_ATTRIBUTE_VALUE)))
        .addMethod(
          getDeleteAttributeValueMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.DeleteAttributeValueRequest,
              com.zhijiejiaoyu.glory_api.shop.DeleteAttributeValueResponse>(
                service, METHODID_DELETE_ATTRIBUTE_VALUE)))
        .addMethod(
          getCreateOrderMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.CreateOrderRequest,
              com.zhijiejiaoyu.glory_api.shop.CreateOrderResponse>(
                service, METHODID_CREATE_ORDER)))
        .addMethod(
          getGetOrderMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.GetOrderRequest,
              com.zhijiejiaoyu.glory_api.shop.GetOrderResponse>(
                service, METHODID_GET_ORDER)))
        .addMethod(
          getUpdateOrderMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.UpdateOrderRequest,
              com.zhijiejiaoyu.glory_api.shop.UpdateOrderResponse>(
                service, METHODID_UPDATE_ORDER)))
        .addMethod(
          getListOrderMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.ListOrderRequest,
              com.zhijiejiaoyu.glory_api.shop.ListOrderResponse>(
                service, METHODID_LIST_ORDER)))
        .addMethod(
          getDeleteOrderMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.DeleteOrderRequest,
              com.zhijiejiaoyu.glory_api.shop.DeleteOrderResponse>(
                service, METHODID_DELETE_ORDER)))
        .addMethod(
          getShipGoodsMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.ShipGoodsRequest,
              com.zhijiejiaoyu.glory_api.shop.ShipGoodsResponse>(
                service, METHODID_SHIP_GOODS)))
        .addMethod(
          getConfirmReceiptGoodsMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.ConfirmReceiptGoodsRequest,
              com.zhijiejiaoyu.glory_api.shop.ConfirmReceiptGoodsResponse>(
                service, METHODID_CONFIRM_RECEIPT_GOODS)))
        .addMethod(
          getGetOrderStatusMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.GetOrderStatusRequest,
              com.zhijiejiaoyu.glory_api.shop.GetOrderStatusResponse>(
                service, METHODID_GET_ORDER_STATUS)))
        .addMethod(
          getCancelOrderMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.CancelOrderRequest,
              com.zhijiejiaoyu.glory_api.shop.CancelOrderResponse>(
                service, METHODID_CANCEL_ORDER)))
        .addMethod(
          getShipGoodsInBatchesMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.ShipGoodsInBatchesRequest,
              com.zhijiejiaoyu.glory_api.shop.ShipGoodsInBatchesResponse>(
                service, METHODID_SHIP_GOODS_IN_BATCHES)))
        .addMethod(
          getFreeShippingInBatchesMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.FreeShippingInBatchesRequest,
              com.zhijiejiaoyu.glory_api.shop.FreeShippingInBatchesResponse>(
                service, METHODID_FREE_SHIPPING_IN_BATCHES)))
        .addMethod(
          getListShopSummaryMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.ListShopSummaryRequest,
              com.zhijiejiaoyu.glory_api.shop.ListShopSummaryResponse>(
                service, METHODID_LIST_SHOP_SUMMARY)))
        .addMethod(
          getListShopBySellerIDMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.ListShopBySellerIDRequest,
              com.zhijiejiaoyu.glory_api.shop.ListShopBySellerIDResponse>(
                service, METHODID_LIST_SHOP_BY_SELLER_ID)))
        .addMethod(
          getCreateCartMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.AddCartRequest,
              com.zhijiejiaoyu.glory_api.shop.AddCartResponse>(
                service, METHODID_CREATE_CART)))
        .addMethod(
          getGetCartMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.GetCartRequest,
              com.zhijiejiaoyu.glory_api.shop.GetCartResponse>(
                service, METHODID_GET_CART)))
        .addMethod(
          getUpdateCartMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.UpdateCartRequest,
              com.zhijiejiaoyu.glory_api.shop.UpdateCartResponse>(
                service, METHODID_UPDATE_CART)))
        .addMethod(
          getDeleteCartMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.DeleteCartRequest,
              com.zhijiejiaoyu.glory_api.shop.DeleteCartResponse>(
                service, METHODID_DELETE_CART)))
        .addMethod(
          getUploadAttachmentMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.seller.UploadAttachmentRequest,
              com.zhijiejiaoyu.glory_api.seller.UploadAttachmentResponse>(
                service, METHODID_UPLOAD_ATTACHMENT)))
        .addMethod(
          getSaveAttachmentMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.seller.SaveAttachmentRequest,
              com.zhijiejiaoyu.glory_api.seller.SaveAttachmentResponse>(
                service, METHODID_SAVE_ATTACHMENT)))
        .addMethod(
          getListAttachmentMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.seller.ListAttachmentRequest,
              com.zhijiejiaoyu.glory_api.seller.ListAttachmentResponse>(
                service, METHODID_LIST_ATTACHMENT)))
        .addMethod(
          getDeleteAttachmentMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.seller.DeleteAttachmentRequest,
              com.zhijiejiaoyu.glory_api.seller.DeleteAttachmentResponse>(
                service, METHODID_DELETE_ATTACHMENT)))
        .addMethod(
          getCreateSellerMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.seller.CreateSellerRequest,
              com.zhijiejiaoyu.glory_api.seller.CreateSellerResponse>(
                service, METHODID_CREATE_SELLER)))
        .addMethod(
          getCreatePaymentMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.payment.CreatePaymentRequest,
              com.zhijiejiaoyu.glory_api.payment.CreatePaymentResponse>(
                service, METHODID_CREATE_PAYMENT)))
        .addMethod(
          getGetPaymentMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.payment.GetPaymentRequest,
              com.zhijiejiaoyu.glory_api.payment.GetPaymentResponse>(
                service, METHODID_GET_PAYMENT)))
        .addMethod(
          getUpdatePaymentMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.payment.UpdatePaymentRequest,
              com.zhijiejiaoyu.glory_api.payment.UpdatePaymentResponse>(
                service, METHODID_UPDATE_PAYMENT)))
        .addMethod(
          getDeletePaymentMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.payment.DeletePaymentRequest,
              com.zhijiejiaoyu.glory_api.payment.DeletePaymentResponse>(
                service, METHODID_DELETE_PAYMENT)))
        .addMethod(
          getWechatPaymentNotifyMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.payment.WechatPaymentNotifyRequest,
              com.zhijiejiaoyu.glory_api.payment.WechatPaymentNotifyResponse>(
                service, METHODID_WECHAT_PAYMENT_NOTIFY)))
        .addMethod(
          getCreateConfigMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.admin.CreateConfigRequest,
              com.zhijiejiaoyu.glory_api.admin.CreateConfigResponse>(
                service, METHODID_CREATE_CONFIG)))
        .addMethod(
          getUpdateConfigMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.admin.UpdateConfigRequest,
              com.zhijiejiaoyu.glory_api.admin.UpdateConfigResponse>(
                service, METHODID_UPDATE_CONFIG)))
        .addMethod(
          getDeleteConfigMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.admin.DeleteConfigRequest,
              com.zhijiejiaoyu.glory_api.admin.DeleteConfigResponse>(
                service, METHODID_DELETE_CONFIG)))
        .addMethod(
          getGetConfigMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.admin.GetConfigRequest,
              com.zhijiejiaoyu.glory_api.admin.GetConfigResponse>(
                service, METHODID_GET_CONFIG)))
        .addMethod(
          getGetSTSMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.admin.GetSTSRequest,
              com.zhijiejiaoyu.glory_api.admin.GetSTSResponse>(
                service, METHODID_GET_STS)))
        .addMethod(
          getGenerateWebofficeTokenMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.admin.GenerateWebofficeTokenRequest,
              com.zhijiejiaoyu.glory_api.admin.GenerateWebofficeTokenResponse>(
                service, METHODID_GENERATE_WEBOFFICE_TOKEN)))
        .addMethod(
          getRefreshWebofficeTokenMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.admin.RefreshWebofficeTokenRequest,
              com.zhijiejiaoyu.glory_api.admin.RefreshWebofficeTokenResponse>(
                service, METHODID_REFRESH_WEBOFFICE_TOKEN)))
        .addMethod(
          getListTenantOrgMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.admin.ListTenantOrgRequest,
              com.zhijiejiaoyu.glory_api.admin.ListTenantOrgResponse>(
                service, METHODID_LIST_TENANT_ORG)))
        .addMethod(
          getGetAdminTenantMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.admin.GetAdminTenantRequest,
              com.zhijiejiaoyu.glory_api.admin.GetAdminTenantResponse>(
                service, METHODID_GET_ADMIN_TENANT)))
        .addMethod(
          getListAdminUserMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.admin.ListAdminUserRequest,
              com.zhijiejiaoyu.glory_api.admin.ListAdminUserResponse>(
                service, METHODID_LIST_ADMIN_USER)))
        .addMethod(
          getCreateAdminUserMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.admin.CreateAdminUserRequest,
              com.zhijiejiaoyu.glory_api.admin.CreateAdminUserResponse>(
                service, METHODID_CREATE_ADMIN_USER)))
        .addMethod(
          getUpdateAdminUserMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.admin.UpdateAdminUserRequest,
              com.zhijiejiaoyu.glory_api.admin.UpdateAdminUserResponse>(
                service, METHODID_UPDATE_ADMIN_USER)))
        .addMethod(
          getDeleteAdminUserMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.admin.DeleteAdminUserRequest,
              com.zhijiejiaoyu.glory_api.admin.DeleteAdminUserResponse>(
                service, METHODID_DELETE_ADMIN_USER)))
        .addMethod(
          getWxPrepayMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.wxpay.PrepayRequest,
              com.zhijiejiaoyu.glory_api.wxpay.PrepayResponse>(
                service, METHODID_WX_PREPAY)))
        .addMethod(
          getCloseOrderMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.wxpay.CloseOrderRequest,
              com.zhijiejiaoyu.glory_api.wxpay.CloseOrderResponse>(
                service, METHODID_CLOSE_ORDER)))
        .addMethod(
          getQueryOrderByIdMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByIdRequest,
              com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByIdResponse>(
                service, METHODID_QUERY_ORDER_BY_ID)))
        .addMethod(
          getQueryOrderByOutTradeMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByOutTradeNoRequest,
              com.zhijiejiaoyu.glory_api.wxpay.QueryOrderByOutTradeNoResponse>(
                service, METHODID_QUERY_ORDER_BY_OUT_TRADE)))
        .addMethod(
          getAddVCurrencyMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.currency.AddVirtualCurrencyRequest,
              com.zhijiejiaoyu.glory_api.currency.AddVirtualCurrencyResponse>(
                service, METHODID_ADD_VCURRENCY)))
        .addMethod(
          getRechargeCurrencyMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyRequest,
              com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyResponse>(
                service, METHODID_RECHARGE_CURRENCY)))
        .addMethod(
          getRechargeCurrencyInBatchesMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyInBatchesRequest,
              com.zhijiejiaoyu.glory_api.currency.RechargeCurrencyInBatchesResponse>(
                service, METHODID_RECHARGE_CURRENCY_IN_BATCHES)))
        .addMethod(
          getGetVCurrencyMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.currency.GetVirtualCurrencyRequest,
              com.zhijiejiaoyu.glory_api.currency.GetVirtualCurrencyResponse>(
                service, METHODID_GET_VCURRENCY)))
        .addMethod(
          getListVCurrencyMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.currency.ListVirtualCurrencyRequest,
              com.zhijiejiaoyu.glory_api.currency.ListVirtualCurrencyResponse>(
                service, METHODID_LIST_VCURRENCY)))
        .addMethod(
          getListAccountOperationMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.account.ListAccountOperationRequest,
              com.zhijiejiaoyu.glory_api.account.ListAccountOperationResponse>(
                service, METHODID_LIST_ACCOUNT_OPERATION)))
        .addMethod(
          getCreateRoomMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.CreateRoomRequest,
              com.zhijiejiaoyu.glory_api.live.CreateRoomResponse>(
                service, METHODID_CREATE_ROOM)))
        .addMethod(
          getGetRoomMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.GetRoomRequest,
              com.zhijiejiaoyu.glory_api.live.GetRoomResponse>(
                service, METHODID_GET_ROOM)))
        .addMethod(
          getUpdateRoomMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.UpdateRoomRequest,
              com.zhijiejiaoyu.glory_api.live.UpdateRoomResponse>(
                service, METHODID_UPDATE_ROOM)))
        .addMethod(
          getListRoomMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.ListRoomRequest,
              com.zhijiejiaoyu.glory_api.live.ListRoomResponse>(
                service, METHODID_LIST_ROOM)))
        .addMethod(
          getDeleteRoomMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.DeleteRoomRequest,
              com.zhijiejiaoyu.glory_api.live.DeleteRoomResponse>(
                service, METHODID_DELETE_ROOM)))
        .addMethod(
          getListFinishedRoomMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.ListFinishedRoomRequest,
              com.zhijiejiaoyu.glory_api.live.ListFinishedRoomResponse>(
                service, METHODID_LIST_FINISHED_ROOM)))
        .addMethod(
          getGetFinishedRoomMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.GetFinishedRoomRequest,
              com.zhijiejiaoyu.glory_api.live.GetFinishedRoomResponse>(
                service, METHODID_GET_FINISHED_ROOM)))
        .addMethod(
          getRecordMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.LiveRecordRequest,
              com.zhijiejiaoyu.glory_api.live.LiveRecordResponse>(
                service, METHODID_RECORD)))
        .addMethod(
          getCreateLiveUserTokenMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.CreateLiveUserTokenRequest,
              com.zhijiejiaoyu.glory_api.live.CreateLiveUserTokenResponse>(
                service, METHODID_CREATE_LIVE_USER_TOKEN)))
        .addMethod(
          getCreateNewLiveUserTokenMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.CreateNewMessageTokenRequest,
              com.zhijiejiaoyu.glory_api.live.CreateNewMessageTokenResponse>(
                service, METHODID_CREATE_NEW_LIVE_USER_TOKEN)))
        .addMethod(
          getUserEnterRoomMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.UserEnterRoomRequest,
              com.zhijiejiaoyu.glory_api.live.UserEnterRoomResponse>(
                service, METHODID_USER_ENTER_ROOM)))
        .addMethod(
          getUserExitRoomMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.UserExitRoomRequest,
              com.zhijiejiaoyu.glory_api.live.UserExitRoomResponse>(
                service, METHODID_USER_EXIT_ROOM)))
        .addMethod(
          getListActiveRoomUserMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.ListActiveRoomUserRequest,
              com.zhijiejiaoyu.glory_api.seller.ListAttachmentResponse>(
                service, METHODID_LIST_ACTIVE_ROOM_USER)))
        .addMethod(
          getLiveSSEMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.LiveSSERequest,
              com.zhijiejiaoyu.glory_api.live.LiveSSEResponse>(
                service, METHODID_LIVE_SSE)))
        .addMethod(
          getCloseShopAllLiveMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.CloseShopAllLiveRequest,
              com.zhijiejiaoyu.glory_api.live.CloseShopAllLiveResponse>(
                service, METHODID_CLOSE_SHOP_ALL_LIVE)))
        .addMethod(
          getUpdateLiveCommentCountMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.UpdateLiveCommentCountRequest,
              com.zhijiejiaoyu.glory_api.live.UpdateLiveCommentCountResponse>(
                service, METHODID_UPDATE_LIVE_COMMENT_COUNT)))
        .addMethod(
          getCreateLivePlanMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.CreateLivePlanRequest,
              com.zhijiejiaoyu.glory_api.live.CreateLivePlanResponse>(
                service, METHODID_CREATE_LIVE_PLAN)))
        .addMethod(
          getGetLivePlanMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.GetLivePlanRequest,
              com.zhijiejiaoyu.glory_api.live.GetLivePlanResponse>(
                service, METHODID_GET_LIVE_PLAN)))
        .addMethod(
          getUpdateLivePlanMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.UpdateLivePlanRequest,
              com.zhijiejiaoyu.glory_api.live.UpdateLivePlanResponse>(
                service, METHODID_UPDATE_LIVE_PLAN)))
        .addMethod(
          getListLivePlanMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.ListLivePlanRequest,
              com.zhijiejiaoyu.glory_api.live.ListLivePlanResponse>(
                service, METHODID_LIST_LIVE_PLAN)))
        .addMethod(
          getDeleteLivePlanMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.DeleteLivePlanRequest,
              com.zhijiejiaoyu.glory_api.live.DeleteLivePlanResponse>(
                service, METHODID_DELETE_LIVE_PLAN)))
        .addMethod(
          getCreateLivePlanProductMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.CreateLivePlanProductRequest,
              com.zhijiejiaoyu.glory_api.live.CreateLivePlanProductResponse>(
                service, METHODID_CREATE_LIVE_PLAN_PRODUCT)))
        .addMethod(
          getUpdateLivePlanProductMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.UpdateLivePlanProductRequest,
              com.zhijiejiaoyu.glory_api.live.UpdateLivePlanProductResponse>(
                service, METHODID_UPDATE_LIVE_PLAN_PRODUCT)))
        .addMethod(
          getListLivePlanProductMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.ListLivePlanProductRequest,
              com.zhijiejiaoyu.glory_api.live.ListLivePlanProductResponse>(
                service, METHODID_LIST_LIVE_PLAN_PRODUCT)))
        .addMethod(
          getDeleteLivePlanProductMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.DeleteLivePlanProductRequest,
              com.zhijiejiaoyu.glory_api.live.DeleteLivePlanProductResponse>(
                service, METHODID_DELETE_LIVE_PLAN_PRODUCT)))
        .addMethod(
          getLoadLivePlanProductMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.LoadLivePlanProductRequest,
              com.zhijiejiaoyu.glory_api.live.LoadLivePlanProductResponse>(
                service, METHODID_LOAD_LIVE_PLAN_PRODUCT)))
        .addMethod(
          getUpdateLiveProductStatusMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.UpdateLiveProductStatusRequest,
              com.zhijiejiaoyu.glory_api.live.UpdateLiveProductStatusResponse>(
                service, METHODID_UPDATE_LIVE_PRODUCT_STATUS)))
        .addMethod(
          getListLiveProductStatusMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.ListLiveProductStatusRequest,
              com.zhijiejiaoyu.glory_api.live.ListLiveProductStatusResponse>(
                service, METHODID_LIST_LIVE_PRODUCT_STATUS)))
        .addMethod(
          getDeleteLiveProductStatusMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.DeleteLiveProductStatusRequest,
              com.zhijiejiaoyu.glory_api.live.DeleteLiveProductStatusResponse>(
                service, METHODID_DELETE_LIVE_PRODUCT_STATUS)))
        .addMethod(
          getCreateLiveProductStatusMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.CreateLiveProductStatusRequest,
              com.zhijiejiaoyu.glory_api.live.CreateLiveProductStatusResponse>(
                service, METHODID_CREATE_LIVE_PRODUCT_STATUS)))
        .addMethod(
          getGetLivingProductStatusMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.GetLivingProductStatusRequest,
              com.zhijiejiaoyu.glory_api.live.GetLivingProductStatusResponse>(
                service, METHODID_GET_LIVING_PRODUCT_STATUS)))
        .addMethod(
          getUpdateLiveProductIntroductStatusMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.UpdateLiveProductIntroductStatusRequest,
              com.zhijiejiaoyu.glory_api.live.UpdateLiveProductIntroductStatusResponse>(
                service, METHODID_UPDATE_LIVE_PRODUCT_INTRODUCT_STATUS)))
        .addMethod(
          getCreateLiveTextMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.CreateLiveTextRequest,
              com.zhijiejiaoyu.glory_api.live.CreateLiveTextResponse>(
                service, METHODID_CREATE_LIVE_TEXT)))
        .addMethod(
          getUpdateLiveTextMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.UpdateLiveTextRequest,
              com.zhijiejiaoyu.glory_api.live.UpdateLiveTextResponse>(
                service, METHODID_UPDATE_LIVE_TEXT)))
        .addMethod(
          getListLiveTextMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.ListLiveTextRequest,
              com.zhijiejiaoyu.glory_api.live.ListLiveTextResponse>(
                service, METHODID_LIST_LIVE_TEXT)))
        .addMethod(
          getGetLiveTextMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.GetLiveTextRequest,
              com.zhijiejiaoyu.glory_api.live.GetLiveTextResponse>(
                service, METHODID_GET_LIVE_TEXT)))
        .addMethod(
          getDeleteLiveTextsMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.DeleteLiveTextsRequest,
              com.zhijiejiaoyu.glory_api.live.DeleteLiveTextsResponse>(
                service, METHODID_DELETE_LIVE_TEXTS)))
        .addMethod(
          getTeacherListStudentShortVideoTextMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.TeacherListStudentShortVideoTextRequest,
              com.zhijiejiaoyu.glory_api.live.TeacherListStudentShortVideoTextResponse>(
                service, METHODID_TEACHER_LIST_STUDENT_SHORT_VIDEO_TEXT)))
        .addMethod(
          getGetLiveChartDataMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.GetLiveChartDataRequest,
              com.zhijiejiaoyu.glory_api.live.GetLiveChartDataResponse>(
                service, METHODID_GET_LIVE_CHART_DATA)))
        .addMethod(
          getGetEvaluateSelectorMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.GetEvaluateSelectorRequest,
              com.zhijiejiaoyu.glory_api.live.GetEvaluateSelectorResponse>(
                service, METHODID_GET_EVALUATE_SELECTOR)))
        .addMethod(
          getListPersonalEvaluateMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.ListPersonalEvaluateRequest,
              com.zhijiejiaoyu.glory_api.live.ListPersonalEvaluateResponse>(
                service, METHODID_LIST_PERSONAL_EVALUATE)))
        .addMethod(
          getGetEvaluateDetailMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.GetEvaluateDetailRequest,
              com.zhijiejiaoyu.glory_api.live.GetEvaluateDetailResponse>(
                service, METHODID_GET_EVALUATE_DETAIL)))
        .addMethod(
          getSubmitEvaluateMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.SubmitEvaluateRequest,
              com.zhijiejiaoyu.glory_api.live.SubmitEvaluateResponse>(
                service, METHODID_SUBMIT_EVALUATE)))
        .addMethod(
          getListUnevaluatedRoomMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.ListUnevaluatedRoomRequest,
              com.zhijiejiaoyu.glory_api.live.ListUnevaluatedRoomResponse>(
                service, METHODID_LIST_UNEVALUATED_ROOM)))
        .addMethod(
          getListStudentEvaluationsMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.ListStudentEvalutionsRequest,
              com.zhijiejiaoyu.glory_api.live.ListStudentEvalutionsResponse>(
                service, METHODID_LIST_STUDENT_EVALUATIONS)))
        .addMethod(
          getIgnoreEvaluationMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.IgnoreLiveEvaluationRequest,
              com.zhijiejiaoyu.glory_api.live.IgnoreLiveEvaluationResponse>(
                service, METHODID_IGNORE_EVALUATION)))
        .addMethod(
          getGetRankMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.GetRankRequest,
              com.zhijiejiaoyu.glory_api.live.GetRankResponse>(
                service, METHODID_GET_RANK)))
        .addMethod(
          getRecordLiveCallbackMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.RecordLiveCallbackRequest,
              com.zhijiejiaoyu.glory_api.live.RecordLiveCallbackResponse>(
                service, METHODID_RECORD_LIVE_CALLBACK)))
        .addMethod(
          getVideoToTextCallbackMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.VideoToTextCallbackRequest,
              com.zhijiejiaoyu.glory_api.live.VideoToTextCallbackResponse>(
                service, METHODID_VIDEO_TO_TEXT_CALLBACK)))
        .addMethod(
          getLiveStreamCallbackMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.LiveStreamCallbackRequest,
              com.zhijiejiaoyu.glory_api.live.LiveStreamCallbackResponse>(
                service, METHODID_LIVE_STREAM_CALLBACK)))
        .addMethod(
          getRegenerationAiFeedbackMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.RegenerationAiFeedbackRequest,
              com.zhijiejiaoyu.glory_api.live.RegenerationAiFeedbackResponse>(
                service, METHODID_REGENERATION_AI_FEEDBACK)))
        .addMethod(
          getSubmitUserAttitudeForAiResultMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.SubmitUserAttitudeForAIResultRequest,
              com.zhijiejiaoyu.glory_api.live.SubmitUserAttitudeForAIResultResponse>(
                service, METHODID_SUBMIT_USER_ATTITUDE_FOR_AI_RESULT)))
        .addMethod(
          getPreheatProductMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.PreheatRequest,
              com.zhijiejiaoyu.glory_api.live.PreheatResponse>(
                service, METHODID_PREHEAT_PRODUCT)))
        .addMethod(
          getPublicPriceMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.PublicPriceRequest,
              com.zhijiejiaoyu.glory_api.live.PublicPriceResponse>(
                service, METHODID_PUBLIC_PRICE)))
        .addMethod(
          getListTenantSystemMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.ListTenantSystemRequest,
              com.zhijiejiaoyu.glory_api.tenant.ListTenantSystemResponse>(
                service, METHODID_LIST_TENANT_SYSTEM)))
        .addMethod(
          getCreateTenantMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.CreateTenantRequest,
              com.zhijiejiaoyu.glory_api.tenant.CreateTenantResponse>(
                service, METHODID_CREATE_TENANT)))
        .addMethod(
          getGetTenantMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.GetTenantRequest,
              com.zhijiejiaoyu.glory_api.tenant.GetTenantResponse>(
                service, METHODID_GET_TENANT)))
        .addMethod(
          getUpdateTenantMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.UpdateTenantRequest,
              com.zhijiejiaoyu.glory_api.tenant.UpdateTenantResponse>(
                service, METHODID_UPDATE_TENANT)))
        .addMethod(
          getDeleteTenantMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.DeleteTenantRequest,
              com.zhijiejiaoyu.glory_api.tenant.DeleteTenantResponse>(
                service, METHODID_DELETE_TENANT)))
        .addMethod(
          getListTenantMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.ListTenantRequest,
              com.zhijiejiaoyu.glory_api.tenant.ListTenantResponse>(
                service, METHODID_LIST_TENANT)))
        .addMethod(
          getGetTenantOrgMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.GetTenantOrgRequest,
              com.zhijiejiaoyu.glory_api.tenant.GetTenantOrgResponse>(
                service, METHODID_GET_TENANT_ORG)))
        .addMethod(
          getEnterTenantMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.EnterTenantRequest,
              com.zhijiejiaoyu.glory_api.tenant.EnterTenantResponse>(
                service, METHODID_ENTER_TENANT)))
        .addMethod(
          getExitTenantMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.ExitTenantRequest,
              com.zhijiejiaoyu.glory_api.tenant.ExitTenantResponse>(
                service, METHODID_EXIT_TENANT)))
        .addMethod(
          getIsEnterTenantMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.IsEnterTenantRequest,
              com.zhijiejiaoyu.glory_api.tenant.IsTenantResponse>(
                service, METHODID_IS_ENTER_TENANT)))
        .addMethod(
          getInitTenantMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.InitTenantRequest,
              com.zhijiejiaoyu.glory_api.tenant.InitTenantResponse>(
                service, METHODID_INIT_TENANT)))
        .addMethod(
          getCreateTenantCourseMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.CreateTenantCourseRequest,
              com.zhijiejiaoyu.glory_api.tenant.CreateTenantCourseResponse>(
                service, METHODID_CREATE_TENANT_COURSE)))
        .addMethod(
          getListTenantCourseMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.ListTenantRequest,
              com.zhijiejiaoyu.glory_api.tenant.ListTenantResponse>(
                service, METHODID_LIST_TENANT_COURSE)))
        .addMethod(
          getCreateTenantDeptMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.CreateTenantDeptRequest,
              com.zhijiejiaoyu.glory_api.tenant.CreateTenantDeptResponse>(
                service, METHODID_CREATE_TENANT_DEPT)))
        .addMethod(
          getUpdateTenantDeptMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.UpdateTenantDeptRequest,
              com.zhijiejiaoyu.glory_api.tenant.UpdateTenantDeptResponse>(
                service, METHODID_UPDATE_TENANT_DEPT)))
        .addMethod(
          getDeleteTenantDeptMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.DeleteTenantDeptRequest,
              com.zhijiejiaoyu.glory_api.tenant.DeleteTenantDeptResponse>(
                service, METHODID_DELETE_TENANT_DEPT)))
        .addMethod(
          getGetTenantDeptMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptRequest,
              com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptResponse>(
                service, METHODID_GET_TENANT_DEPT)))
        .addMethod(
          getGetTenantDeptTypeMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptTypeRequest,
              com.zhijiejiaoyu.glory_api.tenant.GetTenantDeptTypeResponse>(
                service, METHODID_GET_TENANT_DEPT_TYPE)))
        .addMethod(
          getListTenantDeptMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.ListTenantDeptRequest,
              com.zhijiejiaoyu.glory_api.tenant.ListTenantDeptResponse>(
                service, METHODID_LIST_TENANT_DEPT)))
        .addMethod(
          getCreateTenantUserMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.CreateTenantUserRequest,
              com.zhijiejiaoyu.glory_api.tenant.CreateTenantUserResponse>(
                service, METHODID_CREATE_TENANT_USER)))
        .addMethod(
          getDeleteTenantUserMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.DeleteTenantUserRequest,
              com.zhijiejiaoyu.glory_api.tenant.DeleteTenantUserResponse>(
                service, METHODID_DELETE_TENANT_USER)))
        .addMethod(
          getUpdateTenantUserMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserRequest,
              com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserResponse>(
                service, METHODID_UPDATE_TENANT_USER)))
        .addMethod(
          getGetTenantUserMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.GetTenantUserRequest,
              com.zhijiejiaoyu.glory_api.tenant.GetTenantUserResponse>(
                service, METHODID_GET_TENANT_USER)))
        .addMethod(
          getListTenantUserMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.ListTenantUserRequest,
              com.zhijiejiaoyu.glory_api.tenant.ListTenantUserResponse>(
                service, METHODID_LIST_TENANT_USER)))
        .addMethod(
          getListTenantStudentMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.ListTenantStudentRequest,
              com.zhijiejiaoyu.glory_api.tenant.ListTenantStudentResponse>(
                service, METHODID_LIST_TENANT_STUDENT)))
        .addMethod(
          getUpdateTenantUserPasswordMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserPasswordRequest,
              com.zhijiejiaoyu.glory_api.tenant.UpdateTenantUserPasswordResponse>(
                service, METHODID_UPDATE_TENANT_USER_PASSWORD)))
        .addMethod(
          getUpdateTenantConfigMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.UpdateTenantConfigRequest,
              com.zhijiejiaoyu.glory_api.tenant.UpdateTenantConfigResponse>(
                service, METHODID_UPDATE_TENANT_CONFIG)))
        .addMethod(
          getListTenantConfigMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.tenant.ListTenantConfigRequest,
              com.zhijiejiaoyu.glory_api.tenant.ListTenantConfigResponse>(
                service, METHODID_LIST_TENANT_CONFIG)))
        .addMethod(
          getCreateShortVideoMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoRequest,
              com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoResponse>(
                service, METHODID_CREATE_SHORT_VIDEO)))
        .addMethod(
          getStageShortVideoMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.StageShortVideoRequest,
              com.zhijiejiaoyu.glory_api.short_video.StageShortVideoResponse>(
                service, METHODID_STAGE_SHORT_VIDEO)))
        .addMethod(
          getListMyShortVideoMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.ListMyShortVideoRequest,
              com.zhijiejiaoyu.glory_api.short_video.ListMyShortVideoResponse>(
                service, METHODID_LIST_MY_SHORT_VIDEO)))
        .addMethod(
          getListMyStageVideoMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.ListMyStageVideoRequest,
              com.zhijiejiaoyu.glory_api.short_video.ListMyStageVideoResponse>(
                service, METHODID_LIST_MY_STAGE_VIDEO)))
        .addMethod(
          getListMyLikeVideoMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.ListMyLikeVideoRequest,
              com.zhijiejiaoyu.glory_api.short_video.ListMyLikeVideoResponse>(
                service, METHODID_LIST_MY_LIKE_VIDEO)))
        .addMethod(
          getListMyFavoriteVideoMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.ListMyFavoriteVideoRequest,
              com.zhijiejiaoyu.glory_api.short_video.ListMyFavoriteVideoResponse>(
                service, METHODID_LIST_MY_FAVORITE_VIDEO)))
        .addMethod(
          getGetShortVideoMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.GetShortVideoRequest,
              com.zhijiejiaoyu.glory_api.short_video.GetShortVideoResponse>(
                service, METHODID_GET_SHORT_VIDEO)))
        .addMethod(
          getUpdateShortVideoMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.UpdateShortVideoRequest,
              com.zhijiejiaoyu.glory_api.short_video.UpdateShortVideoResponse>(
                service, METHODID_UPDATE_SHORT_VIDEO)))
        .addMethod(
          getDeleteShortVideoMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoRequest,
              com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoResponse>(
                service, METHODID_DELETE_SHORT_VIDEO)))
        .addMethod(
          getGetStageVideoMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.GetStageVideoRequest,
              com.zhijiejiaoyu.glory_api.short_video.GetStageVideoResponse>(
                service, METHODID_GET_STAGE_VIDEO)))
        .addMethod(
          getDeleteStageVideoMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.DeleteStageVideoRequest,
              com.zhijiejiaoyu.glory_api.short_video.DeleteStageVideoResponse>(
                service, METHODID_DELETE_STAGE_VIDEO)))
        .addMethod(
          getUpdateStageVideoMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.UpdateStageVideoRequest,
              com.zhijiejiaoyu.glory_api.short_video.UpdateStageVideoResponse>(
                service, METHODID_UPDATE_STAGE_VIDEO)))
        .addMethod(
          getManagementListShortVideoMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.ManagementListShortVideoRequest,
              com.zhijiejiaoyu.glory_api.short_video.ManagementListShortVideoResponse>(
                service, METHODID_MANAGEMENT_LIST_SHORT_VIDEO)))
        .addMethod(
          getManagementCensorShortVideoMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.ManagementCensorShortVideoRequest,
              com.zhijiejiaoyu.glory_api.short_video.ManagementCensorShortVideoResponse>(
                service, METHODID_MANAGEMENT_CENSOR_SHORT_VIDEO)))
        .addMethod(
          getManagementDeleteShortVideoMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.ManagementDeleteShortVideoRequest,
              com.zhijiejiaoyu.glory_api.short_video.ManagementDeleteShortVideoResponse>(
                service, METHODID_MANAGEMENT_DELETE_SHORT_VIDEO)))
        .addMethod(
          getListShortVideoMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.ListShortVideoRequest,
              com.zhijiejiaoyu.glory_api.short_video.ListShortVideoResponse>(
                service, METHODID_LIST_SHORT_VIDEO)))
        .addMethod(
          getLikeShortVideoMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.LikeShortVideoRequest,
              com.zhijiejiaoyu.glory_api.short_video.LikeShortVideoResponse>(
                service, METHODID_LIKE_SHORT_VIDEO)))
        .addMethod(
          getFavoriteShortVideoMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.FavoriteShortVideoRequest,
              com.zhijiejiaoyu.glory_api.short_video.FavoriteShortVideoResponse>(
                service, METHODID_FAVORITE_SHORT_VIDEO)))
        .addMethod(
          getCreateShortVideoCommentMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoCommentRequest,
              com.zhijiejiaoyu.glory_api.short_video.CreateShortVideoCommentResponse>(
                service, METHODID_CREATE_SHORT_VIDEO_COMMENT)))
        .addMethod(
          getDeleteShortVideoCommentMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoCommentRequest,
              com.zhijiejiaoyu.glory_api.short_video.DeleteShortVideoCommentResponse>(
                service, METHODID_DELETE_SHORT_VIDEO_COMMENT)))
        .addMethod(
          getListShortVideoCommentMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.ListShortVideoCommentRequest,
              com.zhijiejiaoyu.glory_api.short_video.ListShortVideoCommentResponse>(
                service, METHODID_LIST_SHORT_VIDEO_COMMENT)))
        .addMethod(
          getTeacherListStudentShortVideoMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.TeacherListStudentShortVideoRequest,
              com.zhijiejiaoyu.glory_api.short_video.TeacherListStudentShortVideoResponse>(
                service, METHODID_TEACHER_LIST_STUDENT_SHORT_VIDEO)))
        .addMethod(
          getCreateCouponMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.CreateCouponRequest,
              com.zhijiejiaoyu.glory_api.shop.CreateCouponResponse>(
                service, METHODID_CREATE_COUPON)))
        .addMethod(
          getListCouponMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.ListCouponRequest,
              com.zhijiejiaoyu.glory_api.shop.ListCouponResponse>(
                service, METHODID_LIST_COUPON)))
        .addMethod(
          getCouponDetailMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.GetCouponDetailRequest,
              com.zhijiejiaoyu.glory_api.shop.GetCouponDetailResponse>(
                service, METHODID_COUPON_DETAIL)))
        .addMethod(
          getUpdateCouponMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.UpdateCouponRequest,
              com.zhijiejiaoyu.glory_api.shop.UpdateCouponResponse>(
                service, METHODID_UPDATE_COUPON)))
        .addMethod(
          getDeleteCouponMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.DeleteCouponRequest,
              com.zhijiejiaoyu.glory_api.shop.DeleteCouponResponse>(
                service, METHODID_DELETE_COUPON)))
        .addMethod(
          getAbolishCouponMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.AbolishCouponRequest,
              com.zhijiejiaoyu.glory_api.shop.AbolishCouponResponse>(
                service, METHODID_ABOLISH_COUPON)))
        .addMethod(
          getUpdateCouponDistributionStatusMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.UpdateCouponDistributionStatusRequest,
              com.zhijiejiaoyu.glory_api.shop.UpdateCouponDistributionStatusResponse>(
                service, METHODID_UPDATE_COUPON_DISTRIBUTION_STATUS)))
        .addMethod(
          getClaimCouponMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.ClaimCouponRequest,
              com.zhijiejiaoyu.glory_api.shop.ClaimCouponResponse>(
                service, METHODID_CLAIM_COUPON)))
        .addMethod(
          getListMyCouponMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.ListMyCouponRequest,
              com.zhijiejiaoyu.glory_api.shop.ListMyCouponResponse>(
                service, METHODID_LIST_MY_COUPON)))
        .addMethod(
          getCreateActivityMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.CreateActivityRequest,
              com.zhijiejiaoyu.glory_api.shop.CreateActivityResponse>(
                service, METHODID_CREATE_ACTIVITY)))
        .addMethod(
          getListActivityMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.ListActivityRequest,
              com.zhijiejiaoyu.glory_api.shop.ListActivityResponse>(
                service, METHODID_LIST_ACTIVITY)))
        .addMethod(
          getActivityDetailMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.GetActivityDetailRequest,
              com.zhijiejiaoyu.glory_api.shop.GetActivityDetailResponse>(
                service, METHODID_ACTIVITY_DETAIL)))
        .addMethod(
          getUpdateActivityMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.UpdateActivityRequest,
              com.zhijiejiaoyu.glory_api.shop.UpdateActivityResponse>(
                service, METHODID_UPDATE_ACTIVITY)))
        .addMethod(
          getDeleteActivityMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.DeleteActivityRequest,
              com.zhijiejiaoyu.glory_api.shop.DeleteActivityResponse>(
                service, METHODID_DELETE_ACTIVITY)))
        .addMethod(
          getDisableActivityMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.shop.DisableActivityRequest,
              com.zhijiejiaoyu.glory_api.shop.DisableActivityResponse>(
                service, METHODID_DISABLE_ACTIVITY)))
        .addMethod(
          getGetCouponAndIntroducingProductMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.GetCouponAndIntroducingProductRequest,
              com.zhijiejiaoyu.glory_api.live.GetCouponAndIntroducingProductResponse>(
                service, METHODID_GET_COUPON_AND_INTRODUCING_PRODUCT)))
        .addMethod(
          getCreateCourseMaterialBoxMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.CreateCourseMaterialBoxRequest,
              com.zhijiejiaoyu.glory_api.course.CreateCourseMaterialBoxResponse>(
                service, METHODID_CREATE_COURSE_MATERIAL_BOX)))
        .addMethod(
          getUpdateCourseMaterialBoxMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.UpdateCourseMaterialBoxRequest,
              com.zhijiejiaoyu.glory_api.course.UpdateCourseMaterialBoxResponse>(
                service, METHODID_UPDATE_COURSE_MATERIAL_BOX)))
        .addMethod(
          getListCourseMaterialBoxMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.ListCourseMaterialBoxRequest,
              com.zhijiejiaoyu.glory_api.course.ListCourseMaterialBoxResponse>(
                service, METHODID_LIST_COURSE_MATERIAL_BOX)))
        .addMethod(
          getDeleteCourseMaterialBoxMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialBoxRequest,
              com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialBoxResponse>(
                service, METHODID_DELETE_COURSE_MATERIAL_BOX)))
        .addMethod(
          getUploadCourseMaterialMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.UploadCourseMaterialRequest,
              com.zhijiejiaoyu.glory_api.course.UploadCourseMaterialResponse>(
                service, METHODID_UPLOAD_COURSE_MATERIAL)))
        .addMethod(
          getListCourseMaterialMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.ListCourseMaterialRequest,
              com.zhijiejiaoyu.glory_api.course.ListCourseMaterialResponse>(
                service, METHODID_LIST_COURSE_MATERIAL)))
        .addMethod(
          getDeleteCourseMaterialMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialRequest,
              com.zhijiejiaoyu.glory_api.course.DeleteCourseMaterialResponse>(
                service, METHODID_DELETE_COURSE_MATERIAL)))
        .addMethod(
          getGetCourseTypeTreeMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.GetCourseTypeTreeRequest,
              com.zhijiejiaoyu.glory_api.course.GetCourseTypeTreeResponse>(
                service, METHODID_GET_COURSE_TYPE_TREE)))
        .addMethod(
          getGetCourseTypeListMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.GetCourseTypeListRequest,
              com.zhijiejiaoyu.glory_api.course.GetCourseTypeListResponse>(
                service, METHODID_GET_COURSE_TYPE_LIST)))
        .addMethod(
          getGetCourseModuleCodeMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.GetCourseModuleCodeRequest,
              com.zhijiejiaoyu.glory_api.course.GetCourseModuleCodeResponse>(
                service, METHODID_GET_COURSE_MODULE_CODE)))
        .addMethod(
          getGetCourseChapterCodeMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.GetCourseChapterCodeRequest,
              com.zhijiejiaoyu.glory_api.course.GetCourseChapterCodeResponse>(
                service, METHODID_GET_COURSE_CHAPTER_CODE)))
        .addMethod(
          getCreateCourseModuleMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.CreateCourseModuleRequest,
              com.zhijiejiaoyu.glory_api.course.CreateCourseModuleResponse>(
                service, METHODID_CREATE_COURSE_MODULE)))
        .addMethod(
          getGetCourseModuleMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.GetCourseModuleRequest,
              com.zhijiejiaoyu.glory_api.course.GetCourseModuleResponse>(
                service, METHODID_GET_COURSE_MODULE)))
        .addMethod(
          getUpdateCourseModuleMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.UpdateCourseModuleRequest,
              com.zhijiejiaoyu.glory_api.course.UpdateCourseModuleResponse>(
                service, METHODID_UPDATE_COURSE_MODULE)))
        .addMethod(
          getDeleteCourseModuleMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.DeleteCourseModuleRequest,
              com.zhijiejiaoyu.glory_api.course.DeleteCourseModuleResponse>(
                service, METHODID_DELETE_COURSE_MODULE)))
        .addMethod(
          getListCourseModuleMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.ListCourseModuleRequest,
              com.zhijiejiaoyu.glory_api.course.ListCourseModuleResponse>(
                service, METHODID_LIST_COURSE_MODULE)))
        .addMethod(
          getListLatestCourseMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.ListLatestCourseRequest,
              com.zhijiejiaoyu.glory_api.course.ListLatestCourseResponse>(
                service, METHODID_LIST_LATEST_COURSE)))
        .addMethod(
          getListHottestCourseMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.ListHottestCourseRequest,
              com.zhijiejiaoyu.glory_api.course.ListHottestCourseResponse>(
                service, METHODID_LIST_HOTTEST_COURSE)))
        .addMethod(
          getCreateCmCourseMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.CreateCmCourseRequest,
              com.zhijiejiaoyu.glory_api.course.CreateCmCourseResponse>(
                service, METHODID_CREATE_CM_COURSE)))
        .addMethod(
          getPreviewCmCourseMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.PreviewCmCourseRequest,
              com.zhijiejiaoyu.glory_api.course.PreviewCmCourseResponse>(
                service, METHODID_PREVIEW_CM_COURSE)))
        .addMethod(
          getCreateNmCourseResourceMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResourceRequest,
              com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResourceResponse>(
                service, METHODID_CREATE_NM_COURSE_RESOURCE)))
        .addMethod(
          getCreateNmCourseChapterMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterRequest,
              com.zhijiejiaoyu.glory_api.course.CreateNmCourseChapterResponse>(
                service, METHODID_CREATE_NM_COURSE_CHAPTER)))
        .addMethod(
          getCreateNmCourseMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.CreateNmCourseRequest,
              com.zhijiejiaoyu.glory_api.course.CreateNmCourseResponse>(
                service, METHODID_CREATE_NM_COURSE)))
        .addMethod(
          getUpdateNmCourseMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.UpdateNmCourseRequest,
              com.zhijiejiaoyu.glory_api.course.UpdateNmCourseResponse>(
                service, METHODID_UPDATE_NM_COURSE)))
        .addMethod(
          getListNmCourseMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.ListNmCourseRequest,
              com.zhijiejiaoyu.glory_api.course.ListNmCourseResponse>(
                service, METHODID_LIST_NM_COURSE)))
        .addMethod(
          getNmCourseDetailMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.NmCourseDetailRequest,
              com.zhijiejiaoyu.glory_api.course.NmCourseDetailResponse>(
                service, METHODID_NM_COURSE_DETAIL)))
        .addMethod(
          getDeleteNmCourseMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.DeleteNmCourseRequest,
              com.zhijiejiaoyu.glory_api.course.DeleteNmCourseResponse>(
                service, METHODID_DELETE_NM_COURSE)))
        .addMethod(
          getCreateCourseMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.CreateCourseRequest,
              com.zhijiejiaoyu.glory_api.course.CreateCourseResponse>(
                service, METHODID_CREATE_COURSE)))
        .addMethod(
          getGetCourseMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.GetCourseRequest,
              com.zhijiejiaoyu.glory_api.course.GetCourseResponse>(
                service, METHODID_GET_COURSE)))
        .addMethod(
          getUpdateCourseMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.UpdateCourseRequest,
              com.zhijiejiaoyu.glory_api.course.UpdateCourseResponse>(
                service, METHODID_UPDATE_COURSE)))
        .addMethod(
          getDeleteCourseMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.DeleteCourseRequest,
              com.zhijiejiaoyu.glory_api.course.DeleteCourseResponse>(
                service, METHODID_DELETE_COURSE)))
        .addMethod(
          getListCourseMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.ListCourseRequest,
              com.zhijiejiaoyu.glory_api.course.ListCourseResponse>(
                service, METHODID_LIST_COURSE)))
        .addMethod(
          getCreateKnowledgeGraphMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.CreateKnowledgeGraphRequest,
              com.zhijiejiaoyu.glory_api.course.CreateKnowledgeGraphResponse>(
                service, METHODID_CREATE_KNOWLEDGE_GRAPH)))
        .addMethod(
          getGetKnowledgeGraphMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphRequest,
              com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphResponse>(
                service, METHODID_GET_KNOWLEDGE_GRAPH)))
        .addMethod(
          getGetKnowledgeGraphNodeMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphNodeRequest,
              com.zhijiejiaoyu.glory_api.course.GetKnowledgeGraphNodeResponse>(
                service, METHODID_GET_KNOWLEDGE_GRAPH_NODE)))
        .addMethod(
          getGetCourseIdsMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.GetCourseIdsRequest,
              com.zhijiejiaoyu.glory_api.course.GetCourseIdsResponse>(
                service, METHODID_GET_COURSE_IDS)))
        .addMethod(
          getEnrollCourseMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.EnrollCourseRequest,
              com.zhijiejiaoyu.glory_api.course.EnrollCourseResponse>(
                service, METHODID_ENROLL_COURSE)))
        .addMethod(
          getDeleteMyCourseMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.DeleteMyCourseRequest,
              com.zhijiejiaoyu.glory_api.course.DeleteMyCourseResponse>(
                service, METHODID_DELETE_MY_COURSE)))
        .addMethod(
          getUpdateCourseProgressMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.UpdateCourseProgressRequest,
              com.zhijiejiaoyu.glory_api.course.UpdateCourseProgressResponse>(
                service, METHODID_UPDATE_COURSE_PROGRESS)))
        .addMethod(
          getListMyCourseMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.ListMyCourseRequest,
              com.zhijiejiaoyu.glory_api.course.ListMyCourseResponse>(
                service, METHODID_LIST_MY_COURSE)))
        .addMethod(
          getListTeachingPlanMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.ListTeachingPlanRequest,
              com.zhijiejiaoyu.glory_api.course.ListTeachingPlanResponse>(
                service, METHODID_LIST_TEACHING_PLAN)))
        .addMethod(
          getCreateTeachingPlanMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.CreateTeachingPlanRequest,
              com.zhijiejiaoyu.glory_api.course.CreateTeachingPlanResponse>(
                service, METHODID_CREATE_TEACHING_PLAN)))
        .addMethod(
          getUpdateTeachingPlanMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.UpdateTeachingPlanRequest,
              com.zhijiejiaoyu.glory_api.course.UpdateTeachingPlanResponse>(
                service, METHODID_UPDATE_TEACHING_PLAN)))
        .addMethod(
          getDeleteTeachingPlanMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.DeleteTeachingPlanRequest,
              com.zhijiejiaoyu.glory_api.course.DeleteTeachingPlanResponse>(
                service, METHODID_DELETE_TEACHING_PLAN)))
        .addMethod(
          getUpdateTeachingCourseProgressMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.UpdateTeachingCourseProgressRequest,
              com.zhijiejiaoyu.glory_api.course.UpdateTeachingCourseProgressResponse>(
                service, METHODID_UPDATE_TEACHING_COURSE_PROGRESS)))
        .addMethod(
          getCreateEduSchemeMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.CreateEduSchemeRequest,
              com.zhijiejiaoyu.glory_api.course.CreateEduSchemeResponse>(
                service, METHODID_CREATE_EDU_SCHEME)))
        .addMethod(
          getUpdateEduSchemeMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.UpdateEduSchemeRequest,
              com.zhijiejiaoyu.glory_api.course.UpdateEduSchemeResponse>(
                service, METHODID_UPDATE_EDU_SCHEME)))
        .addMethod(
          getListEduSchemeMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.ListEduSchemeRequest,
              com.zhijiejiaoyu.glory_api.course.ListEduSchemeResponse>(
                service, METHODID_LIST_EDU_SCHEME)))
        .addMethod(
          getEduSchemeDetailMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.EduSchemeDetailRequest,
              com.zhijiejiaoyu.glory_api.course.EduSchemeDetailResponse>(
                service, METHODID_EDU_SCHEME_DETAIL)))
        .addMethod(
          getDeleteEduSchemeMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.DeleteEduSchemeRequest,
              com.zhijiejiaoyu.glory_api.course.DeleteEduSchemeResponse>(
                service, METHODID_DELETE_EDU_SCHEME)))
        .addMethod(
          getDistributeEduSchemeMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.DistributeEduSchemeRequest,
              com.zhijiejiaoyu.glory_api.course.DistributeEduSchemeResponse>(
                service, METHODID_DISTRIBUTE_EDU_SCHEME)))
        .addMethod(
          getGetEduSchemeLikeCourseMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.GetEduSchemeLikeCourseRequest,
              com.zhijiejiaoyu.glory_api.course.GetEduSchemeLikeCourseResponse>(
                service, METHODID_GET_EDU_SCHEME_LIKE_COURSE)))
        .addMethod(
          getGetAndroidQRcodeMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.GetAndroidQRCodeRequest,
              com.zhijiejiaoyu.glory_api.course.GetAndroidQRCodeResponse>(
                service, METHODID_GET_ANDROID_QRCODE)))
        .addMethod(
          getCreateJobMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.CreateJobRequest,
              com.zhijiejiaoyu.glory_api.course.CreateJobResponse>(
                service, METHODID_CREATE_JOB)))
        .addMethod(
          getUpdateJobMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.UpdateJobRequest,
              com.zhijiejiaoyu.glory_api.course.UpdateJobResponse>(
                service, METHODID_UPDATE_JOB)))
        .addMethod(
          getDeleteJobMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.DeleteJobRequest,
              com.zhijiejiaoyu.glory_api.course.DeleteJobResponse>(
                service, METHODID_DELETE_JOB)))
        .addMethod(
          getListJobMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.ListJobRequest,
              com.zhijiejiaoyu.glory_api.course.ListJobResponse>(
                service, METHODID_LIST_JOB)))
        .addMethod(
          getGetSchooLiveChartMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.traffic.GetSchoolLiveTrafficChartRequest,
              com.zhijiejiaoyu.glory_api.traffic.GetSchoolLiveTrafficChartResponse>(
                service, METHODID_GET_SCHOO_LIVE_CHART)))
        .addMethod(
          getListSchooLiveTrafficMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.traffic.ListSchoolLiveTrafficRequest,
              com.zhijiejiaoyu.glory_api.traffic.ListSchoolLiveTrafficResponse>(
                service, METHODID_LIST_SCHOO_LIVE_TRAFFIC)))
        .addMethod(
          getGetLiveAllTrafficMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.traffic.GetAllLiveTrafficRequest,
              com.zhijiejiaoyu.glory_api.traffic.GetAllLiveTrafficResponse>(
                service, METHODID_GET_LIVE_ALL_TRAFFIC)))
        .addMethod(
          getGetSchooLiveTrafficMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.traffic.GetSchooLiveTrafficRequest,
              com.zhijiejiaoyu.glory_api.traffic.GetSchooLiveTrafficResponse>(
                service, METHODID_GET_SCHOO_LIVE_TRAFFIC)))
        .addMethod(
          getListTenantTrafficConfigMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.traffic.ListTenantLiveTrafficConfigRequest,
              com.zhijiejiaoyu.glory_api.traffic.ListTenantLiveTrafficConfigResponse>(
                service, METHODID_LIST_TENANT_TRAFFIC_CONFIG)))
        .addMethod(
          getUpdateTenantTrafficConfigMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.traffic.UpdateTenantLiveTrafficConfigRequest,
              com.zhijiejiaoyu.glory_api.traffic.UpdateTenantLiveTrafficConfigResponse>(
                service, METHODID_UPDATE_TENANT_TRAFFIC_CONFIG)))
        .addMethod(
          getListTrafficWarningMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.traffic.ListTrafficWarningRequest,
              com.zhijiejiaoyu.glory_api.traffic.ListTrafficWarningResponse>(
                service, METHODID_LIST_TRAFFIC_WARNING)))
        .addMethod(
          getDeleteTrafficWarningMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.traffic.DeleteTrafficWarningRequest,
              com.zhijiejiaoyu.glory_api.traffic.DeleteTrafficWarningResponse>(
                service, METHODID_DELETE_TRAFFIC_WARNING)))
        .addMethod(
          getCreateLiveControlMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.CreateLiveControlRequest,
              com.zhijiejiaoyu.glory_api.live.CreateLiveControlResponse>(
                service, METHODID_CREATE_LIVE_CONTROL)))
        .addMethod(
          getUpdateLiveControlMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.UpdateLiveControlRequest,
              com.zhijiejiaoyu.glory_api.live.UpdateLiveControlResponse>(
                service, METHODID_UPDATE_LIVE_CONTROL)))
        .addMethod(
          getListLiveControlMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.ListLiveControlRequest,
              com.zhijiejiaoyu.glory_api.live.ListLiveControlResponse>(
                service, METHODID_LIST_LIVE_CONTROL)))
        .addMethod(
          getDeleteLiveControlMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.DeleteLiveControlRequest,
              com.zhijiejiaoyu.glory_api.live.DeleteLiveControlResponse>(
                service, METHODID_DELETE_LIVE_CONTROL)))
        .addMethod(
          getCreateQuickEvaluationStandardMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationRequest,
              com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationResponse>(
                service, METHODID_CREATE_QUICK_EVALUATION_STANDARD)))
        .addMethod(
          getUpdateQuickEvaluationStandardMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.UpdateQuickEvaluationRequest,
              com.zhijiejiaoyu.glory_api.live.UpdateQuickEvaluationResponse>(
                service, METHODID_UPDATE_QUICK_EVALUATION_STANDARD)))
        .addMethod(
          getDeleteQuickEvaluationStandardMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationRequest,
              com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationResponse>(
                service, METHODID_DELETE_QUICK_EVALUATION_STANDARD)))
        .addMethod(
          getListQuickEvaluationStandardMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationRequest,
              com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationResponse>(
                service, METHODID_LIST_QUICK_EVALUATION_STANDARD)))
        .addMethod(
          getGetLiveReplayMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.GetLiveReplayRequest,
              com.zhijiejiaoyu.glory_api.live.GetLiveReplayResponse>(
                service, METHODID_GET_LIVE_REPLAY)))
        .addMethod(
          getCreateQuickEvaluationReportMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationReportRequest,
              com.zhijiejiaoyu.glory_api.live.CreateQuickEvaluationReportResponse>(
                service, METHODID_CREATE_QUICK_EVALUATION_REPORT)))
        .addMethod(
          getListQuickEvaluationReportMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationReportRequest,
              com.zhijiejiaoyu.glory_api.live.ListQuickEvaluationReportResponse>(
                service, METHODID_LIST_QUICK_EVALUATION_REPORT)))
        .addMethod(
          getGetQuickEvaluationReportMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationReportRequest,
              com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationReportResponse>(
                service, METHODID_GET_QUICK_EVALUATION_REPORT)))
        .addMethod(
          getDeleteQuickEvaluationReportMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationReportRequest,
              com.zhijiejiaoyu.glory_api.live.DeleteQuickEvaluationReportResponse>(
                service, METHODID_DELETE_QUICK_EVALUATION_REPORT)))
        .addMethod(
          getGetQuickEvaluationDetailMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationDetailRequest,
              com.zhijiejiaoyu.glory_api.live.GetQuickEvaluationDetailResponse>(
                service, METHODID_GET_QUICK_EVALUATION_DETAIL)))
        .addMethod(
          getCreateVersionLogMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.CreateVersionLogRequest,
              com.zhijiejiaoyu.glory_api.course.CreateVersionLogResponse>(
                service, METHODID_CREATE_VERSION_LOG)))
        .addMethod(
          getUpdateVersionLogMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.UpdateVersionLogRequest,
              com.zhijiejiaoyu.glory_api.course.UpdateVersionLogResponse>(
                service, METHODID_UPDATE_VERSION_LOG)))
        .addMethod(
          getListVersionLogMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.ListVersionLogRequest,
              com.zhijiejiaoyu.glory_api.course.ListVersionLogResponse>(
                service, METHODID_LIST_VERSION_LOG)))
        .addMethod(
          getDeleteVersionLogMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.DeleteVersionLogRequest,
              com.zhijiejiaoyu.glory_api.course.DeleteVersionLogResponse>(
                service, METHODID_DELETE_VERSION_LOG)))
        .addMethod(
          getGetLatestVersionMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.course.GetLatestVersionRequest,
              com.zhijiejiaoyu.glory_api.course.GetLatestVersionResponse>(
                service, METHODID_GET_LATEST_VERSION)))
        .addMethod(
          getGetTaskConfigMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.GetTaskConfigRequest,
              com.zhijiejiaoyu.glory_api.task.GetTaskConfigResponse>(
                service, METHODID_GET_TASK_CONFIG)))
        .addMethod(
          getCreateSystemTaskMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.CreateSystemTaskRequest,
              com.zhijiejiaoyu.glory_api.task.CreateSystemTaskResponse>(
                service, METHODID_CREATE_SYSTEM_TASK)))
        .addMethod(
          getListSystemTaskMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.ListSystemTaskRequest,
              com.zhijiejiaoyu.glory_api.task.ListSystemTaskResponse>(
                service, METHODID_LIST_SYSTEM_TASK)))
        .addMethod(
          getGetSystemTaskMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.GetSystemTaskRequest,
              com.zhijiejiaoyu.glory_api.task.GetSystemTaskResponse>(
                service, METHODID_GET_SYSTEM_TASK)))
        .addMethod(
          getUpdateSystemTaskMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.UpdateSystemTaskRequest,
              com.zhijiejiaoyu.glory_api.task.UpdateSystemTaskResponse>(
                service, METHODID_UPDATE_SYSTEM_TASK)))
        .addMethod(
          getDeleteSystemTaskMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.DeleteSystemTaskRequest,
              com.zhijiejiaoyu.glory_api.task.DeleteSystemTaskResponse>(
                service, METHODID_DELETE_SYSTEM_TASK)))
        .addMethod(
          getCreateTeacherTaskTemplateMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskTemplateRequest,
              com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskTemplateResponse>(
                service, METHODID_CREATE_TEACHER_TASK_TEMPLATE)))
        .addMethod(
          getUpdateTeacherTaskTemplateMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskTemplateRequest,
              com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskTemplateResponse>(
                service, METHODID_UPDATE_TEACHER_TASK_TEMPLATE)))
        .addMethod(
          getListTeacherTaskTemplateMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.ListTeacherTaskTemplateRequest,
              com.zhijiejiaoyu.glory_api.task.ListTeacherTaskTemplateResponse>(
                service, METHODID_LIST_TEACHER_TASK_TEMPLATE)))
        .addMethod(
          getGetTeacherTaskTemplateMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.GetTeacherTaskTemplateRequest,
              com.zhijiejiaoyu.glory_api.task.GetTeacherTaskTemplateResponse>(
                service, METHODID_GET_TEACHER_TASK_TEMPLATE)))
        .addMethod(
          getDeleteTeacherTaskTemplateMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskTemplateRequest,
              com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskTemplateResponse>(
                service, METHODID_DELETE_TEACHER_TASK_TEMPLATE)))
        .addMethod(
          getCreateTeacherTaskMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskRequest,
              com.zhijiejiaoyu.glory_api.task.CreateTeacherTaskResponse>(
                service, METHODID_CREATE_TEACHER_TASK)))
        .addMethod(
          getUpdateTeacherTaskMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskRequest,
              com.zhijiejiaoyu.glory_api.task.UpdateTeacherTaskResponse>(
                service, METHODID_UPDATE_TEACHER_TASK)))
        .addMethod(
          getListTeacherTaskMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.ListTeacherTaskRequest,
              com.zhijiejiaoyu.glory_api.task.ListTeacherTaskResponse>(
                service, METHODID_LIST_TEACHER_TASK)))
        .addMethod(
          getGetTeacherTaskMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.GetTeacherTaskRequest,
              com.zhijiejiaoyu.glory_api.task.GetTeacherTaskResponse>(
                service, METHODID_GET_TEACHER_TASK)))
        .addMethod(
          getGetTeacherTaskProgressMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.GetTeacherTaskProgressRequest,
              com.zhijiejiaoyu.glory_api.task.GetTeacherTaskProgressResponse>(
                service, METHODID_GET_TEACHER_TASK_PROGRESS)))
        .addMethod(
          getDeleteTeacherTaskMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskRequest,
              com.zhijiejiaoyu.glory_api.task.DeleteTeacherTaskResponse>(
                service, METHODID_DELETE_TEACHER_TASK)))
        .addMethod(
          getTeacherTaskStatsMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.TeacherTaskStatsRequest,
              com.zhijiejiaoyu.glory_api.task.TeacherTaskStatsResponse>(
                service, METHODID_TEACHER_TASK_STATS)))
        .addMethod(
          getTeacherTaskStudentsMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.ListTaskStudentRequest,
              com.zhijiejiaoyu.glory_api.task.ListTaskStudentResponse>(
                service, METHODID_TEACHER_TASK_STUDENTS)))
        .addMethod(
          getCountClassSubmitMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
              com.zhijiejiaoyu.glory_api.task.CountClassSubmitResponse>(
                service, METHODID_COUNT_CLASS_SUBMIT)))
        .addMethod(
          getCountClassSubmitListMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
              com.zhijiejiaoyu.glory_api.task.CountClassSubmitListResponse>(
                service, METHODID_COUNT_CLASS_SUBMIT_LIST)))
        .addMethod(
          getCountPositiveListMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
              com.zhijiejiaoyu.glory_api.task.CountPositiveListResponse>(
                service, METHODID_COUNT_POSITIVE_LIST)))
        .addMethod(
          getCountPotentialListMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
              com.zhijiejiaoyu.glory_api.task.CountPotentialListResponse>(
                service, METHODID_COUNT_POTENTIAL_LIST)))
        .addMethod(
          getCountSubmitListMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
              com.zhijiejiaoyu.glory_api.task.CountSubmitListResponse>(
                service, METHODID_COUNT_SUBMIT_LIST)))
        .addMethod(
          getCountClassPassMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
              com.zhijiejiaoyu.glory_api.task.CountClassPassResponse>(
                service, METHODID_COUNT_CLASS_PASS)))
        .addMethod(
          getCountClassPassListMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
              com.zhijiejiaoyu.glory_api.task.CountClassPassListResponse>(
                service, METHODID_COUNT_CLASS_PASS_LIST)))
        .addMethod(
          getCountSuperStudentListMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
              com.zhijiejiaoyu.glory_api.task.CountSuperStudentListResponse>(
                service, METHODID_COUNT_SUPER_STUDENT_LIST)))
        .addMethod(
          getCountLaggingStudentListMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
              com.zhijiejiaoyu.glory_api.task.CountLaggingStudentListResponse>(
                service, METHODID_COUNT_LAGGING_STUDENT_LIST)))
        .addMethod(
          getCountPassListMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.CountTeacherTaskRequest,
              com.zhijiejiaoyu.glory_api.task.CountPassListResponse>(
                service, METHODID_COUNT_PASS_LIST)))
        .addMethod(
          getCountHistoryTaskMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.CountHistoryTaskRequest,
              com.zhijiejiaoyu.glory_api.task.CountHistoryTaskResponse>(
                service, METHODID_COUNT_HISTORY_TASK)))
        .addMethod(
          getListStudentTaskMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.ListStudentTaskRequest,
              com.zhijiejiaoyu.glory_api.task.ListStudentTaskResponse>(
                service, METHODID_LIST_STUDENT_TASK)))
        .addMethod(
          getSubmitStudentTaskMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.SubmitStudentTaskRequest,
              com.zhijiejiaoyu.glory_api.task.SubmitStudentTaskResponse>(
                service, METHODID_SUBMIT_STUDENT_TASK)))
        .addMethod(
          getGetStudentTaskMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.GetStudentTaskRequest,
              com.zhijiejiaoyu.glory_api.task.GetStudentTaskResponse>(
                service, METHODID_GET_STUDENT_TASK)))
        .addMethod(
          getTeacherListStudentTaskMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.TeacherListStudentTaskRequest,
              com.zhijiejiaoyu.glory_api.task.TeacherListStudentTaskResponse>(
                service, METHODID_TEACHER_LIST_STUDENT_TASK)))
        .addMethod(
          getTeacherEvaluateStudentTaskMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.TeacherEvaluateStudentTaskRequest,
              com.zhijiejiaoyu.glory_api.task.TeacherEvaluateStudentTaskResponse>(
                service, METHODID_TEACHER_EVALUATE_STUDENT_TASK)))
        .addMethod(
          getStudentTaskStatsMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.StudentTaskStatsRequest,
              com.zhijiejiaoyu.glory_api.task.StudentTaskStatsResponse>(
                service, METHODID_STUDENT_TASK_STATS)))
        .addMethod(
          getStudentTaskEvaluateStatsMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.StudentTaskEvaluateStatsRequest,
              com.zhijiejiaoyu.glory_api.task.StudentTaskEvaluateStatsResponse>(
                service, METHODID_STUDENT_TASK_EVALUATE_STATS)))
        .addMethod(
          getStartStudentTaskTimeMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.StartStudentTaskTimeRequest,
              com.zhijiejiaoyu.glory_api.task.StartStudentTaskTimeResponse>(
                service, METHODID_START_STUDENT_TASK_TIME)))
        .addMethod(
          getDownloadTeacherTaskMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.task.DownloadTeacherTaskRequest,
              com.zhijiejiaoyu.glory_api.task.DownloadTeacherTaskResponse>(
                service, METHODID_DOWNLOAD_TEACHER_TASK)))
        .addMethod(
          getListNotificationMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.notification.ListNotificationRequest,
              com.zhijiejiaoyu.glory_api.notification.ListNotificationResponse>(
                service, METHODID_LIST_NOTIFICATION)))
        .addMethod(
          getCountNotificationMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.notification.CountNotificationRequest,
              com.zhijiejiaoyu.glory_api.notification.CountNotificationResponse>(
                service, METHODID_COUNT_NOTIFICATION)))
        .addMethod(
          getReadNotificationMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.notification.ReadNotificationRequest,
              com.zhijiejiaoyu.glory_api.notification.ReadNotificationResponse>(
                service, METHODID_READ_NOTIFICATION)))
        .addMethod(
          getTestNotificationMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.notification.TestNotificationRequest,
              com.zhijiejiaoyu.glory_api.notification.TestNotificationResponse>(
                service, METHODID_TEST_NOTIFICATION)))
        .addMethod(
          getDeleteNotificationMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.notification.DeleteNotificationRequest,
              com.zhijiejiaoyu.glory_api.notification.DeleteNotificationResponse>(
                service, METHODID_DELETE_NOTIFICATION)))
        .addMethod(
          getListUserMajorAndClassMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.ListUserMajorAndClasRequest,
              com.zhijiejiaoyu.glory_api.live.ListUserMajorAndClasResponse>(
                service, METHODID_LIST_USER_MAJOR_AND_CLASS)))
        .addMethod(
          getGetAggregationLiveUrlMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.GetAggregationLiveUrlRequest,
              com.zhijiejiaoyu.glory_api.live.GetAggregationLiveUrlResponse>(
                service, METHODID_GET_AGGREGATION_LIVE_URL)))
        .addMethod(
          getGetLiveBoardDataMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.GetLiveBoardDataRequest,
              com.zhijiejiaoyu.glory_api.live.GetLiveBoardDataResponse>(
                service, METHODID_GET_LIVE_BOARD_DATA)))
        .addMethod(
          getGetLiveBoardCommentsMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.GetLiveBoardCommentsRequest,
              com.zhijiejiaoyu.glory_api.live.GetLiveBoardCommentsResponse>(
                service, METHODID_GET_LIVE_BOARD_COMMENTS)))
        .addMethod(
          getListBoardLivingUserMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.ListLivingUserRequest,
              com.zhijiejiaoyu.glory_api.live.ListLivingUserResponse>(
                service, METHODID_LIST_BOARD_LIVING_USER)))
        .addMethod(
          getCloseCasterMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.live.CloseCasterRequest,
              com.zhijiejiaoyu.glory_api.live.CloseCasterResponse>(
                service, METHODID_CLOSE_CASTER)))
        .addMethod(
          getCreateArticleCreationMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationRequest,
              com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationResponse>(
                service, METHODID_CREATE_ARTICLE_CREATION)))
        .addMethod(
          getListMyArticleCreationMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationRequest,
              com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationResponse>(
                service, METHODID_LIST_MY_ARTICLE_CREATION)))
        .addMethod(
          getCreateArticleCreationDraftMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationDraftRequest,
              com.zhijiejiaoyu.glory_api.short_video.CreateArticleCreationDraftResponse>(
                service, METHODID_CREATE_ARTICLE_CREATION_DRAFT)))
        .addMethod(
          getListMyDraftArticleCreationMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationDraftRequest,
              com.zhijiejiaoyu.glory_api.short_video.ListMyArticleCreationDraftResponse>(
                service, METHODID_LIST_MY_DRAFT_ARTICLE_CREATION)))
        .addMethod(
          getDraftArticleCreationDetailMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.ArticleCreationDraftDetailRequest,
              com.zhijiejiaoyu.glory_api.short_video.ArticleCreationDraftDetailResponse>(
                service, METHODID_DRAFT_ARTICLE_CREATION_DETAIL)))
        .addMethod(
          getDeleteDraftArticleCreationMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.DeleteArticleCreationDraftRequest,
              com.zhijiejiaoyu.glory_api.short_video.DeleteArticleCreationDraftResponse>(
                service, METHODID_DELETE_DRAFT_ARTICLE_CREATION)))
        .addMethod(
          getArticleCreationStatisticsMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.ArticleCreationStatisticsRequest,
              com.zhijiejiaoyu.glory_api.short_video.ArticleCreationStatisticsResponse>(
                service, METHODID_ARTICLE_CREATION_STATISTICS)))
        .addMethod(
          getGetExampleArticleMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.GetExampleArticleRequest,
              com.zhijiejiaoyu.glory_api.short_video.GetExampleArticleResponse>(
                service, METHODID_GET_EXAMPLE_ARTICLE)))
        .addMethod(
          getGetEvaluationStandardMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.GetEvaluationStandardRequest,
              com.zhijiejiaoyu.glory_api.short_video.GetEvaluationStandardResponse>(
                service, METHODID_GET_EVALUATION_STANDARD)))
        .addMethod(
          getCreateEvaluationConfigMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.CreateEvaluationConfigRequest,
              com.zhijiejiaoyu.glory_api.short_video.CreateEvaluationConfigResponse>(
                service, METHODID_CREATE_EVALUATION_CONFIG)))
        .addMethod(
          getListEvaluationConfigMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.ListEvaluationConfigRequest,
              com.zhijiejiaoyu.glory_api.short_video.ListEvaluationConfigResponse>(
                service, METHODID_LIST_EVALUATION_CONFIG)))
        .addMethod(
          getBatchEvaluateArticleCreationMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.BatchEvaluateArticleRequest,
              com.zhijiejiaoyu.glory_api.short_video.BatchEvaluateArticleResponse>(
                service, METHODID_BATCH_EVALUATE_ARTICLE_CREATION)))
        .addMethod(
          getListStudentArticleCreationMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.ListStudentArticleCreationRequest,
              com.zhijiejiaoyu.glory_api.short_video.ListStudentArticleCreationResponse>(
                service, METHODID_LIST_STUDENT_ARTICLE_CREATION)))
        .addMethod(
          getStudentArticleCreationEvaluationDetailMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.StudentArticleCreationEvaluationDetailRequest,
              com.zhijiejiaoyu.glory_api.short_video.StudentArticleCreationEvaluationDetailResponse>(
                service, METHODID_STUDENT_ARTICLE_CREATION_EVALUATION_DETAIL)))
        .addMethod(
          getCorrectSentenceMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.CorrectSentenceRequest,
              com.zhijiejiaoyu.glory_api.short_video.CorrectSentenceResponse>(
                service, METHODID_CORRECT_SENTENCE)))
        .addMethod(
          getGenArticleAiEvaluationMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.GenArticleAIEvaluationRequest,
              com.zhijiejiaoyu.glory_api.short_video.GenArticleAIEvaluationResponse>(
                service, METHODID_GEN_ARTICLE_AI_EVALUATION)))
        .addMethod(
          getGetArticleAiEvaluationMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.GetArticleAIEvaluationRequest,
              com.zhijiejiaoyu.glory_api.short_video.GetArticleAIEvaluationResponse>(
                service, METHODID_GET_ARTICLE_AI_EVALUATION)))
        .addMethod(
          getArticleAiChatMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.ArticleAIChatRequest,
              com.zhijiejiaoyu.glory_api.short_video.ArticleAIChatResponse>(
                service, METHODID_ARTICLE_AI_CHAT)))
        .addMethod(
          getGetChatConfigMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.GetChatConfigRequest,
              com.zhijiejiaoyu.glory_api.short_video.GetChatConfigResponse>(
                service, METHODID_GET_CHAT_CONFIG)))
        .addMethod(
          getUpdateModelPriceMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.UpdateModelPriceRequest,
              com.zhijiejiaoyu.glory_api.short_video.UpdateModelPriceResponse>(
                service, METHODID_UPDATE_MODEL_PRICE)))
        .addMethod(
          getUpdateArticleCreationTenantCourseMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.UpdateTenantCourseDataRequest,
              com.zhijiejiaoyu.glory_api.short_video.UpdateTenantCourseDataResponse>(
                service, METHODID_UPDATE_ARTICLE_CREATION_TENANT_COURSE)))
        .addMethod(
          getGetArticleCreationTenantMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantRequest,
              com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantResponse>(
                service, METHODID_GET_ARTICLE_CREATION_TENANT)))
        .addMethod(
          getListArticleCreationTenantMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantRequest,
              com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantResponse>(
                service, METHODID_LIST_ARTICLE_CREATION_TENANT)))
        .addMethod(
          getListArticleCreationTenantCostMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantCostRequest,
              com.zhijiejiaoyu.glory_api.short_video.ListArticleCreationTenantCostResponse>(
                service, METHODID_LIST_ARTICLE_CREATION_TENANT_COST)))
        .addMethod(
          getGetArticleCreationTenantCostMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantCostRequest,
              com.zhijiejiaoyu.glory_api.short_video.GetArticleCreationTenantCostResponse>(
                service, METHODID_GET_ARTICLE_CREATION_TENANT_COST)))
        .addMethod(
          getGetSubTopicAiResultMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.GetSubTopicAiResultRequest,
              com.zhijiejiaoyu.glory_api.short_video.GetSubTopicAiResultResponse>(
                service, METHODID_GET_SUB_TOPIC_AI_RESULT)))
        .addMethod(
          getCreateDigitalVideoMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.CreateDigitalVideoRequest,
              com.zhijiejiaoyu.glory_api.short_video.CreateDigitalVideoResponse>(
                service, METHODID_CREATE_DIGITAL_VIDEO)))
        .addMethod(
          getListDigitalVideoMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.ListDigitalVideoRequest,
              com.zhijiejiaoyu.glory_api.short_video.ListDigitalVideoResponse>(
                service, METHODID_LIST_DIGITAL_VIDEO)))
        .addMethod(
          getGetDigitalVideoMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.GetDigitalVideoRequest,
              com.zhijiejiaoyu.glory_api.short_video.GetDigitalVideoResponse>(
                service, METHODID_GET_DIGITAL_VIDEO)))
        .addMethod(
          getListDigitalCodeMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.ListDigitalCodeRequest,
              com.zhijiejiaoyu.glory_api.short_video.ListDigitalCodeResponse>(
                service, METHODID_LIST_DIGITAL_CODE)))
        .addMethod(
          getDeleteDigitalVideoMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.DeleteDigitalVideoRequest,
              com.zhijiejiaoyu.glory_api.short_video.DeleteDigitalVideoResponse>(
                service, METHODID_DELETE_DIGITAL_VIDEO)))
        .addMethod(
          getListDigitalAvatarMethod(),
          io.grpc.stub.ServerCalls.asyncUnaryCall(
            new MethodHandlers<
              com.zhijiejiaoyu.glory_api.short_video.ListDigitalAvatarRequest,
              com.zhijiejiaoyu.glory_api.short_video.ListDigitalAvatarResponse>(
                service, METHODID_LIST_DIGITAL_AVATAR)))
        .build();
  }

  private static abstract class glory_apiBaseDescriptorSupplier
      implements io.grpc.protobuf.ProtoFileDescriptorSupplier, io.grpc.protobuf.ProtoServiceDescriptorSupplier {
    glory_apiBaseDescriptorSupplier() {}

    @java.lang.Override
    public com.google.protobuf.Descriptors.FileDescriptor getFileDescriptor() {
      return com.zhijiejiaoyu.glory_api.GloryApiService.getDescriptor();
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.ServiceDescriptor getServiceDescriptor() {
      return getFileDescriptor().findServiceByName("glory_api");
    }
  }

  private static final class glory_apiFileDescriptorSupplier
      extends glory_apiBaseDescriptorSupplier {
    glory_apiFileDescriptorSupplier() {}
  }

  private static final class glory_apiMethodDescriptorSupplier
      extends glory_apiBaseDescriptorSupplier
      implements io.grpc.protobuf.ProtoMethodDescriptorSupplier {
    private final String methodName;

    glory_apiMethodDescriptorSupplier(String methodName) {
      this.methodName = methodName;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.MethodDescriptor getMethodDescriptor() {
      return getServiceDescriptor().findMethodByName(methodName);
    }
  }

  private static volatile io.grpc.ServiceDescriptor serviceDescriptor;

  public static io.grpc.ServiceDescriptor getServiceDescriptor() {
    io.grpc.ServiceDescriptor result = serviceDescriptor;
    if (result == null) {
      synchronized (glory_apiGrpc.class) {
        result = serviceDescriptor;
        if (result == null) {
          serviceDescriptor = result = io.grpc.ServiceDescriptor.newBuilder(SERVICE_NAME)
              .setSchemaDescriptor(new glory_apiFileDescriptorSupplier())
              .addMethod(getCreateExampleMethod())
              .addMethod(getGetExampleMethod())
              .addMethod(getUpdateExampleMethod())
              .addMethod(getListExampleMethod())
              .addMethod(getDeleteExampleMethod())
              .addMethod(getLoginMethod())
              .addMethod(getLogoutMethod())
              .addMethod(getDeleteUserMethod())
              .addMethod(getListOwnAccessMethod())
              .addMethod(getGetVerifyCodeMethod())
              .addMethod(getCheckVerifyCodeMethod())
              .addMethod(getGetUserMethod())
              .addMethod(getGetUserByPhoneMethod())
              .addMethod(getLoginWithPasswordMethod())
              .addMethod(getUpdatePasswordMethod())
              .addMethod(getUpdateUserMethod())
              .addMethod(getUpdatePhoneMethod())
              .addMethod(getGetUserMajorMethod())
              .addMethod(getUpdateUserTenantMethod())
              .addMethod(getListUserMethod())
              .addMethod(getUserBindWechatMethod())
              .addMethod(getUserUnbindWechatMethod())
              .addMethod(getFollowUserMethod())
              .addMethod(getListMyFollowingMethod())
              .addMethod(getListMyFollowerMethod())
              .addMethod(getListMyFriendMethod())
              .addMethod(getGetMySocialSummaryMethod())
              .addMethod(getGetUserPagePermissionMethod())
              .addMethod(getCreateRolePagePermissionMethod())
              .addMethod(getUpdateRolePagePermissionMethod())
              .addMethod(getGetRolePagePermissionMethod())
              .addMethod(getAddAddressMethod())
              .addMethod(getDeleteAddressMethod())
              .addMethod(getUpdateAddressMethod())
              .addMethod(getGetAddressMethod())
              .addMethod(getListAddressMethod())
              .addMethod(getListUserByRoleMethod())
              .addMethod(getListPermissionMethod())
              .addMethod(getListRoleMethod())
              .addMethod(getGiveRolePermissionMethod())
              .addMethod(getRemoveRolePermissionMethod())
              .addMethod(getCreateRoleMethod())
              .addMethod(getDeleteRoleMethod())
              .addMethod(getListResourceMethod())
              .addMethod(getGetRoleTypeMethod())
              .addMethod(getGetRoleTemplateMethod())
              .addMethod(getUpdateRoleTemplateMethod())
              .addMethod(getCreateShopMethod())
              .addMethod(getGetShopMethod())
              .addMethod(getUpdateShopMethod())
              .addMethod(getListShopMethod())
              .addMethod(getDeleteShopMethod())
              .addMethod(getListOperationMetricsMethod())
              .addMethod(getGetShopQrcodeMethod())
              .addMethod(getUpdateShopManagerMethod())
              .addMethod(getGetShopBusinessDataMethod())
              .addMethod(getAddShopAccessMethod())
              .addMethod(getRemoveShopAccessMethod())
              .addMethod(getVerifyFieldMethod())
              .addMethod(getListShopAccessMethod())
              .addMethod(getAddShopCategoryMethod())
              .addMethod(getGetShopCategoryMethod())
              .addMethod(getRemoveShopCategoryMethod())
              .addMethod(getAddFreightTemplateMethod())
              .addMethod(getGetFreightTemplateMethod())
              .addMethod(getUpdateFreightTemplateMethod())
              .addMethod(getDeleteFreightTemplateMethod())
              .addMethod(getListFreightTemplateMethod())
              .addMethod(getListQualificationMethod())
              .addMethod(getGetMallIndexMethod())
              .addMethod(getCreateCategoryMethod())
              .addMethod(getGetCategoryMethod())
              .addMethod(getUpdateCategoryMethod())
              .addMethod(getListCategoryMethod())
              .addMethod(getDeleteCategoryMethod())
              .addMethod(getListCategoryQualificationMethod())
              .addMethod(getCreateProductMethod())
              .addMethod(getGetProductMethod())
              .addMethod(getUpdateProductMethod())
              .addMethod(getListProductMethod())
              .addMethod(getListProductByIDsMethod())
              .addMethod(getDeleteProductMethod())
              .addMethod(getUploadMultiImageMethod())
              .addMethod(getDeleteImageByIdMethod())
              .addMethod(getBindAttributeMethod())
              .addMethod(getPublishProductMethod())
              .addMethod(getOffShelfProductInBatchesMethod())
              .addMethod(getDeleteProductInBatchesMethod())
              .addMethod(getChangeProductsStateMethod())
              .addMethod(getSaveProductImageInfoMethod())
              .addMethod(getCreateSkuMethod())
              .addMethod(getGetSkuMethod())
              .addMethod(getUpdateSkuMethod())
              .addMethod(getListSkuMethod())
              .addMethod(getDeleteSkuMethod())
              .addMethod(getCreateAttributeMethod())
              .addMethod(getGetAttributeMethod())
              .addMethod(getListAttributeMethod())
              .addMethod(getDeleteAttributeMethod())
              .addMethod(getAddAttributeValueMethod())
              .addMethod(getDeleteAttributeValueMethod())
              .addMethod(getCreateOrderMethod())
              .addMethod(getGetOrderMethod())
              .addMethod(getUpdateOrderMethod())
              .addMethod(getListOrderMethod())
              .addMethod(getDeleteOrderMethod())
              .addMethod(getShipGoodsMethod())
              .addMethod(getConfirmReceiptGoodsMethod())
              .addMethod(getGetOrderStatusMethod())
              .addMethod(getCancelOrderMethod())
              .addMethod(getShipGoodsInBatchesMethod())
              .addMethod(getFreeShippingInBatchesMethod())
              .addMethod(getListShopSummaryMethod())
              .addMethod(getListShopBySellerIDMethod())
              .addMethod(getCreateCartMethod())
              .addMethod(getGetCartMethod())
              .addMethod(getUpdateCartMethod())
              .addMethod(getDeleteCartMethod())
              .addMethod(getUploadAttachmentMethod())
              .addMethod(getSaveAttachmentMethod())
              .addMethod(getListAttachmentMethod())
              .addMethod(getDeleteAttachmentMethod())
              .addMethod(getCreateSellerMethod())
              .addMethod(getCreatePaymentMethod())
              .addMethod(getGetPaymentMethod())
              .addMethod(getUpdatePaymentMethod())
              .addMethod(getDeletePaymentMethod())
              .addMethod(getWechatPaymentNotifyMethod())
              .addMethod(getCreateConfigMethod())
              .addMethod(getUpdateConfigMethod())
              .addMethod(getDeleteConfigMethod())
              .addMethod(getGetConfigMethod())
              .addMethod(getGetSTSMethod())
              .addMethod(getGenerateWebofficeTokenMethod())
              .addMethod(getRefreshWebofficeTokenMethod())
              .addMethod(getListTenantOrgMethod())
              .addMethod(getGetAdminTenantMethod())
              .addMethod(getListAdminUserMethod())
              .addMethod(getCreateAdminUserMethod())
              .addMethod(getUpdateAdminUserMethod())
              .addMethod(getDeleteAdminUserMethod())
              .addMethod(getWxPrepayMethod())
              .addMethod(getCloseOrderMethod())
              .addMethod(getQueryOrderByIdMethod())
              .addMethod(getQueryOrderByOutTradeMethod())
              .addMethod(getAddVCurrencyMethod())
              .addMethod(getRechargeCurrencyMethod())
              .addMethod(getRechargeCurrencyInBatchesMethod())
              .addMethod(getGetVCurrencyMethod())
              .addMethod(getListVCurrencyMethod())
              .addMethod(getListAccountOperationMethod())
              .addMethod(getCreateRoomMethod())
              .addMethod(getGetRoomMethod())
              .addMethod(getUpdateRoomMethod())
              .addMethod(getListRoomMethod())
              .addMethod(getDeleteRoomMethod())
              .addMethod(getListFinishedRoomMethod())
              .addMethod(getGetFinishedRoomMethod())
              .addMethod(getRecordMethod())
              .addMethod(getCreateLiveUserTokenMethod())
              .addMethod(getCreateNewLiveUserTokenMethod())
              .addMethod(getUserEnterRoomMethod())
              .addMethod(getUserExitRoomMethod())
              .addMethod(getListActiveRoomUserMethod())
              .addMethod(getLiveSSEMethod())
              .addMethod(getCloseShopAllLiveMethod())
              .addMethod(getUpdateLiveCommentCountMethod())
              .addMethod(getCreateLivePlanMethod())
              .addMethod(getGetLivePlanMethod())
              .addMethod(getUpdateLivePlanMethod())
              .addMethod(getListLivePlanMethod())
              .addMethod(getDeleteLivePlanMethod())
              .addMethod(getCreateLivePlanProductMethod())
              .addMethod(getUpdateLivePlanProductMethod())
              .addMethod(getListLivePlanProductMethod())
              .addMethod(getDeleteLivePlanProductMethod())
              .addMethod(getLoadLivePlanProductMethod())
              .addMethod(getUpdateLiveProductStatusMethod())
              .addMethod(getListLiveProductStatusMethod())
              .addMethod(getDeleteLiveProductStatusMethod())
              .addMethod(getCreateLiveProductStatusMethod())
              .addMethod(getGetLivingProductStatusMethod())
              .addMethod(getUpdateLiveProductIntroductStatusMethod())
              .addMethod(getCreateLiveTextMethod())
              .addMethod(getUpdateLiveTextMethod())
              .addMethod(getListLiveTextMethod())
              .addMethod(getGetLiveTextMethod())
              .addMethod(getDeleteLiveTextsMethod())
              .addMethod(getTeacherListStudentShortVideoTextMethod())
              .addMethod(getGetLiveChartDataMethod())
              .addMethod(getGetEvaluateSelectorMethod())
              .addMethod(getListPersonalEvaluateMethod())
              .addMethod(getGetEvaluateDetailMethod())
              .addMethod(getSubmitEvaluateMethod())
              .addMethod(getListUnevaluatedRoomMethod())
              .addMethod(getListStudentEvaluationsMethod())
              .addMethod(getIgnoreEvaluationMethod())
              .addMethod(getGetRankMethod())
              .addMethod(getRecordLiveCallbackMethod())
              .addMethod(getVideoToTextCallbackMethod())
              .addMethod(getLiveStreamCallbackMethod())
              .addMethod(getRegenerationAiFeedbackMethod())
              .addMethod(getSubmitUserAttitudeForAiResultMethod())
              .addMethod(getPreheatProductMethod())
              .addMethod(getPublicPriceMethod())
              .addMethod(getListTenantSystemMethod())
              .addMethod(getCreateTenantMethod())
              .addMethod(getGetTenantMethod())
              .addMethod(getUpdateTenantMethod())
              .addMethod(getDeleteTenantMethod())
              .addMethod(getListTenantMethod())
              .addMethod(getGetTenantOrgMethod())
              .addMethod(getEnterTenantMethod())
              .addMethod(getExitTenantMethod())
              .addMethod(getIsEnterTenantMethod())
              .addMethod(getInitTenantMethod())
              .addMethod(getCreateTenantCourseMethod())
              .addMethod(getListTenantCourseMethod())
              .addMethod(getCreateTenantDeptMethod())
              .addMethod(getUpdateTenantDeptMethod())
              .addMethod(getDeleteTenantDeptMethod())
              .addMethod(getGetTenantDeptMethod())
              .addMethod(getGetTenantDeptTypeMethod())
              .addMethod(getListTenantDeptMethod())
              .addMethod(getCreateTenantUserMethod())
              .addMethod(getDeleteTenantUserMethod())
              .addMethod(getUpdateTenantUserMethod())
              .addMethod(getGetTenantUserMethod())
              .addMethod(getListTenantUserMethod())
              .addMethod(getListTenantStudentMethod())
              .addMethod(getUpdateTenantUserPasswordMethod())
              .addMethod(getUpdateTenantConfigMethod())
              .addMethod(getListTenantConfigMethod())
              .addMethod(getCreateShortVideoMethod())
              .addMethod(getStageShortVideoMethod())
              .addMethod(getListMyShortVideoMethod())
              .addMethod(getListMyStageVideoMethod())
              .addMethod(getListMyLikeVideoMethod())
              .addMethod(getListMyFavoriteVideoMethod())
              .addMethod(getGetShortVideoMethod())
              .addMethod(getUpdateShortVideoMethod())
              .addMethod(getDeleteShortVideoMethod())
              .addMethod(getGetStageVideoMethod())
              .addMethod(getDeleteStageVideoMethod())
              .addMethod(getUpdateStageVideoMethod())
              .addMethod(getManagementListShortVideoMethod())
              .addMethod(getManagementCensorShortVideoMethod())
              .addMethod(getManagementDeleteShortVideoMethod())
              .addMethod(getListShortVideoMethod())
              .addMethod(getLikeShortVideoMethod())
              .addMethod(getFavoriteShortVideoMethod())
              .addMethod(getCreateShortVideoCommentMethod())
              .addMethod(getDeleteShortVideoCommentMethod())
              .addMethod(getListShortVideoCommentMethod())
              .addMethod(getTeacherListStudentShortVideoMethod())
              .addMethod(getCreateCouponMethod())
              .addMethod(getListCouponMethod())
              .addMethod(getCouponDetailMethod())
              .addMethod(getUpdateCouponMethod())
              .addMethod(getDeleteCouponMethod())
              .addMethod(getAbolishCouponMethod())
              .addMethod(getUpdateCouponDistributionStatusMethod())
              .addMethod(getClaimCouponMethod())
              .addMethod(getListMyCouponMethod())
              .addMethod(getCreateActivityMethod())
              .addMethod(getListActivityMethod())
              .addMethod(getActivityDetailMethod())
              .addMethod(getUpdateActivityMethod())
              .addMethod(getDeleteActivityMethod())
              .addMethod(getDisableActivityMethod())
              .addMethod(getGetCouponAndIntroducingProductMethod())
              .addMethod(getCreateCourseMaterialBoxMethod())
              .addMethod(getUpdateCourseMaterialBoxMethod())
              .addMethod(getListCourseMaterialBoxMethod())
              .addMethod(getDeleteCourseMaterialBoxMethod())
              .addMethod(getUploadCourseMaterialMethod())
              .addMethod(getListCourseMaterialMethod())
              .addMethod(getDeleteCourseMaterialMethod())
              .addMethod(getGetCourseTypeTreeMethod())
              .addMethod(getGetCourseTypeListMethod())
              .addMethod(getGetCourseModuleCodeMethod())
              .addMethod(getGetCourseChapterCodeMethod())
              .addMethod(getCreateCourseModuleMethod())
              .addMethod(getGetCourseModuleMethod())
              .addMethod(getUpdateCourseModuleMethod())
              .addMethod(getDeleteCourseModuleMethod())
              .addMethod(getListCourseModuleMethod())
              .addMethod(getListLatestCourseMethod())
              .addMethod(getListHottestCourseMethod())
              .addMethod(getCreateCmCourseMethod())
              .addMethod(getPreviewCmCourseMethod())
              .addMethod(getCreateNmCourseResourceMethod())
              .addMethod(getCreateNmCourseChapterMethod())
              .addMethod(getCreateNmCourseMethod())
              .addMethod(getUpdateNmCourseMethod())
              .addMethod(getListNmCourseMethod())
              .addMethod(getNmCourseDetailMethod())
              .addMethod(getDeleteNmCourseMethod())
              .addMethod(getCreateCourseMethod())
              .addMethod(getGetCourseMethod())
              .addMethod(getUpdateCourseMethod())
              .addMethod(getDeleteCourseMethod())
              .addMethod(getListCourseMethod())
              .addMethod(getCreateKnowledgeGraphMethod())
              .addMethod(getGetKnowledgeGraphMethod())
              .addMethod(getGetKnowledgeGraphNodeMethod())
              .addMethod(getGetCourseIdsMethod())
              .addMethod(getEnrollCourseMethod())
              .addMethod(getDeleteMyCourseMethod())
              .addMethod(getUpdateCourseProgressMethod())
              .addMethod(getListMyCourseMethod())
              .addMethod(getListTeachingPlanMethod())
              .addMethod(getCreateTeachingPlanMethod())
              .addMethod(getUpdateTeachingPlanMethod())
              .addMethod(getDeleteTeachingPlanMethod())
              .addMethod(getUpdateTeachingCourseProgressMethod())
              .addMethod(getCreateEduSchemeMethod())
              .addMethod(getUpdateEduSchemeMethod())
              .addMethod(getListEduSchemeMethod())
              .addMethod(getEduSchemeDetailMethod())
              .addMethod(getDeleteEduSchemeMethod())
              .addMethod(getDistributeEduSchemeMethod())
              .addMethod(getGetEduSchemeLikeCourseMethod())
              .addMethod(getGetAndroidQRcodeMethod())
              .addMethod(getCreateJobMethod())
              .addMethod(getUpdateJobMethod())
              .addMethod(getDeleteJobMethod())
              .addMethod(getListJobMethod())
              .addMethod(getGetSchooLiveChartMethod())
              .addMethod(getListSchooLiveTrafficMethod())
              .addMethod(getGetLiveAllTrafficMethod())
              .addMethod(getGetSchooLiveTrafficMethod())
              .addMethod(getListTenantTrafficConfigMethod())
              .addMethod(getUpdateTenantTrafficConfigMethod())
              .addMethod(getListTrafficWarningMethod())
              .addMethod(getDeleteTrafficWarningMethod())
              .addMethod(getCreateLiveControlMethod())
              .addMethod(getUpdateLiveControlMethod())
              .addMethod(getListLiveControlMethod())
              .addMethod(getDeleteLiveControlMethod())
              .addMethod(getCreateQuickEvaluationStandardMethod())
              .addMethod(getUpdateQuickEvaluationStandardMethod())
              .addMethod(getDeleteQuickEvaluationStandardMethod())
              .addMethod(getListQuickEvaluationStandardMethod())
              .addMethod(getGetLiveReplayMethod())
              .addMethod(getCreateQuickEvaluationReportMethod())
              .addMethod(getListQuickEvaluationReportMethod())
              .addMethod(getGetQuickEvaluationReportMethod())
              .addMethod(getDeleteQuickEvaluationReportMethod())
              .addMethod(getGetQuickEvaluationDetailMethod())
              .addMethod(getCreateVersionLogMethod())
              .addMethod(getUpdateVersionLogMethod())
              .addMethod(getListVersionLogMethod())
              .addMethod(getDeleteVersionLogMethod())
              .addMethod(getGetLatestVersionMethod())
              .addMethod(getGetTaskConfigMethod())
              .addMethod(getCreateSystemTaskMethod())
              .addMethod(getListSystemTaskMethod())
              .addMethod(getGetSystemTaskMethod())
              .addMethod(getUpdateSystemTaskMethod())
              .addMethod(getDeleteSystemTaskMethod())
              .addMethod(getCreateTeacherTaskTemplateMethod())
              .addMethod(getUpdateTeacherTaskTemplateMethod())
              .addMethod(getListTeacherTaskTemplateMethod())
              .addMethod(getGetTeacherTaskTemplateMethod())
              .addMethod(getDeleteTeacherTaskTemplateMethod())
              .addMethod(getCreateTeacherTaskMethod())
              .addMethod(getUpdateTeacherTaskMethod())
              .addMethod(getListTeacherTaskMethod())
              .addMethod(getGetTeacherTaskMethod())
              .addMethod(getGetTeacherTaskProgressMethod())
              .addMethod(getDeleteTeacherTaskMethod())
              .addMethod(getTeacherTaskStatsMethod())
              .addMethod(getTeacherTaskStudentsMethod())
              .addMethod(getCountClassSubmitMethod())
              .addMethod(getCountClassSubmitListMethod())
              .addMethod(getCountPositiveListMethod())
              .addMethod(getCountPotentialListMethod())
              .addMethod(getCountSubmitListMethod())
              .addMethod(getCountClassPassMethod())
              .addMethod(getCountClassPassListMethod())
              .addMethod(getCountSuperStudentListMethod())
              .addMethod(getCountLaggingStudentListMethod())
              .addMethod(getCountPassListMethod())
              .addMethod(getCountHistoryTaskMethod())
              .addMethod(getListStudentTaskMethod())
              .addMethod(getSubmitStudentTaskMethod())
              .addMethod(getGetStudentTaskMethod())
              .addMethod(getTeacherListStudentTaskMethod())
              .addMethod(getTeacherEvaluateStudentTaskMethod())
              .addMethod(getStudentTaskStatsMethod())
              .addMethod(getStudentTaskEvaluateStatsMethod())
              .addMethod(getStartStudentTaskTimeMethod())
              .addMethod(getDownloadTeacherTaskMethod())
              .addMethod(getListNotificationMethod())
              .addMethod(getCountNotificationMethod())
              .addMethod(getReadNotificationMethod())
              .addMethod(getTestNotificationMethod())
              .addMethod(getDeleteNotificationMethod())
              .addMethod(getListUserMajorAndClassMethod())
              .addMethod(getGetAggregationLiveUrlMethod())
              .addMethod(getGetLiveBoardDataMethod())
              .addMethod(getGetLiveBoardCommentsMethod())
              .addMethod(getListBoardLivingUserMethod())
              .addMethod(getCloseCasterMethod())
              .addMethod(getCreateArticleCreationMethod())
              .addMethod(getListMyArticleCreationMethod())
              .addMethod(getCreateArticleCreationDraftMethod())
              .addMethod(getListMyDraftArticleCreationMethod())
              .addMethod(getDraftArticleCreationDetailMethod())
              .addMethod(getDeleteDraftArticleCreationMethod())
              .addMethod(getArticleCreationStatisticsMethod())
              .addMethod(getGetExampleArticleMethod())
              .addMethod(getGetEvaluationStandardMethod())
              .addMethod(getCreateEvaluationConfigMethod())
              .addMethod(getListEvaluationConfigMethod())
              .addMethod(getBatchEvaluateArticleCreationMethod())
              .addMethod(getListStudentArticleCreationMethod())
              .addMethod(getStudentArticleCreationEvaluationDetailMethod())
              .addMethod(getCorrectSentenceMethod())
              .addMethod(getGenArticleAiEvaluationMethod())
              .addMethod(getGetArticleAiEvaluationMethod())
              .addMethod(getArticleAiChatMethod())
              .addMethod(getGetChatConfigMethod())
              .addMethod(getUpdateModelPriceMethod())
              .addMethod(getUpdateArticleCreationTenantCourseMethod())
              .addMethod(getGetArticleCreationTenantMethod())
              .addMethod(getListArticleCreationTenantMethod())
              .addMethod(getListArticleCreationTenantCostMethod())
              .addMethod(getGetArticleCreationTenantCostMethod())
              .addMethod(getGetSubTopicAiResultMethod())
              .addMethod(getCreateDigitalVideoMethod())
              .addMethod(getListDigitalVideoMethod())
              .addMethod(getGetDigitalVideoMethod())
              .addMethod(getListDigitalCodeMethod())
              .addMethod(getDeleteDigitalVideoMethod())
              .addMethod(getListDigitalAvatarMethod())
              .build();
        }
      }
    }
    return result;
  }
}
