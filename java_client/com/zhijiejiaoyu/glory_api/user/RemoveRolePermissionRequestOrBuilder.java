// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user/user.proto

package com.zhijiejiaoyu.glory_api.user;

public interface RemoveRolePermissionRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:glory_api.RemoveRolePermissionRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.base.BaseRequest base_request = 1;</code>
   * @return Whether the baseRequest field is set.
   */
  boolean hasBaseRequest();
  /**
   * <code>.base.BaseRequest base_request = 1;</code>
   * @return The baseRequest.
   */
  com.zhijiejiaoyu.base.BaseRequest getBaseRequest();
  /**
   * <code>.base.BaseRequest base_request = 1;</code>
   */
  com.zhijiejiaoyu.base.BaseRequestOrBuilder getBaseRequestOrBuilder();

  /**
   * <pre>
   * 这个role_permission_id在list_role里头有返回，是role跟permission 映射起来的唯一id
   * </pre>
   *
   * <code>repeated int64 role_permission_id = 3;</code>
   * @return A list containing the rolePermissionId.
   */
  java.util.List<java.lang.Long> getRolePermissionIdList();
  /**
   * <pre>
   * 这个role_permission_id在list_role里头有返回，是role跟permission 映射起来的唯一id
   * </pre>
   *
   * <code>repeated int64 role_permission_id = 3;</code>
   * @return The count of rolePermissionId.
   */
  int getRolePermissionIdCount();
  /**
   * <pre>
   * 这个role_permission_id在list_role里头有返回，是role跟permission 映射起来的唯一id
   * </pre>
   *
   * <code>repeated int64 role_permission_id = 3;</code>
   * @param index The index of the element to return.
   * @return The rolePermissionId at the given index.
   */
  long getRolePermissionId(int index);
}
