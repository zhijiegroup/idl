//
//  Generated code. Do not modify.
//  source: glory_api_service.proto
//
// @dart = 2.12

// ignore_for_file: annotate_overrides, camel_case_types, comment_references
// ignore_for_file: constant_identifier_names
// ignore_for_file: deprecated_member_use_from_same_package, library_prefixes
// ignore_for_file: non_constant_identifier_names, prefer_final_fields
// ignore_for_file: unnecessary_import, unnecessary_this, unused_import

import 'dart:async' as $async;
import 'dart:core' as $core;

import 'package:protobuf/protobuf.dart' as $pb;

import 'account/account_operation.pb.dart' as $22;
import 'admin/admin_tenant.pb.dart' as $18;
import 'admin/admin_user.pb.dart' as $19;
import 'admin/config.pb.dart' as $17;
import 'app/app.pb.dart' as $45;
import 'course/cmodule.pb.dart' as $39;
import 'course/course.pb.dart' as $38;
import 'course/edu_scheme.pb.dart' as $44;
import 'course/graph.pb.dart' as $41;
import 'course/material.pb.dart' as $36;
import 'course/module.pb.dart' as $37;
import 'course/nmodule.pb.dart' as $40;
import 'course/teaching_plan.pb.dart' as $43;
import 'course/user_course.pb.dart' as $42;
import 'currency/virtual_currency.pb.dart' as $21;
import 'example/example.pb.dart' as $0;
import 'glory_api_service.pbjson.dart';
import 'live/live_evaluate.pb.dart' as $28;
import 'live/live_plan.pb.dart' as $24;
import 'live/live_room.pb.dart' as $23;
import 'live/live_text.pb.dart' as $27;
import 'live/live_token.pb.dart' as $25;
import 'live/live_user.pb.dart' as $26;
import 'mall/mall_index.pb.dart' as $6;
import 'payment/payment.pb.dart' as $16;
import 'seller/attachment.pb.dart' as $14;
import 'seller/seller.pb.dart' as $15;
import 'shop/activity.pb.dart' as $35;
import 'shop/attribute.pb.dart' as $11;
import 'shop/cart.pb.dart' as $13;
import 'shop/category.pb.dart' as $7;
import 'shop/category_qualification.pb.dart' as $8;
import 'shop/coupon.pb.dart' as $34;
import 'shop/freight_template.pb.dart' as $5;
import 'shop/operation.pb.dart' as $4;
import 'shop/order.pb.dart' as $12;
import 'shop/product.pb.dart' as $9;
import 'shop/shop.pb.dart' as $3;
import 'shop/sku.pb.dart' as $10;
import 'short_video/short_video.pb.dart' as $33;
import 'tenant/tenant.pb.dart' as $29;
import 'tenant/tenant_config.pb.dart' as $32;
import 'tenant/tenant_dept.pb.dart' as $30;
import 'tenant/tenant_user.pb.dart' as $31;
import 'user/address.pb.dart' as $2;
import 'user/user.pb.dart' as $1;
import 'wxpay/wxpay.pb.dart' as $20;

export 'glory_api_service.pb.dart';

abstract class glory_apiServiceBase extends $pb.GeneratedService {
  $async.Future<$0.CreateExampleResponse> createExample($pb.ServerContext ctx, $0.CreateExampleRequest request);
  $async.Future<$0.GetExampleResponse> getExample($pb.ServerContext ctx, $0.GetExampleRequest request);
  $async.Future<$0.UpdateExampleResponse> updateExample($pb.ServerContext ctx, $0.UpdateExampleRequest request);
  $async.Future<$0.ListExampleResponse> listExample($pb.ServerContext ctx, $0.ListExampleRequest request);
  $async.Future<$0.DeleteExampleResponse> deleteExample($pb.ServerContext ctx, $0.DeleteExampleRequest request);
  $async.Future<$1.LoginResponse> login($pb.ServerContext ctx, $1.LoginRequest request);
  $async.Future<$1.LogoutResponse> logout($pb.ServerContext ctx, $1.LogoutRequest request);
  $async.Future<$1.GetVerifyCodeResponse> getVerifyCode($pb.ServerContext ctx, $1.GetVerifyCodeRequest request);
  $async.Future<$1.CheckVerifyCodeResponse> checkVerifyCode($pb.ServerContext ctx, $1.CheckVerifyCodeRequest request);
  $async.Future<$1.GetUserResponse> getUser($pb.ServerContext ctx, $1.GetUserRequest request);
  $async.Future<$1.LoginWithPasswordResponse> loginWithPassword($pb.ServerContext ctx, $1.LoginWithPasswordRequest request);
  $async.Future<$1.UpdatePasswordResponse> updatePassword($pb.ServerContext ctx, $1.UpdatePasswordRequest request);
  $async.Future<$1.UpdateUserResponse> updateUser($pb.ServerContext ctx, $1.UpdateUserRequest request);
  $async.Future<$1.UpdatePhoneResponse> updatePhone($pb.ServerContext ctx, $1.UpdatePhoneRequest request);
  $async.Future<$1.UpdateUserTenantResponse> updateUserTenant($pb.ServerContext ctx, $1.UpdateUserTenantRequest request);
  $async.Future<$1.FollowUserResponse> followUser($pb.ServerContext ctx, $1.FollowUserRequest request);
  $async.Future<$1.ListMyFollowingResponse> listMyFollowing($pb.ServerContext ctx, $1.ListMyFollowingRequest request);
  $async.Future<$1.ListMyFollowerResponse> listMyFollower($pb.ServerContext ctx, $1.ListMyFollowerRequest request);
  $async.Future<$1.ListMyFriendResponse> listMyFriend($pb.ServerContext ctx, $1.ListMyFriendRequest request);
  $async.Future<$1.GetMySocialSummaryResponse> getMySocialSummary($pb.ServerContext ctx, $1.GetMySocialSummaryRequest request);
  $async.Future<$1.GetUserPagePermissionResponse> getUserPagePermission($pb.ServerContext ctx, $1.GetUserPagePermissionRequest request);
  $async.Future<$1.CreateRolePagePermissionResponse> createRolePagePermission($pb.ServerContext ctx, $1.CreateRolePagePermissionRequest request);
  $async.Future<$1.UpdateRolePagePermissionResponse> updateRolePagePermission($pb.ServerContext ctx, $1.UpdateRolePagePermissionRequest request);
  $async.Future<$1.GetRolePagePermissionResponse> getRolePagePermission($pb.ServerContext ctx, $1.GetRolePagePermissionRequest request);
  $async.Future<$2.AddAddressResponse> addAddress($pb.ServerContext ctx, $2.AddAddressRequest request);
  $async.Future<$2.DeleteAddressResponse> deleteAddress($pb.ServerContext ctx, $2.DeleteAddressRequest request);
  $async.Future<$2.UpdateAddressResponse> updateAddress($pb.ServerContext ctx, $2.UpdateAddressRequest request);
  $async.Future<$2.GetAddressResponse> getAddress($pb.ServerContext ctx, $2.GetAddressRequest request);
  $async.Future<$2.ListAddressResponse> listAddress($pb.ServerContext ctx, $2.ListAddressRequest request);
  $async.Future<$1.ListUserByRoleResponse> listUserByRole($pb.ServerContext ctx, $1.ListUserByRoleRequest request);
  $async.Future<$1.ListPermissionResponse> listPermission($pb.ServerContext ctx, $1.ListPermissionRequest request);
  $async.Future<$1.ListRoleResponse> listRole($pb.ServerContext ctx, $1.ListRoleRequest request);
  $async.Future<$1.GiveRolePermissionResponse> giveRolePermission($pb.ServerContext ctx, $1.GiveRolePermissionRequest request);
  $async.Future<$1.RemoveRolePermissionResponse> removeRolePermission($pb.ServerContext ctx, $1.RemoveRolePermissionRequest request);
  $async.Future<$1.CreateRoleResponse> createRole($pb.ServerContext ctx, $1.CreateRoleRequest request);
  $async.Future<$1.DeleteRoleResponse> deleteRole($pb.ServerContext ctx, $1.DeleteRoleRequest request);
  $async.Future<$1.ListResourceResponse> listResource($pb.ServerContext ctx, $1.ListResourceRequest request);
  $async.Future<$1.GetRoleTypeResponse> getRoleType($pb.ServerContext ctx, $1.GetRoleTypeRequest request);
  $async.Future<$3.CreateShopResponse> createShop($pb.ServerContext ctx, $3.CreateShopRequest request);
  $async.Future<$3.GetShopResponse> getShop($pb.ServerContext ctx, $3.GetShopRequest request);
  $async.Future<$3.UpdateShopResponse> updateShop($pb.ServerContext ctx, $3.UpdateShopRequest request);
  $async.Future<$3.ListShopResponse> listShop($pb.ServerContext ctx, $3.ListShopRequest request);
  $async.Future<$3.DeleteShopResponse> deleteShop($pb.ServerContext ctx, $3.DeleteShopRequest request);
  $async.Future<$4.ListOperationMetricsResponse> listOperationMetrics($pb.ServerContext ctx, $4.ListOperationMetricsRequest request);
  $async.Future<$3.GetShopQrcodeResponse> getShopQrcode($pb.ServerContext ctx, $3.GetShopQrcodeRequest request);
  $async.Future<$3.UpdateShopManagerResponse> updateShopManager($pb.ServerContext ctx, $3.UpdateShopManagerRequest request);
  $async.Future<$3.GetShopBusinessDataResponse> getShopBusinessData($pb.ServerContext ctx, $3.GetShopBusinessDataRequest request);
  $async.Future<$3.AddShopAccessResponse> addShopAccess($pb.ServerContext ctx, $3.AddShopAccessRequest request);
  $async.Future<$3.RemoveShopAccessResponse> removeShopAccess($pb.ServerContext ctx, $3.RemoveShopAccessRequest request);
  $async.Future<$3.VerifyFieldResponse> verifyField($pb.ServerContext ctx, $3.VerifyFieldRequest request);
  $async.Future<$3.ListShopAccessResponse> listShopAccess($pb.ServerContext ctx, $3.ListShopAccessRequest request);
  $async.Future<$3.AddShopCategoryResponse> addShopCategory($pb.ServerContext ctx, $3.AddShopCategoryRequest request);
  $async.Future<$3.GetShopCategoryResponse> getShopCategory($pb.ServerContext ctx, $3.GetShopCategoryRequest request);
  $async.Future<$3.RemoveShopCategoryResponse> removeShopCategory($pb.ServerContext ctx, $3.RemoveShopCategoryRequest request);
  $async.Future<$5.CreateTemplateResponse> addFreightTemplate($pb.ServerContext ctx, $5.CreateTemplateRequest request);
  $async.Future<$5.GetTemplateResponse> getFreightTemplate($pb.ServerContext ctx, $5.GetTemplateRequest request);
  $async.Future<$5.UpdateTemplateResponse> updateFreightTemplate($pb.ServerContext ctx, $5.UpdateTemplateRequest request);
  $async.Future<$5.DeleteTemplateResponse> deleteFreightTemplate($pb.ServerContext ctx, $5.DeleteTemplateRequest request);
  $async.Future<$5.ListTemplateResponse> listFreightTemplate($pb.ServerContext ctx, $5.ListTemplateRequest request);
  $async.Future<$3.ListShopQualificationResponse> listQualification($pb.ServerContext ctx, $3.ListShopQualificationRequest request);
  $async.Future<$6.MallIndexResponse> getMallIndex($pb.ServerContext ctx, $6.MallIndexRequest request);
  $async.Future<$7.CreateCategoryResponse> createCategory($pb.ServerContext ctx, $7.CreateCategoryRequest request);
  $async.Future<$7.GetCategoryResponse> getCategory($pb.ServerContext ctx, $7.GetCategoryRequest request);
  $async.Future<$7.UpdateCategoryResponse> updateCategory($pb.ServerContext ctx, $7.UpdateCategoryRequest request);
  $async.Future<$7.ListCategoryResponse> listCategory($pb.ServerContext ctx, $7.ListCategoryRequest request);
  $async.Future<$7.DeleteCategoryResponse> deleteCategory($pb.ServerContext ctx, $7.DeleteCategoryRequest request);
  $async.Future<$8.ListCategoryQualificationResponse> listCategoryQualification($pb.ServerContext ctx, $8.ListCategoryQualificationRequest request);
  $async.Future<$9.CreateProductResponse> createProduct($pb.ServerContext ctx, $9.CreateProductRequest request);
  $async.Future<$9.GetProductResponse> getProduct($pb.ServerContext ctx, $9.GetProductRequest request);
  $async.Future<$9.UpdateProductResponse> updateProduct($pb.ServerContext ctx, $9.UpdateProductRequest request);
  $async.Future<$9.ListProductResponse> listProduct($pb.ServerContext ctx, $9.ListProductRequest request);
  $async.Future<$9.ListProductByProductIDsResponse> listProductByIDs($pb.ServerContext ctx, $9.ListProductByProductIDsRequest request);
  $async.Future<$9.DeleteProductResponse> deleteProduct($pb.ServerContext ctx, $9.DeleteProductRequest request);
  $async.Future<$9.UploadMultiImageResponse> uploadMultiImage($pb.ServerContext ctx, $9.UploadMultiImageRequest request);
  $async.Future<$9.DeleteImageResponse> deleteImageById($pb.ServerContext ctx, $9.DeleteImageRequest request);
  $async.Future<$9.BindAttributeResponse> bindAttribute($pb.ServerContext ctx, $9.BindAttributeRequest request);
  $async.Future<$9.PublishProductResponse> publishProduct($pb.ServerContext ctx, $9.PublishProductRequest request);
  $async.Future<$9.OffSelfProductsResponse> offShelfProductInBatches($pb.ServerContext ctx, $9.OffSelfProductsRequest request);
  $async.Future<$9.DeleteProductsResponse> deleteProductInBatches($pb.ServerContext ctx, $9.DeleteProductsRequest request);
  $async.Future<$9.ChangeProductStateResponse> changeProductsState($pb.ServerContext ctx, $9.ChangeProductStateRequest request);
  $async.Future<$9.SaveImageInfoResponse> saveProductImageInfo($pb.ServerContext ctx, $9.SaveImageInfoRequest request);
  $async.Future<$10.CreateSkuResponse> createSku($pb.ServerContext ctx, $10.CreateSkuRequest request);
  $async.Future<$10.GetSkuResponse> getSku($pb.ServerContext ctx, $10.GetSkuRequest request);
  $async.Future<$10.UpdateSkuResponse> updateSku($pb.ServerContext ctx, $10.UpdateSkuRequest request);
  $async.Future<$10.ListSkuResponse> listSku($pb.ServerContext ctx, $10.ListSkuRequest request);
  $async.Future<$10.DeleteSkuResponse> deleteSku($pb.ServerContext ctx, $10.DeleteSkuRequest request);
  $async.Future<$11.CreateAttributeResponse> createAttribute($pb.ServerContext ctx, $11.CreateAttributeRequest request);
  $async.Future<$11.GetAttributeResponse> getAttribute($pb.ServerContext ctx, $11.GetAttributeRequest request);
  $async.Future<$11.ListAttributeResponse> listAttribute($pb.ServerContext ctx, $11.ListAttributeRequest request);
  $async.Future<$11.DeleteAttributeResponse> deleteAttribute($pb.ServerContext ctx, $11.DeleteAttributeRequest request);
  $async.Future<$11.AddAttributeValueResponse> addAttributeValue($pb.ServerContext ctx, $11.AddAttributeValueRequest request);
  $async.Future<$11.DeleteAttributeValueResponse> deleteAttributeValue($pb.ServerContext ctx, $11.DeleteAttributeValueRequest request);
  $async.Future<$12.CreateOrderResponse> createOrder($pb.ServerContext ctx, $12.CreateOrderRequest request);
  $async.Future<$12.GetOrderResponse> getOrder($pb.ServerContext ctx, $12.GetOrderRequest request);
  $async.Future<$12.UpdateOrderResponse> updateOrder($pb.ServerContext ctx, $12.UpdateOrderRequest request);
  $async.Future<$12.ListOrderResponse> listOrder($pb.ServerContext ctx, $12.ListOrderRequest request);
  $async.Future<$12.DeleteOrderResponse> deleteOrder($pb.ServerContext ctx, $12.DeleteOrderRequest request);
  $async.Future<$12.ShipGoodsResponse> shipGoods($pb.ServerContext ctx, $12.ShipGoodsRequest request);
  $async.Future<$12.ConfirmReceiptGoodsResponse> confirmReceiptGoods($pb.ServerContext ctx, $12.ConfirmReceiptGoodsRequest request);
  $async.Future<$12.CancelOrderResponse> cancelOrder($pb.ServerContext ctx, $12.CancelOrderRequest request);
  $async.Future<$12.ShipGoodsInBatchesResponse> shipGoodsInBatches($pb.ServerContext ctx, $12.ShipGoodsInBatchesRequest request);
  $async.Future<$12.FreeShippingInBatchesResponse> freeShippingInBatches($pb.ServerContext ctx, $12.FreeShippingInBatchesRequest request);
  $async.Future<$3.ListShopSummaryResponse> listShopSummary($pb.ServerContext ctx, $3.ListShopSummaryRequest request);
  $async.Future<$3.ListShopBySellerIDResponse> listShopBySellerID($pb.ServerContext ctx, $3.ListShopBySellerIDRequest request);
  $async.Future<$13.AddCartResponse> createCart($pb.ServerContext ctx, $13.AddCartRequest request);
  $async.Future<$13.GetCartResponse> getCart($pb.ServerContext ctx, $13.GetCartRequest request);
  $async.Future<$13.UpdateCartResponse> updateCart($pb.ServerContext ctx, $13.UpdateCartRequest request);
  $async.Future<$13.DeleteCartResponse> deleteCart($pb.ServerContext ctx, $13.DeleteCartRequest request);
  $async.Future<$14.UploadAttachmentResponse> uploadAttachment($pb.ServerContext ctx, $14.UploadAttachmentRequest request);
  $async.Future<$14.SaveAttachmentResponse> saveAttachment($pb.ServerContext ctx, $14.SaveAttachmentRequest request);
  $async.Future<$14.ListAttachmentResponse> listAttachment($pb.ServerContext ctx, $14.ListAttachmentRequest request);
  $async.Future<$14.DeleteAttachmentResponse> deleteAttachment($pb.ServerContext ctx, $14.DeleteAttachmentRequest request);
  $async.Future<$15.CreateSellerResponse> createSeller($pb.ServerContext ctx, $15.CreateSellerRequest request);
  $async.Future<$16.CreatePaymentResponse> createPayment($pb.ServerContext ctx, $16.CreatePaymentRequest request);
  $async.Future<$16.GetPaymentResponse> getPayment($pb.ServerContext ctx, $16.GetPaymentRequest request);
  $async.Future<$16.UpdatePaymentResponse> updatePayment($pb.ServerContext ctx, $16.UpdatePaymentRequest request);
  $async.Future<$16.DeletePaymentResponse> deletePayment($pb.ServerContext ctx, $16.DeletePaymentRequest request);
  $async.Future<$17.CreateConfigResponse> createConfig($pb.ServerContext ctx, $17.CreateConfigRequest request);
  $async.Future<$17.UpdateConfigResponse> updateConfig($pb.ServerContext ctx, $17.UpdateConfigRequest request);
  $async.Future<$17.DeleteConfigResponse> deleteConfig($pb.ServerContext ctx, $17.DeleteConfigRequest request);
  $async.Future<$17.GetConfigResponse> getConfig($pb.ServerContext ctx, $17.GetConfigRequest request);
  $async.Future<$17.GetSTSResponse> getSTS($pb.ServerContext ctx, $17.GetSTSRequest request);
  $async.Future<$18.ListTenantOrgResponse> listTenantOrg($pb.ServerContext ctx, $18.ListTenantOrgRequest request);
  $async.Future<$19.GetAdminTenantResponse> getAdminTenant($pb.ServerContext ctx, $19.GetAdminTenantRequest request);
  $async.Future<$19.ListAdminUserResponse> listAdminUser($pb.ServerContext ctx, $19.ListAdminUserRequest request);
  $async.Future<$19.CreateAdminUserResponse> createAdminUser($pb.ServerContext ctx, $19.CreateAdminUserRequest request);
  $async.Future<$19.UpdateAdminUserResponse> updateAdminUser($pb.ServerContext ctx, $19.UpdateAdminUserRequest request);
  $async.Future<$19.DeleteAdminUserResponse> deleteAdminUser($pb.ServerContext ctx, $19.DeleteAdminUserRequest request);
  $async.Future<$20.PrepayResponse> wxPrepay($pb.ServerContext ctx, $20.PrepayRequest request);
  $async.Future<$20.CloseOrderResponse> closeOrder($pb.ServerContext ctx, $20.CloseOrderRequest request);
  $async.Future<$20.QueryOrderByIdResponse> queryOrderById($pb.ServerContext ctx, $20.QueryOrderByIdRequest request);
  $async.Future<$20.QueryOrderByOutTradeNoResponse> queryOrderByOutTrade($pb.ServerContext ctx, $20.QueryOrderByOutTradeNoRequest request);
  $async.Future<$21.AddVirtualCurrencyResponse> addVCurrency($pb.ServerContext ctx, $21.AddVirtualCurrencyRequest request);
  $async.Future<$21.RechargeCurrencyResponse> rechargeCurrency($pb.ServerContext ctx, $21.RechargeCurrencyRequest request);
  $async.Future<$21.RechargeCurrencyInBatchesResponse> rechargeCurrencyInBatches($pb.ServerContext ctx, $21.RechargeCurrencyInBatchesRequest request);
  $async.Future<$21.GetVirtualCurrencyResponse> getVCurrency($pb.ServerContext ctx, $21.GetVirtualCurrencyRequest request);
  $async.Future<$21.ListVirtualCurrencyResponse> listVCurrency($pb.ServerContext ctx, $21.ListVirtualCurrencyRequest request);
  $async.Future<$22.ListAccountOperationResponse> listAccountOperation($pb.ServerContext ctx, $22.ListAccountOperationRequest request);
  $async.Future<$23.CreateRoomResponse> createRoom($pb.ServerContext ctx, $23.CreateRoomRequest request);
  $async.Future<$23.GetRoomResponse> getRoom($pb.ServerContext ctx, $23.GetRoomRequest request);
  $async.Future<$23.UpdateRoomResponse> updateRoom($pb.ServerContext ctx, $23.UpdateRoomRequest request);
  $async.Future<$23.ListRoomResponse> listRoom($pb.ServerContext ctx, $23.ListRoomRequest request);
  $async.Future<$23.DeleteRoomResponse> deleteRoom($pb.ServerContext ctx, $23.DeleteRoomRequest request);
  $async.Future<$23.ListFinishedRoomResponse> listFinishedRoom($pb.ServerContext ctx, $23.ListFinishedRoomRequest request);
  $async.Future<$23.GetFinishedRoomResponse> getFinishedRoom($pb.ServerContext ctx, $23.GetFinishedRoomRequest request);
  $async.Future<$24.LiveRecordResponse> record($pb.ServerContext ctx, $24.LiveRecordRequest request);
  $async.Future<$25.CreateLiveUserTokenResponse> createLiveUserToken($pb.ServerContext ctx, $25.CreateLiveUserTokenRequest request);
  $async.Future<$26.UserEnterRoomResponse> userEnterRoom($pb.ServerContext ctx, $26.UserEnterRoomRequest request);
  $async.Future<$26.UserExitRoomResponse> userExitRoom($pb.ServerContext ctx, $26.UserExitRoomRequest request);
  $async.Future<$14.ListAttachmentResponse> listActiveRoomUser($pb.ServerContext ctx, $26.ListActiveRoomUserRequest request);
  $async.Future<$23.LiveSSEResponse> liveSSE($pb.ServerContext ctx, $23.LiveSSERequest request);
  $async.Future<$23.CloseShopAllLiveResponse> closeShopAllLive($pb.ServerContext ctx, $23.CloseShopAllLiveRequest request);
  $async.Future<$24.CreateLivePlanResponse> createLivePlan($pb.ServerContext ctx, $24.CreateLivePlanRequest request);
  $async.Future<$24.GetLivePlanResponse> getLivePlan($pb.ServerContext ctx, $24.GetLivePlanRequest request);
  $async.Future<$24.UpdateLivePlanResponse> updateLivePlan($pb.ServerContext ctx, $24.UpdateLivePlanRequest request);
  $async.Future<$24.ListLivePlanResponse> listLivePlan($pb.ServerContext ctx, $24.ListLivePlanRequest request);
  $async.Future<$24.DeleteLivePlanResponse> deleteLivePlan($pb.ServerContext ctx, $24.DeleteLivePlanRequest request);
  $async.Future<$24.CreateLivePlanProductResponse> createLivePlanProduct($pb.ServerContext ctx, $24.CreateLivePlanProductRequest request);
  $async.Future<$24.UpdateLivePlanProductResponse> updateLivePlanProduct($pb.ServerContext ctx, $24.UpdateLivePlanProductRequest request);
  $async.Future<$24.ListLivePlanProductResponse> listLivePlanProduct($pb.ServerContext ctx, $24.ListLivePlanProductRequest request);
  $async.Future<$24.DeleteLivePlanProductResponse> deleteLivePlanProduct($pb.ServerContext ctx, $24.DeleteLivePlanProductRequest request);
  $async.Future<$24.LoadLivePlanProductResponse> loadLivePlanProduct($pb.ServerContext ctx, $24.LoadLivePlanProductRequest request);
  $async.Future<$24.UpdateLiveProductStatusResponse> updateLiveProductStatus($pb.ServerContext ctx, $24.UpdateLiveProductStatusRequest request);
  $async.Future<$24.ListLiveProductStatusResponse> listLiveProductStatus($pb.ServerContext ctx, $24.ListLiveProductStatusRequest request);
  $async.Future<$24.DeleteLiveProductStatusResponse> deleteLiveProductStatus($pb.ServerContext ctx, $24.DeleteLiveProductStatusRequest request);
  $async.Future<$24.CreateLiveProductStatusResponse> createLiveProductStatus($pb.ServerContext ctx, $24.CreateLiveProductStatusRequest request);
  $async.Future<$24.GetLivingProductStatusResponse> getLivingProductStatus($pb.ServerContext ctx, $24.GetLivingProductStatusRequest request);
  $async.Future<$24.UpdateLiveProductIntroductStatusResponse> updateLiveProductIntroductStatus($pb.ServerContext ctx, $24.UpdateLiveProductIntroductStatusRequest request);
  $async.Future<$27.CreateLiveTextResponse> createLiveText($pb.ServerContext ctx, $27.CreateLiveTextRequest request);
  $async.Future<$27.UpdateLiveTextResponse> updateLiveText($pb.ServerContext ctx, $27.UpdateLiveTextRequest request);
  $async.Future<$27.ListLiveTextResponse> listLiveText($pb.ServerContext ctx, $27.ListLiveTextRequest request);
  $async.Future<$27.GetLiveTextResponse> getLiveText($pb.ServerContext ctx, $27.GetLiveTextRequest request);
  $async.Future<$27.DeleteLiveTextsResponse> deleteLiveTexts($pb.ServerContext ctx, $27.DeleteLiveTextsRequest request);
  $async.Future<$23.GetLiveChartDataResponse> getLiveChartData($pb.ServerContext ctx, $23.GetLiveChartDataRequest request);
  $async.Future<$28.GetEvaluateSelectorResponse> getEvaluateSelector($pb.ServerContext ctx, $28.GetEvaluateSelectorRequest request);
  $async.Future<$28.ListPersonalEvaluateResponse> listPersonalEvaluate($pb.ServerContext ctx, $28.ListPersonalEvaluateRequest request);
  $async.Future<$28.GetEvaluateDetailResponse> getEvaluateDetail($pb.ServerContext ctx, $28.GetEvaluateDetailRequest request);
  $async.Future<$28.SubmitEvaluateResponse> submitEvaluate($pb.ServerContext ctx, $28.SubmitEvaluateRequest request);
  $async.Future<$28.ListUnevaluatedRoomResponse> listUnevaluatedRoom($pb.ServerContext ctx, $28.ListUnevaluatedRoomRequest request);
  $async.Future<$28.ListStudentEvalutionsResponse> listStudentEvaluations($pb.ServerContext ctx, $28.ListStudentEvalutionsRequest request);
  $async.Future<$28.IgnoreLiveEvaluationResponse> ignoreEvaluation($pb.ServerContext ctx, $28.IgnoreLiveEvaluationRequest request);
  $async.Future<$28.GetRankResponse> getRank($pb.ServerContext ctx, $28.GetRankRequest request);
  $async.Future<$23.RecordLiveCallbackResponse> recordLiveCallback($pb.ServerContext ctx, $23.RecordLiveCallbackRequest request);
  $async.Future<$23.VideoToTextCallbackResponse> videoToTextCallback($pb.ServerContext ctx, $23.VideoToTextCallbackRequest request);
  $async.Future<$23.LiveStreamCallbackResponse> liveStreamCallback($pb.ServerContext ctx, $23.LiveStreamCallbackRequest request);
  $async.Future<$28.RegenerationAiFeedbackResponse> regenerationAiFeedback($pb.ServerContext ctx, $28.RegenerationAiFeedbackRequest request);
  $async.Future<$28.SubmitUserAttitudeForAIResultResponse> submitUserAttitudeForAiResult($pb.ServerContext ctx, $28.SubmitUserAttitudeForAIResultRequest request);
  $async.Future<$24.PreheatResponse> preheatProduct($pb.ServerContext ctx, $24.PreheatRequest request);
  $async.Future<$24.PublicPriceResponse> publicPrice($pb.ServerContext ctx, $24.PublicPriceRequest request);
  $async.Future<$29.CreateTenantResponse> createTenant($pb.ServerContext ctx, $29.CreateTenantRequest request);
  $async.Future<$29.GetTenantResponse> getTenant($pb.ServerContext ctx, $29.GetTenantRequest request);
  $async.Future<$29.UpdateTenantResponse> updateTenant($pb.ServerContext ctx, $29.UpdateTenantRequest request);
  $async.Future<$29.DeleteTenantResponse> deleteTenant($pb.ServerContext ctx, $29.DeleteTenantRequest request);
  $async.Future<$29.ListTenantResponse> listTenant($pb.ServerContext ctx, $29.ListTenantRequest request);
  $async.Future<$29.GetTenantOrgResponse> getTenantOrg($pb.ServerContext ctx, $29.GetTenantOrgRequest request);
  $async.Future<$29.EnterTenantResponse> enterTenant($pb.ServerContext ctx, $29.EnterTenantRequest request);
  $async.Future<$29.ExitTenantResponse> exitTenant($pb.ServerContext ctx, $29.ExitTenantRequest request);
  $async.Future<$29.InitTenantResponse> initTenant($pb.ServerContext ctx, $29.InitTenantRequest request);
  $async.Future<$30.CreateTenantDeptResponse> createTenantDept($pb.ServerContext ctx, $30.CreateTenantDeptRequest request);
  $async.Future<$30.UpdateTenantDeptResponse> updateTenantDept($pb.ServerContext ctx, $30.UpdateTenantDeptRequest request);
  $async.Future<$30.DeleteTenantDeptResponse> deleteTenantDept($pb.ServerContext ctx, $30.DeleteTenantDeptRequest request);
  $async.Future<$30.GetTenantDeptResponse> getTenantDept($pb.ServerContext ctx, $30.GetTenantDeptRequest request);
  $async.Future<$30.GetTenantDeptTypeResponse> getTenantDeptType($pb.ServerContext ctx, $30.GetTenantDeptTypeRequest request);
  $async.Future<$31.CreateTenantUserResponse> createTenantUser($pb.ServerContext ctx, $31.CreateTenantUserRequest request);
  $async.Future<$31.DeleteTenantUserResponse> deleteTenantUser($pb.ServerContext ctx, $31.DeleteTenantUserRequest request);
  $async.Future<$31.UpdateTenantUserResponse> updateTenantUser($pb.ServerContext ctx, $31.UpdateTenantUserRequest request);
  $async.Future<$31.GetTenantUserResponse> getTenantUser($pb.ServerContext ctx, $31.GetTenantUserRequest request);
  $async.Future<$31.ListTenantUserResponse> listTenantUser($pb.ServerContext ctx, $31.ListTenantUserRequest request);
  $async.Future<$31.ListTenantStudentResponse> listTenantStudent($pb.ServerContext ctx, $31.ListTenantStudentRequest request);
  $async.Future<$31.UpdateTenantUserPasswordResponse> updateTenantUserPassword($pb.ServerContext ctx, $31.UpdateTenantUserPasswordRequest request);
  $async.Future<$32.UpdateTenantConfigResponse> updateTenantConfig($pb.ServerContext ctx, $32.UpdateTenantConfigRequest request);
  $async.Future<$32.ListTenantConfigResponse> listTenantConfig($pb.ServerContext ctx, $32.ListTenantConfigRequest request);
  $async.Future<$33.CreateShortVideoResponse> createShortVideo($pb.ServerContext ctx, $33.CreateShortVideoRequest request);
  $async.Future<$33.StageShortVideoResponse> stageShortVideo($pb.ServerContext ctx, $33.StageShortVideoRequest request);
  $async.Future<$33.ListMyShortVideoResponse> listMyShortVideo($pb.ServerContext ctx, $33.ListMyShortVideoRequest request);
  $async.Future<$33.ListMyStageVideoResponse> listMyStageVideo($pb.ServerContext ctx, $33.ListMyStageVideoRequest request);
  $async.Future<$33.ListMyLikeVideoResponse> listMyLikeVideo($pb.ServerContext ctx, $33.ListMyLikeVideoRequest request);
  $async.Future<$33.ListMyFavoriteVideoResponse> listMyFavoriteVideo($pb.ServerContext ctx, $33.ListMyFavoriteVideoRequest request);
  $async.Future<$33.GetShortVideoResponse> getShortVideo($pb.ServerContext ctx, $33.GetShortVideoRequest request);
  $async.Future<$33.UpdateShortVideoResponse> updateShortVideo($pb.ServerContext ctx, $33.UpdateShortVideoRequest request);
  $async.Future<$33.DeleteShortVideoResponse> deleteShortVideo($pb.ServerContext ctx, $33.DeleteShortVideoRequest request);
  $async.Future<$33.GetStageVideoResponse> getStageVideo($pb.ServerContext ctx, $33.GetStageVideoRequest request);
  $async.Future<$33.DeleteStageVideoResponse> deleteStageVideo($pb.ServerContext ctx, $33.DeleteStageVideoRequest request);
  $async.Future<$33.UpdateStageVideoResponse> updateStageVideo($pb.ServerContext ctx, $33.UpdateStageVideoRequest request);
  $async.Future<$33.ManagementListShortVideoResponse> managementListShortVideo($pb.ServerContext ctx, $33.ManagementListShortVideoRequest request);
  $async.Future<$33.ManagementCensorShortVideoResponse> managementCensorShortVideo($pb.ServerContext ctx, $33.ManagementCensorShortVideoRequest request);
  $async.Future<$33.ManagementDeleteShortVideoResponse> managementDeleteShortVideo($pb.ServerContext ctx, $33.ManagementDeleteShortVideoRequest request);
  $async.Future<$33.ListShortVideoResponse> listShortVideo($pb.ServerContext ctx, $33.ListShortVideoRequest request);
  $async.Future<$33.LikeShortVideoResponse> likeShortVideo($pb.ServerContext ctx, $33.LikeShortVideoRequest request);
  $async.Future<$33.FavoriteShortVideoResponse> favoriteShortVideo($pb.ServerContext ctx, $33.FavoriteShortVideoRequest request);
  $async.Future<$33.CreateShortVideoCommentResponse> createShortVideoComment($pb.ServerContext ctx, $33.CreateShortVideoCommentRequest request);
  $async.Future<$33.DeleteShortVideoCommentResponse> deleteShortVideoComment($pb.ServerContext ctx, $33.DeleteShortVideoCommentRequest request);
  $async.Future<$33.ListShortVideoCommentResponse> listShortVideoComment($pb.ServerContext ctx, $33.ListShortVideoCommentRequest request);
  $async.Future<$34.CreateCouponResponse> createCoupon($pb.ServerContext ctx, $34.CreateCouponRequest request);
  $async.Future<$34.ListCouponResponse> listCoupon($pb.ServerContext ctx, $34.ListCouponRequest request);
  $async.Future<$34.GetCouponDetailResponse> couponDetail($pb.ServerContext ctx, $34.GetCouponDetailRequest request);
  $async.Future<$34.UpdateCouponResponse> updateCoupon($pb.ServerContext ctx, $34.UpdateCouponRequest request);
  $async.Future<$34.DeleteCouponResponse> deleteCoupon($pb.ServerContext ctx, $34.DeleteCouponRequest request);
  $async.Future<$34.AbolishCouponResponse> abolishCoupon($pb.ServerContext ctx, $34.AbolishCouponRequest request);
  $async.Future<$34.UpdateCouponDistributionStatusResponse> updateCouponDistributionStatus($pb.ServerContext ctx, $34.UpdateCouponDistributionStatusRequest request);
  $async.Future<$34.ClaimCouponResponse> claimCoupon($pb.ServerContext ctx, $34.ClaimCouponRequest request);
  $async.Future<$34.ListMyCouponResponse> listMyCoupon($pb.ServerContext ctx, $34.ListMyCouponRequest request);
  $async.Future<$35.CreateActivityResponse> createActivity($pb.ServerContext ctx, $35.CreateActivityRequest request);
  $async.Future<$35.ListActivityResponse> listActivity($pb.ServerContext ctx, $35.ListActivityRequest request);
  $async.Future<$35.GetActivityDetailResponse> activityDetail($pb.ServerContext ctx, $35.GetActivityDetailRequest request);
  $async.Future<$35.UpdateActivityResponse> updateActivity($pb.ServerContext ctx, $35.UpdateActivityRequest request);
  $async.Future<$35.DeleteActivityResponse> deleteActivity($pb.ServerContext ctx, $35.DeleteActivityRequest request);
  $async.Future<$35.DisableActivityResponse> disableActivity($pb.ServerContext ctx, $35.DisableActivityRequest request);
  $async.Future<$36.CreateCourseMaterialBoxResponse> createCourseMaterialBox($pb.ServerContext ctx, $36.CreateCourseMaterialBoxRequest request);
  $async.Future<$36.ListCourseMaterialBoxResponse> listCourseMaterialBox($pb.ServerContext ctx, $36.ListCourseMaterialBoxRequest request);
  $async.Future<$36.DeleteCourseMaterialBoxResponse> deleteCourseMaterialBox($pb.ServerContext ctx, $36.DeleteCourseMaterialBoxRequest request);
  $async.Future<$36.UploadCourseMaterialResponse> uploadCourseMaterial($pb.ServerContext ctx, $36.UploadCourseMaterialRequest request);
  $async.Future<$36.ListCourseMaterialResponse> listCourseMaterial($pb.ServerContext ctx, $36.ListCourseMaterialRequest request);
  $async.Future<$36.DeleteCourseMaterialResponse> deleteCourseMaterial($pb.ServerContext ctx, $36.DeleteCourseMaterialRequest request);
  $async.Future<$37.GetCourseModuleCodeResponse> getCourseModuleCode($pb.ServerContext ctx, $37.GetCourseModuleCodeRequest request);
  $async.Future<$37.GetCourseChapterCodeResponse> getCourseChapterCode($pb.ServerContext ctx, $37.GetCourseChapterCodeRequest request);
  $async.Future<$37.CreateCourseModuleResponse> createCourseModule($pb.ServerContext ctx, $37.CreateCourseModuleRequest request);
  $async.Future<$37.GetCourseModuleResponse> getCourseModule($pb.ServerContext ctx, $37.GetCourseModuleRequest request);
  $async.Future<$37.UpdateCourseModuleResponse> updateCourseModule($pb.ServerContext ctx, $37.UpdateCourseModuleRequest request);
  $async.Future<$37.DeleteCourseModuleResponse> deleteCourseModule($pb.ServerContext ctx, $37.DeleteCourseModuleRequest request);
  $async.Future<$37.ListCourseModuleResponse> listCourseModule($pb.ServerContext ctx, $37.ListCourseModuleRequest request);
  $async.Future<$38.ListLatestCourseResponse> listLatestCourse($pb.ServerContext ctx, $38.ListLatestCourseRequest request);
  $async.Future<$38.ListHotestCourseResponse> listHotestCourse($pb.ServerContext ctx, $38.ListHotestCourseRequest request);
  $async.Future<$39.CreateCmCourseResponse> createCmCourse($pb.ServerContext ctx, $39.CreateCmCourseRequest request);
  $async.Future<$39.PreviewCmCourseResponse> previewCmCourse($pb.ServerContext ctx, $39.PreviewCmCourseRequest request);
  $async.Future<$40.CreateNmCourseChapterResourceResponse> createNmCourseResource($pb.ServerContext ctx, $40.CreateNmCourseChapterResourceRequest request);
  $async.Future<$40.CreateNmCourseChapterResponse> createNmCourseChapter($pb.ServerContext ctx, $40.CreateNmCourseChapterRequest request);
  $async.Future<$40.CreateNmCourseResponse> createNmCourse($pb.ServerContext ctx, $40.CreateNmCourseRequest request);
  $async.Future<$40.ListNmCourseResponse> listNmCourse($pb.ServerContext ctx, $40.ListNmCourseRequest request);
  $async.Future<$40.NmCourseDetailResponse> nmCourseDetail($pb.ServerContext ctx, $40.NmCourseDetailRequest request);
  $async.Future<$40.DeleteNmCourseResponse> deleteNmCourse($pb.ServerContext ctx, $40.DeleteNmCourseRequest request);
  $async.Future<$38.CreateCourseResponse> createCourse($pb.ServerContext ctx, $38.CreateCourseRequest request);
  $async.Future<$38.GetCourseResponse> getCourse($pb.ServerContext ctx, $38.GetCourseRequest request);
  $async.Future<$38.UpdateCourseResponse> updateCourse($pb.ServerContext ctx, $38.UpdateCourseRequest request);
  $async.Future<$38.DeleteCourseResponse> deleteCourse($pb.ServerContext ctx, $38.DeleteCourseRequest request);
  $async.Future<$38.ListCourseResponse> listCourse($pb.ServerContext ctx, $38.ListCourseRequest request);
  $async.Future<$41.CreateKnowledgeGraphResponse> createKnowledgeGraph($pb.ServerContext ctx, $41.CreateKnowledgeGraphRequest request);
  $async.Future<$41.GetKnowledgeGraphResponse> getKnowledgeGraph($pb.ServerContext ctx, $41.GetKnowledgeGraphRequest request);
  $async.Future<$41.GetKnowledgeGraphNodeResponse> getKnowledgeGraphNode($pb.ServerContext ctx, $41.GetKnowledgeGraphNodeRequest request);
  $async.Future<$38.GetMajorCodeResponse> getMajorCode($pb.ServerContext ctx, $38.GetMajorCodeRequest request);
  $async.Future<$38.GetCourseIdsResponse> getCourseIds($pb.ServerContext ctx, $38.GetCourseIdsRequest request);
  $async.Future<$42.EnrollCourseResponse> enrollCourse($pb.ServerContext ctx, $42.EnrollCourseRequest request);
  $async.Future<$42.DeleteMyCourseResponse> deleteMyCourse($pb.ServerContext ctx, $42.DeleteMyCourseRequest request);
  $async.Future<$42.UpdateCourseProgressResponse> updateCourseProgress($pb.ServerContext ctx, $42.UpdateCourseProgressRequest request);
  $async.Future<$42.ListMyCourseResponse> listMyCourse($pb.ServerContext ctx, $42.ListMyCourseRequest request);
  $async.Future<$43.ListTeachingPlanResponse> listTeachingPlan($pb.ServerContext ctx, $43.ListTeachingPlanRequest request);
  $async.Future<$43.CreateTeachingPlanResponse> createTeachingPlan($pb.ServerContext ctx, $43.CreateTeachingPlanRequest request);
  $async.Future<$43.UpdateTeachingPlanResponse> updateTeachingPlan($pb.ServerContext ctx, $43.UpdateTeachingPlanRequest request);
  $async.Future<$43.DeleteTeachingPlanResponse> deleteTeachingPlan($pb.ServerContext ctx, $43.DeleteTeachingPlanRequest request);
  $async.Future<$44.CreateEduSchemeResponse> createEduScheme($pb.ServerContext ctx, $44.CreateEduSchemeRequest request);
  $async.Future<$44.UpdateEduSchemeResponse> updateEduScheme($pb.ServerContext ctx, $44.UpdateEduSchemeRequest request);
  $async.Future<$44.ListEduSchemeResponse> listEduScheme($pb.ServerContext ctx, $44.ListEduSchemeRequest request);
  $async.Future<$44.EduSchemeDetailResponse> eduSchemeDetail($pb.ServerContext ctx, $44.EduSchemeDetailRequest request);
  $async.Future<$44.DeleteEduSchemeResponse> deleteEduScheme($pb.ServerContext ctx, $44.DeleteEduSchemeRequest request);
  $async.Future<$44.DistributeEduSchemeResponse> distributeEduScheme($pb.ServerContext ctx, $44.DistributeEduSchemeRequest request);
  $async.Future<$45.GetAndroidQRCodeResponse> getAndroidQRcode($pb.ServerContext ctx, $45.GetAndroidQRCodeRequest request);

  $pb.GeneratedMessage createRequest($core.String methodName) {
    switch (methodName) {
      case 'CreateExample': return $0.CreateExampleRequest();
      case 'GetExample': return $0.GetExampleRequest();
      case 'UpdateExample': return $0.UpdateExampleRequest();
      case 'ListExample': return $0.ListExampleRequest();
      case 'DeleteExample': return $0.DeleteExampleRequest();
      case 'Login': return $1.LoginRequest();
      case 'Logout': return $1.LogoutRequest();
      case 'GetVerifyCode': return $1.GetVerifyCodeRequest();
      case 'CheckVerifyCode': return $1.CheckVerifyCodeRequest();
      case 'GetUser': return $1.GetUserRequest();
      case 'LoginWithPassword': return $1.LoginWithPasswordRequest();
      case 'UpdatePassword': return $1.UpdatePasswordRequest();
      case 'UpdateUser': return $1.UpdateUserRequest();
      case 'UpdatePhone': return $1.UpdatePhoneRequest();
      case 'UpdateUserTenant': return $1.UpdateUserTenantRequest();
      case 'FollowUser': return $1.FollowUserRequest();
      case 'ListMyFollowing': return $1.ListMyFollowingRequest();
      case 'ListMyFollower': return $1.ListMyFollowerRequest();
      case 'ListMyFriend': return $1.ListMyFriendRequest();
      case 'GetMySocialSummary': return $1.GetMySocialSummaryRequest();
      case 'GetUserPagePermission': return $1.GetUserPagePermissionRequest();
      case 'CreateRolePagePermission': return $1.CreateRolePagePermissionRequest();
      case 'UpdateRolePagePermission': return $1.UpdateRolePagePermissionRequest();
      case 'GetRolePagePermission': return $1.GetRolePagePermissionRequest();
      case 'AddAddress': return $2.AddAddressRequest();
      case 'DeleteAddress': return $2.DeleteAddressRequest();
      case 'UpdateAddress': return $2.UpdateAddressRequest();
      case 'GetAddress': return $2.GetAddressRequest();
      case 'ListAddress': return $2.ListAddressRequest();
      case 'ListUserByRole': return $1.ListUserByRoleRequest();
      case 'ListPermission': return $1.ListPermissionRequest();
      case 'ListRole': return $1.ListRoleRequest();
      case 'GiveRolePermission': return $1.GiveRolePermissionRequest();
      case 'RemoveRolePermission': return $1.RemoveRolePermissionRequest();
      case 'CreateRole': return $1.CreateRoleRequest();
      case 'DeleteRole': return $1.DeleteRoleRequest();
      case 'ListResource': return $1.ListResourceRequest();
      case 'GetRoleType': return $1.GetRoleTypeRequest();
      case 'CreateShop': return $3.CreateShopRequest();
      case 'GetShop': return $3.GetShopRequest();
      case 'UpdateShop': return $3.UpdateShopRequest();
      case 'ListShop': return $3.ListShopRequest();
      case 'DeleteShop': return $3.DeleteShopRequest();
      case 'ListOperationMetrics': return $4.ListOperationMetricsRequest();
      case 'GetShopQrcode': return $3.GetShopQrcodeRequest();
      case 'UpdateShopManager': return $3.UpdateShopManagerRequest();
      case 'GetShopBusinessData': return $3.GetShopBusinessDataRequest();
      case 'AddShopAccess': return $3.AddShopAccessRequest();
      case 'RemoveShopAccess': return $3.RemoveShopAccessRequest();
      case 'VerifyField': return $3.VerifyFieldRequest();
      case 'ListShopAccess': return $3.ListShopAccessRequest();
      case 'AddShopCategory': return $3.AddShopCategoryRequest();
      case 'GetShopCategory': return $3.GetShopCategoryRequest();
      case 'RemoveShopCategory': return $3.RemoveShopCategoryRequest();
      case 'AddFreightTemplate': return $5.CreateTemplateRequest();
      case 'GetFreightTemplate': return $5.GetTemplateRequest();
      case 'UpdateFreightTemplate': return $5.UpdateTemplateRequest();
      case 'DeleteFreightTemplate': return $5.DeleteTemplateRequest();
      case 'ListFreightTemplate': return $5.ListTemplateRequest();
      case 'ListQualification': return $3.ListShopQualificationRequest();
      case 'GetMallIndex': return $6.MallIndexRequest();
      case 'CreateCategory': return $7.CreateCategoryRequest();
      case 'GetCategory': return $7.GetCategoryRequest();
      case 'UpdateCategory': return $7.UpdateCategoryRequest();
      case 'ListCategory': return $7.ListCategoryRequest();
      case 'DeleteCategory': return $7.DeleteCategoryRequest();
      case 'ListCategoryQualification': return $8.ListCategoryQualificationRequest();
      case 'CreateProduct': return $9.CreateProductRequest();
      case 'GetProduct': return $9.GetProductRequest();
      case 'UpdateProduct': return $9.UpdateProductRequest();
      case 'ListProduct': return $9.ListProductRequest();
      case 'ListProductByIDs': return $9.ListProductByProductIDsRequest();
      case 'DeleteProduct': return $9.DeleteProductRequest();
      case 'UploadMultiImage': return $9.UploadMultiImageRequest();
      case 'DeleteImageById': return $9.DeleteImageRequest();
      case 'BindAttribute': return $9.BindAttributeRequest();
      case 'PublishProduct': return $9.PublishProductRequest();
      case 'OffShelfProductInBatches': return $9.OffSelfProductsRequest();
      case 'DeleteProductInBatches': return $9.DeleteProductsRequest();
      case 'ChangeProductsState': return $9.ChangeProductStateRequest();
      case 'SaveProductImageInfo': return $9.SaveImageInfoRequest();
      case 'CreateSku': return $10.CreateSkuRequest();
      case 'GetSku': return $10.GetSkuRequest();
      case 'UpdateSku': return $10.UpdateSkuRequest();
      case 'ListSku': return $10.ListSkuRequest();
      case 'DeleteSku': return $10.DeleteSkuRequest();
      case 'CreateAttribute': return $11.CreateAttributeRequest();
      case 'GetAttribute': return $11.GetAttributeRequest();
      case 'ListAttribute': return $11.ListAttributeRequest();
      case 'DeleteAttribute': return $11.DeleteAttributeRequest();
      case 'AddAttributeValue': return $11.AddAttributeValueRequest();
      case 'DeleteAttributeValue': return $11.DeleteAttributeValueRequest();
      case 'CreateOrder': return $12.CreateOrderRequest();
      case 'GetOrder': return $12.GetOrderRequest();
      case 'UpdateOrder': return $12.UpdateOrderRequest();
      case 'ListOrder': return $12.ListOrderRequest();
      case 'DeleteOrder': return $12.DeleteOrderRequest();
      case 'ShipGoods': return $12.ShipGoodsRequest();
      case 'ConfirmReceiptGoods': return $12.ConfirmReceiptGoodsRequest();
      case 'CancelOrder': return $12.CancelOrderRequest();
      case 'ShipGoodsInBatches': return $12.ShipGoodsInBatchesRequest();
      case 'FreeShippingInBatches': return $12.FreeShippingInBatchesRequest();
      case 'ListShopSummary': return $3.ListShopSummaryRequest();
      case 'ListShopBySellerID': return $3.ListShopBySellerIDRequest();
      case 'CreateCart': return $13.AddCartRequest();
      case 'GetCart': return $13.GetCartRequest();
      case 'UpdateCart': return $13.UpdateCartRequest();
      case 'DeleteCart': return $13.DeleteCartRequest();
      case 'UploadAttachment': return $14.UploadAttachmentRequest();
      case 'SaveAttachment': return $14.SaveAttachmentRequest();
      case 'ListAttachment': return $14.ListAttachmentRequest();
      case 'DeleteAttachment': return $14.DeleteAttachmentRequest();
      case 'CreateSeller': return $15.CreateSellerRequest();
      case 'CreatePayment': return $16.CreatePaymentRequest();
      case 'GetPayment': return $16.GetPaymentRequest();
      case 'UpdatePayment': return $16.UpdatePaymentRequest();
      case 'DeletePayment': return $16.DeletePaymentRequest();
      case 'CreateConfig': return $17.CreateConfigRequest();
      case 'UpdateConfig': return $17.UpdateConfigRequest();
      case 'DeleteConfig': return $17.DeleteConfigRequest();
      case 'GetConfig': return $17.GetConfigRequest();
      case 'GetSTS': return $17.GetSTSRequest();
      case 'ListTenantOrg': return $18.ListTenantOrgRequest();
      case 'GetAdminTenant': return $19.GetAdminTenantRequest();
      case 'ListAdminUser': return $19.ListAdminUserRequest();
      case 'CreateAdminUser': return $19.CreateAdminUserRequest();
      case 'UpdateAdminUser': return $19.UpdateAdminUserRequest();
      case 'DeleteAdminUser': return $19.DeleteAdminUserRequest();
      case 'WxPrepay': return $20.PrepayRequest();
      case 'CloseOrder': return $20.CloseOrderRequest();
      case 'QueryOrderById': return $20.QueryOrderByIdRequest();
      case 'QueryOrderByOutTrade': return $20.QueryOrderByOutTradeNoRequest();
      case 'AddVCurrency': return $21.AddVirtualCurrencyRequest();
      case 'RechargeCurrency': return $21.RechargeCurrencyRequest();
      case 'RechargeCurrencyInBatches': return $21.RechargeCurrencyInBatchesRequest();
      case 'GetVCurrency': return $21.GetVirtualCurrencyRequest();
      case 'ListVCurrency': return $21.ListVirtualCurrencyRequest();
      case 'ListAccountOperation': return $22.ListAccountOperationRequest();
      case 'CreateRoom': return $23.CreateRoomRequest();
      case 'GetRoom': return $23.GetRoomRequest();
      case 'UpdateRoom': return $23.UpdateRoomRequest();
      case 'ListRoom': return $23.ListRoomRequest();
      case 'DeleteRoom': return $23.DeleteRoomRequest();
      case 'ListFinishedRoom': return $23.ListFinishedRoomRequest();
      case 'GetFinishedRoom': return $23.GetFinishedRoomRequest();
      case 'Record': return $24.LiveRecordRequest();
      case 'CreateLiveUserToken': return $25.CreateLiveUserTokenRequest();
      case 'UserEnterRoom': return $26.UserEnterRoomRequest();
      case 'UserExitRoom': return $26.UserExitRoomRequest();
      case 'ListActiveRoomUser': return $26.ListActiveRoomUserRequest();
      case 'LiveSSE': return $23.LiveSSERequest();
      case 'CloseShopAllLive': return $23.CloseShopAllLiveRequest();
      case 'CreateLivePlan': return $24.CreateLivePlanRequest();
      case 'GetLivePlan': return $24.GetLivePlanRequest();
      case 'UpdateLivePlan': return $24.UpdateLivePlanRequest();
      case 'ListLivePlan': return $24.ListLivePlanRequest();
      case 'DeleteLivePlan': return $24.DeleteLivePlanRequest();
      case 'CreateLivePlanProduct': return $24.CreateLivePlanProductRequest();
      case 'UpdateLivePlanProduct': return $24.UpdateLivePlanProductRequest();
      case 'ListLivePlanProduct': return $24.ListLivePlanProductRequest();
      case 'DeleteLivePlanProduct': return $24.DeleteLivePlanProductRequest();
      case 'LoadLivePlanProduct': return $24.LoadLivePlanProductRequest();
      case 'UpdateLiveProductStatus': return $24.UpdateLiveProductStatusRequest();
      case 'ListLiveProductStatus': return $24.ListLiveProductStatusRequest();
      case 'DeleteLiveProductStatus': return $24.DeleteLiveProductStatusRequest();
      case 'CreateLiveProductStatus': return $24.CreateLiveProductStatusRequest();
      case 'GetLivingProductStatus': return $24.GetLivingProductStatusRequest();
      case 'UpdateLiveProductIntroductStatus': return $24.UpdateLiveProductIntroductStatusRequest();
      case 'CreateLiveText': return $27.CreateLiveTextRequest();
      case 'UpdateLiveText': return $27.UpdateLiveTextRequest();
      case 'ListLiveText': return $27.ListLiveTextRequest();
      case 'GetLiveText': return $27.GetLiveTextRequest();
      case 'DeleteLiveTexts': return $27.DeleteLiveTextsRequest();
      case 'GetLiveChartData': return $23.GetLiveChartDataRequest();
      case 'GetEvaluateSelector': return $28.GetEvaluateSelectorRequest();
      case 'ListPersonalEvaluate': return $28.ListPersonalEvaluateRequest();
      case 'GetEvaluateDetail': return $28.GetEvaluateDetailRequest();
      case 'SubmitEvaluate': return $28.SubmitEvaluateRequest();
      case 'ListUnevaluatedRoom': return $28.ListUnevaluatedRoomRequest();
      case 'ListStudentEvaluations': return $28.ListStudentEvalutionsRequest();
      case 'IgnoreEvaluation': return $28.IgnoreLiveEvaluationRequest();
      case 'GetRank': return $28.GetRankRequest();
      case 'RecordLiveCallback': return $23.RecordLiveCallbackRequest();
      case 'VideoToTextCallback': return $23.VideoToTextCallbackRequest();
      case 'LiveStreamCallback': return $23.LiveStreamCallbackRequest();
      case 'RegenerationAiFeedback': return $28.RegenerationAiFeedbackRequest();
      case 'SubmitUserAttitudeForAiResult': return $28.SubmitUserAttitudeForAIResultRequest();
      case 'PreheatProduct': return $24.PreheatRequest();
      case 'PublicPrice': return $24.PublicPriceRequest();
      case 'CreateTenant': return $29.CreateTenantRequest();
      case 'GetTenant': return $29.GetTenantRequest();
      case 'UpdateTenant': return $29.UpdateTenantRequest();
      case 'DeleteTenant': return $29.DeleteTenantRequest();
      case 'ListTenant': return $29.ListTenantRequest();
      case 'GetTenantOrg': return $29.GetTenantOrgRequest();
      case 'EnterTenant': return $29.EnterTenantRequest();
      case 'ExitTenant': return $29.ExitTenantRequest();
      case 'InitTenant': return $29.InitTenantRequest();
      case 'CreateTenantDept': return $30.CreateTenantDeptRequest();
      case 'UpdateTenantDept': return $30.UpdateTenantDeptRequest();
      case 'DeleteTenantDept': return $30.DeleteTenantDeptRequest();
      case 'GetTenantDept': return $30.GetTenantDeptRequest();
      case 'GetTenantDeptType': return $30.GetTenantDeptTypeRequest();
      case 'CreateTenantUser': return $31.CreateTenantUserRequest();
      case 'DeleteTenantUser': return $31.DeleteTenantUserRequest();
      case 'UpdateTenantUser': return $31.UpdateTenantUserRequest();
      case 'GetTenantUser': return $31.GetTenantUserRequest();
      case 'ListTenantUser': return $31.ListTenantUserRequest();
      case 'ListTenantStudent': return $31.ListTenantStudentRequest();
      case 'UpdateTenantUserPassword': return $31.UpdateTenantUserPasswordRequest();
      case 'UpdateTenantConfig': return $32.UpdateTenantConfigRequest();
      case 'ListTenantConfig': return $32.ListTenantConfigRequest();
      case 'CreateShortVideo': return $33.CreateShortVideoRequest();
      case 'StageShortVideo': return $33.StageShortVideoRequest();
      case 'ListMyShortVideo': return $33.ListMyShortVideoRequest();
      case 'ListMyStageVideo': return $33.ListMyStageVideoRequest();
      case 'ListMyLikeVideo': return $33.ListMyLikeVideoRequest();
      case 'ListMyFavoriteVideo': return $33.ListMyFavoriteVideoRequest();
      case 'GetShortVideo': return $33.GetShortVideoRequest();
      case 'UpdateShortVideo': return $33.UpdateShortVideoRequest();
      case 'DeleteShortVideo': return $33.DeleteShortVideoRequest();
      case 'GetStageVideo': return $33.GetStageVideoRequest();
      case 'DeleteStageVideo': return $33.DeleteStageVideoRequest();
      case 'UpdateStageVideo': return $33.UpdateStageVideoRequest();
      case 'ManagementListShortVideo': return $33.ManagementListShortVideoRequest();
      case 'ManagementCensorShortVideo': return $33.ManagementCensorShortVideoRequest();
      case 'ManagementDeleteShortVideo': return $33.ManagementDeleteShortVideoRequest();
      case 'ListShortVideo': return $33.ListShortVideoRequest();
      case 'LikeShortVideo': return $33.LikeShortVideoRequest();
      case 'FavoriteShortVideo': return $33.FavoriteShortVideoRequest();
      case 'CreateShortVideoComment': return $33.CreateShortVideoCommentRequest();
      case 'DeleteShortVideoComment': return $33.DeleteShortVideoCommentRequest();
      case 'ListShortVideoComment': return $33.ListShortVideoCommentRequest();
      case 'CreateCoupon': return $34.CreateCouponRequest();
      case 'ListCoupon': return $34.ListCouponRequest();
      case 'CouponDetail': return $34.GetCouponDetailRequest();
      case 'UpdateCoupon': return $34.UpdateCouponRequest();
      case 'DeleteCoupon': return $34.DeleteCouponRequest();
      case 'AbolishCoupon': return $34.AbolishCouponRequest();
      case 'UpdateCouponDistributionStatus': return $34.UpdateCouponDistributionStatusRequest();
      case 'ClaimCoupon': return $34.ClaimCouponRequest();
      case 'ListMyCoupon': return $34.ListMyCouponRequest();
      case 'CreateActivity': return $35.CreateActivityRequest();
      case 'ListActivity': return $35.ListActivityRequest();
      case 'ActivityDetail': return $35.GetActivityDetailRequest();
      case 'UpdateActivity': return $35.UpdateActivityRequest();
      case 'DeleteActivity': return $35.DeleteActivityRequest();
      case 'DisableActivity': return $35.DisableActivityRequest();
      case 'CreateCourseMaterialBox': return $36.CreateCourseMaterialBoxRequest();
      case 'ListCourseMaterialBox': return $36.ListCourseMaterialBoxRequest();
      case 'DeleteCourseMaterialBox': return $36.DeleteCourseMaterialBoxRequest();
      case 'UploadCourseMaterial': return $36.UploadCourseMaterialRequest();
      case 'ListCourseMaterial': return $36.ListCourseMaterialRequest();
      case 'DeleteCourseMaterial': return $36.DeleteCourseMaterialRequest();
      case 'GetCourseModuleCode': return $37.GetCourseModuleCodeRequest();
      case 'GetCourseChapterCode': return $37.GetCourseChapterCodeRequest();
      case 'CreateCourseModule': return $37.CreateCourseModuleRequest();
      case 'GetCourseModule': return $37.GetCourseModuleRequest();
      case 'UpdateCourseModule': return $37.UpdateCourseModuleRequest();
      case 'DeleteCourseModule': return $37.DeleteCourseModuleRequest();
      case 'ListCourseModule': return $37.ListCourseModuleRequest();
      case 'ListLatestCourse': return $38.ListLatestCourseRequest();
      case 'ListHotestCourse': return $38.ListHotestCourseRequest();
      case 'CreateCmCourse': return $39.CreateCmCourseRequest();
      case 'PreviewCmCourse': return $39.PreviewCmCourseRequest();
      case 'CreateNmCourseResource': return $40.CreateNmCourseChapterResourceRequest();
      case 'CreateNmCourseChapter': return $40.CreateNmCourseChapterRequest();
      case 'CreateNmCourse': return $40.CreateNmCourseRequest();
      case 'ListNmCourse': return $40.ListNmCourseRequest();
      case 'NmCourseDetail': return $40.NmCourseDetailRequest();
      case 'DeleteNmCourse': return $40.DeleteNmCourseRequest();
      case 'CreateCourse': return $38.CreateCourseRequest();
      case 'GetCourse': return $38.GetCourseRequest();
      case 'UpdateCourse': return $38.UpdateCourseRequest();
      case 'DeleteCourse': return $38.DeleteCourseRequest();
      case 'ListCourse': return $38.ListCourseRequest();
      case 'CreateKnowledgeGraph': return $41.CreateKnowledgeGraphRequest();
      case 'GetKnowledgeGraph': return $41.GetKnowledgeGraphRequest();
      case 'GetKnowledgeGraphNode': return $41.GetKnowledgeGraphNodeRequest();
      case 'GetMajorCode': return $38.GetMajorCodeRequest();
      case 'GetCourseIds': return $38.GetCourseIdsRequest();
      case 'EnrollCourse': return $42.EnrollCourseRequest();
      case 'DeleteMyCourse': return $42.DeleteMyCourseRequest();
      case 'UpdateCourseProgress': return $42.UpdateCourseProgressRequest();
      case 'ListMyCourse': return $42.ListMyCourseRequest();
      case 'ListTeachingPlan': return $43.ListTeachingPlanRequest();
      case 'CreateTeachingPlan': return $43.CreateTeachingPlanRequest();
      case 'UpdateTeachingPlan': return $43.UpdateTeachingPlanRequest();
      case 'DeleteTeachingPlan': return $43.DeleteTeachingPlanRequest();
      case 'CreateEduScheme': return $44.CreateEduSchemeRequest();
      case 'UpdateEduScheme': return $44.UpdateEduSchemeRequest();
      case 'ListEduScheme': return $44.ListEduSchemeRequest();
      case 'EduSchemeDetail': return $44.EduSchemeDetailRequest();
      case 'DeleteEduScheme': return $44.DeleteEduSchemeRequest();
      case 'DistributeEduScheme': return $44.DistributeEduSchemeRequest();
      case 'GetAndroidQRcode': return $45.GetAndroidQRCodeRequest();
      default: throw $core.ArgumentError('Unknown method: $methodName');
    }
  }

  $async.Future<$pb.GeneratedMessage> handleCall($pb.ServerContext ctx, $core.String methodName, $pb.GeneratedMessage request) {
    switch (methodName) {
      case 'CreateExample': return this.createExample(ctx, request as $0.CreateExampleRequest);
      case 'GetExample': return this.getExample(ctx, request as $0.GetExampleRequest);
      case 'UpdateExample': return this.updateExample(ctx, request as $0.UpdateExampleRequest);
      case 'ListExample': return this.listExample(ctx, request as $0.ListExampleRequest);
      case 'DeleteExample': return this.deleteExample(ctx, request as $0.DeleteExampleRequest);
      case 'Login': return this.login(ctx, request as $1.LoginRequest);
      case 'Logout': return this.logout(ctx, request as $1.LogoutRequest);
      case 'GetVerifyCode': return this.getVerifyCode(ctx, request as $1.GetVerifyCodeRequest);
      case 'CheckVerifyCode': return this.checkVerifyCode(ctx, request as $1.CheckVerifyCodeRequest);
      case 'GetUser': return this.getUser(ctx, request as $1.GetUserRequest);
      case 'LoginWithPassword': return this.loginWithPassword(ctx, request as $1.LoginWithPasswordRequest);
      case 'UpdatePassword': return this.updatePassword(ctx, request as $1.UpdatePasswordRequest);
      case 'UpdateUser': return this.updateUser(ctx, request as $1.UpdateUserRequest);
      case 'UpdatePhone': return this.updatePhone(ctx, request as $1.UpdatePhoneRequest);
      case 'UpdateUserTenant': return this.updateUserTenant(ctx, request as $1.UpdateUserTenantRequest);
      case 'FollowUser': return this.followUser(ctx, request as $1.FollowUserRequest);
      case 'ListMyFollowing': return this.listMyFollowing(ctx, request as $1.ListMyFollowingRequest);
      case 'ListMyFollower': return this.listMyFollower(ctx, request as $1.ListMyFollowerRequest);
      case 'ListMyFriend': return this.listMyFriend(ctx, request as $1.ListMyFriendRequest);
      case 'GetMySocialSummary': return this.getMySocialSummary(ctx, request as $1.GetMySocialSummaryRequest);
      case 'GetUserPagePermission': return this.getUserPagePermission(ctx, request as $1.GetUserPagePermissionRequest);
      case 'CreateRolePagePermission': return this.createRolePagePermission(ctx, request as $1.CreateRolePagePermissionRequest);
      case 'UpdateRolePagePermission': return this.updateRolePagePermission(ctx, request as $1.UpdateRolePagePermissionRequest);
      case 'GetRolePagePermission': return this.getRolePagePermission(ctx, request as $1.GetRolePagePermissionRequest);
      case 'AddAddress': return this.addAddress(ctx, request as $2.AddAddressRequest);
      case 'DeleteAddress': return this.deleteAddress(ctx, request as $2.DeleteAddressRequest);
      case 'UpdateAddress': return this.updateAddress(ctx, request as $2.UpdateAddressRequest);
      case 'GetAddress': return this.getAddress(ctx, request as $2.GetAddressRequest);
      case 'ListAddress': return this.listAddress(ctx, request as $2.ListAddressRequest);
      case 'ListUserByRole': return this.listUserByRole(ctx, request as $1.ListUserByRoleRequest);
      case 'ListPermission': return this.listPermission(ctx, request as $1.ListPermissionRequest);
      case 'ListRole': return this.listRole(ctx, request as $1.ListRoleRequest);
      case 'GiveRolePermission': return this.giveRolePermission(ctx, request as $1.GiveRolePermissionRequest);
      case 'RemoveRolePermission': return this.removeRolePermission(ctx, request as $1.RemoveRolePermissionRequest);
      case 'CreateRole': return this.createRole(ctx, request as $1.CreateRoleRequest);
      case 'DeleteRole': return this.deleteRole(ctx, request as $1.DeleteRoleRequest);
      case 'ListResource': return this.listResource(ctx, request as $1.ListResourceRequest);
      case 'GetRoleType': return this.getRoleType(ctx, request as $1.GetRoleTypeRequest);
      case 'CreateShop': return this.createShop(ctx, request as $3.CreateShopRequest);
      case 'GetShop': return this.getShop(ctx, request as $3.GetShopRequest);
      case 'UpdateShop': return this.updateShop(ctx, request as $3.UpdateShopRequest);
      case 'ListShop': return this.listShop(ctx, request as $3.ListShopRequest);
      case 'DeleteShop': return this.deleteShop(ctx, request as $3.DeleteShopRequest);
      case 'ListOperationMetrics': return this.listOperationMetrics(ctx, request as $4.ListOperationMetricsRequest);
      case 'GetShopQrcode': return this.getShopQrcode(ctx, request as $3.GetShopQrcodeRequest);
      case 'UpdateShopManager': return this.updateShopManager(ctx, request as $3.UpdateShopManagerRequest);
      case 'GetShopBusinessData': return this.getShopBusinessData(ctx, request as $3.GetShopBusinessDataRequest);
      case 'AddShopAccess': return this.addShopAccess(ctx, request as $3.AddShopAccessRequest);
      case 'RemoveShopAccess': return this.removeShopAccess(ctx, request as $3.RemoveShopAccessRequest);
      case 'VerifyField': return this.verifyField(ctx, request as $3.VerifyFieldRequest);
      case 'ListShopAccess': return this.listShopAccess(ctx, request as $3.ListShopAccessRequest);
      case 'AddShopCategory': return this.addShopCategory(ctx, request as $3.AddShopCategoryRequest);
      case 'GetShopCategory': return this.getShopCategory(ctx, request as $3.GetShopCategoryRequest);
      case 'RemoveShopCategory': return this.removeShopCategory(ctx, request as $3.RemoveShopCategoryRequest);
      case 'AddFreightTemplate': return this.addFreightTemplate(ctx, request as $5.CreateTemplateRequest);
      case 'GetFreightTemplate': return this.getFreightTemplate(ctx, request as $5.GetTemplateRequest);
      case 'UpdateFreightTemplate': return this.updateFreightTemplate(ctx, request as $5.UpdateTemplateRequest);
      case 'DeleteFreightTemplate': return this.deleteFreightTemplate(ctx, request as $5.DeleteTemplateRequest);
      case 'ListFreightTemplate': return this.listFreightTemplate(ctx, request as $5.ListTemplateRequest);
      case 'ListQualification': return this.listQualification(ctx, request as $3.ListShopQualificationRequest);
      case 'GetMallIndex': return this.getMallIndex(ctx, request as $6.MallIndexRequest);
      case 'CreateCategory': return this.createCategory(ctx, request as $7.CreateCategoryRequest);
      case 'GetCategory': return this.getCategory(ctx, request as $7.GetCategoryRequest);
      case 'UpdateCategory': return this.updateCategory(ctx, request as $7.UpdateCategoryRequest);
      case 'ListCategory': return this.listCategory(ctx, request as $7.ListCategoryRequest);
      case 'DeleteCategory': return this.deleteCategory(ctx, request as $7.DeleteCategoryRequest);
      case 'ListCategoryQualification': return this.listCategoryQualification(ctx, request as $8.ListCategoryQualificationRequest);
      case 'CreateProduct': return this.createProduct(ctx, request as $9.CreateProductRequest);
      case 'GetProduct': return this.getProduct(ctx, request as $9.GetProductRequest);
      case 'UpdateProduct': return this.updateProduct(ctx, request as $9.UpdateProductRequest);
      case 'ListProduct': return this.listProduct(ctx, request as $9.ListProductRequest);
      case 'ListProductByIDs': return this.listProductByIDs(ctx, request as $9.ListProductByProductIDsRequest);
      case 'DeleteProduct': return this.deleteProduct(ctx, request as $9.DeleteProductRequest);
      case 'UploadMultiImage': return this.uploadMultiImage(ctx, request as $9.UploadMultiImageRequest);
      case 'DeleteImageById': return this.deleteImageById(ctx, request as $9.DeleteImageRequest);
      case 'BindAttribute': return this.bindAttribute(ctx, request as $9.BindAttributeRequest);
      case 'PublishProduct': return this.publishProduct(ctx, request as $9.PublishProductRequest);
      case 'OffShelfProductInBatches': return this.offShelfProductInBatches(ctx, request as $9.OffSelfProductsRequest);
      case 'DeleteProductInBatches': return this.deleteProductInBatches(ctx, request as $9.DeleteProductsRequest);
      case 'ChangeProductsState': return this.changeProductsState(ctx, request as $9.ChangeProductStateRequest);
      case 'SaveProductImageInfo': return this.saveProductImageInfo(ctx, request as $9.SaveImageInfoRequest);
      case 'CreateSku': return this.createSku(ctx, request as $10.CreateSkuRequest);
      case 'GetSku': return this.getSku(ctx, request as $10.GetSkuRequest);
      case 'UpdateSku': return this.updateSku(ctx, request as $10.UpdateSkuRequest);
      case 'ListSku': return this.listSku(ctx, request as $10.ListSkuRequest);
      case 'DeleteSku': return this.deleteSku(ctx, request as $10.DeleteSkuRequest);
      case 'CreateAttribute': return this.createAttribute(ctx, request as $11.CreateAttributeRequest);
      case 'GetAttribute': return this.getAttribute(ctx, request as $11.GetAttributeRequest);
      case 'ListAttribute': return this.listAttribute(ctx, request as $11.ListAttributeRequest);
      case 'DeleteAttribute': return this.deleteAttribute(ctx, request as $11.DeleteAttributeRequest);
      case 'AddAttributeValue': return this.addAttributeValue(ctx, request as $11.AddAttributeValueRequest);
      case 'DeleteAttributeValue': return this.deleteAttributeValue(ctx, request as $11.DeleteAttributeValueRequest);
      case 'CreateOrder': return this.createOrder(ctx, request as $12.CreateOrderRequest);
      case 'GetOrder': return this.getOrder(ctx, request as $12.GetOrderRequest);
      case 'UpdateOrder': return this.updateOrder(ctx, request as $12.UpdateOrderRequest);
      case 'ListOrder': return this.listOrder(ctx, request as $12.ListOrderRequest);
      case 'DeleteOrder': return this.deleteOrder(ctx, request as $12.DeleteOrderRequest);
      case 'ShipGoods': return this.shipGoods(ctx, request as $12.ShipGoodsRequest);
      case 'ConfirmReceiptGoods': return this.confirmReceiptGoods(ctx, request as $12.ConfirmReceiptGoodsRequest);
      case 'CancelOrder': return this.cancelOrder(ctx, request as $12.CancelOrderRequest);
      case 'ShipGoodsInBatches': return this.shipGoodsInBatches(ctx, request as $12.ShipGoodsInBatchesRequest);
      case 'FreeShippingInBatches': return this.freeShippingInBatches(ctx, request as $12.FreeShippingInBatchesRequest);
      case 'ListShopSummary': return this.listShopSummary(ctx, request as $3.ListShopSummaryRequest);
      case 'ListShopBySellerID': return this.listShopBySellerID(ctx, request as $3.ListShopBySellerIDRequest);
      case 'CreateCart': return this.createCart(ctx, request as $13.AddCartRequest);
      case 'GetCart': return this.getCart(ctx, request as $13.GetCartRequest);
      case 'UpdateCart': return this.updateCart(ctx, request as $13.UpdateCartRequest);
      case 'DeleteCart': return this.deleteCart(ctx, request as $13.DeleteCartRequest);
      case 'UploadAttachment': return this.uploadAttachment(ctx, request as $14.UploadAttachmentRequest);
      case 'SaveAttachment': return this.saveAttachment(ctx, request as $14.SaveAttachmentRequest);
      case 'ListAttachment': return this.listAttachment(ctx, request as $14.ListAttachmentRequest);
      case 'DeleteAttachment': return this.deleteAttachment(ctx, request as $14.DeleteAttachmentRequest);
      case 'CreateSeller': return this.createSeller(ctx, request as $15.CreateSellerRequest);
      case 'CreatePayment': return this.createPayment(ctx, request as $16.CreatePaymentRequest);
      case 'GetPayment': return this.getPayment(ctx, request as $16.GetPaymentRequest);
      case 'UpdatePayment': return this.updatePayment(ctx, request as $16.UpdatePaymentRequest);
      case 'DeletePayment': return this.deletePayment(ctx, request as $16.DeletePaymentRequest);
      case 'CreateConfig': return this.createConfig(ctx, request as $17.CreateConfigRequest);
      case 'UpdateConfig': return this.updateConfig(ctx, request as $17.UpdateConfigRequest);
      case 'DeleteConfig': return this.deleteConfig(ctx, request as $17.DeleteConfigRequest);
      case 'GetConfig': return this.getConfig(ctx, request as $17.GetConfigRequest);
      case 'GetSTS': return this.getSTS(ctx, request as $17.GetSTSRequest);
      case 'ListTenantOrg': return this.listTenantOrg(ctx, request as $18.ListTenantOrgRequest);
      case 'GetAdminTenant': return this.getAdminTenant(ctx, request as $19.GetAdminTenantRequest);
      case 'ListAdminUser': return this.listAdminUser(ctx, request as $19.ListAdminUserRequest);
      case 'CreateAdminUser': return this.createAdminUser(ctx, request as $19.CreateAdminUserRequest);
      case 'UpdateAdminUser': return this.updateAdminUser(ctx, request as $19.UpdateAdminUserRequest);
      case 'DeleteAdminUser': return this.deleteAdminUser(ctx, request as $19.DeleteAdminUserRequest);
      case 'WxPrepay': return this.wxPrepay(ctx, request as $20.PrepayRequest);
      case 'CloseOrder': return this.closeOrder(ctx, request as $20.CloseOrderRequest);
      case 'QueryOrderById': return this.queryOrderById(ctx, request as $20.QueryOrderByIdRequest);
      case 'QueryOrderByOutTrade': return this.queryOrderByOutTrade(ctx, request as $20.QueryOrderByOutTradeNoRequest);
      case 'AddVCurrency': return this.addVCurrency(ctx, request as $21.AddVirtualCurrencyRequest);
      case 'RechargeCurrency': return this.rechargeCurrency(ctx, request as $21.RechargeCurrencyRequest);
      case 'RechargeCurrencyInBatches': return this.rechargeCurrencyInBatches(ctx, request as $21.RechargeCurrencyInBatchesRequest);
      case 'GetVCurrency': return this.getVCurrency(ctx, request as $21.GetVirtualCurrencyRequest);
      case 'ListVCurrency': return this.listVCurrency(ctx, request as $21.ListVirtualCurrencyRequest);
      case 'ListAccountOperation': return this.listAccountOperation(ctx, request as $22.ListAccountOperationRequest);
      case 'CreateRoom': return this.createRoom(ctx, request as $23.CreateRoomRequest);
      case 'GetRoom': return this.getRoom(ctx, request as $23.GetRoomRequest);
      case 'UpdateRoom': return this.updateRoom(ctx, request as $23.UpdateRoomRequest);
      case 'ListRoom': return this.listRoom(ctx, request as $23.ListRoomRequest);
      case 'DeleteRoom': return this.deleteRoom(ctx, request as $23.DeleteRoomRequest);
      case 'ListFinishedRoom': return this.listFinishedRoom(ctx, request as $23.ListFinishedRoomRequest);
      case 'GetFinishedRoom': return this.getFinishedRoom(ctx, request as $23.GetFinishedRoomRequest);
      case 'Record': return this.record(ctx, request as $24.LiveRecordRequest);
      case 'CreateLiveUserToken': return this.createLiveUserToken(ctx, request as $25.CreateLiveUserTokenRequest);
      case 'UserEnterRoom': return this.userEnterRoom(ctx, request as $26.UserEnterRoomRequest);
      case 'UserExitRoom': return this.userExitRoom(ctx, request as $26.UserExitRoomRequest);
      case 'ListActiveRoomUser': return this.listActiveRoomUser(ctx, request as $26.ListActiveRoomUserRequest);
      case 'LiveSSE': return this.liveSSE(ctx, request as $23.LiveSSERequest);
      case 'CloseShopAllLive': return this.closeShopAllLive(ctx, request as $23.CloseShopAllLiveRequest);
      case 'CreateLivePlan': return this.createLivePlan(ctx, request as $24.CreateLivePlanRequest);
      case 'GetLivePlan': return this.getLivePlan(ctx, request as $24.GetLivePlanRequest);
      case 'UpdateLivePlan': return this.updateLivePlan(ctx, request as $24.UpdateLivePlanRequest);
      case 'ListLivePlan': return this.listLivePlan(ctx, request as $24.ListLivePlanRequest);
      case 'DeleteLivePlan': return this.deleteLivePlan(ctx, request as $24.DeleteLivePlanRequest);
      case 'CreateLivePlanProduct': return this.createLivePlanProduct(ctx, request as $24.CreateLivePlanProductRequest);
      case 'UpdateLivePlanProduct': return this.updateLivePlanProduct(ctx, request as $24.UpdateLivePlanProductRequest);
      case 'ListLivePlanProduct': return this.listLivePlanProduct(ctx, request as $24.ListLivePlanProductRequest);
      case 'DeleteLivePlanProduct': return this.deleteLivePlanProduct(ctx, request as $24.DeleteLivePlanProductRequest);
      case 'LoadLivePlanProduct': return this.loadLivePlanProduct(ctx, request as $24.LoadLivePlanProductRequest);
      case 'UpdateLiveProductStatus': return this.updateLiveProductStatus(ctx, request as $24.UpdateLiveProductStatusRequest);
      case 'ListLiveProductStatus': return this.listLiveProductStatus(ctx, request as $24.ListLiveProductStatusRequest);
      case 'DeleteLiveProductStatus': return this.deleteLiveProductStatus(ctx, request as $24.DeleteLiveProductStatusRequest);
      case 'CreateLiveProductStatus': return this.createLiveProductStatus(ctx, request as $24.CreateLiveProductStatusRequest);
      case 'GetLivingProductStatus': return this.getLivingProductStatus(ctx, request as $24.GetLivingProductStatusRequest);
      case 'UpdateLiveProductIntroductStatus': return this.updateLiveProductIntroductStatus(ctx, request as $24.UpdateLiveProductIntroductStatusRequest);
      case 'CreateLiveText': return this.createLiveText(ctx, request as $27.CreateLiveTextRequest);
      case 'UpdateLiveText': return this.updateLiveText(ctx, request as $27.UpdateLiveTextRequest);
      case 'ListLiveText': return this.listLiveText(ctx, request as $27.ListLiveTextRequest);
      case 'GetLiveText': return this.getLiveText(ctx, request as $27.GetLiveTextRequest);
      case 'DeleteLiveTexts': return this.deleteLiveTexts(ctx, request as $27.DeleteLiveTextsRequest);
      case 'GetLiveChartData': return this.getLiveChartData(ctx, request as $23.GetLiveChartDataRequest);
      case 'GetEvaluateSelector': return this.getEvaluateSelector(ctx, request as $28.GetEvaluateSelectorRequest);
      case 'ListPersonalEvaluate': return this.listPersonalEvaluate(ctx, request as $28.ListPersonalEvaluateRequest);
      case 'GetEvaluateDetail': return this.getEvaluateDetail(ctx, request as $28.GetEvaluateDetailRequest);
      case 'SubmitEvaluate': return this.submitEvaluate(ctx, request as $28.SubmitEvaluateRequest);
      case 'ListUnevaluatedRoom': return this.listUnevaluatedRoom(ctx, request as $28.ListUnevaluatedRoomRequest);
      case 'ListStudentEvaluations': return this.listStudentEvaluations(ctx, request as $28.ListStudentEvalutionsRequest);
      case 'IgnoreEvaluation': return this.ignoreEvaluation(ctx, request as $28.IgnoreLiveEvaluationRequest);
      case 'GetRank': return this.getRank(ctx, request as $28.GetRankRequest);
      case 'RecordLiveCallback': return this.recordLiveCallback(ctx, request as $23.RecordLiveCallbackRequest);
      case 'VideoToTextCallback': return this.videoToTextCallback(ctx, request as $23.VideoToTextCallbackRequest);
      case 'LiveStreamCallback': return this.liveStreamCallback(ctx, request as $23.LiveStreamCallbackRequest);
      case 'RegenerationAiFeedback': return this.regenerationAiFeedback(ctx, request as $28.RegenerationAiFeedbackRequest);
      case 'SubmitUserAttitudeForAiResult': return this.submitUserAttitudeForAiResult(ctx, request as $28.SubmitUserAttitudeForAIResultRequest);
      case 'PreheatProduct': return this.preheatProduct(ctx, request as $24.PreheatRequest);
      case 'PublicPrice': return this.publicPrice(ctx, request as $24.PublicPriceRequest);
      case 'CreateTenant': return this.createTenant(ctx, request as $29.CreateTenantRequest);
      case 'GetTenant': return this.getTenant(ctx, request as $29.GetTenantRequest);
      case 'UpdateTenant': return this.updateTenant(ctx, request as $29.UpdateTenantRequest);
      case 'DeleteTenant': return this.deleteTenant(ctx, request as $29.DeleteTenantRequest);
      case 'ListTenant': return this.listTenant(ctx, request as $29.ListTenantRequest);
      case 'GetTenantOrg': return this.getTenantOrg(ctx, request as $29.GetTenantOrgRequest);
      case 'EnterTenant': return this.enterTenant(ctx, request as $29.EnterTenantRequest);
      case 'ExitTenant': return this.exitTenant(ctx, request as $29.ExitTenantRequest);
      case 'InitTenant': return this.initTenant(ctx, request as $29.InitTenantRequest);
      case 'CreateTenantDept': return this.createTenantDept(ctx, request as $30.CreateTenantDeptRequest);
      case 'UpdateTenantDept': return this.updateTenantDept(ctx, request as $30.UpdateTenantDeptRequest);
      case 'DeleteTenantDept': return this.deleteTenantDept(ctx, request as $30.DeleteTenantDeptRequest);
      case 'GetTenantDept': return this.getTenantDept(ctx, request as $30.GetTenantDeptRequest);
      case 'GetTenantDeptType': return this.getTenantDeptType(ctx, request as $30.GetTenantDeptTypeRequest);
      case 'CreateTenantUser': return this.createTenantUser(ctx, request as $31.CreateTenantUserRequest);
      case 'DeleteTenantUser': return this.deleteTenantUser(ctx, request as $31.DeleteTenantUserRequest);
      case 'UpdateTenantUser': return this.updateTenantUser(ctx, request as $31.UpdateTenantUserRequest);
      case 'GetTenantUser': return this.getTenantUser(ctx, request as $31.GetTenantUserRequest);
      case 'ListTenantUser': return this.listTenantUser(ctx, request as $31.ListTenantUserRequest);
      case 'ListTenantStudent': return this.listTenantStudent(ctx, request as $31.ListTenantStudentRequest);
      case 'UpdateTenantUserPassword': return this.updateTenantUserPassword(ctx, request as $31.UpdateTenantUserPasswordRequest);
      case 'UpdateTenantConfig': return this.updateTenantConfig(ctx, request as $32.UpdateTenantConfigRequest);
      case 'ListTenantConfig': return this.listTenantConfig(ctx, request as $32.ListTenantConfigRequest);
      case 'CreateShortVideo': return this.createShortVideo(ctx, request as $33.CreateShortVideoRequest);
      case 'StageShortVideo': return this.stageShortVideo(ctx, request as $33.StageShortVideoRequest);
      case 'ListMyShortVideo': return this.listMyShortVideo(ctx, request as $33.ListMyShortVideoRequest);
      case 'ListMyStageVideo': return this.listMyStageVideo(ctx, request as $33.ListMyStageVideoRequest);
      case 'ListMyLikeVideo': return this.listMyLikeVideo(ctx, request as $33.ListMyLikeVideoRequest);
      case 'ListMyFavoriteVideo': return this.listMyFavoriteVideo(ctx, request as $33.ListMyFavoriteVideoRequest);
      case 'GetShortVideo': return this.getShortVideo(ctx, request as $33.GetShortVideoRequest);
      case 'UpdateShortVideo': return this.updateShortVideo(ctx, request as $33.UpdateShortVideoRequest);
      case 'DeleteShortVideo': return this.deleteShortVideo(ctx, request as $33.DeleteShortVideoRequest);
      case 'GetStageVideo': return this.getStageVideo(ctx, request as $33.GetStageVideoRequest);
      case 'DeleteStageVideo': return this.deleteStageVideo(ctx, request as $33.DeleteStageVideoRequest);
      case 'UpdateStageVideo': return this.updateStageVideo(ctx, request as $33.UpdateStageVideoRequest);
      case 'ManagementListShortVideo': return this.managementListShortVideo(ctx, request as $33.ManagementListShortVideoRequest);
      case 'ManagementCensorShortVideo': return this.managementCensorShortVideo(ctx, request as $33.ManagementCensorShortVideoRequest);
      case 'ManagementDeleteShortVideo': return this.managementDeleteShortVideo(ctx, request as $33.ManagementDeleteShortVideoRequest);
      case 'ListShortVideo': return this.listShortVideo(ctx, request as $33.ListShortVideoRequest);
      case 'LikeShortVideo': return this.likeShortVideo(ctx, request as $33.LikeShortVideoRequest);
      case 'FavoriteShortVideo': return this.favoriteShortVideo(ctx, request as $33.FavoriteShortVideoRequest);
      case 'CreateShortVideoComment': return this.createShortVideoComment(ctx, request as $33.CreateShortVideoCommentRequest);
      case 'DeleteShortVideoComment': return this.deleteShortVideoComment(ctx, request as $33.DeleteShortVideoCommentRequest);
      case 'ListShortVideoComment': return this.listShortVideoComment(ctx, request as $33.ListShortVideoCommentRequest);
      case 'CreateCoupon': return this.createCoupon(ctx, request as $34.CreateCouponRequest);
      case 'ListCoupon': return this.listCoupon(ctx, request as $34.ListCouponRequest);
      case 'CouponDetail': return this.couponDetail(ctx, request as $34.GetCouponDetailRequest);
      case 'UpdateCoupon': return this.updateCoupon(ctx, request as $34.UpdateCouponRequest);
      case 'DeleteCoupon': return this.deleteCoupon(ctx, request as $34.DeleteCouponRequest);
      case 'AbolishCoupon': return this.abolishCoupon(ctx, request as $34.AbolishCouponRequest);
      case 'UpdateCouponDistributionStatus': return this.updateCouponDistributionStatus(ctx, request as $34.UpdateCouponDistributionStatusRequest);
      case 'ClaimCoupon': return this.claimCoupon(ctx, request as $34.ClaimCouponRequest);
      case 'ListMyCoupon': return this.listMyCoupon(ctx, request as $34.ListMyCouponRequest);
      case 'CreateActivity': return this.createActivity(ctx, request as $35.CreateActivityRequest);
      case 'ListActivity': return this.listActivity(ctx, request as $35.ListActivityRequest);
      case 'ActivityDetail': return this.activityDetail(ctx, request as $35.GetActivityDetailRequest);
      case 'UpdateActivity': return this.updateActivity(ctx, request as $35.UpdateActivityRequest);
      case 'DeleteActivity': return this.deleteActivity(ctx, request as $35.DeleteActivityRequest);
      case 'DisableActivity': return this.disableActivity(ctx, request as $35.DisableActivityRequest);
      case 'CreateCourseMaterialBox': return this.createCourseMaterialBox(ctx, request as $36.CreateCourseMaterialBoxRequest);
      case 'ListCourseMaterialBox': return this.listCourseMaterialBox(ctx, request as $36.ListCourseMaterialBoxRequest);
      case 'DeleteCourseMaterialBox': return this.deleteCourseMaterialBox(ctx, request as $36.DeleteCourseMaterialBoxRequest);
      case 'UploadCourseMaterial': return this.uploadCourseMaterial(ctx, request as $36.UploadCourseMaterialRequest);
      case 'ListCourseMaterial': return this.listCourseMaterial(ctx, request as $36.ListCourseMaterialRequest);
      case 'DeleteCourseMaterial': return this.deleteCourseMaterial(ctx, request as $36.DeleteCourseMaterialRequest);
      case 'GetCourseModuleCode': return this.getCourseModuleCode(ctx, request as $37.GetCourseModuleCodeRequest);
      case 'GetCourseChapterCode': return this.getCourseChapterCode(ctx, request as $37.GetCourseChapterCodeRequest);
      case 'CreateCourseModule': return this.createCourseModule(ctx, request as $37.CreateCourseModuleRequest);
      case 'GetCourseModule': return this.getCourseModule(ctx, request as $37.GetCourseModuleRequest);
      case 'UpdateCourseModule': return this.updateCourseModule(ctx, request as $37.UpdateCourseModuleRequest);
      case 'DeleteCourseModule': return this.deleteCourseModule(ctx, request as $37.DeleteCourseModuleRequest);
      case 'ListCourseModule': return this.listCourseModule(ctx, request as $37.ListCourseModuleRequest);
      case 'ListLatestCourse': return this.listLatestCourse(ctx, request as $38.ListLatestCourseRequest);
      case 'ListHotestCourse': return this.listHotestCourse(ctx, request as $38.ListHotestCourseRequest);
      case 'CreateCmCourse': return this.createCmCourse(ctx, request as $39.CreateCmCourseRequest);
      case 'PreviewCmCourse': return this.previewCmCourse(ctx, request as $39.PreviewCmCourseRequest);
      case 'CreateNmCourseResource': return this.createNmCourseResource(ctx, request as $40.CreateNmCourseChapterResourceRequest);
      case 'CreateNmCourseChapter': return this.createNmCourseChapter(ctx, request as $40.CreateNmCourseChapterRequest);
      case 'CreateNmCourse': return this.createNmCourse(ctx, request as $40.CreateNmCourseRequest);
      case 'ListNmCourse': return this.listNmCourse(ctx, request as $40.ListNmCourseRequest);
      case 'NmCourseDetail': return this.nmCourseDetail(ctx, request as $40.NmCourseDetailRequest);
      case 'DeleteNmCourse': return this.deleteNmCourse(ctx, request as $40.DeleteNmCourseRequest);
      case 'CreateCourse': return this.createCourse(ctx, request as $38.CreateCourseRequest);
      case 'GetCourse': return this.getCourse(ctx, request as $38.GetCourseRequest);
      case 'UpdateCourse': return this.updateCourse(ctx, request as $38.UpdateCourseRequest);
      case 'DeleteCourse': return this.deleteCourse(ctx, request as $38.DeleteCourseRequest);
      case 'ListCourse': return this.listCourse(ctx, request as $38.ListCourseRequest);
      case 'CreateKnowledgeGraph': return this.createKnowledgeGraph(ctx, request as $41.CreateKnowledgeGraphRequest);
      case 'GetKnowledgeGraph': return this.getKnowledgeGraph(ctx, request as $41.GetKnowledgeGraphRequest);
      case 'GetKnowledgeGraphNode': return this.getKnowledgeGraphNode(ctx, request as $41.GetKnowledgeGraphNodeRequest);
      case 'GetMajorCode': return this.getMajorCode(ctx, request as $38.GetMajorCodeRequest);
      case 'GetCourseIds': return this.getCourseIds(ctx, request as $38.GetCourseIdsRequest);
      case 'EnrollCourse': return this.enrollCourse(ctx, request as $42.EnrollCourseRequest);
      case 'DeleteMyCourse': return this.deleteMyCourse(ctx, request as $42.DeleteMyCourseRequest);
      case 'UpdateCourseProgress': return this.updateCourseProgress(ctx, request as $42.UpdateCourseProgressRequest);
      case 'ListMyCourse': return this.listMyCourse(ctx, request as $42.ListMyCourseRequest);
      case 'ListTeachingPlan': return this.listTeachingPlan(ctx, request as $43.ListTeachingPlanRequest);
      case 'CreateTeachingPlan': return this.createTeachingPlan(ctx, request as $43.CreateTeachingPlanRequest);
      case 'UpdateTeachingPlan': return this.updateTeachingPlan(ctx, request as $43.UpdateTeachingPlanRequest);
      case 'DeleteTeachingPlan': return this.deleteTeachingPlan(ctx, request as $43.DeleteTeachingPlanRequest);
      case 'CreateEduScheme': return this.createEduScheme(ctx, request as $44.CreateEduSchemeRequest);
      case 'UpdateEduScheme': return this.updateEduScheme(ctx, request as $44.UpdateEduSchemeRequest);
      case 'ListEduScheme': return this.listEduScheme(ctx, request as $44.ListEduSchemeRequest);
      case 'EduSchemeDetail': return this.eduSchemeDetail(ctx, request as $44.EduSchemeDetailRequest);
      case 'DeleteEduScheme': return this.deleteEduScheme(ctx, request as $44.DeleteEduSchemeRequest);
      case 'DistributeEduScheme': return this.distributeEduScheme(ctx, request as $44.DistributeEduSchemeRequest);
      case 'GetAndroidQRcode': return this.getAndroidQRcode(ctx, request as $45.GetAndroidQRCodeRequest);
      default: throw $core.ArgumentError('Unknown method: $methodName');
    }
  }

  $core.Map<$core.String, $core.dynamic> get $json => glory_apiServiceBase$json;
  $core.Map<$core.String, $core.Map<$core.String, $core.dynamic>> get $messageJson => glory_apiServiceBase$messageJson;
}

