syntax = "proto3";
package glory_api;
option java_package = "com.zhijiejiaoyu.glory_api.seller";
option java_multiple_files = true;

import "base.proto";


enum AttachmentType {
  unSpecified=0;
  image = 1;
  pdf = 2;
}

message Attachment{
  int64 attachment_id = 1;
  string attachment_name = 2;
  int32 attachment_type = 3;
  string attachment_url = 4;
}

message AttachmentWithAuthor {
  Attachment attachment =1;
  base.AuthorInfo author_info = 2;
}

message UploadAttachmentRequest {
  base.BaseRequest base_request = 1;
  AttachmentType attachment_type = 2;
  int64 seller_id = 3; // 如果传了seller_id, grouping_id跟grouping_key会不起作用
  string description = 4;
  int64 grouping_id =5; // 保存到oss的时候，这个id会成为地址的一部分，增加这个来支持更多的upload场景
  string grouping_key = 6; // 保存到oss的时候这个key会作为地址的一部分，增加这个来支持更多的upload场景

}
message UploadAttachmentResponse {
  base.BaseResponse base_resp = 1;
  int64 attachment_id = 2;
  string attachment_url = 3;
}

// 代替UploadAttachment,使用前端直传OSS的方式
message SaveAttachmentRequest {
  base.BaseRequest base_request = 1;
  AttachmentType attachment_type = 2;
  int64 seller_id = 3; // 如果传了seller_id, grouping_id跟grouping_key会不起作用
  string description = 4;
  int64 grouping_id =5; // 保存到oss的时候，这个id会成为地址的一部分，增加这个来支持更多的upload场景
  string grouping_key = 6; // 保存到oss的时候这个key会作为地址的一部分，增加这个来支持更多的upload场景
  string oss_path = 7; // 存到oss中的路径

}
message SaveAttachmentResponse {
  base.BaseResponse base_resp = 1;
  int64 attachment_id = 2;
  string attachment_url = 3;
}

message ListAttachmentRequest {
  base.BaseRequest base_request = 1;
  int64 seller_id = 2;
}

message ListAttachmentResponse {
  base.BaseResponse base_resp = 1;
  repeated Attachment attachment = 2;
}

message DeleteAttachmentRequest {
  base.BaseRequest base_request = 1;
  int64 attachment_id = 2;
}

message DeleteAttachmentResponse {
  base.BaseResponse base_resp = 1;
}


