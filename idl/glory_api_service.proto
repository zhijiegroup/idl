syntax = "proto3";
package glory_api;

import "user/user.proto";
import "user/address.proto";
import "api.proto";
import "mall/mall_index.proto";
import "shop/shop.proto";
import "shop/category.proto";
import "shop/product.proto";
import "shop/sku.proto";
import "shop/attribute.proto";
import "shop/order.proto";
import "shop/cart.proto";
import "shop/operation.proto";
import "shop/freight_template.proto";
import "seller/attachment.proto";
import "seller/seller.proto";
import "payment/payment.proto";
import "example/example.proto";
import "admin/config.proto";
import "wxpay/wxpay.proto";
import "live/live_room.proto";
import "live/live_token.proto";
import "live/live_user.proto";
import "live/live_plan.proto";
import "account/account_operation.proto";
import "currency/virtual_currency.proto";


service glory_api {

  // endpoint /api/example/create_example, create example
  rpc CreateExample(CreateExampleRequest) returns (CreateExampleResponse) {
    option (api.post) = '/api/example/create_example';
  }
  // endpoint /api/example/get_example, get_example
  rpc GetExample(GetExampleRequest) returns (GetExampleResponse) {
    option (api.get) = '/api/example/get_example';
  }
  // endpoint /api/example/update_example, update_example
  rpc UpdateExample(UpdateExampleRequest) returns (UpdateExampleResponse) {
    option (api.post) = '/api/example/update_example';
  }
  // endpoint /api/example/list_example, list example
  rpc ListExample(ListExampleRequest) returns (ListExampleResponse) {
    option (api.post) = '/api/example/list_example';
  }
  // endpoint /api/example/delete_example, delete example
  rpc DeleteExample(DeleteExampleRequest) returns (DeleteExampleResponse) {
    option (api.post) = '/api/example/delete_example';
  }

  //user
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (api.post) = '/api/user/login';
  }

  rpc GetVerifyCode(GetVerifyCodeRequest) returns (GetVerifyCodeResponse) {
    option (api.post) = '/api/user/get_verify_code';
  }

  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (api.get) = '/api/user/get_user';  // get user data with token and phone
  }

  rpc LoginWithPassword(LoginWithPasswordRequest) returns (LoginWithPasswordResponse) {
    option (api.post) = '/api/user/login_with_password';
  }
  rpc UpdatePassword(UpdatePasswordRequest) returns (UpdatePasswordResponse) {
    option (api.post) = '/api/user/update_password';
  }

  // address
  rpc AddAddress(AddAddressRequest) returns (AddAddressResponse) {
    option (api.post) = '/api/user/add_address';
  }

  rpc DeleteAddress(DeleteAddressRequest) returns (DeleteAddressResponse) {
    option (api.post) = '/api/user/delete_address';
  }

  rpc UpdateAddress(UpdateAddressRequest) returns (UpdateAddressResponse) {
    option (api.post) = '/api/user/update_address';
  }

  rpc GetAddress(GetAddressRequest) returns (GetAddressResponse) {
    option (api.get) = '/api/user/get_address';
  }

  rpc ListAddress(ListAddressRequest) returns (ListAddressResponse) {
    option (api.get) = '/api/user/list_address';
  }

  // shop
  rpc CreateShop(CreateShopRequest) returns (CreateShopResponse) {
    option (api.post) = '/api/shop/create_shop';
  }
  rpc GetShop(GetShopRequest) returns (GetShopResponse) {
    option (api.get) = '/api/shop/get_shop';
  }
  rpc UpdateShop(UpdateShopRequest) returns (UpdateShopResponse) {
    option (api.post) = '/api/shop/update_shop';
  }
  rpc ListShop(ListShopRequest) returns (ListShopResponse) {
    option (api.post) = '/api/shop/list_shop';
  }
  rpc DeleteShop(DeleteShopRequest) returns (DeleteShopResponse) {
    option (api.post) = '/api/shop/delete_shop';
  }
  rpc ListOperationMetrics(ListOperationMetricsRequest) returns (ListOperationMetricsResponse) {
    option (api.post) = '/api/shop/list_operation_metrics';
  }
  rpc GetShopQrcode(GetShopQrcodeRequest) returns (GetShopQrcodeResponse) {
    option (api.get) = '/api/shop/get_shop_qrcode';
  }

  rpc AddShopAccess(AddShopAccessRequest) returns (AddShopAccessResponse) {
    option (api.post) = '/api/shop/add_shop_access';
  }
  rpc RemoveShopAccess(RemoveShopAccessRequest) returns (RemoveShopAccessResponse) {
    option (api.post) = '/api/shop/remove_shop_access';
  }
  rpc VerifyField(VerifyFieldRequest) returns (VerifyFieldResponse) {
    option (api.post) = '/api/shop/verify_field';
  }
  rpc ListShopAccess(ListShopAccessRequest) returns (ListShopAccessResponse) {
    option (api.post) = '/api/shop/list_shop_access';
  }

  rpc AddShopCategory(AddShopCategoryRequest) returns (AddShopCategoryResponse) {
    option (api.post) = '/api/shop/add_shop_category';
  }
  rpc GetShopCategory(GetShopCategoryRequest) returns (GetShopCategoryResponse) {
    option (api.get) = '/api/shop/get_shop_category';
  }
  rpc RemoveShopCategory(RemoveShopCategoryRequest) returns (RemoveShopCategoryResponse) {
    option (api.post) = '/api/shop/remove_shop_category';
  }

  rpc AddFreightTemplate(CreateTemplateRequest) returns (CreateTemplateResponse) {
    option (api.post) = '/api/shop/add_template';
  }

  rpc GetFreightTemplate(GetTemplateRequest) returns (GetTemplateResponse) {
    option (api.get) = '/api/shop/get_template';
  }

  rpc UpdateFreightTemplate(UpdateTemplateRequest) returns (UpdateTemplateResponse) {
    option (api.post) = '/api/shop/update_template';
  }

  rpc DeleteFreightTemplate(DeleteTemplateRequest) returns (DeleteTemplateResponse) {
    option (api.post) = '/api/shop/delete_template';
  }

  rpc ListFreightTemplate(ListTemplateRequest) returns (ListTemplateResponse) {
    option (api.post) = '/api/shop/list_template';
  }

  //mall
  rpc GetMallIndex(MallIndexRequest) returns (MallIndexResponse) {
    option (api.post) = '/api/mall/list_live_product';
  }

  // product category
  rpc CreateCategory(CreateCategoryRequest) returns (CreateCategoryResponse) {
    option (api.post) = '/api/shop/create_category';
  }
  rpc GetCategory(GetCategoryRequest) returns (GetCategoryResponse) {
    option (api.get) = '/api/shop/get_category';
  }
  rpc UpdateCategory(UpdateCategoryRequest) returns (UpdateCategoryResponse) {
    option (api.post) = '/api/shop/update_category';
  }
  rpc ListCategory(ListCategoryRequest) returns (ListCategoryResponse) {
    option (api.post) = '/api/shop/list_category';
  }
  rpc DeleteCategory(DeleteCategoryRequest) returns (DeleteCategoryResponse) {
    option (api.post) = '/api/shop/delete_category';
  }

  // product product
  rpc CreateProduct(CreateProductRequest) returns (CreateProductResponse) {
    option (api.post) = '/api/shop/create_product';
  }

  rpc GetProduct(GetProductRequest) returns (GetProductResponse) {
    option (api.get) = '/api/shop/get_product';
  }
  rpc UpdateProduct(UpdateProductRequest) returns (UpdateProductResponse) {
    option (api.post) = '/api/shop/update_product';
  }
  rpc ListProduct(ListProductRequest) returns (ListProductResponse) {
    option (api.post) = '/api/shop/list_product';
  }
  rpc DeleteProduct(DeleteProductRequest) returns (DeleteProductResponse) {
    option (api.post) = '/api/shop/delete_product';
  }

  rpc UploadMultiImage(UploadMultiImageRequest) returns (UploadMultiImageResponse) {
    option (api.post) = '/api/shop/upload_multi_image';
  }

  rpc BindAttribute(BindAttributeRequest) returns (BindAttributeResponse) {
    option (api.post) = '/api/shop/bind_product_attribute';
  }

  rpc PublishProduct(PublishProductRequest) returns (PublishProductResponse) {
    option (api.post) = '/api/shop/publish_product';
  }

  rpc OffShelfProductInBatches(OffSelfProductsRequest) returns (OffSelfProductsResponse) {
    option (api.post) = '/api/shop/off_shelf_products';
  }

  rpc DeleteProductInBatches(DeleteProductsRequest) returns (DeleteProductsResponse) {
    option (api.post) = '/api/shop/delete_products';
  }

  rpc ChangeProductState(ChangeProductStateRequest) returns (ChangeProductStateResponse) {
    option (api.post) = '/api/shop/change_product_state';
  }

  rpc ChangeProductsState(ChangeProductStateRequest) returns (ChangeProductStateResponse) {
    option (api.post) = '/api/shop/change_products_state';
  }

  // sku sku
  rpc CreateSku(CreateSkuRequest) returns (CreateSkuResponse) {
    option (api.post) = '/api/shop/create_sku';
  }
  rpc GetSku(GetSkuRequest) returns (GetSkuResponse) {
    option (api.get) = '/api/shop/get_sku';
  }
  rpc UpdateSku(UpdateSkuRequest) returns (UpdateSkuResponse) {
    option (api.post) = '/api/shop/update_sku';
  }
  rpc ListSku(ListSkuRequest) returns (ListSkuResponse) {
    option (api.post) = '/api/shop/list_sku';
  }
  rpc DeleteSku(DeleteSkuRequest) returns (DeleteSkuResponse) {
    option (api.post) = '/api/shop/delete_sku';
  }


  // attribute
  rpc CreateAttribute(CreateAttributeRequest) returns (CreateAttributeResponse) {
    option (api.post) = '/api/shop/create_attribute';
  }
  rpc GetAttribute(GetAttributeRequest) returns (GetAttributeResponse) {
    option (api.get) = '/api/shop/get_attribute';
  }
  rpc ListAttribute(ListAttributeRequest) returns (ListAttributeResponse) {
    option (api.post) = '/api/shop/list_attribute';
  }
  rpc DeleteAttribute(DeleteAttributeRequest) returns (DeleteAttributeResponse) {
    option (api.post) = '/api/shop/delete_attribute';
  }
  rpc AddAttributeValue(AddAttributeValueRequest) returns (AddAttributeValueResponse) {
    option (api.post) = '/api/shop/add_attribute_value';
  }
  rpc DeleteAttributeValue(DeleteAttributeValueRequest) returns (DeleteAttributeValueResponse) {
    option (api.post) = '/api/shop/delete_attribute_value';
  }

  // order
  rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse) {
    option (api.post) = '/api/shop/create_order';
  }
  rpc GetOrder(GetOrderRequest) returns (GetOrderResponse) {
    option (api.get) = '/api/shop/get_order';
  }
  rpc UpdateOrder(UpdateOrderRequest) returns (UpdateOrderResponse) {
    option (api.post) = '/api/shop/update_order';
  }
  rpc ListOrder(ListOrderRequest) returns (ListOrderResponse) {
    option (api.post) = '/api/shop/list_order';
  }
  rpc DeleteOrder(DeleteOrderRequest) returns (DeleteOrderResponse) {
    option (api.post) = '/api/shop/delete_order';
  }
  rpc ShipGoods(ShipGoodsRequest) returns (ShipGoodsResponse) {
    option (api.post) = '/api/shop/ship_goods';
  }

  rpc ShipGoodsInBatches(ShipGoodsInBatchesRequest) returns (ShipGoodsInBatchesResponse) {
    option (api.post) = '/api/shop/ship_goods_batch';
  }

  rpc FreeShippingInBatches(FreeShippingInBatchesRequest) returns (FreeShippingInBatchesResponse) {
    option (api.post) = '/api/shop/free_ship_batch';
  }

  // cart
  rpc CreateCart(CreateCartRequest) returns (CreateCartResponse) {
    option (api.post) = '/api/shop/create_cart';
  }
  rpc GetCart(GetCartRequest) returns (GetCartResponse) {
    option (api.get) = '/api/shop/get_cart';
  }
  rpc UpdateCart(UpdateCartRequest) returns (UpdateCartResponse) {
    option (api.post) = '/api/shop/update_cart';
  }

  rpc DeleteCart(DeleteCartRequest) returns (DeleteCartResponse) {
    option (api.post) = '/api/shop/delete_cart';
  }

  // seller
  rpc UploadAttachment(UploadAttachmentRequest) returns (UploadAttachmentResponse) {
    option (api.post) = '/api/seller/upload_attachment';
  }
  rpc ListAttachment(ListAttachmentRequest) returns (ListAttachmentResponse) {
    option (api.post) = '/api/seller/list_attachment';
  }
  rpc DeleteAttachment(DeleteAttachmentRequest) returns (DeleteAttachmentResponse) {
    option (api.post) = '/api/seller/delete_attachment';
  }
  rpc CreateSeller(CreateSellerRequest) returns (CreateSellerResponse) {
    option (api.post) = '/api/seller/create_seller';
  }

  // payment
  rpc CreatePayment(CreatePaymentRequest) returns (CreatePaymentResponse) {
    option (api.post) = '/api/payment/create_payment';
  }
  rpc GetPayment(GetPaymentRequest) returns (GetPaymentResponse) {
    option (api.get) = '/api/payment/get_payment';
  }
  rpc UpdatePayment(UpdatePaymentRequest) returns (UpdatePaymentResponse) {
    option (api.post) = '/api/payment/update_payment';
  }
  rpc DeletePayment(DeletePaymentRequest) returns (DeletePaymentResponse) {
    option (api.post) = '/api/payment/delete_payment';
  }

  rpc CreateConfig(CreateConfigRequest) returns (CreateConfigResponse) {
    option (api.post) = '/api/admin/add_config';
  }
  rpc UpdateConfig(UpdateConfigRequest) returns (UpdateConfigResponse) {
    option (api.post) = '/api/admin/update_config';
  }
  rpc DeleteConfig(DeleteConfigRequest) returns (DeleteConfigResponse) {
    option (api.post) = '/api/admin/delete_config';
  }
  rpc GetConfig(GetConfigRequest) returns (GetConfigResponse) {
    option (api.post) = '/api/admin/get_config';
  }

  // wxpay
  rpc WxPrepay(PrepayRequest) returns (PrepayResponse) {
    option (api.post) = '/api/wxpay/prepay';
  }
  rpc CloseOrder(CloseOrderRequest) returns (CloseOrderResponse) {
    option (api.post) = '/api/wxpay/close_order';
  }
  rpc QueryOrderById(QueryOrderByIdRequest) returns (QueryOrderByIdResponse) {
    option (api.get) = '/api/wxpay/query_by_id';
  }
  rpc QueryOrderByOutTrade(QueryOrderByOutTradeNoRequest) returns (QueryOrderByOutTradeNoResponse) {
    option (api.get) = '/api/wxpay/query_by_no';
  }

  //virtual currency  虚拟币（成长币）
  rpc AddVCurrency(AddVirtualCurrencyRequest) returns (AddVirtualCurrencyResponse) {
    option (api.post) = '/api/currency/add';
  }

  rpc DeleteVCurrency(DeleteVirtualCurrencyRequest) returns (DeleteVirtualCurrencyResponse) {
    option (api.post) = '/api/currency/clear';
  }

  rpc UpdateVCurrency(UpdateVirtualCurrencyRequest) returns (UpdateVirtualCurrencyResponse) {
    option (api.post) = '/api/currency/update';
  }

  rpc GetVCurrency(GetVirtualCurrencyRequest) returns (GetVirtualCurrencyResponse) {
    option (api.get) = '/api/currency/get_by_uid';
  }

  rpc ListVCurrency(ListVirtualCurrencyRequest) returns (ListVirtualCurrencyResponse) {
    option (api.get) = '/api/currency/list';
  }

  // account
  rpc AddAccountOperation(AddAccountOperationRequest) returns (AddAccountOperationResponse) {
    option (api.post) = '/api/account/add_operation';
  }

  rpc GetAccountOperation(GetAccountOperationRequest) returns (GetAccountOperationResponse) {
    option (api.get) = '/api/account/get_operation';
  }

  rpc ListAccountOperation(ListAccountOperationRequest) returns (ListAccountOperationResponse) {
    option (api.get) = '/api/account/list_operation';
  }

  // live
  rpc CreateRoom(CreateRoomRequest) returns (CreateRoomResponse) {
    option (api.post) = '/api/live/create_room';
  }
  rpc GetRoom(GetRoomRequest) returns (GetRoomResponse) {
    option (api.get) = '/api/live/get_room';
  }
  rpc UpdateRoom(UpdateRoomRequest) returns (UpdateRoomResponse) {
    option (api.post) = '/api/live/update_room';
  }
  rpc ListRoom(ListRoomRequest) returns (ListRoomResponse) {
    option (api.post) = '/api/live/list_room';
  }
  rpc DeleteRoom(DeleteRoomRequest) returns (DeleteRoomResponse) {
    option (api.post) = '/api/live/delete_room';
  }

  rpc CreateLiveUserToken(CreateLiveUserTokenRequest) returns (CreateLiveUserTokenResponse) {
    option (api.post) = '/api/live/create_live_user_token';
  }

  rpc UserEnterRoom(UserEnterRoomRequest) returns (UserEnterRoomResponse) {
    option (api.post) = '/api/live/user_enter_room';
  }
  rpc UserExitRoom(UserExitRoomRequest) returns (UserExitRoomResponse) {
    option (api.post) = '/api/live/user_exit_room';
  }
  rpc ListActiveRoomUser(ListActiveRoomUserRequest) returns (ListAttachmentResponse) {
    option (api.post) = '/api/live/list_active_room_user';
  }

  // live plan
  // live plan crud
  rpc CreateLivePlan(CreateLivePlanRequest) returns (CreateLivePlanResponse) {
    option (api.post) = '/api/live/create_live_plan';
  }
  rpc UpdateLivePlan(UpdateLivePlanRequest) returns (UpdateLivePlanResponse) {
    option (api.post) = '/api/live/update_live_plan';
  }
  rpc ListLivePlan(ListLivePlanRequest) returns (ListLivePlanResponse) {
    option (api.post) = '/api/live/list_live_plan';
  }
  rpc DeleteLivePlan(DeleteLivePlanRequest) returns (DeleteLivePlanResponse) {
    option (api.post) = '/api/live/delete_live_plan';
  }

  // live plan prod crud
  rpc CreateLivePlanProduct(CreateLivePlanProductRequest) returns (CreateLivePlanProductResponse) {
    option (api.post) = '/api/live/create_live_plan_product';
  }
  rpc UpdateLivePlanProduct(UpdateLivePlanProductRequest) returns (UpdateLivePlanProductResponse) {
    option (api.post) = '/api/live/update_live_plan_product';
  }
  rpc ListLivePlanProduct(ListLivePlanProductRequest) returns (ListLivePlanProductResponse) {
    option (api.post) = '/api/live/list_live_plan_product';
  }
  rpc DeleteLivePlanProduct(DeleteLivePlanProductRequest) returns (DeleteLivePlanProductResponse) {
    option (api.post) = '/api/live/delete_live_plan_product';
  }
  rpc LoadLivePlanProduct(LoadLivePlanProductRequest) returns (LoadLivePlanProductResponse) {
    option (api.post) = '/api/live/load_live_plan_product';
  }
  rpc UpdateLiveProductStatus(UpdateLiveProductStatusRequest) returns (UpdateLiveProductStatusResponse) {
    option (api.post) = '/api/live/update_live_product_status';
  }
  rpc ListLiveProductStatus(ListLiveProductStatusRequest) returns (ListLiveProductStatusResponse) {
    option (api.post) = '/api/live/list_live_product_status';
  }



}