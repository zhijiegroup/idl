syntax = "proto3";
package glory_api;

option java_package = "com.zhijiejiaoyu.glory_api";
option java_multiple_files = true;

import "user/user.proto";
import "user/address.proto";
import "api.proto";
import "mall/mall_index.proto";
import "shop/shop.proto";
import "shop/category.proto";
import "shop/category_qualification.proto";
import "shop/product.proto";
import "shop/sku.proto";
import "shop/attribute.proto";
import "shop/order.proto";
import "shop/cart.proto";
import "shop/operation.proto";
import "shop/freight_template.proto";
import "shop/coupon.proto";
import "shop/activity.proto";
import "seller/attachment.proto";
import "seller/seller.proto";
import "payment/payment.proto";
import "example/example.proto";
import "admin/config.proto";
import "admin/admin_tenant.proto";
import "admin/admin_user.proto";
import "wxpay/wxpay.proto";
import "live/live_room.proto";
import "live/live_token.proto";
import "live/live_user.proto";
import "live/live_plan.proto";
import "live/live_text.proto";
import "live/live_evaluate.proto";
import "account/account_operation.proto";
import "currency/virtual_currency.proto";
import "tenant/tenant.proto";
import "tenant/tenant_dept.proto";
import "tenant/tenant_user.proto";
import "tenant/tenant_config.proto";
import "short_video/short_video.proto";
import "course/material.proto";
import "course/module.proto";
import "course/cmodule.proto";
import "course/nmodule.proto";
import "course/course.proto";
import "course/graph.proto";
import "course/user_course.proto";
import "course/teaching_plan.proto";
import "course/edu_scheme.proto";
import "course/job.proto";
import "app/app.proto";

service glory_api {

  // endpoint /api/example/create_example, create example
  rpc CreateExample(CreateExampleRequest) returns (CreateExampleResponse) {
    option (api.post) = '/api/example/create_example';
  }
  // endpoint /api/example/get_example, get_example
  rpc GetExample(GetExampleRequest) returns (GetExampleResponse) {
    option (api.get) = '/api/example/get_example';
  }
  // endpoint /api/example/update_example, update_example
  rpc UpdateExample(UpdateExampleRequest) returns (UpdateExampleResponse) {
    option (api.post) = '/api/example/update_example';
  }
  // endpoint /api/example/list_example, list example
  rpc ListExample(ListExampleRequest) returns (ListExampleResponse) {
    option (api.post) = '/api/example/list_example';
  }
  // endpoint /api/example/delete_example, delete example
  rpc DeleteExample(DeleteExampleRequest) returns (DeleteExampleResponse) {
    option (api.post) = '/api/example/delete_example';
  }

  //user
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (api.post) = '/api/user/login';
  }
  rpc Logout(LogoutRequest) returns (LogoutResponse) {
    option (api.get) = '/api/user/logout';
  }

  rpc GetVerifyCode(GetVerifyCodeRequest) returns (GetVerifyCodeResponse) {
    option (api.post) = '/api/user/get_verify_code';
  }
  rpc CheckVerifyCode(CheckVerifyCodeRequest) returns (CheckVerifyCodeResponse) {
    option (api.post) = '/api/user/check_verify_code';
  }

  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (api.get) = '/api/user/get_user';  // get user data with token and phone
  }

  rpc LoginWithPassword(LoginWithPasswordRequest) returns (LoginWithPasswordResponse) {
    option (api.post) = '/api/user/login_with_password';
  }

  rpc UpdatePassword(UpdatePasswordRequest) returns (UpdatePasswordResponse) {
    option (api.post) = '/api/user/update_password';
  }

  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
    option (api.post) = '/api/user/update_user';
  }

  rpc UpdatePhone(UpdatePhoneRequest) returns (UpdatePhoneResponse) {
    option (api.post) = '/api/user/update_phone';
  }

  rpc UpdateUserTenant(UpdateUserTenantRequest) returns (UpdateUserTenantResponse) {
    option (api.post) = '/api/user/update_user_tenant';
  }

  // 关注用户
  rpc FollowUser(FollowUserRequest) returns (FollowUserResponse) {
    option (api.post) = '/api/user/follow_user';
  }

  // 我的关注列表
  rpc ListMyFollowing(ListMyFollowingRequest) returns (ListMyFollowingResponse) {
    option (api.post) = '/api/user/list_my_following';
  }

  // 我的粉丝列表
  rpc ListMyFollower(ListMyFollowerRequest) returns (ListMyFollowerResponse) {
    option (api.post) = '/api/user/list_my_follower';
  }

  // 我的朋友列表
  rpc ListMyFriend(ListMyFriendRequest) returns (ListMyFriendResponse) {
    option (api.post) = '/api/user/list_my_friend';
  }

  // 我的社交信息
  rpc GetMySocialSummary(GetMySocialSummaryRequest) returns (GetMySocialSummaryResponse) {
    option (api.get) = '/api/user/get_my_social_summary';
  }

  // page permission
  rpc GetUserPagePermission(GetUserPagePermissionRequest) returns (GetUserPagePermissionResponse) {
    option (api.post) = '/api/user/get_user_page_permission';  // get user page permission with token
  }

  rpc CreateRolePagePermission(CreateRolePagePermissionRequest) returns (CreateRolePagePermissionResponse) {
    option (api.post) = '/api/user/create_role_page_permission';  // create role page permission with token
  }

  rpc UpdateRolePagePermission(UpdateRolePagePermissionRequest) returns (UpdateRolePagePermissionResponse) {
    option (api.post) = '/api/user/update_role_page_permission';  // update role page permission with token
  }

  rpc GetRolePagePermission(GetRolePagePermissionRequest) returns (GetRolePagePermissionResponse) {
    option (api.post) = '/api/user/get_role_page_permission';  // update role page permission with token
  }

  // address
  rpc AddAddress(AddAddressRequest) returns (AddAddressResponse) {
    option (api.post) = '/api/user/add_address';
  }

  rpc DeleteAddress(DeleteAddressRequest) returns (DeleteAddressResponse) {
    option (api.post) = '/api/user/delete_address';
  }

  rpc UpdateAddress(UpdateAddressRequest) returns (UpdateAddressResponse) {
    option (api.post) = '/api/user/update_address';
  }

  rpc GetAddress(GetAddressRequest) returns (GetAddressResponse) {
    option (api.get) = '/api/user/get_address';
  }

  rpc ListAddress(ListAddressRequest) returns (ListAddressResponse) {
    option (api.get) = '/api/user/list_address';
  }
  rpc ListUserByRole(ListUserByRoleRequest) returns (ListUserByRoleResponse) {
    option (api.post) = '/api/user/list_user_by_role';
  }

  // user permission
  //list the permissions that supported
  rpc ListPermission(ListPermissionRequest) returns (ListPermissionResponse) {
    option (api.post) = '/api/auth/list_permission';
  }
  rpc ListRole(ListRoleRequest) returns (ListRoleResponse) {
    option (api.post) = '/api/auth/list_role';
  }
  rpc GiveRolePermission(GiveRolePermissionRequest) returns (GiveRolePermissionResponse) {
    option (api.post) = '/api/auth/give_role_permission';
  }
  rpc RemoveRolePermission(RemoveRolePermissionRequest) returns (RemoveRolePermissionResponse) {
    option (api.post) = '/api/auth/remove_role_permission';
  }
  rpc CreateRole(CreateRoleRequest) returns (CreateRoleResponse) {
    option (api.post) = '/api/auth/create_role';
  }
  rpc DeleteRole(DeleteRoleRequest) returns (DeleteRoleResponse) {
    option (api.post) = '/api/auth/delete_role';
  }
  rpc ListResource(ListResourceRequest) returns (ListResourceResponse) {
    option (api.post) = '/api/auth/list_resource';
  }
  rpc GetRoleType(GetRoleTypeRequest) returns (GetRoleTypeResponse) {
    option (api.get) = '/api/role/get_role_type';
  }

  // shop
  rpc CreateShop(CreateShopRequest) returns (CreateShopResponse) {
    option (api.post) = '/api/shop/create_shop';
  }
  rpc GetShop(GetShopRequest) returns (GetShopResponse) {
    option (api.get) = '/api/shop/get_shop';
  }
  rpc UpdateShop(UpdateShopRequest) returns (UpdateShopResponse) {
    option (api.post) = '/api/shop/update_shop';
  }
  rpc ListShop(ListShopRequest) returns (ListShopResponse) {
    option (api.post) = '/api/shop/list_shop';
  }
  rpc DeleteShop(DeleteShopRequest) returns (DeleteShopResponse) {
    option (api.post) = '/api/shop/delete_shop';
  }
  rpc ListOperationMetrics(ListOperationMetricsRequest) returns (ListOperationMetricsResponse) {
    option (api.post) = '/api/shop/list_operation_metrics';
  }
  rpc GetShopQrcode(GetShopQrcodeRequest) returns (GetShopQrcodeResponse) {
    option (api.get) = '/api/shop/get_shop_qrcode';
  }

  rpc UpdateShopManager(UpdateShopManagerRequest) returns (UpdateShopManagerResponse) {
    option (api.post) = '/api/shop/update_shop_manager';
  }

  rpc GetShopBusinessData(GetShopBusinessDataRequest) returns (GetShopBusinessDataResponse) {
    option (api.get) = '/api/shop/get_shop_business_data';
  }

  rpc AddShopAccess(AddShopAccessRequest) returns (AddShopAccessResponse) {
    option (api.post) = '/api/shop/add_shop_access';
  }
  rpc RemoveShopAccess(RemoveShopAccessRequest) returns (RemoveShopAccessResponse) {
    option (api.post) = '/api/shop/remove_shop_access';
  }
  rpc VerifyField(VerifyFieldRequest) returns (VerifyFieldResponse) {
    option (api.post) = '/api/shop/verify_field';
  }
  rpc ListShopAccess(ListShopAccessRequest) returns (ListShopAccessResponse) {
    option (api.post) = '/api/shop/list_shop_access';
  }

  rpc AddShopCategory(AddShopCategoryRequest) returns (AddShopCategoryResponse) {
    option (api.post) = '/api/shop/add_shop_category';
  }
  rpc GetShopCategory(GetShopCategoryRequest) returns (GetShopCategoryResponse) {
    option (api.get) = '/api/shop/get_shop_category';
  }
  rpc RemoveShopCategory(RemoveShopCategoryRequest) returns (RemoveShopCategoryResponse) {
    option (api.post) = '/api/shop/remove_shop_category';
  }

  rpc AddFreightTemplate(CreateTemplateRequest) returns (CreateTemplateResponse) {
    option (api.post) = '/api/shop/add_template';
  }

  rpc GetFreightTemplate(GetTemplateRequest) returns (GetTemplateResponse) {
    option (api.get) = '/api/shop/get_template';
  }

  rpc UpdateFreightTemplate(UpdateTemplateRequest) returns (UpdateTemplateResponse) {
    option (api.post) = '/api/shop/update_template';
  }

  rpc DeleteFreightTemplate(DeleteTemplateRequest) returns (DeleteTemplateResponse) {
    option (api.post) = '/api/shop/delete_template';
  }

  rpc ListFreightTemplate(ListTemplateRequest) returns (ListTemplateResponse) {
    option (api.post) = '/api/shop/list_template';
  }

  rpc ListQualification(ListShopQualificationRequest) returns (ListShopQualificationResponse) {
    option (api.post) = '/api/shop/list_shop_qualification';
  }


  //mall
  rpc GetMallIndex(MallIndexRequest) returns (MallIndexResponse) {
    option (api.post) = '/api/mall/list_live_product';
  }

  // product category
  rpc CreateCategory(CreateCategoryRequest) returns (CreateCategoryResponse) {
    option (api.post) = '/api/shop/create_category';
  }
  rpc GetCategory(GetCategoryRequest) returns (GetCategoryResponse) {
    option (api.get) = '/api/shop/get_category';
  }
  rpc UpdateCategory(UpdateCategoryRequest) returns (UpdateCategoryResponse) {
    option (api.post) = '/api/shop/update_category';
  }
  rpc ListCategory(ListCategoryRequest) returns (ListCategoryResponse) {
    option (api.post) = '/api/shop/list_category';
  }
  rpc DeleteCategory(DeleteCategoryRequest) returns (DeleteCategoryResponse) {
    option (api.post) = '/api/shop/delete_category';
  }

  //category qualification
  rpc ListCategoryQualification(ListCategoryQualificationRequest) returns (ListCategoryQualificationResponse) {
    option (api.post) = '/api/shop/list_category_qualification';
  }


  // product product
  rpc CreateProduct(CreateProductRequest) returns (CreateProductResponse) {
    option (api.post) = '/api/shop/create_product';
  }

  rpc GetProduct(GetProductRequest) returns (GetProductResponse) {
    option (api.get) = '/api/shop/get_product';
  }
  rpc UpdateProduct(UpdateProductRequest) returns (UpdateProductResponse) {
    option (api.post) = '/api/shop/update_product';
  }
  rpc ListProduct(ListProductRequest) returns (ListProductResponse) {
    option (api.post) = '/api/shop/list_product';
  }
  rpc ListProductByIDs(ListProductByProductIDsRequest) returns (ListProductByProductIDsResponse) {
    option (api.post) = '/api/shop/list_product_by_ids';
  }
  rpc DeleteProduct(DeleteProductRequest) returns (DeleteProductResponse) {
    option (api.post) = '/api/shop/delete_product';
  }

  rpc UploadMultiImage(UploadMultiImageRequest) returns (UploadMultiImageResponse) {
    option (api.post) = '/api/shop/upload_multi_image';
  }

  rpc DeleteImageById(DeleteImageRequest) returns (DeleteImageResponse) {
    option (api.post) = '/api/shop/delete_image';
  }

  rpc BindAttribute(BindAttributeRequest) returns (BindAttributeResponse) {
    option (api.post) = '/api/shop/bind_product_attribute';
  }

  rpc PublishProduct(PublishProductRequest) returns (PublishProductResponse) {
    option (api.post) = '/api/shop/publish_product';
  }

  rpc OffShelfProductInBatches(OffSelfProductsRequest) returns (OffSelfProductsResponse) {
    option (api.post) = '/api/shop/off_shelf_products';
  }

  rpc DeleteProductInBatches(DeleteProductsRequest) returns (DeleteProductsResponse) {
    option (api.post) = '/api/shop/delete_products';
  }

  rpc ChangeProductsState(ChangeProductStateRequest) returns (ChangeProductStateResponse) {
    option (api.post) = '/api/shop/change_products_state';
  }

  rpc SaveProductImageInfo(SaveImageInfoRequest) returns (SaveImageInfoResponse) {
    option (api.post) = '/api/shop/save_product_image_info';
  }

  // sku sku
  rpc CreateSku(CreateSkuRequest) returns (CreateSkuResponse) {
    option (api.post) = '/api/shop/create_sku';
  }
  rpc GetSku(GetSkuRequest) returns (GetSkuResponse) {
    option (api.get) = '/api/shop/get_sku';
  }
  rpc UpdateSku(UpdateSkuRequest) returns (UpdateSkuResponse) {
    option (api.post) = '/api/shop/update_sku';
  }
  rpc ListSku(ListSkuRequest) returns (ListSkuResponse) {
    option (api.post) = '/api/shop/list_sku';
  }
  rpc DeleteSku(DeleteSkuRequest) returns (DeleteSkuResponse) {
    option (api.post) = '/api/shop/delete_sku';
  }


  // attribute
  rpc CreateAttribute(CreateAttributeRequest) returns (CreateAttributeResponse) {
    option (api.post) = '/api/shop/create_attribute';
  }
  rpc GetAttribute(GetAttributeRequest) returns (GetAttributeResponse) {
    option (api.get) = '/api/shop/get_attribute';
  }
  rpc ListAttribute(ListAttributeRequest) returns (ListAttributeResponse) {
    option (api.post) = '/api/shop/list_attribute';
  }
  rpc DeleteAttribute(DeleteAttributeRequest) returns (DeleteAttributeResponse) {
    option (api.post) = '/api/shop/delete_attribute';
  }
  rpc AddAttributeValue(AddAttributeValueRequest) returns (AddAttributeValueResponse) {
    option (api.post) = '/api/shop/add_attribute_value';
  }
  rpc DeleteAttributeValue(DeleteAttributeValueRequest) returns (DeleteAttributeValueResponse) {
    option (api.post) = '/api/shop/delete_attribute_value';
  }

  // order
  rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse) {
    option (api.post) = '/api/shop/create_order';
  }
  rpc GetOrder(GetOrderRequest) returns (GetOrderResponse) {
    option (api.get) = '/api/shop/get_order';
  }
  rpc UpdateOrder(UpdateOrderRequest) returns (UpdateOrderResponse) {
    option (api.post) = '/api/shop/update_order';
  }
  rpc ListOrder(ListOrderRequest) returns (ListOrderResponse) {
    option (api.post) = '/api/shop/list_order';
  }
  rpc DeleteOrder(DeleteOrderRequest) returns (DeleteOrderResponse) {
    option (api.post) = '/api/shop/delete_order';
  }
  rpc ShipGoods(ShipGoodsRequest) returns (ShipGoodsResponse) {
    option (api.post) = '/api/shop/ship_goods';
  }
  rpc ConfirmReceiptGoods(ConfirmReceiptGoodsRequest) returns (ConfirmReceiptGoodsResponse) {
    option (api.post) = '/api/shop/confirm_goods';
  }
  rpc CancelOrder(CancelOrderRequest) returns (CancelOrderResponse) {
    option (api.post) = '/api/shop/cancel_order';
  }

  rpc ShipGoodsInBatches(ShipGoodsInBatchesRequest) returns (ShipGoodsInBatchesResponse) {
    option (api.post) = '/api/shop/ship_goods_batch';
  }

  rpc FreeShippingInBatches(FreeShippingInBatchesRequest) returns (FreeShippingInBatchesResponse) {
    option (api.post) = '/api/shop/free_ship_batch';
  }

  rpc ListShopSummary(ListShopSummaryRequest) returns (ListShopSummaryResponse) {
    option (api.post) = '/api/shop/list_shop_summary';
  }
  rpc ListShopBySellerID(ListShopBySellerIDRequest) returns (ListShopBySellerIDResponse) {
    option (api.post) = '/api/shop/list_shop_by_selelr_id';
  }

  // cart
  rpc CreateCart(AddCartRequest) returns (AddCartResponse) {
    option (api.post) = '/api/shop/add_cart';
  }
  rpc GetCart(GetCartRequest) returns (GetCartResponse) {
    option (api.get) = '/api/shop/get_cart';
  }
  rpc UpdateCart(UpdateCartRequest) returns (UpdateCartResponse) {
    option (api.post) = '/api/shop/update_cart';
  }

  rpc DeleteCart(DeleteCartRequest) returns (DeleteCartResponse) {
    option (api.post) = '/api/shop/delete_cart';
  }

  // seller
  rpc UploadAttachment(UploadAttachmentRequest) returns (UploadAttachmentResponse) {
    option (api.post) = '/api/seller/upload_attachment';
  }
  rpc SaveAttachment(SaveAttachmentRequest) returns (SaveAttachmentResponse) {
    option (api.post) = '/api/seller/save_attachment';
  }
  rpc ListAttachment(ListAttachmentRequest) returns (ListAttachmentResponse) {
    option (api.post) = '/api/seller/list_attachment';
  }
  rpc DeleteAttachment(DeleteAttachmentRequest) returns (DeleteAttachmentResponse) {
    option (api.post) = '/api/seller/delete_attachment';
  }
  rpc CreateSeller(CreateSellerRequest) returns (CreateSellerResponse) {
    option (api.post) = '/api/seller/create_seller';
  }

  // payment
  rpc CreatePayment(CreatePaymentRequest) returns (CreatePaymentResponse) {
    option (api.post) = '/api/payment/create_payment';
  }
  rpc GetPayment(GetPaymentRequest) returns (GetPaymentResponse) {
    option (api.get) = '/api/payment/get_payment';
  }
  rpc UpdatePayment(UpdatePaymentRequest) returns (UpdatePaymentResponse) {
    option (api.post) = '/api/payment/update_payment';
  }
  rpc DeletePayment(DeletePaymentRequest) returns (DeletePaymentResponse) {
    option (api.post) = '/api/payment/delete_payment';
  }

  //admin_config
  rpc CreateConfig(CreateConfigRequest) returns (CreateConfigResponse) {
    option (api.post) = '/api/admin/add_config';
  }
  rpc UpdateConfig(UpdateConfigRequest) returns (UpdateConfigResponse) {
    option (api.post) = '/api/admin/update_config';
  }
  rpc DeleteConfig(DeleteConfigRequest) returns (DeleteConfigResponse) {
    option (api.post) = '/api/admin/delete_config';
  }
  rpc GetConfig(GetConfigRequest) returns (GetConfigResponse) {
    option (api.post) = '/api/admin/get_config';
  }
  //admin_other
  rpc GetSTS(GetSTSRequest) returns (GetSTSResponse) {
    option (api.get) = '/api/admin/get_sts';
  }
  rpc ListTenantOrg(ListTenantOrgRequest) returns(ListTenantOrgResponse) {
    option (api.post) = '/api/admin/list_tenant_org';
  }
  //admin_user
  rpc GetAdminTenant(GetAdminTenantRequest) returns(GetAdminTenantResponse) {
    option (api.get) = '/api/admin/get_admin_tenant';
  }
  rpc ListAdminUser(ListAdminUserRequest) returns(ListAdminUserResponse) {
    option (api.post) = '/api/admin/list_admin_user';
  }
  rpc CreateAdminUser(CreateAdminUserRequest) returns(CreateAdminUserResponse) {
    option (api.post) = '/api/admin/create_admin_user';
  }
  rpc UpdateAdminUser(UpdateAdminUserRequest) returns(UpdateAdminUserResponse) {
    option (api.post) = '/api/admin/update_admin_user';
  }
  rpc DeleteAdminUser(DeleteAdminUserRequest) returns(DeleteAdminUserResponse) {
    option (api.post) = '/api/admin/delete_admin_user';
  }

  // wxpay
  rpc WxPrepay(PrepayRequest) returns (PrepayResponse) {
    option (api.post) = '/api/wxpay/prepay';
  }
  rpc CloseOrder(CloseOrderRequest) returns (CloseOrderResponse) {
    option (api.post) = '/api/wxpay/close_order';
  }
  rpc QueryOrderById(QueryOrderByIdRequest) returns (QueryOrderByIdResponse) {
    option (api.get) = '/api/wxpay/query_by_id';
  }
  rpc QueryOrderByOutTrade(QueryOrderByOutTradeNoRequest) returns (QueryOrderByOutTradeNoResponse) {
    option (api.get) = '/api/wxpay/query_by_no';
  }

  //virtual currency  虚拟币（成长币）
  rpc AddVCurrency(AddVirtualCurrencyRequest) returns (AddVirtualCurrencyResponse) {
    option (api.post) = '/api/currency/add';
  }

  rpc RechargeCurrency(RechargeCurrencyRequest) returns (RechargeCurrencyResponse) {
    option (api.post) = '/api/currency/recharge';
  }

  rpc RechargeCurrencyInBatches(RechargeCurrencyInBatchesRequest) returns (RechargeCurrencyInBatchesResponse) {
    option (api.post) = '/api/currency/recharge_batches';
  }

  rpc GetVCurrency(GetVirtualCurrencyRequest) returns (GetVirtualCurrencyResponse) {
    option (api.get) = '/api/currency/get_by_uid';
  }

  rpc ListVCurrency(ListVirtualCurrencyRequest) returns (ListVirtualCurrencyResponse) {
    option (api.post) = '/api/currency/list';
  }

  rpc ListAccountOperation(ListAccountOperationRequest) returns (ListAccountOperationResponse) {
    option (api.post) = '/api/account/list_operation';
  }

  // live
  rpc CreateRoom(CreateRoomRequest) returns (CreateRoomResponse) {
    option (api.post) = '/api/live/create_room';
  }
  rpc GetRoom(GetRoomRequest) returns (GetRoomResponse) {
    option (api.get) = '/api/live/get_room';
  }
  rpc UpdateRoom(UpdateRoomRequest) returns (UpdateRoomResponse) {
    option (api.post) = '/api/live/update_room';
  }
  rpc ListRoom(ListRoomRequest) returns (ListRoomResponse) {
    option (api.post) = '/api/live/list_room';
  }
  rpc DeleteRoom(DeleteRoomRequest) returns (DeleteRoomResponse) {
    option (api.post) = '/api/live/delete_room';
  }
  rpc ListFinishedRoom(ListFinishedRoomRequest) returns (ListFinishedRoomResponse) {
    option (api.post) = '/api/live/list_finished_room';
  }
  rpc GetFinishedRoom(GetFinishedRoomRequest) returns (GetFinishedRoomResponse) {
    option (api.get) = '/api/live/get_finished_room';
  }

  rpc Record(LiveRecordRequest) returns (LiveRecordResponse) {
    option (api.post) = '/api/live/record';
  }

  rpc CreateLiveUserToken(CreateLiveUserTokenRequest) returns (CreateLiveUserTokenResponse) {
    option (api.post) = '/api/live/create_live_user_token';
  }

  rpc UserEnterRoom(UserEnterRoomRequest) returns (UserEnterRoomResponse) {
    option (api.post) = '/api/live/user_enter_room';
  }
  rpc UserExitRoom(UserExitRoomRequest) returns (UserExitRoomResponse) {
    option (api.post) = '/api/live/user_exit_room';
  }
  rpc ListActiveRoomUser(ListActiveRoomUserRequest) returns (ListAttachmentResponse) {
    option (api.post) = '/api/live/list_active_room_user';
  }
  rpc LiveSSE(LiveSSERequest) returns (LiveSSEResponse) {
    option (api.get) = '/api/live/sse';
  }
  rpc CloseShopAllLive(CloseShopAllLiveRequest) returns (CloseShopAllLiveResponse) {
    option (api.post) = '/api/live/close_shop_live';
  }
  rpc UpdateLiveCommentCount(UpdateLiveCommentCountRequest) returns (UpdateLiveCommentCountResponse) {
    option (api.post) = '/api/live/update_live_comment_count';
  }

  // live plan
  // live plan crud
  rpc CreateLivePlan(CreateLivePlanRequest) returns (CreateLivePlanResponse) {
    option (api.post) = '/api/live/create_live_plan';
  }
  rpc GetLivePlan(GetLivePlanRequest) returns (GetLivePlanResponse) {
    option (api.get) = '/api/live/get_live_plan';
  }
  rpc UpdateLivePlan(UpdateLivePlanRequest) returns (UpdateLivePlanResponse) {
    option (api.post) = '/api/live/update_live_plan';
  }
  rpc ListLivePlan(ListLivePlanRequest) returns (ListLivePlanResponse) {
    option (api.post) = '/api/live/list_live_plan';
  }
  rpc DeleteLivePlan(DeleteLivePlanRequest) returns (DeleteLivePlanResponse) {
    option (api.post) = '/api/live/delete_live_plan';
  }

  // live plan prod crud
  // CreateLivePlanProduct create live plan product
  rpc CreateLivePlanProduct(CreateLivePlanProductRequest) returns (CreateLivePlanProductResponse) {
    option (api.post) = '/api/live/create_live_plan_product';
  }
  rpc UpdateLivePlanProduct(UpdateLivePlanProductRequest) returns (UpdateLivePlanProductResponse) {
    option (api.post) = '/api/live/update_live_plan_product';
  }
  rpc ListLivePlanProduct(ListLivePlanProductRequest) returns (ListLivePlanProductResponse) {
    option (api.post) = '/api/live/list_live_plan_product';
  }
  rpc DeleteLivePlanProduct(DeleteLivePlanProductRequest) returns (DeleteLivePlanProductResponse) {
    option (api.post) = '/api/live/delete_live_plan_product';
  }
  rpc LoadLivePlanProduct(LoadLivePlanProductRequest) returns (LoadLivePlanProductResponse) {
    option (api.post) = '/api/live/load_live_plan_product';
  }
  rpc UpdateLiveProductStatus(UpdateLiveProductStatusRequest) returns (UpdateLiveProductStatusResponse) {
    option (api.post) = '/api/live/update_live_product_status';
  }
  rpc ListLiveProductStatus(ListLiveProductStatusRequest) returns (ListLiveProductStatusResponse) {
    option (api.post) = '/api/live/list_live_product_status';
  }
  rpc DeleteLiveProductStatus(DeleteLiveProductStatusRequest) returns (DeleteLiveProductStatusResponse) {
    option (api.post) = '/api/live/delete_live_product_status';
  }
  rpc CreateLiveProductStatus(CreateLiveProductStatusRequest) returns (CreateLiveProductStatusResponse) {
    option (api.post) = '/api/live/create_live_product_status';
  }
  rpc GetLivingProductStatus(GetLivingProductStatusRequest) returns (GetLivingProductStatusResponse) {
    option (api.get) = '/api/live/get_living_product_status';
  }
  rpc UpdateLiveProductIntroductStatus(UpdateLiveProductIntroductStatusRequest) returns (UpdateLiveProductIntroductStatusResponse) {
    option (api.post) = '/api/live/update_live_product_introduct_status';
  }

    // live text crud
  rpc CreateLiveText(CreateLiveTextRequest) returns (CreateLiveTextResponse) {
    option (api.post) = '/api/live/create_live_text';
  }
  rpc UpdateLiveText(UpdateLiveTextRequest) returns (UpdateLiveTextResponse) {
    option (api.post) = '/api/live/update_live_text';
  }
  rpc ListLiveText(ListLiveTextRequest) returns (ListLiveTextResponse) {
    option (api.post) = '/api/live/list_live_text';
  }
  rpc GetLiveText(GetLiveTextRequest) returns (GetLiveTextResponse) {
    option (api.get) = '/api/live/get_live_text';
  }
  rpc DeleteLiveTexts(DeleteLiveTextsRequest) returns (DeleteLiveTextsResponse) {
    option (api.post) = '/api/live/delete_live_texts';
  }

   // live chart
   rpc GetLiveChartData(GetLiveChartDataRequest) returns (GetLiveChartDataResponse) {
    option (api.get) = '/api/live/get_live_chart_data';
  }
  // live evaluate
  rpc GetEvaluateSelector(GetEvaluateSelectorRequest) returns (GetEvaluateSelectorResponse) {
    option (api.get) = '/api/live/get_evaluation_selector';
  }
  rpc ListPersonalEvaluate(ListPersonalEvaluateRequest) returns (ListPersonalEvaluateResponse) {
    option (api.post) = '/api/live/list_personal_evaluation';
  }
  rpc GetEvaluateDetail(GetEvaluateDetailRequest) returns (GetEvaluateDetailResponse) {
    option (api.get) = '/api/live/get_evaluation_detail';
  }
  rpc SubmitEvaluate(SubmitEvaluateRequest) returns (SubmitEvaluateResponse) {
    option (api.post) = '/api/live/submit_evaluation';
  }
  rpc ListUnevaluatedRoom(ListUnevaluatedRoomRequest) returns (ListUnevaluatedRoomResponse) {
    option (api.post) = '/api/live/list_unevaluated_room';
  }
  rpc ListStudentEvaluations(ListStudentEvalutionsRequest) returns (ListStudentEvalutionsResponse) {
    option (api.post) = '/api/live/list_student_evaluation';
  }
  rpc IgnoreEvaluation(IgnoreLiveEvaluationRequest) returns (IgnoreLiveEvaluationResponse) {
    option (api.get) = '/api/live/ignore_evaluation';
  }
  rpc GetRank(GetRankRequest) returns (GetRankResponse) {
    option (api.get) = '/api/live/get_rank';
  }
  rpc RecordLiveCallback(RecordLiveCallbackRequest) returns (RecordLiveCallbackResponse) {
    option (api.post) = '/api/live/record_callback';
  }
  rpc VideoToTextCallback(VideoToTextCallbackRequest) returns (VideoToTextCallbackResponse) {
    option (api.post) = '/api/live/video_to_text_callback';
  }
  rpc LiveStreamCallback(LiveStreamCallbackRequest) returns (LiveStreamCallbackResponse) {
    option (api.get) = '/api/live/live_stream_callback';
  }
  rpc RegenerationAiFeedback(RegenerationAiFeedbackRequest) returns (RegenerationAiFeedbackResponse) {
    option (api.get) = '/api/live/regeneration_ai_feedback';
  }
  rpc SubmitUserAttitudeForAiResult(SubmitUserAttitudeForAIResultRequest) returns (SubmitUserAttitudeForAIResultResponse) {
    option (api.post) = '/api/live/submit_user_attitude';
  }
  rpc PreheatProduct(PreheatRequest) returns (PreheatResponse) {
    option (api.post) = '/api/live/preheat_product';
  }
  rpc PublicPrice(PublicPriceRequest) returns (PublicPriceResponse) {
    option (api.post) = '/api/live/public_price';
  }
  //tenant
  rpc CreateTenant(CreateTenantRequest) returns (CreateTenantResponse) {
    option (api.post) = '/api/tenant/create_tenant';
  }
  rpc GetTenant(GetTenantRequest) returns (GetTenantResponse) {
    option (api.get) = '/api/tenant/get_tenant';
  }
  rpc UpdateTenant(UpdateTenantRequest) returns (UpdateTenantResponse) {
    option (api.post) = '/api/tenant/update_tenant';
  }
  rpc DeleteTenant(DeleteTenantRequest) returns (DeleteTenantResponse) {
    option (api.post) = '/api/tenant/delete_tenant';
  }
  rpc ListTenant(ListTenantRequest) returns (ListTenantResponse) {
    option (api.post) = '/api/tenant/list_tenant';
  }
  rpc GetTenantOrg(GetTenantOrgRequest) returns (GetTenantOrgResponse) {
    option (api.post) = '/api/tenant/tenant_org';
  }
  rpc EnterTenant(EnterTenantRequest) returns (EnterTenantResponse) {
    option (api.post) = '/api/tenant/enter_tenant';
  }
  rpc ExitTenant(ExitTenantRequest) returns (ExitTenantResponse) {
    option (api.get) = '/api/tenant/exit_tenant';
  }
  rpc InitTenant(InitTenantRequest) returns (InitTenantResponse) {
    option (api.get) = '/api/tenant/init_tenant';
  }

  //tenant_dept
  rpc CreateTenantDept(CreateTenantDeptRequest) returns(CreateTenantDeptResponse) {
    option (api.post) = '/api/tenant/create_tenant_dept';
  }

  rpc UpdateTenantDept(UpdateTenantDeptRequest) returns(UpdateTenantDeptResponse) {
    option (api.post) = '/api/tenant/update_tenant_dept';
  }

  rpc DeleteTenantDept(DeleteTenantDeptRequest) returns(DeleteTenantDeptResponse) {
    option (api.post) = '/api/tenant/delete_tenant_dept';
  }

  rpc GetTenantDept(GetTenantDeptRequest) returns(GetTenantDeptResponse) {
    option (api.post) = '/api/tenant/get_tenant_dept';
  }

  rpc GetTenantDeptType(GetTenantDeptTypeRequest) returns(GetTenantDeptTypeResponse) {
    option (api.get) = '/api/tenant/get_tenant_dept_type';
  }

  rpc ListTenantDept(ListTenantDeptRequest) returns (ListTenantDeptResponse) {
    option (api.post) = '/api/tenant/list_tenant_dept';
  }
  
  // tenant_user
  rpc CreateTenantUser(CreateTenantUserRequest) returns(CreateTenantUserResponse) {
    option (api.post) = '/api/tenant/create_tenant_user';
  }
  
  rpc DeleteTenantUser(DeleteTenantUserRequest) returns(DeleteTenantUserResponse) {
    option (api.post) = '/api/tenant/delete_tenant_user';
  }

  rpc UpdateTenantUser(UpdateTenantUserRequest) returns(UpdateTenantUserResponse) {
    option (api.post) = '/api/tenant/update_tenant_user';
  }

  rpc GetTenantUser(GetTenantUserRequest) returns(GetTenantUserResponse) {
    option (api.post) = '/api/tenant/get_tenant_user';
  }

  rpc ListTenantUser(ListTenantUserRequest) returns(ListTenantUserResponse) {
    option (api.post) = '/api/tenant/list_tenant_user';
  }

  rpc ListTenantStudent(ListTenantStudentRequest) returns(ListTenantStudentResponse) {
    option (api.post) = '/api/tenant/list_tenant_student';
  }

  rpc UpdateTenantUserPassword(UpdateTenantUserPasswordRequest) returns(UpdateTenantUserPasswordResponse) {
    option (api.post) = '/api/tenant/update_tenent_user_password';
  }

  //tenant_config
  rpc UpdateTenantConfig(UpdateTenantConfigRequest) returns(UpdateTenantConfigResponse) {
    option (api.post) = '/api/tenant/update_tenant_config';
  }

  rpc ListTenantConfig(ListTenantConfigRequest) returns(ListTenantConfigResponse) {
    option (api.post) = '/api/tenant/list_tenant_config';
  }

  // short_video
  rpc CreateShortVideo(CreateShortVideoRequest) returns (CreateShortVideoResponse) {
    option (api.post) = '/api/short_video/create_short_video';
  }
  rpc StageShortVideo(StageShortVideoRequest) returns (StageShortVideoResponse) {
    option (api.post) = '/api/short_video/stage_short_video';
  }

  // 我的短视频列表
  rpc ListMyShortVideo(ListMyShortVideoRequest) returns (ListMyShortVideoResponse) {
    option (api.post) = '/api/short_video/list_my_short_video';
  }

  // 我的暂存视频列表
  rpc ListMyStageVideo(ListMyStageVideoRequest) returns (ListMyStageVideoResponse) {
    option (api.get) = '/api/short_video/list_my_stage_video';
  }

  // 我的喜欢视频列表
  rpc ListMyLikeVideo(ListMyLikeVideoRequest) returns (ListMyLikeVideoResponse) {
    option (api.post) = '/api/short_video/list_my_like_video';
  }

  // 我的收藏视频列表
  rpc ListMyFavoriteVideo(ListMyFavoriteVideoRequest) returns (ListMyFavoriteVideoResponse) {
    option (api.post) = '/api/short_video/list_my_favorite_video';
  }

  // 获取短视频详情
  rpc GetShortVideo(GetShortVideoRequest) returns (GetShortVideoResponse) {
    option (api.post) = '/api/short_video/get_short_video';
  }

  // 更新短视频详情
  rpc UpdateShortVideo(UpdateShortVideoRequest) returns (UpdateShortVideoResponse) {
    option (api.post) = '/api/short_video/update_short_video';
  }

  // 删除短视频
  rpc DeleteShortVideo(DeleteShortVideoRequest) returns (DeleteShortVideoResponse) {
    option (api.post) = '/api/short_video/delete_short_video';
  }

  // 获取暂存视频详情
  rpc GetStageVideo(GetStageVideoRequest) returns (GetStageVideoResponse) {
    option (api.post) = '/api/short_video/get_stage_video';
  }

  // 删除暂存视频
  rpc DeleteStageVideo(DeleteStageVideoRequest) returns (DeleteStageVideoResponse) {
    option (api.post) = '/api/short_video/delete_stage_video';
  }

  rpc UpdateStageVideo(UpdateStageVideoRequest) returns (UpdateStageVideoResponse) {
    option (api.post) = '/api/short_video/update_stage_video';
  }

  // 平台短短视频列表
  rpc ManagementListShortVideo(ManagementListShortVideoRequest) returns (ManagementListShortVideoResponse) {
    option (api.post) = '/api/short_video/management/list_short_video';
  }

  // 平台审核短视频
  rpc ManagementCensorShortVideo(ManagementCensorShortVideoRequest) returns (ManagementCensorShortVideoResponse) {
    option (api.post) = '/api/short_video/management/censor_short_video';
  }

  // 平台删除短视频
  rpc ManagementDeleteShortVideo(ManagementDeleteShortVideoRequest) returns (ManagementDeleteShortVideoResponse) {
    option (api.post) = '/api/short_video/management/delete_short_video';
  }

  // APP首页短视频列表
  rpc ListShortVideo(ListShortVideoRequest) returns (ListShortVideoResponse) {
    option (api.post) = '/api/short_video/list_short_video';
  }

  // 点赞短视频
  rpc LikeShortVideo(LikeShortVideoRequest) returns (LikeShortVideoResponse) {
    option (api.post) = '/api/short_video/like_short_video';
  }

  // 收藏短视频
  rpc FavoriteShortVideo(FavoriteShortVideoRequest) returns (FavoriteShortVideoResponse) {
    option (api.post) = '/api/short_video/favorite_short_video';
  }

  // 发布短视频评论
  rpc CreateShortVideoComment(CreateShortVideoCommentRequest) returns (CreateShortVideoCommentResponse) {
    option (api.post) = '/api/short_video/create_short_video_comment';
  }

  // 删除短视频评论
  rpc DeleteShortVideoComment(DeleteShortVideoCommentRequest) returns (DeleteShortVideoCommentResponse) {
    option (api.post) = '/api/short_video/delete_short_video_comment';
  }

  // 短视频评论列表
  rpc ListShortVideoComment(ListShortVideoCommentRequest) returns (ListShortVideoCommentResponse) {
    option (api.post) = '/api/short_video/list_short_video_comment';
  }

  // coupon
  rpc CreateCoupon(CreateCouponRequest) returns (CreateCouponResponse) {
    option (api.post) = '/api/shop/create_coupon';
  }
  rpc ListCoupon(ListCouponRequest) returns (ListCouponResponse) {
    option (api.post) = '/api/shop/list_coupon';
  }
  rpc CouponDetail(GetCouponDetailRequest) returns (GetCouponDetailResponse) {
    option (api.get) = '/api/shop/coupon_detail';
  }
  rpc UpdateCoupon(UpdateCouponRequest) returns (UpdateCouponResponse) {
    option (api.post) = '/api/shop/update_coupon';
  }
  rpc DeleteCoupon(DeleteCouponRequest) returns (DeleteCouponResponse) {
    option (api.post) = '/api/shop/delete_coupon';
  }
  rpc AbolishCoupon(AbolishCouponRequest) returns (AbolishCouponResponse) {
    option (api.get) = '/api/shop/abolish_coupon';
  }
  rpc UpdateCouponDistributionStatus(UpdateCouponDistributionStatusRequest) returns (UpdateCouponDistributionStatusResponse) {
    option (api.post) = '/api/shop/update_coupon_distribution_status';
  }
  rpc ClaimCoupon(ClaimCouponRequest) returns (ClaimCouponResponse) {
    option (api.get) = '/api/shop/user_claim_coupon';
  }
  rpc ListMyCoupon(ListMyCouponRequest) returns (ListMyCouponResponse) {
    option (api.get) = '/api/shop/list_my_coupon';
  }

  // activity
  rpc CreateActivity(CreateActivityRequest) returns (CreateActivityResponse) {
    option (api.post) = '/api/shop/create_activity';
  }
  rpc ListActivity(ListActivityRequest) returns (ListActivityResponse) {
    option (api.post) = '/api/shop/list_activity';
  }
  rpc ActivityDetail(GetActivityDetailRequest) returns (GetActivityDetailResponse) {
    option (api.get) = '/api/shop/activity_detail';
  }
  rpc UpdateActivity(UpdateActivityRequest) returns (UpdateActivityResponse) {
    option (api.post) = '/api/shop/update_activity';
  }
  rpc DeleteActivity(DeleteActivityRequest) returns (DeleteActivityResponse) {
    option (api.post) = '/api/shop/delete_activity';
  }
  rpc DisableActivity(DisableActivityRequest) returns (DisableActivityResponse) {
    option (api.post) = '/api/shop/disable_activity';
  }

  // 素材库
  // 创建画板
  rpc CreateCourseMaterialBox(CreateCourseMaterialBoxRequest) returns (CreateCourseMaterialBoxResponse) {
    option (api.post) = '/api/course/create_course_material_box';
  }

  // 编辑画板
  rpc UpdateCourseMaterialBox(UpdateCourseMaterialBoxRequest) returns (UpdateCourseMaterialBoxResponse) {
    option (api.post) = '/api/course/update_course_material_box';
  }

  // 画板列表
  rpc ListCourseMaterialBox(ListCourseMaterialBoxRequest) returns (ListCourseMaterialBoxResponse) {
    option (api.post) = '/api/course/list_course_material_box';
  }

  // 删除画板
  rpc DeleteCourseMaterialBox(DeleteCourseMaterialBoxRequest) returns (DeleteCourseMaterialBoxResponse) {
    option (api.post) = '/api/course/delete_course_material_box';
  }

  // 上传素材
  rpc UploadCourseMaterial(UploadCourseMaterialRequest) returns (UploadCourseMaterialResponse) {
    option (api.post) = '/api/course/upload_course_material';
  }

  // 素材列表
  rpc ListCourseMaterial(ListCourseMaterialRequest) returns (ListCourseMaterialResponse) {
    option (api.post) = '/api/course/list_course_material';
  }

  // 删除素材
  rpc DeleteCourseMaterial(DeleteCourseMaterialRequest) returns (DeleteCourseMaterialResponse) {
    option (api.post) = '/api/course/delete_course_material';
  }

  // 资源库
  // 获取能力指标编码
  rpc GetCourseModuleCode(GetCourseModuleCodeRequest) returns (GetCourseModuleCodeResponse) {
    option (api.post) = '/api/course/get_course_module_code';
  }

  // 获取课程内容编码
  rpc GetCourseChapterCode(GetCourseChapterCodeRequest) returns (GetCourseChapterCodeResponse) {
    option (api.post) = '/api/course/get_course_chapter_code';
  }

  // 创建能力指标
  rpc CreateCourseModule(CreateCourseModuleRequest) returns (CreateCourseModuleResponse) {
    option (api.post) = '/api/course/create_course_module';
  }

  // 获取能力指标
  rpc GetCourseModule(GetCourseModuleRequest) returns (GetCourseModuleResponse) {
    option (api.post) = '/api/course/get_course_module';
  }

  // 更新能力指标
  rpc UpdateCourseModule(UpdateCourseModuleRequest) returns (UpdateCourseModuleResponse) {
    option (api.post) = '/api/course/update_course_module';
  }

  // 删除能力指标
  rpc DeleteCourseModule(DeleteCourseModuleRequest) returns (DeleteCourseModuleResponse) {
    option (api.post) = '/api/course/delete_course_module';
  }

  // 能力指标列表
  rpc ListCourseModule(ListCourseModuleRequest) returns (ListCourseModuleResponse) {
    option (api.post) = '/api/course/list_course_module';
  }

  // 课程列表
  rpc ListLatestCourse(ListLatestCourseRequest) returns (ListLatestCourseResponse) {
    option (api.post) = '/api/course/list_latest_course';
  }
  rpc ListHotestCourse(ListHotestCourseRequest) returns (ListHotestCourseResponse) {
    option (api.post) = '/api/course/list_hotest_course';
  }

  // 自定义课程
  // 新建课程
  rpc CreateCmCourse(CreateCmCourseRequest) returns (CreateCmCourseResponse) {
    option (api.post) = '/api/course/create_cm_course';
  }
  // 预览课程
  rpc PreviewCmCourse(PreviewCmCourseRequest) returns (PreviewCmCourseResponse) {
    option (api.post) = '/api/course/preview_cm_course';
  }

  // 非模块化课程
  // 新建资源
  rpc CreateNmCourseResource(CreateNmCourseChapterResourceRequest) returns (CreateNmCourseChapterResourceResponse) {
    option (api.post) = '/api/course/create_nm_course_resource';
  }
  // 新建章节
  rpc CreateNmCourseChapter(CreateNmCourseChapterRequest) returns (CreateNmCourseChapterResponse) {
    option (api.post) = '/api/course/create_nm_course_chapter';
  }
  // 新建课程
  rpc CreateNmCourse(CreateNmCourseRequest) returns (CreateNmCourseResponse) {
    option (api.post) = '/api/course/create_nm_course';
  }
   // 课程列表
  rpc ListNmCourse(ListNmCourseRequest) returns (ListNmCourseResponse) {
    option (api.post) = '/api/course/list_nm_course';
  }
   // 课程详情
  rpc NmCourseDetail(NmCourseDetailRequest) returns (NmCourseDetailResponse) {
    option (api.get) = '/api/course/nm_course_detail';
  }
   // 删除课程
   rpc DeleteNmCourse(DeleteNmCourseRequest) returns (DeleteNmCourseResponse) {
    option (api.post) = '/api/course/delete_nm_course';
  }

  // 模块化课程
  // 创建模块化课程
  rpc CreateCourse(CreateCourseRequest) returns (CreateCourseResponse) {
    option (api.post) = '/api/course/create_course';
  }
  // 获取模块化课程
  rpc GetCourse(GetCourseRequest) returns (GetCourseResponse) {
    option (api.post) = '/api/course/get_course';
  }
  // 更新模块化课程
  rpc UpdateCourse(UpdateCourseRequest) returns (UpdateCourseResponse) {
    option (api.post) = '/api/course/update_course';
  }
  // 删除模块化课程
  rpc DeleteCourse(DeleteCourseRequest) returns (DeleteCourseResponse) {
    option (api.post) = '/api/course/delete_course';
  }
  // 模块化课程列表
  rpc ListCourse(ListCourseRequest) returns (ListCourseResponse) {
    option (api.post) = '/api/course/list_course';
  }

  // 知识图谱
  rpc CreateKnowledgeGraph(CreateKnowledgeGraphRequest) returns (CreateKnowledgeGraphResponse) {
    option (api.post) = '/api/course_kg/create_knowledge_graph';
  }
  rpc GetKnowledgeGraph(GetKnowledgeGraphRequest) returns (GetKnowledgeGraphResponse) {
    option (api.post) = '/api/course_kg/get_knowledge_graph';
  }
  rpc GetKnowledgeGraphNode(GetKnowledgeGraphNodeRequest) returns(GetKnowledgeGraphNodeResponse) {
    option (api.post) = '/api/course_kg/get_knowledge_graph_node';
  }
  rpc GetMajorCode(GetMajorCodeRequest) returns (GetMajorCodeResponse) {
    option (api.get) = '/api/course/get_major_code';
  }
  rpc GetCourseIds(GetCourseIdsRequest) returns (GetCourseIdsResponse) {
    option (api.post) = '/api/course/get_course_ids';
  }

  // 我的课程
  // 加入课程
  rpc EnrollCourse(EnrollCourseRequest) returns (EnrollCourseResponse) {
    option (api.post) = '/api/course/enroll_course';
  }

  // 删除我的课程
  rpc DeleteMyCourse (DeleteMyCourseRequest) returns (DeleteMyCourseResponse) {
    option (api.post) = '/api/course/delete_my_course';
  }
  
  // 上报课程进度
  rpc UpdateCourseProgress (UpdateCourseProgressRequest) returns (UpdateCourseProgressResponse) {
    option (api.post) = '/api/course/update_course_progress';
  }

  // 我的课程列表
  rpc ListMyCourse(ListMyCourseRequest) returns (ListMyCourseResponse) {
    option (api.post) = '/api/course/list_my_course';
  }

  // 教案管理
  rpc ListTeachingPlan(ListTeachingPlanRequest) returns (ListTeachingPlanResponse) {
    option (api.post) = '/api/course/list_teaching_plan';
  }
  rpc CreateTeachingPlan(CreateTeachingPlanRequest) returns (CreateTeachingPlanResponse) {
    option (api.post) = '/api/course/create_teaching_plan';
  }
  rpc UpdateTeachingPlan(UpdateTeachingPlanRequest) returns (UpdateTeachingPlanResponse) {
    option (api.post) = '/api/course/update_teaching_plan';
  }
  rpc DeleteTeachingPlan(DeleteTeachingPlanRequest) returns (DeleteTeachingPlanResponse) {
    option (api.post) = '/api/course/delete_teaching_plan';
  }

   // 上报老师授课课程进度
   rpc UpdateTeachingCourseProgress (UpdateTeachingCourseProgressRequest) returns (UpdateTeachingCourseProgressResponse) {
    option (api.post) = '/api/course/update_teaching_course_progress';
  }

  // 培养方案
  rpc CreateEduScheme(CreateEduSchemeRequest) returns (CreateEduSchemeResponse) {
    option (api.post) = '/api/course/create_edu_scheme';
  }
  rpc UpdateEduScheme(UpdateEduSchemeRequest) returns (UpdateEduSchemeResponse) {
    option (api.post) = '/api/course/update_edu_scheme';
  }
  rpc ListEduScheme(ListEduSchemeRequest) returns (ListEduSchemeResponse) {
    option (api.post) = '/api/course/list_edu_scheme';
  }
  rpc EduSchemeDetail(EduSchemeDetailRequest) returns (EduSchemeDetailResponse) {
    option (api.get) = '/api/course/edu_scheme_detail';
  }
  rpc DeleteEduScheme(DeleteEduSchemeRequest) returns (DeleteEduSchemeResponse) {
    option (api.post) = '/api/course/delete_edu_scheme';
  }
  rpc DistributeEduScheme(DistributeEduSchemeRequest) returns (DistributeEduSchemeResponse) {
    option (api.post) = '/api/course/distribute_edu_scheme';
  }
    // 获取培养方案，但返回结果和获取模块化结果一样
  rpc GetEduSchemeLikeCourse(GetEduSchemeLikeCourseRequest) returns (GetEduSchemeLikeCourseResponse) {
      option (api.post) = '/api/course/get_edu_scheme_like_course';
  }

  // app下载
  rpc GetAndroidQRcode(GetAndroidQRCodeRequest) returns (GetAndroidQRCodeResponse) {
    option (api.get) = '/api/app/get_android_qrcode';
  }

  // 工作岗位
  rpc CreateJob(CreateJobRequest) returns (CreateJobResponse) {
    option (api.post) = '/api/course/create_job';
  }
  rpc UpdateJob(UpdateJobRequest) returns (UpdateJobResponse) {
    option (api.post) = '/api/course/update_job';
  }
  rpc DeleteJob(DeleteJobRequest) returns (DeleteJobResponse) {
    option (api.post) = '/api/course/delete_job';
  }
  rpc ListJob(ListJobRequest) returns (ListJobResponse) {
    option (api.post) = '/api/course/list_job';
  }
}
