syntax = "proto3";
package glory_api;
option java_package = "com.zhijiejiaoyu.glory_api.user";
option java_multiple_files = true;

import "base.proto";
import "seller/seller.proto";
import "shop/shop.proto";

message TenantDept {
    int64 dept_id = 1;
    string dept_name = 2;
    string dept_type = 3;
    string dept_overview = 4;
    int64 tenant_id = 5;
    int64 parent_id = 6;
}

message User {
  int64 id = 1;
  string phone = 2;
  string token = 3;
  string token_expiry = 4;
  string created_at = 5;
  string name =6;
  string avatar_url = 7;
  Seller seller = 8;
  repeated ShopAccess shop_access = 9;  //判断用户的shop访问权限

  TenantDept tenant_dept = 10;
  repeated PagePermission pages = 11;
  bool is_admin = 12;
}

message UserFollow {
  int64 user_id = 1;
  string user_name = 2;
  string avatar_url = 3;
}

// login
message LoginRequest {
  base.BaseRequest base_request=1;
  string phone = 2; // required
  string code = 3;  // required
}
message LoginResponse {
  base.BaseResponse base_resp = 1;
  User data =2;
}

// get verification code
message GetVerifyCodeRequest {
  base.BaseRequest base_request=1;
  string phone = 2;
}

message GetVerifyCodeResponse {
  base.BaseResponse base_resp = 1;
}


message LoginWithPasswordRequest {
  base.BaseRequest base_request=1;
  string phone = 2;
  string password = 3;
}
message LoginWithPasswordResponse {
  base.BaseResponse base_resp = 1;
  User data =2;
}

message UpdatePasswordRequest {
  base.BaseRequest base_request=1;
  string phone = 2;
  string password = 3;
}
message UpdatePasswordResponse {
  base.BaseResponse base_resp = 1;
}

// Get User
message GetUserRequest {
  base.BaseRequest base_request=1;
}

message GetUserResponse {
  base.BaseResponse base_resp = 1;
  User data =2; // user data
}

message PagePermission {
  string business_system = 1;
  string page = 2;
  int64 id = 3;
  string name = 4;
  bool has_permission = 5;
}

message GetUserPagePermissionRequest {
  base.BaseRequest base_request=1;
  int64 tenant_id = 2;
}

message GetUserPagePermissionResponse {
  base.BaseResponse base_resp = 1;
  repeated PagePermission page_permission =2; // page permission of the user
}

message CreateRolePagePermissionRequest {
  base.BaseRequest base_request = 1;
  int64 tenant_id = 2;
  string role_name = 3;
  string role_type = 4;
  string role_description = 5;
  repeated PagePermission page_permission = 6;
}

message CreateRolePagePermissionResponse {
  base.BaseResponse base_resp = 1;
  int64 role_id = 2;
}

message GetRolePagePermissionRequest {
  base.BaseRequest base_request = 1;
  int64 role_id = 2;
  int64 tenant_id = 3;
}

message GetRolePagePermissionResponse {
  base.BaseResponse base_resp = 1;
  int64 tenant_id = 2;
  int64 role_id = 3;
  string role_name = 4;
  string role_type = 5;
  string role_description = 6;
  bool role_readonly = 7;
  repeated PagePermission page_permission = 8;
}

message UpdateRolePagePermissionRequest {
  base.BaseRequest base_request = 1;
  int64 tenant_id = 2;
  int64 role_id = 3;
  string role_name = 4;
  string role_type = 5;
  string role_description = 6;
  repeated PagePermission page_permission = 7;
}

message UpdateRolePagePermissionResponse {
  base.BaseResponse base_resp = 1;
}

message Permission {
  int64 permission_id =1;
  string permission_name =2;
  int64 resource_id = 3;  // 权限对应的resource
  string permission =4; // 支持 C R U D
  string description =5;
  int64 tenant_id = 6;
}

message ListPermissionRequest {
  base.BaseRequest base_request=1;
  int64 permission_id =2;
  string permission_name =3;  // 权限的名字，模糊查找
  int64 resource_id = 4;  // 权限对应的resource id
  string permission =5; // 权限, 支持 C, R, U D
  int64 tenant_id =6; // 学校的id
  base.PaginationRequest pagination = 100;
}

message ListPermissionResponse {
  base.BaseResponse base_resp = 1;
  repeated Permission permission =2; // permission列表
  base.PaginationResponse pagination = 100;
}

message RoleType {
  string label = 1;
  string value = 2;
}

message GetRoleTypeRequest {
  base.BaseRequest base_request = 1;
}

message GetRoleTypeResponse {
  base.BaseResponse base_resp = 1;
  repeated RoleType types = 2;
}

message Role {
  int64 role_id = 1;
  string role_name = 2;
//  string source = 3;  // 角色对应的资源来源，相当于角色类型，比如学校的角色会绑定table jx_tenant，专业的角色会绑定jx_major
//  int64 source_id =4; // 对应的资源来源id
  string description = 5;
  bool readonly = 6;
  repeated RolePermission role_permission = 7;
}

message RolePermission {
  int64 role_permission_id =1;
  int64 role_id =2;
  int64 permission_id = 3;
  repeated Permission permission=4;
}


message ListRoleRequest {
  base.BaseRequest base_request=1;
  int64 role_id =2;
  string role_name =3;  // 角色名称，模糊查找
  string role_type =4; // 角色类型， 支持build-in，跟 user-defined
//  string source = 5;  // 对应的角色来源
//  int64 source_id =6;
  int64 tenant_id = 7;  // 学校id
  base.PaginationRequest pagination = 100;
}

message ListRoleResponse {
  base.BaseResponse base_resp = 1;
  repeated Role role =2; // Role列表
  base.PaginationResponse pagination = 100;
}

message CreateRoleRequest {
  base.BaseRequest base_request=1;
  Role role = 2;
}

message CreateRoleResponse {
  base.BaseResponse base_resp = 1;
  int64 role_id =2; // role id
}

message GiveRolePermissionRequest {
  base.BaseRequest base_request=1;
  int64 role_id = 2;
  repeated int64 permission_id =3;
}

message GiveRolePermissionResponse {
  base.BaseResponse base_resp = 1;
}


message RemoveRolePermissionRequest {
  base.BaseRequest base_request=1;
  repeated int64 role_permission_id =3; // 这个role_permission_id在list_role里头有返回，是role跟permission 映射起来的唯一id
}

message RemoveRolePermissionResponse {
  base.BaseResponse base_resp = 1;
}

message DeleteRoleRequest {
  base.BaseRequest base_request=1;
  repeated int64 role_id =2; // role id list
}

message DeleteRoleResponse {
  base.BaseResponse base_resp = 1;
}

message Resource {
  int64 resource_id =2;
  string resource_name =3;
  string resource_type =4;  // 支持 school, major_live, business_system, page_permission， 后面可能会增加
  string source = 5;  // 源表，有config, school, major, class，后面会增加
  int64 source_id =6; // 源表记录的id
  int64 tenant_id =7; // 学校的id
}
message ListResourceRequest {
  base.BaseRequest base_request=1;
  Resource resource = 2;
  base.PaginationRequest pagination = 100;
}

message ListResourceResponse {
  base.BaseResponse base_resp = 1;
  repeated Resource resource =2; // resource 列表
  base.PaginationResponse pagination = 100;
}

message ListUserByRole {
  int64 user_id = 1;
  string phone = 2;
  string user_name = 3;
  int64 tenant_id = 4;
  string role = 5;
  string created_at = 6;
}

message ListUserByRoleRequest {
  base.BaseRequest base_request=1;
  string role_name = 2; // 平台管理员是admin, 学校管理员是school_admin_role
  string name = 3; // 模糊查询关键字
  int64 tenant_id = 4;  // 学校的id，若是角色名称是admin，则会忽略这个
  base.PaginationRequest pagination = 100;
}

message ListUserByRoleResponse {
  base.BaseResponse base_resp = 1;
  repeated ListUserByRole user  =2; // user 列表
  base.PaginationResponse pagination = 100;
}

// 关注用户
message FollowUserRequest {
  base.BaseRequest base_request = 1;
  int64 followed_user_id = 2;
  bool follow = 3; // 是否关注
}

message FollowUserResponse {
  base.BaseResponse base_resp = 1;
}

// 我的关注列表
message ListMyFollowedUserRequest {
  base.BaseRequest base_request = 1;
  base.PaginationRequest pagination = 100;
}

message ListMyFollowedUserResponse {
  base.BaseResponse base_resp = 1;
  repeated UserFollow followed_user_list = 2;
  base.PaginationResponse pagination = 100;
}

// 我的粉丝列表
message ListMyFollowerUserRequest {
  base.BaseRequest base_request = 1;
  base.PaginationRequest pagination = 100;
}

message ListMyFollowerUserResponse {
  base.BaseResponse base_resp = 1;
  repeated UserFollow follower_user_list = 2;
  base.PaginationResponse pagination = 100;
}